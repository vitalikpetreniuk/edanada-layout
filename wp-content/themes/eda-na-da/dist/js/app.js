!function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="../",i(i.s=7)}([function(t,e,i){var n;
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
!function(e,i){"use strict";"object"==typeof t&&"object"==typeof t.exports?t.exports=e.document?i(e,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return i(t)}:i(e)}("undefined"!=typeof window?window:this,function(i,r){"use strict";var a=[],s=i.document,o=Object.getPrototypeOf,l=a.slice,c=a.concat,u=a.push,h=a.indexOf,f={},p=f.toString,d=f.hasOwnProperty,m=d.toString,g=m.call(Object),v={},_=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},y=function(t){return null!=t&&t===t.window},b={type:!0,src:!0,noModule:!0};function x(t,e,i){var n,r=(e=e||s).createElement("script");if(r.text=t,i)for(n in b)i[n]&&(r[n]=i[n]);e.head.appendChild(r).parentNode.removeChild(r)}function w(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?f[p.call(t)]||"object":typeof t}var T=function(t,e){return new T.fn.init(t,e)},k=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function P(t){var e=!!t&&"length"in t&&t.length,i=w(t);return!_(t)&&!y(t)&&("array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t)}T.fn=T.prototype={jquery:"3.3.1",constructor:T,length:0,toArray:function(){return l.call(this)},get:function(t){return null==t?l.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=T.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return T.each(this,t)},map:function(t){return this.pushStack(T.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(l.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(i>=0&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:a.sort,splice:a.splice},T.extend=T.fn.extend=function(){var t,e,i,n,r,a,s=arguments[0]||{},o=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[o]||{},o++),"object"==typeof s||_(s)||(s={}),o===l&&(s=this,o--);o<l;o++)if(null!=(t=arguments[o]))for(e in t)i=s[e],s!==(n=t[e])&&(c&&n&&(T.isPlainObject(n)||(r=Array.isArray(n)))?(r?(r=!1,a=i&&Array.isArray(i)?i:[]):a=i&&T.isPlainObject(i)?i:{},s[e]=T.extend(c,a,n)):void 0!==n&&(s[e]=n));return s},T.extend({expando:"jQuery"+("3.3.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==p.call(t))&&(!(e=o(t))||"function"==typeof(i=d.call(e,"constructor")&&e.constructor)&&m.call(i)===g)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t){x(t)},each:function(t,e){var i,n=0;if(P(t))for(i=t.length;n<i&&!1!==e.call(t[n],n,t[n]);n++);else for(n in t)if(!1===e.call(t[n],n,t[n]))break;return t},trim:function(t){return null==t?"":(t+"").replace(k,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(P(Object(t))?T.merge(i,"string"==typeof t?[t]:t):u.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:h.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,r=t.length;n<i;n++)t[r++]=e[n];return t.length=r,t},grep:function(t,e,i){for(var n=[],r=0,a=t.length,s=!i;r<a;r++)!e(t[r],r)!==s&&n.push(t[r]);return n},map:function(t,e,i){var n,r,a=0,s=[];if(P(t))for(n=t.length;a<n;a++)null!=(r=e(t[a],a,i))&&s.push(r);else for(a in t)null!=(r=e(t[a],a,i))&&s.push(r);return c.apply([],s)},guid:1,support:v}),"function"==typeof Symbol&&(T.fn[Symbol.iterator]=a[Symbol.iterator]),T.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){f["[object "+e+"]"]=e.toLowerCase()});var S=
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
function(t){var e,i,n,r,a,s,o,l,c,u,h,f,p,d,m,g,v,_,y,b="sizzle"+1*new Date,x=t.document,w=0,T=0,k=st(),P=st(),S=st(),C=function(t,e){return t===e&&(h=!0),0},A={}.hasOwnProperty,E=[],O=E.pop,D=E.push,R=E.push,M=E.slice,L=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},F="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",N="[\\x20\\t\\r\\n\\f]",I="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",j="\\["+N+"*("+I+")(?:"+N+"*([*^$|!~]?=)"+N+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+I+"))|)"+N+"*\\]",$=":("+I+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+j+")*)|.*)\\)|)",z=new RegExp(N+"+","g"),B=new RegExp("^"+N+"+|((?:^|[^\\\\])(?:\\\\.)*)"+N+"+$","g"),q=new RegExp("^"+N+"*,"+N+"*"),H=new RegExp("^"+N+"*([>+~]|"+N+")"+N+"*"),U=new RegExp("="+N+"*([^\\]'\"]*?)"+N+"*\\]","g"),X=new RegExp($),W=new RegExp("^"+I+"$"),G={ID:new RegExp("^#("+I+")"),CLASS:new RegExp("^\\.("+I+")"),TAG:new RegExp("^("+I+"|[*])"),ATTR:new RegExp("^"+j),PSEUDO:new RegExp("^"+$),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+N+"*(even|odd|(([+-]|)(\\d*)n|)"+N+"*(?:([+-]|)"+N+"*(\\d+)|))"+N+"*\\)|)","i"),bool:new RegExp("^(?:"+F+")$","i"),needsContext:new RegExp("^"+N+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+N+"*((?:-\\d)?\\d*)"+N+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,V=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,K=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Q=/[+~]/,J=new RegExp("\\\\([\\da-f]{1,6}"+N+"?|("+N+")|.)","ig"),tt=function(t,e,i){var n="0x"+e-65536;return n!=n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},et=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,it=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},nt=function(){f()},rt=_t(function(t){return!0===t.disabled&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{R.apply(E=M.call(x.childNodes),x.childNodes),E[x.childNodes.length].nodeType}catch(t){R={apply:E.length?function(t,e){D.apply(t,M.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}function at(t,e,n,r){var a,o,c,u,h,d,v,_=e&&e.ownerDocument,w=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==w&&9!==w&&11!==w)return n;if(!r&&((e?e.ownerDocument||e:x)!==p&&f(e),e=e||p,m)){if(11!==w&&(h=K.exec(t)))if(a=h[1]){if(9===w){if(!(c=e.getElementById(a)))return n;if(c.id===a)return n.push(c),n}else if(_&&(c=_.getElementById(a))&&y(e,c)&&c.id===a)return n.push(c),n}else{if(h[2])return R.apply(n,e.getElementsByTagName(t)),n;if((a=h[3])&&i.getElementsByClassName&&e.getElementsByClassName)return R.apply(n,e.getElementsByClassName(a)),n}if(i.qsa&&!S[t+" "]&&(!g||!g.test(t))){if(1!==w)_=e,v=t;else if("object"!==e.nodeName.toLowerCase()){for((u=e.getAttribute("id"))?u=u.replace(et,it):e.setAttribute("id",u=b),o=(d=s(t)).length;o--;)d[o]="#"+u+" "+vt(d[o]);v=d.join(","),_=Q.test(t)&&mt(e.parentNode)||e}if(v)try{return R.apply(n,_.querySelectorAll(v)),n}catch(t){}finally{u===b&&e.removeAttribute("id")}}}return l(t.replace(B,"$1"),e,n,r)}function st(){var t=[];return function e(i,r){return t.push(i+" ")>n.cacheLength&&delete e[t.shift()],e[i+" "]=r}}function ot(t){return t[b]=!0,t}function lt(t){var e=p.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ct(t,e){for(var i=t.split("|"),r=i.length;r--;)n.attrHandle[i[r]]=e}function ut(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function ht(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ft(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function pt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&rt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function dt(t){return ot(function(e){return e=+e,ot(function(i,n){for(var r,a=t([],i.length,e),s=a.length;s--;)i[r=a[s]]&&(i[r]=!(n[r]=i[r]))})})}function mt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in i=at.support={},a=at.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},f=at.setDocument=function(t){var e,r,s=t?t.ownerDocument||t:x;return s!==p&&9===s.nodeType&&s.documentElement?(d=(p=s).documentElement,m=!a(p),x!==p&&(r=p.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",nt,!1):r.attachEvent&&r.attachEvent("onunload",nt)),i.attributes=lt(function(t){return t.className="i",!t.getAttribute("className")}),i.getElementsByTagName=lt(function(t){return t.appendChild(p.createComment("")),!t.getElementsByTagName("*").length}),i.getElementsByClassName=Z.test(p.getElementsByClassName),i.getById=lt(function(t){return d.appendChild(t).id=b,!p.getElementsByName||!p.getElementsByName(b).length}),i.getById?(n.filter.ID=function(t){var e=t.replace(J,tt);return function(t){return t.getAttribute("id")===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&m){var i=e.getElementById(t);return i?[i]:[]}}):(n.filter.ID=function(t){var e=t.replace(J,tt);return function(t){var i=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&m){var i,n,r,a=e.getElementById(t);if(a){if((i=a.getAttributeNode("id"))&&i.value===t)return[a];for(r=e.getElementsByName(t),n=0;a=r[n++];)if((i=a.getAttributeNode("id"))&&i.value===t)return[a]}return[]}}),n.find.TAG=i.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):i.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],r=0,a=e.getElementsByTagName(t);if("*"===t){for(;i=a[r++];)1===i.nodeType&&n.push(i);return n}return a},n.find.CLASS=i.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&m)return e.getElementsByClassName(t)},v=[],g=[],(i.qsa=Z.test(p.querySelectorAll))&&(lt(function(t){d.appendChild(t).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+N+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||g.push("\\["+N+"*(?:value|"+F+")"),t.querySelectorAll("[id~="+b+"-]").length||g.push("~="),t.querySelectorAll(":checked").length||g.push(":checked"),t.querySelectorAll("a#"+b+"+*").length||g.push(".#.+[+~]")}),lt(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=p.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&g.push("name"+N+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),d.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),g.push(",.*:")})),(i.matchesSelector=Z.test(_=d.matches||d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&lt(function(t){i.disconnectedMatch=_.call(t,"*"),_.call(t,"[s!='']:x"),v.push("!=",$)}),g=g.length&&new RegExp(g.join("|")),v=v.length&&new RegExp(v.join("|")),e=Z.test(d.compareDocumentPosition),y=e||Z.test(d.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},C=e?function(t,e){if(t===e)return h=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n||(1&(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!i.sortDetached&&e.compareDocumentPosition(t)===n?t===p||t.ownerDocument===x&&y(x,t)?-1:e===p||e.ownerDocument===x&&y(x,e)?1:u?L(u,t)-L(u,e):0:4&n?-1:1)}:function(t,e){if(t===e)return h=!0,0;var i,n=0,r=t.parentNode,a=e.parentNode,s=[t],o=[e];if(!r||!a)return t===p?-1:e===p?1:r?-1:a?1:u?L(u,t)-L(u,e):0;if(r===a)return ut(t,e);for(i=t;i=i.parentNode;)s.unshift(i);for(i=e;i=i.parentNode;)o.unshift(i);for(;s[n]===o[n];)n++;return n?ut(s[n],o[n]):s[n]===x?-1:o[n]===x?1:0},p):p},at.matches=function(t,e){return at(t,null,null,e)},at.matchesSelector=function(t,e){if((t.ownerDocument||t)!==p&&f(t),e=e.replace(U,"='$1']"),i.matchesSelector&&m&&!S[e+" "]&&(!v||!v.test(e))&&(!g||!g.test(e)))try{var n=_.call(t,e);if(n||i.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){}return at(e,p,null,[t]).length>0},at.contains=function(t,e){return(t.ownerDocument||t)!==p&&f(t),y(t,e)},at.attr=function(t,e){(t.ownerDocument||t)!==p&&f(t);var r=n.attrHandle[e.toLowerCase()],a=r&&A.call(n.attrHandle,e.toLowerCase())?r(t,e,!m):void 0;return void 0!==a?a:i.attributes||!m?t.getAttribute(e):(a=t.getAttributeNode(e))&&a.specified?a.value:null},at.escape=function(t){return(t+"").replace(et,it)},at.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},at.uniqueSort=function(t){var e,n=[],r=0,a=0;if(h=!i.detectDuplicates,u=!i.sortStable&&t.slice(0),t.sort(C),h){for(;e=t[a++];)e===t[a]&&(r=n.push(a));for(;r--;)t.splice(n[r],1)}return u=null,t},r=at.getText=function(t){var e,i="",n=0,a=t.nodeType;if(a){if(1===a||9===a||11===a){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=r(t)}else if(3===a||4===a)return t.nodeValue}else for(;e=t[n++];)i+=r(e);return i},(n=at.selectors={cacheLength:50,createPseudo:ot,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(J,tt),t[3]=(t[3]||t[4]||t[5]||"").replace(J,tt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||at.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&at.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return G.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&X.test(i)&&(e=s(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(J,tt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=k[t+" "];return e||(e=new RegExp("(^|"+N+")"+t+"("+N+"|$)"))&&k(t,function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,e,i){return function(n){var r=at.attr(n,t);return null==r?"!="===e:!e||(r+="","="===e?r===i:"!="===e?r!==i:"^="===e?i&&0===r.indexOf(i):"*="===e?i&&r.indexOf(i)>-1:"$="===e?i&&r.slice(-i.length)===i:"~="===e?(" "+r.replace(z," ")+" ").indexOf(i)>-1:"|="===e&&(r===i||r.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,i,n,r){var a="nth"!==t.slice(0,3),s="last"!==t.slice(-4),o="of-type"===e;return 1===n&&0===r?function(t){return!!t.parentNode}:function(e,i,l){var c,u,h,f,p,d,m=a!==s?"nextSibling":"previousSibling",g=e.parentNode,v=o&&e.nodeName.toLowerCase(),_=!l&&!o,y=!1;if(g){if(a){for(;m;){for(f=e;f=f[m];)if(o?f.nodeName.toLowerCase()===v:1===f.nodeType)return!1;d=m="only"===t&&!d&&"nextSibling"}return!0}if(d=[s?g.firstChild:g.lastChild],s&&_){for(y=(p=(c=(u=(h=(f=g)[b]||(f[b]={}))[f.uniqueID]||(h[f.uniqueID]={}))[t]||[])[0]===w&&c[1])&&c[2],f=p&&g.childNodes[p];f=++p&&f&&f[m]||(y=p=0)||d.pop();)if(1===f.nodeType&&++y&&f===e){u[t]=[w,p,y];break}}else if(_&&(y=p=(c=(u=(h=(f=e)[b]||(f[b]={}))[f.uniqueID]||(h[f.uniqueID]={}))[t]||[])[0]===w&&c[1]),!1===y)for(;(f=++p&&f&&f[m]||(y=p=0)||d.pop())&&((o?f.nodeName.toLowerCase()!==v:1!==f.nodeType)||!++y||(_&&((u=(h=f[b]||(f[b]={}))[f.uniqueID]||(h[f.uniqueID]={}))[t]=[w,y]),f!==e)););return(y-=r)===n||y%n==0&&y/n>=0}}},PSEUDO:function(t,e){var i,r=n.pseudos[t]||n.setFilters[t.toLowerCase()]||at.error("unsupported pseudo: "+t);return r[b]?r(e):r.length>1?(i=[t,t,"",e],n.setFilters.hasOwnProperty(t.toLowerCase())?ot(function(t,i){for(var n,a=r(t,e),s=a.length;s--;)t[n=L(t,a[s])]=!(i[n]=a[s])}):function(t){return r(t,0,i)}):r}},pseudos:{not:ot(function(t){var e=[],i=[],n=o(t.replace(B,"$1"));return n[b]?ot(function(t,e,i,r){for(var a,s=n(t,null,r,[]),o=t.length;o--;)(a=s[o])&&(t[o]=!(e[o]=a))}):function(t,r,a){return e[0]=t,n(e,null,a,i),e[0]=null,!i.pop()}}),has:ot(function(t){return function(e){return at(t,e).length>0}}),contains:ot(function(t){return t=t.replace(J,tt),function(e){return(e.textContent||e.innerText||r(e)).indexOf(t)>-1}}),lang:ot(function(t){return W.test(t||"")||at.error("unsupported lang: "+t),t=t.replace(J,tt).toLowerCase(),function(e){var i;do{if(i=m?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(i=i.toLowerCase())===t||0===i.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===d},focus:function(t){return t===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:pt(!1),disabled:pt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!n.pseudos.empty(t)},header:function(t){return V.test(t.nodeName)},input:function(t){return Y.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:dt(function(){return[0]}),last:dt(function(t,e){return[e-1]}),eq:dt(function(t,e,i){return[i<0?i+e:i]}),even:dt(function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t}),odd:dt(function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t}),lt:dt(function(t,e,i){for(var n=i<0?i+e:i;--n>=0;)t.push(n);return t}),gt:dt(function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t})}}).pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[e]=ht(e);for(e in{submit:!0,reset:!0})n.pseudos[e]=ft(e);function gt(){}function vt(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function _t(t,e,i){var n=e.dir,r=e.next,a=r||n,s=i&&"parentNode"===a,o=T++;return e.first?function(e,i,r){for(;e=e[n];)if(1===e.nodeType||s)return t(e,i,r);return!1}:function(e,i,l){var c,u,h,f=[w,o];if(l){for(;e=e[n];)if((1===e.nodeType||s)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||s)if(u=(h=e[b]||(e[b]={}))[e.uniqueID]||(h[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[n]||e;else{if((c=u[a])&&c[0]===w&&c[1]===o)return f[2]=c[2];if(u[a]=f,f[2]=t(e,i,l))return!0}return!1}}function yt(t){return t.length>1?function(e,i,n){for(var r=t.length;r--;)if(!t[r](e,i,n))return!1;return!0}:t[0]}function bt(t,e,i,n,r){for(var a,s=[],o=0,l=t.length,c=null!=e;o<l;o++)(a=t[o])&&(i&&!i(a,n,r)||(s.push(a),c&&e.push(o)));return s}function xt(t,e,i,n,r,a){return n&&!n[b]&&(n=xt(n)),r&&!r[b]&&(r=xt(r,a)),ot(function(a,s,o,l){var c,u,h,f=[],p=[],d=s.length,m=a||function(t,e,i){for(var n=0,r=e.length;n<r;n++)at(t,e[n],i);return i}(e||"*",o.nodeType?[o]:o,[]),g=!t||!a&&e?m:bt(m,f,t,o,l),v=i?r||(a?t:d||n)?[]:s:g;if(i&&i(g,v,o,l),n)for(c=bt(v,p),n(c,[],o,l),u=c.length;u--;)(h=c[u])&&(v[p[u]]=!(g[p[u]]=h));if(a){if(r||t){if(r){for(c=[],u=v.length;u--;)(h=v[u])&&c.push(g[u]=h);r(null,v=[],c,l)}for(u=v.length;u--;)(h=v[u])&&(c=r?L(a,h):f[u])>-1&&(a[c]=!(s[c]=h))}}else v=bt(v===s?v.splice(d,v.length):v),r?r(null,s,v,l):R.apply(s,v)})}function wt(t){for(var e,i,r,a=t.length,s=n.relative[t[0].type],o=s||n.relative[" "],l=s?1:0,u=_t(function(t){return t===e},o,!0),h=_t(function(t){return L(e,t)>-1},o,!0),f=[function(t,i,n){var r=!s&&(n||i!==c)||((e=i).nodeType?u(t,i,n):h(t,i,n));return e=null,r}];l<a;l++)if(i=n.relative[t[l].type])f=[_t(yt(f),i)];else{if((i=n.filter[t[l].type].apply(null,t[l].matches))[b]){for(r=++l;r<a&&!n.relative[t[r].type];r++);return xt(l>1&&yt(f),l>1&&vt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(B,"$1"),i,l<r&&wt(t.slice(l,r)),r<a&&wt(t=t.slice(r)),r<a&&vt(t))}f.push(i)}return yt(f)}return gt.prototype=n.filters=n.pseudos,n.setFilters=new gt,s=at.tokenize=function(t,e){var i,r,a,s,o,l,c,u=P[t+" "];if(u)return e?0:u.slice(0);for(o=t,l=[],c=n.preFilter;o;){for(s in i&&!(r=q.exec(o))||(r&&(o=o.slice(r[0].length)||o),l.push(a=[])),i=!1,(r=H.exec(o))&&(i=r.shift(),a.push({value:i,type:r[0].replace(B," ")}),o=o.slice(i.length)),n.filter)!(r=G[s].exec(o))||c[s]&&!(r=c[s](r))||(i=r.shift(),a.push({value:i,type:s,matches:r}),o=o.slice(i.length));if(!i)break}return e?o.length:o?at.error(t):P(t,l).slice(0)},o=at.compile=function(t,e){var i,r=[],a=[],o=S[t+" "];if(!o){for(e||(e=s(t)),i=e.length;i--;)(o=wt(e[i]))[b]?r.push(o):a.push(o);(o=S(t,function(t,e){var i=e.length>0,r=t.length>0,a=function(a,s,o,l,u){var h,d,g,v=0,_="0",y=a&&[],b=[],x=c,T=a||r&&n.find.TAG("*",u),k=w+=null==x?1:Math.random()||.1,P=T.length;for(u&&(c=s===p||s||u);_!==P&&null!=(h=T[_]);_++){if(r&&h){for(d=0,s||h.ownerDocument===p||(f(h),o=!m);g=t[d++];)if(g(h,s||p,o)){l.push(h);break}u&&(w=k)}i&&((h=!g&&h)&&v--,a&&y.push(h))}if(v+=_,i&&_!==v){for(d=0;g=e[d++];)g(y,b,s,o);if(a){if(v>0)for(;_--;)y[_]||b[_]||(b[_]=O.call(l));b=bt(b)}R.apply(l,b),u&&!a&&b.length>0&&v+e.length>1&&at.uniqueSort(l)}return u&&(w=k,c=x),y};return i?ot(a):a}(a,r))).selector=t}return o},l=at.select=function(t,e,i,r){var a,l,c,u,h,f="function"==typeof t&&t,p=!r&&s(t=f.selector||t);if(i=i||[],1===p.length){if((l=p[0]=p[0].slice(0)).length>2&&"ID"===(c=l[0]).type&&9===e.nodeType&&m&&n.relative[l[1].type]){if(!(e=(n.find.ID(c.matches[0].replace(J,tt),e)||[])[0]))return i;f&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(a=G.needsContext.test(t)?0:l.length;a--&&(c=l[a],!n.relative[u=c.type]);)if((h=n.find[u])&&(r=h(c.matches[0].replace(J,tt),Q.test(l[0].type)&&mt(e.parentNode)||e))){if(l.splice(a,1),!(t=r.length&&vt(l)))return R.apply(i,r),i;break}}return(f||o(t,p))(r,e,!m,i,!e||Q.test(t)&&mt(e.parentNode)||e),i},i.sortStable=b.split("").sort(C).join("")===b,i.detectDuplicates=!!h,f(),i.sortDetached=lt(function(t){return 1&t.compareDocumentPosition(p.createElement("fieldset"))}),lt(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||ct("type|href|height|width",function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),i.attributes&&lt(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||ct("value",function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),lt(function(t){return null==t.getAttribute("disabled")})||ct(F,function(t,e,i){var n;if(!i)return!0===t[e]?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),at}(i);T.find=S,T.expr=S.selectors,T.expr[":"]=T.expr.pseudos,T.uniqueSort=T.unique=S.uniqueSort,T.text=S.getText,T.isXMLDoc=S.isXML,T.contains=S.contains,T.escapeSelector=S.escape;var C=function(t,e,i){for(var n=[],r=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&T(t).is(i))break;n.push(t)}return n},A=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},E=T.expr.match.needsContext;function O(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var D=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function R(t,e,i){return _(e)?T.grep(t,function(t,n){return!!e.call(t,n,t)!==i}):e.nodeType?T.grep(t,function(t){return t===e!==i}):"string"!=typeof e?T.grep(t,function(t){return h.call(e,t)>-1!==i}):T.filter(e,t,i)}T.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?T.find.matchesSelector(n,t)?[n]:[]:T.find.matches(t,T.grep(e,function(t){return 1===t.nodeType}))},T.fn.extend({find:function(t){var e,i,n=this.length,r=this;if("string"!=typeof t)return this.pushStack(T(t).filter(function(){for(e=0;e<n;e++)if(T.contains(r[e],this))return!0}));for(i=this.pushStack([]),e=0;e<n;e++)T.find(t,r[e],i);return n>1?T.uniqueSort(i):i},filter:function(t){return this.pushStack(R(this,t||[],!1))},not:function(t){return this.pushStack(R(this,t||[],!0))},is:function(t){return!!R(this,"string"==typeof t&&E.test(t)?T(t):t||[],!1).length}});var M,L=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(T.fn.init=function(t,e,i){var n,r;if(!t)return this;if(i=i||M,"string"==typeof t){if(!(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:L.exec(t))||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof T?e[0]:e,T.merge(this,T.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:s,!0)),D.test(n[1])&&T.isPlainObject(e))for(n in e)_(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return(r=s.getElementById(n[2]))&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):_(t)?void 0!==i.ready?i.ready(t):t(T):T.makeArray(t,this)}).prototype=T.fn,M=T(s);var F=/^(?:parents|prev(?:Until|All))/,N={children:!0,contents:!0,next:!0,prev:!0};function I(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}T.fn.extend({has:function(t){var e=T(t,this),i=e.length;return this.filter(function(){for(var t=0;t<i;t++)if(T.contains(this,e[t]))return!0})},closest:function(t,e){var i,n=0,r=this.length,a=[],s="string"!=typeof t&&T(t);if(!E.test(t))for(;n<r;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(s?s.index(i)>-1:1===i.nodeType&&T.find.matchesSelector(i,t))){a.push(i);break}return this.pushStack(a.length>1?T.uniqueSort(a):a)},index:function(t){return t?"string"==typeof t?h.call(T(t),this[0]):h.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(T.uniqueSort(T.merge(this.get(),T(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),T.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return C(t,"parentNode")},parentsUntil:function(t,e,i){return C(t,"parentNode",i)},next:function(t){return I(t,"nextSibling")},prev:function(t){return I(t,"previousSibling")},nextAll:function(t){return C(t,"nextSibling")},prevAll:function(t){return C(t,"previousSibling")},nextUntil:function(t,e,i){return C(t,"nextSibling",i)},prevUntil:function(t,e,i){return C(t,"previousSibling",i)},siblings:function(t){return A((t.parentNode||{}).firstChild,t)},children:function(t){return A(t.firstChild)},contents:function(t){return O(t,"iframe")?t.contentDocument:(O(t,"template")&&(t=t.content||t),T.merge([],t.childNodes))}},function(t,e){T.fn[t]=function(i,n){var r=T.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=T.filter(n,r)),this.length>1&&(N[t]||T.uniqueSort(r),F.test(t)&&r.reverse()),this.pushStack(r)}});var j=/[^\x20\t\r\n\f]+/g;function $(t){return t}function z(t){throw t}function B(t,e,i,n){var r;try{t&&_(r=t.promise)?r.call(t).done(e).fail(i):t&&_(r=t.then)?r.call(t,e,i):e.apply(void 0,[t].slice(n))}catch(t){i.apply(void 0,[t])}}T.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return T.each(t.match(j)||[],function(t,i){e[i]=!0}),e}(t):T.extend({},t);var e,i,n,r,a=[],s=[],o=-1,l=function(){for(r=r||t.once,n=e=!0;s.length;o=-1)for(i=s.shift();++o<a.length;)!1===a[o].apply(i[0],i[1])&&t.stopOnFalse&&(o=a.length,i=!1);t.memory||(i=!1),e=!1,r&&(a=i?[]:"")},c={add:function(){return a&&(i&&!e&&(o=a.length-1,s.push(i)),function e(i){T.each(i,function(i,n){_(n)?t.unique&&c.has(n)||a.push(n):n&&n.length&&"string"!==w(n)&&e(n)})}(arguments),i&&!e&&l()),this},remove:function(){return T.each(arguments,function(t,e){for(var i;(i=T.inArray(e,a,i))>-1;)a.splice(i,1),i<=o&&o--}),this},has:function(t){return t?T.inArray(t,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return r=s=[],a=i="",this},disabled:function(){return!a},lock:function(){return r=s=[],i||e||(a=i=""),this},locked:function(){return!!r},fireWith:function(t,i){return r||(i=[t,(i=i||[]).slice?i.slice():i],s.push(i),e||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!n}};return c},T.extend({Deferred:function(t){var e=[["notify","progress",T.Callbacks("memory"),T.Callbacks("memory"),2],["resolve","done",T.Callbacks("once memory"),T.Callbacks("once memory"),0,"resolved"],["reject","fail",T.Callbacks("once memory"),T.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return a.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var t=arguments;return T.Deferred(function(i){T.each(e,function(e,n){var r=_(t[n[4]])&&t[n[4]];a[n[1]](function(){var t=r&&r.apply(this,arguments);t&&_(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[n[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(t,n,r){var a=0;function s(t,e,n,r){return function(){var o=this,l=arguments,c=function(){var i,c;if(!(t<a)){if((i=n.apply(o,l))===e.promise())throw new TypeError("Thenable self-resolution");c=i&&("object"==typeof i||"function"==typeof i)&&i.then,_(c)?r?c.call(i,s(a,e,$,r),s(a,e,z,r)):(a++,c.call(i,s(a,e,$,r),s(a,e,z,r),s(a,e,$,e.notifyWith))):(n!==$&&(o=void 0,l=[i]),(r||e.resolveWith)(o,l))}},u=r?c:function(){try{c()}catch(i){T.Deferred.exceptionHook&&T.Deferred.exceptionHook(i,u.stackTrace),t+1>=a&&(n!==z&&(o=void 0,l=[i]),e.rejectWith(o,l))}};t?u():(T.Deferred.getStackHook&&(u.stackTrace=T.Deferred.getStackHook()),i.setTimeout(u))}}return T.Deferred(function(i){e[0][3].add(s(0,i,_(r)?r:$,i.notifyWith)),e[1][3].add(s(0,i,_(t)?t:$)),e[2][3].add(s(0,i,_(n)?n:z))}).promise()},promise:function(t){return null!=t?T.extend(t,r):r}},a={};return T.each(e,function(t,i){var s=i[2],o=i[5];r[i[1]]=s.add,o&&s.add(function(){n=o},e[3-t][2].disable,e[3-t][3].disable,e[0][2].lock,e[0][3].lock),s.add(i[3].fire),a[i[0]]=function(){return a[i[0]+"With"](this===a?void 0:this,arguments),this},a[i[0]+"With"]=s.fireWith}),r.promise(a),t&&t.call(a,a),a},when:function(t){var e=arguments.length,i=e,n=Array(i),r=l.call(arguments),a=T.Deferred(),s=function(t){return function(i){n[t]=this,r[t]=arguments.length>1?l.call(arguments):i,--e||a.resolveWith(n,r)}};if(e<=1&&(B(t,a.done(s(i)).resolve,a.reject,!e),"pending"===a.state()||_(r[i]&&r[i].then)))return a.then();for(;i--;)B(r[i],s(i),a.reject);return a.promise()}});var q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;T.Deferred.exceptionHook=function(t,e){i.console&&i.console.warn&&t&&q.test(t.name)&&i.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},T.readyException=function(t){i.setTimeout(function(){throw t})};var H=T.Deferred();function U(){s.removeEventListener("DOMContentLoaded",U),i.removeEventListener("load",U),T.ready()}T.fn.ready=function(t){return H.then(t).catch(function(t){T.readyException(t)}),this},T.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--T.readyWait:T.isReady)||(T.isReady=!0,!0!==t&&--T.readyWait>0||H.resolveWith(s,[T]))}}),T.ready.then=H.then,"complete"===s.readyState||"loading"!==s.readyState&&!s.documentElement.doScroll?i.setTimeout(T.ready):(s.addEventListener("DOMContentLoaded",U),i.addEventListener("load",U));var X=function(t,e,i,n,r,a,s){var o=0,l=t.length,c=null==i;if("object"===w(i))for(o in r=!0,i)X(t,e,o,i[o],!0,a,s);else if(void 0!==n&&(r=!0,_(n)||(s=!0),c&&(s?(e.call(t,n),e=null):(c=e,e=function(t,e,i){return c.call(T(t),i)})),e))for(;o<l;o++)e(t[o],i,s?n:n.call(t[o],o,e(t[o],i)));return r?t:c?e.call(t):l?e(t[0],i):a},W=/^-ms-/,G=/-([a-z])/g;function Y(t,e){return e.toUpperCase()}function V(t){return t.replace(W,"ms-").replace(G,Y)}var Z=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function K(){this.expando=T.expando+K.uid++}K.uid=1,K.prototype={cache:function(t){var e=t[this.expando];return e||(e={},Z(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,r=this.cache(t);if("string"==typeof e)r[V(e)]=i;else for(n in e)r[V(n)]=e[n];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][V(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){i=(e=Array.isArray(e)?e.map(V):(e=V(e))in n?[e]:e.match(j)||[]).length;for(;i--;)delete n[e[i]]}(void 0===e||T.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!T.isEmptyObject(e)}};var Q=new K,J=new K,tt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,et=/[A-Z]/g;function it(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(et,"-$&").toLowerCase(),"string"==typeof(i=t.getAttribute(n))){try{i=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:tt.test(t)?JSON.parse(t):t)}(i)}catch(t){}J.set(t,e,i)}else i=void 0;return i}T.extend({hasData:function(t){return J.hasData(t)||Q.hasData(t)},data:function(t,e,i){return J.access(t,e,i)},removeData:function(t,e){J.remove(t,e)},_data:function(t,e,i){return Q.access(t,e,i)},_removeData:function(t,e){Q.remove(t,e)}}),T.fn.extend({data:function(t,e){var i,n,r,a=this[0],s=a&&a.attributes;if(void 0===t){if(this.length&&(r=J.get(a),1===a.nodeType&&!Q.get(a,"hasDataAttrs"))){for(i=s.length;i--;)s[i]&&0===(n=s[i].name).indexOf("data-")&&(n=V(n.slice(5)),it(a,n,r[n]));Q.set(a,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){J.set(this,t)}):X(this,function(e){var i;if(a&&void 0===e)return void 0!==(i=J.get(a,t))?i:void 0!==(i=it(a,t))?i:void 0;this.each(function(){J.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){J.remove(this,t)})}}),T.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=Q.get(t,e),i&&(!n||Array.isArray(i)?n=Q.access(t,e,T.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=T.queue(t,e),n=i.length,r=i.shift(),a=T._queueHooks(t,e);"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===e&&i.unshift("inprogress"),delete a.stop,r.call(t,function(){T.dequeue(t,e)},a)),!n&&a&&a.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Q.get(t,i)||Q.access(t,i,{empty:T.Callbacks("once memory").add(function(){Q.remove(t,[e+"queue",i])})})}}),T.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?T.queue(this[0],t):void 0===e?this:this.each(function(){var i=T.queue(this,t,e);T._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&T.dequeue(this,t)})},dequeue:function(t){return this.each(function(){T.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,r=T.Deferred(),a=this,s=this.length,o=function(){--n||r.resolveWith(a,[a])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";s--;)(i=Q.get(a[s],t+"queueHooks"))&&i.empty&&(n++,i.empty.add(o));return o(),r.promise(e)}});var nt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,rt=new RegExp("^(?:([+-])=|)("+nt+")([a-z%]*)$","i"),at=["Top","Right","Bottom","Left"],st=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&T.contains(t.ownerDocument,t)&&"none"===T.css(t,"display")},ot=function(t,e,i,n){var r,a,s={};for(a in e)s[a]=t.style[a],t.style[a]=e[a];for(a in r=i.apply(t,n||[]),e)t.style[a]=s[a];return r};function lt(t,e,i,n){var r,a,s=20,o=n?function(){return n.cur()}:function(){return T.css(t,e,"")},l=o(),c=i&&i[3]||(T.cssNumber[e]?"":"px"),u=(T.cssNumber[e]||"px"!==c&&+l)&&rt.exec(T.css(t,e));if(u&&u[3]!==c){for(l/=2,c=c||u[3],u=+l||1;s--;)T.style(t,e,u+c),(1-a)*(1-(a=o()/l||.5))<=0&&(s=0),u/=a;u*=2,T.style(t,e,u+c),i=i||[]}return i&&(u=+u||+l||0,r=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=u,n.end=r)),r}var ct={};function ut(t){var e,i=t.ownerDocument,n=t.nodeName,r=ct[n];return r||(e=i.body.appendChild(i.createElement(n)),r=T.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),ct[n]=r,r)}function ht(t,e){for(var i,n,r=[],a=0,s=t.length;a<s;a++)(n=t[a]).style&&(i=n.style.display,e?("none"===i&&(r[a]=Q.get(n,"display")||null,r[a]||(n.style.display="")),""===n.style.display&&st(n)&&(r[a]=ut(n))):"none"!==i&&(r[a]="none",Q.set(n,"display",i)));for(a=0;a<s;a++)null!=r[a]&&(t[a].style.display=r[a]);return t}T.fn.extend({show:function(){return ht(this,!0)},hide:function(){return ht(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){st(this)?T(this).show():T(this).hide()})}});var ft=/^(?:checkbox|radio)$/i,pt=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,dt=/^$|^module$|\/(?:java|ecma)script/i,mt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function gt(t,e){var i;return i=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&O(t,e)?T.merge([t],i):i}function vt(t,e){for(var i=0,n=t.length;i<n;i++)Q.set(t[i],"globalEval",!e||Q.get(e[i],"globalEval"))}mt.optgroup=mt.option,mt.tbody=mt.tfoot=mt.colgroup=mt.caption=mt.thead,mt.th=mt.td;var _t=/<|&#?\w+;/;function yt(t,e,i,n,r){for(var a,s,o,l,c,u,h=e.createDocumentFragment(),f=[],p=0,d=t.length;p<d;p++)if((a=t[p])||0===a)if("object"===w(a))T.merge(f,a.nodeType?[a]:a);else if(_t.test(a)){for(s=s||h.appendChild(e.createElement("div")),o=(pt.exec(a)||["",""])[1].toLowerCase(),l=mt[o]||mt._default,s.innerHTML=l[1]+T.htmlPrefilter(a)+l[2],u=l[0];u--;)s=s.lastChild;T.merge(f,s.childNodes),(s=h.firstChild).textContent=""}else f.push(e.createTextNode(a));for(h.textContent="",p=0;a=f[p++];)if(n&&T.inArray(a,n)>-1)r&&r.push(a);else if(c=T.contains(a.ownerDocument,a),s=gt(h.appendChild(a),"script"),c&&vt(s),i)for(u=0;a=s[u++];)dt.test(a.type||"")&&i.push(a);return h}!function(){var t=s.createDocumentFragment().appendChild(s.createElement("div")),e=s.createElement("input");e.setAttribute("type","radio"),e.setAttribute("checked","checked"),e.setAttribute("name","t"),t.appendChild(e),v.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",v.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var bt=s.documentElement,xt=/^key/,wt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Tt=/^([^.]*)(?:\.(.+)|)/;function kt(){return!0}function Pt(){return!1}function St(){try{return s.activeElement}catch(t){}}function Ct(t,e,i,n,r,a){var s,o;if("object"==typeof e){for(o in"string"!=typeof i&&(n=n||i,i=void 0),e)Ct(t,o,i,n,e[o],a);return t}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),!1===r)r=Pt;else if(!r)return t;return 1===a&&(s=r,(r=function(t){return T().off(t),s.apply(this,arguments)}).guid=s.guid||(s.guid=T.guid++)),t.each(function(){T.event.add(this,e,r,n,i)})}T.event={global:{},add:function(t,e,i,n,r){var a,s,o,l,c,u,h,f,p,d,m,g=Q.get(t);if(g)for(i.handler&&(i=(a=i).handler,r=a.selector),r&&T.find.matchesSelector(bt,r),i.guid||(i.guid=T.guid++),(l=g.events)||(l=g.events={}),(s=g.handle)||(s=g.handle=function(e){return void 0!==T&&T.event.triggered!==e.type?T.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(j)||[""]).length;c--;)p=m=(o=Tt.exec(e[c])||[])[1],d=(o[2]||"").split(".").sort(),p&&(h=T.event.special[p]||{},p=(r?h.delegateType:h.bindType)||p,h=T.event.special[p]||{},u=T.extend({type:p,origType:m,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&T.expr.match.needsContext.test(r),namespace:d.join(".")},a),(f=l[p])||((f=l[p]=[]).delegateCount=0,h.setup&&!1!==h.setup.call(t,n,d,s)||t.addEventListener&&t.addEventListener(p,s)),h.add&&(h.add.call(t,u),u.handler.guid||(u.handler.guid=i.guid)),r?f.splice(f.delegateCount++,0,u):f.push(u),T.event.global[p]=!0)},remove:function(t,e,i,n,r){var a,s,o,l,c,u,h,f,p,d,m,g=Q.hasData(t)&&Q.get(t);if(g&&(l=g.events)){for(c=(e=(e||"").match(j)||[""]).length;c--;)if(p=m=(o=Tt.exec(e[c])||[])[1],d=(o[2]||"").split(".").sort(),p){for(h=T.event.special[p]||{},f=l[p=(n?h.delegateType:h.bindType)||p]||[],o=o[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=a=f.length;a--;)u=f[a],!r&&m!==u.origType||i&&i.guid!==u.guid||o&&!o.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(f.splice(a,1),u.selector&&f.delegateCount--,h.remove&&h.remove.call(t,u));s&&!f.length&&(h.teardown&&!1!==h.teardown.call(t,d,g.handle)||T.removeEvent(t,p,g.handle),delete l[p])}else for(p in l)T.event.remove(t,p+e[c],i,n,!0);T.isEmptyObject(l)&&Q.remove(t,"handle events")}},dispatch:function(t){var e,i,n,r,a,s,o=T.event.fix(t),l=new Array(arguments.length),c=(Q.get(this,"events")||{})[o.type]||[],u=T.event.special[o.type]||{};for(l[0]=o,e=1;e<arguments.length;e++)l[e]=arguments[e];if(o.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,o)){for(s=T.event.handlers.call(this,o,c),e=0;(r=s[e++])&&!o.isPropagationStopped();)for(o.currentTarget=r.elem,i=0;(a=r.handlers[i++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!o.rnamespace.test(a.namespace)||(o.handleObj=a,o.data=a.data,void 0!==(n=((T.event.special[a.origType]||{}).handle||a.handler).apply(r.elem,l))&&!1===(o.result=n)&&(o.preventDefault(),o.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,o),o.result}},handlers:function(t,e){var i,n,r,a,s,o=[],l=e.delegateCount,c=t.target;if(l&&c.nodeType&&!("click"===t.type&&t.button>=1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(a=[],s={},i=0;i<l;i++)void 0===s[r=(n=e[i]).selector+" "]&&(s[r]=n.needsContext?T(r,this).index(c)>-1:T.find(r,this,null,[c]).length),s[r]&&a.push(n);a.length&&o.push({elem:c,handlers:a})}return c=this,l<e.length&&o.push({elem:c,handlers:e.slice(l)}),o},addProp:function(t,e){Object.defineProperty(T.Event.prototype,t,{enumerable:!0,configurable:!0,get:_(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[T.expando]?t:new T.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==St()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===St()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&O(this,"input"))return this.click(),!1},_default:function(t){return O(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},T.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},T.Event=function(t,e){if(!(this instanceof T.Event))return new T.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?kt:Pt,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&T.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[T.expando]=!0},T.Event.prototype={constructor:T.Event,isDefaultPrevented:Pt,isPropagationStopped:Pt,isImmediatePropagationStopped:Pt,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=kt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=kt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=kt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},T.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&xt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&wt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},T.event.addProp),T.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){T.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=t.relatedTarget,r=t.handleObj;return n&&(n===this||T.contains(this,n))||(t.type=r.origType,i=r.handler.apply(this,arguments),t.type=e),i}}}),T.fn.extend({on:function(t,e,i,n){return Ct(this,t,e,i,n)},one:function(t,e,i,n){return Ct(this,t,e,i,n,1)},off:function(t,e,i){var n,r;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,T(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return!1!==e&&"function"!=typeof e||(i=e,e=void 0),!1===i&&(i=Pt),this.each(function(){T.event.remove(this,t,i,e)})}});var At=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Et=/<script|<style|<link/i,Ot=/checked\s*(?:[^=]|=\s*.checked.)/i,Dt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Rt(t,e){return O(t,"table")&&O(11!==e.nodeType?e:e.firstChild,"tr")&&T(t).children("tbody")[0]||t}function Mt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Lt(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function Ft(t,e){var i,n,r,a,s,o,l,c;if(1===e.nodeType){if(Q.hasData(t)&&(a=Q.access(t),s=Q.set(e,a),c=a.events))for(r in delete s.handle,s.events={},c)for(i=0,n=c[r].length;i<n;i++)T.event.add(e,r,c[r][i]);J.hasData(t)&&(o=J.access(t),l=T.extend({},o),J.set(e,l))}}function Nt(t,e){var i=e.nodeName.toLowerCase();"input"===i&&ft.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function It(t,e,i,n){e=c.apply([],e);var r,a,s,o,l,u,h=0,f=t.length,p=f-1,d=e[0],m=_(d);if(m||f>1&&"string"==typeof d&&!v.checkClone&&Ot.test(d))return t.each(function(r){var a=t.eq(r);m&&(e[0]=d.call(this,r,a.html())),It(a,e,i,n)});if(f&&(a=(r=yt(e,t[0].ownerDocument,!1,t,n)).firstChild,1===r.childNodes.length&&(r=a),a||n)){for(o=(s=T.map(gt(r,"script"),Mt)).length;h<f;h++)l=r,h!==p&&(l=T.clone(l,!0,!0),o&&T.merge(s,gt(l,"script"))),i.call(t[h],l,h);if(o)for(u=s[s.length-1].ownerDocument,T.map(s,Lt),h=0;h<o;h++)l=s[h],dt.test(l.type||"")&&!Q.access(l,"globalEval")&&T.contains(u,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?T._evalUrl&&T._evalUrl(l.src):x(l.textContent.replace(Dt,""),u,l))}return t}function jt(t,e,i){for(var n,r=e?T.filter(e,t):t,a=0;null!=(n=r[a]);a++)i||1!==n.nodeType||T.cleanData(gt(n)),n.parentNode&&(i&&T.contains(n.ownerDocument,n)&&vt(gt(n,"script")),n.parentNode.removeChild(n));return t}T.extend({htmlPrefilter:function(t){return t.replace(At,"<$1></$2>")},clone:function(t,e,i){var n,r,a,s,o=t.cloneNode(!0),l=T.contains(t.ownerDocument,t);if(!(v.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||T.isXMLDoc(t)))for(s=gt(o),n=0,r=(a=gt(t)).length;n<r;n++)Nt(a[n],s[n]);if(e)if(i)for(a=a||gt(t),s=s||gt(o),n=0,r=a.length;n<r;n++)Ft(a[n],s[n]);else Ft(t,o);return(s=gt(o,"script")).length>0&&vt(s,!l&&gt(t,"script")),o},cleanData:function(t){for(var e,i,n,r=T.event.special,a=0;void 0!==(i=t[a]);a++)if(Z(i)){if(e=i[Q.expando]){if(e.events)for(n in e.events)r[n]?T.event.remove(i,n):T.removeEvent(i,n,e.handle);i[Q.expando]=void 0}i[J.expando]&&(i[J.expando]=void 0)}}}),T.fn.extend({detach:function(t){return jt(this,t,!0)},remove:function(t){return jt(this,t)},text:function(t){return X(this,function(t){return void 0===t?T.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return It(this,arguments,function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Rt(this,t).appendChild(t)})},prepend:function(){return It(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Rt(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return It(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return It(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(T.cleanData(gt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return T.clone(this,t,e)})},html:function(t){return X(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Et.test(t)&&!mt[(pt.exec(t)||["",""])[1].toLowerCase()]){t=T.htmlPrefilter(t);try{for(;i<n;i++)1===(e=this[i]||{}).nodeType&&(T.cleanData(gt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return It(this,arguments,function(e){var i=this.parentNode;T.inArray(this,t)<0&&(T.cleanData(gt(this)),i&&i.replaceChild(e,this))},t)}}),T.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){T.fn[t]=function(t){for(var i,n=[],r=T(t),a=r.length-1,s=0;s<=a;s++)i=s===a?this:this.clone(!0),T(r[s])[e](i),u.apply(n,i.get());return this.pushStack(n)}});var $t=new RegExp("^("+nt+")(?!px)[a-z%]+$","i"),zt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=i),e.getComputedStyle(t)},Bt=new RegExp(at.join("|"),"i");function qt(t,e,i){var n,r,a,s,o=t.style;return(i=i||zt(t))&&(""!==(s=i.getPropertyValue(e)||i[e])||T.contains(t.ownerDocument,t)||(s=T.style(t,e)),!v.pixelBoxStyles()&&$t.test(s)&&Bt.test(e)&&(n=o.width,r=o.minWidth,a=o.maxWidth,o.minWidth=o.maxWidth=o.width=s,s=i.width,o.width=n,o.minWidth=r,o.maxWidth=a)),void 0!==s?s+"":s}function Ht(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(u){c.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",bt.appendChild(c).appendChild(u);var t=i.getComputedStyle(u);n="1%"!==t.top,l=12===e(t.marginLeft),u.style.right="60%",o=36===e(t.right),r=36===e(t.width),u.style.position="absolute",a=36===u.offsetWidth||"absolute",bt.removeChild(c),u=null}}function e(t){return Math.round(parseFloat(t))}var n,r,a,o,l,c=s.createElement("div"),u=s.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===u.style.backgroundClip,T.extend(v,{boxSizingReliable:function(){return t(),r},pixelBoxStyles:function(){return t(),o},pixelPosition:function(){return t(),n},reliableMarginLeft:function(){return t(),l},scrollboxSize:function(){return t(),a}}))}();var Ut=/^(none|table(?!-c[ea]).+)/,Xt=/^--/,Wt={position:"absolute",visibility:"hidden",display:"block"},Gt={letterSpacing:"0",fontWeight:"400"},Yt=["Webkit","Moz","ms"],Vt=s.createElement("div").style;function Zt(t){var e=T.cssProps[t];return e||(e=T.cssProps[t]=function(t){if(t in Vt)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=Yt.length;i--;)if((t=Yt[i]+e)in Vt)return t}(t)||t),e}function Kt(t,e,i){var n=rt.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function Qt(t,e,i,n,r,a){var s="width"===e?1:0,o=0,l=0;if(i===(n?"border":"content"))return 0;for(;s<4;s+=2)"margin"===i&&(l+=T.css(t,i+at[s],!0,r)),n?("content"===i&&(l-=T.css(t,"padding"+at[s],!0,r)),"margin"!==i&&(l-=T.css(t,"border"+at[s]+"Width",!0,r))):(l+=T.css(t,"padding"+at[s],!0,r),"padding"!==i?l+=T.css(t,"border"+at[s]+"Width",!0,r):o+=T.css(t,"border"+at[s]+"Width",!0,r));return!n&&a>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-a-l-o-.5))),l}function Jt(t,e,i){var n=zt(t),r=qt(t,e,n),a="border-box"===T.css(t,"boxSizing",!1,n),s=a;if($t.test(r)){if(!i)return r;r="auto"}return s=s&&(v.boxSizingReliable()||r===t.style[e]),("auto"===r||!parseFloat(r)&&"inline"===T.css(t,"display",!1,n))&&(r=t["offset"+e[0].toUpperCase()+e.slice(1)],s=!0),(r=parseFloat(r)||0)+Qt(t,e,i||(a?"border":"content"),s,n,r)+"px"}function te(t,e,i,n,r){return new te.prototype.init(t,e,i,n,r)}T.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=qt(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,a,s,o=V(e),l=Xt.test(e),c=t.style;if(l||(e=Zt(o)),s=T.cssHooks[e]||T.cssHooks[o],void 0===i)return s&&"get"in s&&void 0!==(r=s.get(t,!1,n))?r:c[e];"string"===(a=typeof i)&&(r=rt.exec(i))&&r[1]&&(i=lt(t,e,r),a="number"),null!=i&&i==i&&("number"===a&&(i+=r&&r[3]||(T.cssNumber[o]?"":"px")),v.clearCloneStyle||""!==i||0!==e.indexOf("background")||(c[e]="inherit"),s&&"set"in s&&void 0===(i=s.set(t,i,n))||(l?c.setProperty(e,i):c[e]=i))}},css:function(t,e,i,n){var r,a,s,o=V(e);return Xt.test(e)||(e=Zt(o)),(s=T.cssHooks[e]||T.cssHooks[o])&&"get"in s&&(r=s.get(t,!0,i)),void 0===r&&(r=qt(t,e,n)),"normal"===r&&e in Gt&&(r=Gt[e]),""===i||i?(a=parseFloat(r),!0===i||isFinite(a)?a||0:r):r}}),T.each(["height","width"],function(t,e){T.cssHooks[e]={get:function(t,i,n){if(i)return!Ut.test(T.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?Jt(t,e,n):ot(t,Wt,function(){return Jt(t,e,n)})},set:function(t,i,n){var r,a=zt(t),s="border-box"===T.css(t,"boxSizing",!1,a),o=n&&Qt(t,e,n,s,a);return s&&v.scrollboxSize()===a.position&&(o-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(a[e])-Qt(t,e,"border",!1,a)-.5)),o&&(r=rt.exec(i))&&"px"!==(r[3]||"px")&&(t.style[e]=i,i=T.css(t,e)),Kt(0,i,o)}}}),T.cssHooks.marginLeft=Ht(v.reliableMarginLeft,function(t,e){if(e)return(parseFloat(qt(t,"marginLeft"))||t.getBoundingClientRect().left-ot(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),T.each({margin:"",padding:"",border:"Width"},function(t,e){T.cssHooks[t+e]={expand:function(i){for(var n=0,r={},a="string"==typeof i?i.split(" "):[i];n<4;n++)r[t+at[n]+e]=a[n]||a[n-2]||a[0];return r}},"margin"!==t&&(T.cssHooks[t+e].set=Kt)}),T.fn.extend({css:function(t,e){return X(this,function(t,e,i){var n,r,a={},s=0;if(Array.isArray(e)){for(n=zt(t),r=e.length;s<r;s++)a[e[s]]=T.css(t,e[s],!1,n);return a}return void 0!==i?T.style(t,e,i):T.css(t,e)},t,e,arguments.length>1)}}),T.Tween=te,te.prototype={constructor:te,init:function(t,e,i,n,r,a){this.elem=t,this.prop=i,this.easing=r||T.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=a||(T.cssNumber[i]?"":"px")},cur:function(){var t=te.propHooks[this.prop];return t&&t.get?t.get(this):te.propHooks._default.get(this)},run:function(t){var e,i=te.propHooks[this.prop];return this.options.duration?this.pos=e=T.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):te.propHooks._default.set(this),this}},te.prototype.init.prototype=te.prototype,te.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=T.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){T.fx.step[t.prop]?T.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[T.cssProps[t.prop]]&&!T.cssHooks[t.prop]?t.elem[t.prop]=t.now:T.style(t.elem,t.prop,t.now+t.unit)}}},te.propHooks.scrollTop=te.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},T.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},T.fx=te.prototype.init,T.fx.step={};var ee,ie,ne=/^(?:toggle|show|hide)$/,re=/queueHooks$/;function ae(){ie&&(!1===s.hidden&&i.requestAnimationFrame?i.requestAnimationFrame(ae):i.setTimeout(ae,T.fx.interval),T.fx.tick())}function se(){return i.setTimeout(function(){ee=void 0}),ee=Date.now()}function oe(t,e){var i,n=0,r={height:t};for(e=e?1:0;n<4;n+=2-e)r["margin"+(i=at[n])]=r["padding"+i]=t;return e&&(r.opacity=r.width=t),r}function le(t,e,i){for(var n,r=(ce.tweeners[e]||[]).concat(ce.tweeners["*"]),a=0,s=r.length;a<s;a++)if(n=r[a].call(i,e,t))return n}function ce(t,e,i){var n,r,a=0,s=ce.prefilters.length,o=T.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ee||se(),i=Math.max(0,c.startTime+c.duration-e),n=1-(i/c.duration||0),a=0,s=c.tweens.length;a<s;a++)c.tweens[a].run(n);return o.notifyWith(t,[c,n,i]),n<1&&s?i:(s||o.notifyWith(t,[c,1,0]),o.resolveWith(t,[c]),!1)},c=o.promise({elem:t,props:T.extend({},e),opts:T.extend(!0,{specialEasing:{},easing:T.easing._default},i),originalProperties:e,originalOptions:i,startTime:ee||se(),duration:i.duration,tweens:[],createTween:function(e,i){var n=T.Tween(t,c.opts,e,i,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(n),n},stop:function(e){var i=0,n=e?c.tweens.length:0;if(r)return this;for(r=!0;i<n;i++)c.tweens[i].run(1);return e?(o.notifyWith(t,[c,1,0]),o.resolveWith(t,[c,e])):o.rejectWith(t,[c,e]),this}}),u=c.props;for(!function(t,e){var i,n,r,a,s;for(i in t)if(r=e[n=V(i)],a=t[i],Array.isArray(a)&&(r=a[1],a=t[i]=a[0]),i!==n&&(t[n]=a,delete t[i]),(s=T.cssHooks[n])&&"expand"in s)for(i in a=s.expand(a),delete t[n],a)i in t||(t[i]=a[i],e[i]=r);else e[n]=r}(u,c.opts.specialEasing);a<s;a++)if(n=ce.prefilters[a].call(c,t,u,c.opts))return _(n.stop)&&(T._queueHooks(c.elem,c.opts.queue).stop=n.stop.bind(n)),n;return T.map(u,le,c),_(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),T.fx.timer(T.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c}T.Animation=T.extend(ce,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return lt(i.elem,t,rt.exec(e),i),i}]},tweener:function(t,e){_(t)?(e=t,t=["*"]):t=t.match(j);for(var i,n=0,r=t.length;n<r;n++)i=t[n],ce.tweeners[i]=ce.tweeners[i]||[],ce.tweeners[i].unshift(e)},prefilters:[function(t,e,i){var n,r,a,s,o,l,c,u,h="width"in e||"height"in e,f=this,p={},d=t.style,m=t.nodeType&&st(t),g=Q.get(t,"fxshow");for(n in i.queue||(null==(s=T._queueHooks(t,"fx")).unqueued&&(s.unqueued=0,o=s.empty.fire,s.empty.fire=function(){s.unqueued||o()}),s.unqueued++,f.always(function(){f.always(function(){s.unqueued--,T.queue(t,"fx").length||s.empty.fire()})})),e)if(r=e[n],ne.test(r)){if(delete e[n],a=a||"toggle"===r,r===(m?"hide":"show")){if("show"!==r||!g||void 0===g[n])continue;m=!0}p[n]=g&&g[n]||T.style(t,n)}if((l=!T.isEmptyObject(e))||!T.isEmptyObject(p))for(n in h&&1===t.nodeType&&(i.overflow=[d.overflow,d.overflowX,d.overflowY],null==(c=g&&g.display)&&(c=Q.get(t,"display")),"none"===(u=T.css(t,"display"))&&(c?u=c:(ht([t],!0),c=t.style.display||c,u=T.css(t,"display"),ht([t]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===T.css(t,"float")&&(l||(f.done(function(){d.display=c}),null==c&&(u=d.display,c="none"===u?"":u)),d.display="inline-block")),i.overflow&&(d.overflow="hidden",f.always(function(){d.overflow=i.overflow[0],d.overflowX=i.overflow[1],d.overflowY=i.overflow[2]})),l=!1,p)l||(g?"hidden"in g&&(m=g.hidden):g=Q.access(t,"fxshow",{display:c}),a&&(g.hidden=!m),m&&ht([t],!0),f.done(function(){for(n in m||ht([t]),Q.remove(t,"fxshow"),p)T.style(t,n,p[n])})),l=le(m?g[n]:0,n,f),n in g||(g[n]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?ce.prefilters.unshift(t):ce.prefilters.push(t)}}),T.speed=function(t,e,i){var n=t&&"object"==typeof t?T.extend({},t):{complete:i||!i&&e||_(t)&&t,duration:t,easing:i&&e||e&&!_(e)&&e};return T.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in T.fx.speeds?n.duration=T.fx.speeds[n.duration]:n.duration=T.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){_(n.old)&&n.old.call(this),n.queue&&T.dequeue(this,n.queue)},n},T.fn.extend({fadeTo:function(t,e,i,n){return this.filter(st).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var r=T.isEmptyObject(t),a=T.speed(e,i,n),s=function(){var e=ce(this,T.extend({},t),a);(r||Q.get(this,"finish"))&&e.stop(!0)};return s.finish=s,r||!1===a.queue?this.each(s):this.queue(a.queue,s)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&!1!==t&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",a=T.timers,s=Q.get(this);if(r)s[r]&&s[r].stop&&n(s[r]);else for(r in s)s[r]&&s[r].stop&&re.test(r)&&n(s[r]);for(r=a.length;r--;)a[r].elem!==this||null!=t&&a[r].queue!==t||(a[r].anim.stop(i),e=!1,a.splice(r,1));!e&&i||T.dequeue(this,t)})},finish:function(t){return!1!==t&&(t=t||"fx"),this.each(function(){var e,i=Q.get(this),n=i[t+"queue"],r=i[t+"queueHooks"],a=T.timers,s=n?n.length:0;for(i.finish=!0,T.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=a.length;e--;)a[e].elem===this&&a[e].queue===t&&(a[e].anim.stop(!0),a.splice(e,1));for(e=0;e<s;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),T.each(["toggle","show","hide"],function(t,e){var i=T.fn[e];T.fn[e]=function(t,n,r){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(oe(e,!0),t,n,r)}}),T.each({slideDown:oe("show"),slideUp:oe("hide"),slideToggle:oe("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){T.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),T.timers=[],T.fx.tick=function(){var t,e=0,i=T.timers;for(ee=Date.now();e<i.length;e++)(t=i[e])()||i[e]!==t||i.splice(e--,1);i.length||T.fx.stop(),ee=void 0},T.fx.timer=function(t){T.timers.push(t),T.fx.start()},T.fx.interval=13,T.fx.start=function(){ie||(ie=!0,ae())},T.fx.stop=function(){ie=null},T.fx.speeds={slow:600,fast:200,_default:400},T.fn.delay=function(t,e){return t=T.fx&&T.fx.speeds[t]||t,e=e||"fx",this.queue(e,function(e,n){var r=i.setTimeout(e,t);n.stop=function(){i.clearTimeout(r)}})},function(){var t=s.createElement("input"),e=s.createElement("select").appendChild(s.createElement("option"));t.type="checkbox",v.checkOn=""!==t.value,v.optSelected=e.selected,(t=s.createElement("input")).value="t",t.type="radio",v.radioValue="t"===t.value}();var ue,he=T.expr.attrHandle;T.fn.extend({attr:function(t,e){return X(this,T.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){T.removeAttr(this,t)})}}),T.extend({attr:function(t,e,i){var n,r,a=t.nodeType;if(3!==a&&8!==a&&2!==a)return void 0===t.getAttribute?T.prop(t,e,i):(1===a&&T.isXMLDoc(t)||(r=T.attrHooks[e.toLowerCase()]||(T.expr.match.bool.test(e)?ue:void 0)),void 0!==i?null===i?void T.removeAttr(t,e):r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:(t.setAttribute(e,i+""),i):r&&"get"in r&&null!==(n=r.get(t,e))?n:null==(n=T.find.attr(t,e))?void 0:n)},attrHooks:{type:{set:function(t,e){if(!v.radioValue&&"radio"===e&&O(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,r=e&&e.match(j);if(r&&1===t.nodeType)for(;i=r[n++];)t.removeAttribute(i)}}),ue={set:function(t,e,i){return!1===e?T.removeAttr(t,i):t.setAttribute(i,i),i}},T.each(T.expr.match.bool.source.match(/\w+/g),function(t,e){var i=he[e]||T.find.attr;he[e]=function(t,e,n){var r,a,s=e.toLowerCase();return n||(a=he[s],he[s]=r,r=null!=i(t,e,n)?s:null,he[s]=a),r}});var fe=/^(?:input|select|textarea|button)$/i,pe=/^(?:a|area)$/i;function de(t){return(t.match(j)||[]).join(" ")}function me(t){return t.getAttribute&&t.getAttribute("class")||""}function ge(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(j)||[]}T.fn.extend({prop:function(t,e){return X(this,T.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[T.propFix[t]||t]})}}),T.extend({prop:function(t,e,i){var n,r,a=t.nodeType;if(3!==a&&8!==a&&2!==a)return 1===a&&T.isXMLDoc(t)||(e=T.propFix[e]||e,r=T.propHooks[e]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:t[e]=i:r&&"get"in r&&null!==(n=r.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=T.find.attr(t,"tabindex");return e?parseInt(e,10):fe.test(t.nodeName)||pe.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),v.optSelected||(T.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),T.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){T.propFix[this.toLowerCase()]=this}),T.fn.extend({addClass:function(t){var e,i,n,r,a,s,o,l=0;if(_(t))return this.each(function(e){T(this).addClass(t.call(this,e,me(this)))});if((e=ge(t)).length)for(;i=this[l++];)if(r=me(i),n=1===i.nodeType&&" "+de(r)+" "){for(s=0;a=e[s++];)n.indexOf(" "+a+" ")<0&&(n+=a+" ");r!==(o=de(n))&&i.setAttribute("class",o)}return this},removeClass:function(t){var e,i,n,r,a,s,o,l=0;if(_(t))return this.each(function(e){T(this).removeClass(t.call(this,e,me(this)))});if(!arguments.length)return this.attr("class","");if((e=ge(t)).length)for(;i=this[l++];)if(r=me(i),n=1===i.nodeType&&" "+de(r)+" "){for(s=0;a=e[s++];)for(;n.indexOf(" "+a+" ")>-1;)n=n.replace(" "+a+" "," ");r!==(o=de(n))&&i.setAttribute("class",o)}return this},toggleClass:function(t,e){var i=typeof t,n="string"===i||Array.isArray(t);return"boolean"==typeof e&&n?e?this.addClass(t):this.removeClass(t):_(t)?this.each(function(i){T(this).toggleClass(t.call(this,i,me(this),e),e)}):this.each(function(){var e,r,a,s;if(n)for(r=0,a=T(this),s=ge(t);e=s[r++];)a.hasClass(e)?a.removeClass(e):a.addClass(e);else void 0!==t&&"boolean"!==i||((e=me(this))&&Q.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":Q.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+de(me(i))+" ").indexOf(e)>-1)return!0;return!1}});var ve=/\r/g;T.fn.extend({val:function(t){var e,i,n,r=this[0];return arguments.length?(n=_(t),this.each(function(i){var r;1===this.nodeType&&(null==(r=n?t.call(this,i,T(this).val()):t)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=T.map(r,function(t){return null==t?"":t+""})),(e=T.valHooks[this.type]||T.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=T.valHooks[r.type]||T.valHooks[r.nodeName.toLowerCase()])&&"get"in e&&void 0!==(i=e.get(r,"value"))?i:"string"==typeof(i=r.value)?i.replace(ve,""):null==i?"":i:void 0}}),T.extend({valHooks:{option:{get:function(t){var e=T.find.attr(t,"value");return null!=e?e:de(T.text(t))}},select:{get:function(t){var e,i,n,r=t.options,a=t.selectedIndex,s="select-one"===t.type,o=s?null:[],l=s?a+1:r.length;for(n=a<0?l:s?a:0;n<l;n++)if(((i=r[n]).selected||n===a)&&!i.disabled&&(!i.parentNode.disabled||!O(i.parentNode,"optgroup"))){if(e=T(i).val(),s)return e;o.push(e)}return o},set:function(t,e){for(var i,n,r=t.options,a=T.makeArray(e),s=r.length;s--;)((n=r[s]).selected=T.inArray(T.valHooks.option.get(n),a)>-1)&&(i=!0);return i||(t.selectedIndex=-1),a}}}}),T.each(["radio","checkbox"],function(){T.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=T.inArray(T(t).val(),e)>-1}},v.checkOn||(T.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})}),v.focusin="onfocusin"in i;var _e=/^(?:focusinfocus|focusoutblur)$/,ye=function(t){t.stopPropagation()};T.extend(T.event,{trigger:function(t,e,n,r){var a,o,l,c,u,h,f,p,m=[n||s],g=d.call(t,"type")?t.type:t,v=d.call(t,"namespace")?t.namespace.split("."):[];if(o=p=l=n=n||s,3!==n.nodeType&&8!==n.nodeType&&!_e.test(g+T.event.triggered)&&(g.indexOf(".")>-1&&(g=(v=g.split(".")).shift(),v.sort()),u=g.indexOf(":")<0&&"on"+g,(t=t[T.expando]?t:new T.Event(g,"object"==typeof t&&t)).isTrigger=r?2:3,t.namespace=v.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+v.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),e=null==e?[t]:T.makeArray(e,[t]),f=T.event.special[g]||{},r||!f.trigger||!1!==f.trigger.apply(n,e))){if(!r&&!f.noBubble&&!y(n)){for(c=f.delegateType||g,_e.test(c+g)||(o=o.parentNode);o;o=o.parentNode)m.push(o),l=o;l===(n.ownerDocument||s)&&m.push(l.defaultView||l.parentWindow||i)}for(a=0;(o=m[a++])&&!t.isPropagationStopped();)p=o,t.type=a>1?c:f.bindType||g,(h=(Q.get(o,"events")||{})[t.type]&&Q.get(o,"handle"))&&h.apply(o,e),(h=u&&o[u])&&h.apply&&Z(o)&&(t.result=h.apply(o,e),!1===t.result&&t.preventDefault());return t.type=g,r||t.isDefaultPrevented()||f._default&&!1!==f._default.apply(m.pop(),e)||!Z(n)||u&&_(n[g])&&!y(n)&&((l=n[u])&&(n[u]=null),T.event.triggered=g,t.isPropagationStopped()&&p.addEventListener(g,ye),n[g](),t.isPropagationStopped()&&p.removeEventListener(g,ye),T.event.triggered=void 0,l&&(n[u]=l)),t.result}},simulate:function(t,e,i){var n=T.extend(new T.Event,i,{type:t,isSimulated:!0});T.event.trigger(n,null,e)}}),T.fn.extend({trigger:function(t,e){return this.each(function(){T.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];if(i)return T.event.trigger(t,e,i,!0)}}),v.focusin||T.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){T.event.simulate(e,t.target,T.event.fix(t))};T.event.special[e]={setup:function(){var n=this.ownerDocument||this,r=Q.access(n,e);r||n.addEventListener(t,i,!0),Q.access(n,e,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=Q.access(n,e)-1;r?Q.access(n,e,r):(n.removeEventListener(t,i,!0),Q.remove(n,e))}}});var be=i.location,xe=Date.now(),we=/\?/;T.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new i.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||T.error("Invalid XML: "+t),e};var Te=/\[\]$/,ke=/\r?\n/g,Pe=/^(?:submit|button|image|reset|file)$/i,Se=/^(?:input|select|textarea|keygen)/i;function Ce(t,e,i,n){var r;if(Array.isArray(e))T.each(e,function(e,r){i||Te.test(t)?n(t,r):Ce(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,i,n)});else if(i||"object"!==w(e))n(t,e);else for(r in e)Ce(t+"["+r+"]",e[r],i,n)}T.param=function(t,e){var i,n=[],r=function(t,e){var i=_(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(Array.isArray(t)||t.jquery&&!T.isPlainObject(t))T.each(t,function(){r(this.name,this.value)});else for(i in t)Ce(i,t[i],e,r);return n.join("&")},T.fn.extend({serialize:function(){return T.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=T.prop(this,"elements");return t?T.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!T(this).is(":disabled")&&Se.test(this.nodeName)&&!Pe.test(t)&&(this.checked||!ft.test(t))}).map(function(t,e){var i=T(this).val();return null==i?null:Array.isArray(i)?T.map(i,function(t){return{name:e.name,value:t.replace(ke,"\r\n")}}):{name:e.name,value:i.replace(ke,"\r\n")}}).get()}});var Ae=/%20/g,Ee=/#.*$/,Oe=/([?&])_=[^&]*/,De=/^(.*?):[ \t]*([^\r\n]*)$/gm,Re=/^(?:GET|HEAD)$/,Me=/^\/\//,Le={},Fe={},Ne="*/".concat("*"),Ie=s.createElement("a");function je(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,r=0,a=e.toLowerCase().match(j)||[];if(_(i))for(;n=a[r++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function $e(t,e,i,n){var r={},a=t===Fe;function s(o){var l;return r[o]=!0,T.each(t[o]||[],function(t,o){var c=o(e,i,n);return"string"!=typeof c||a||r[c]?a?!(l=c):void 0:(e.dataTypes.unshift(c),s(c),!1)}),l}return s(e.dataTypes[0])||!r["*"]&&s("*")}function ze(t,e){var i,n,r=T.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((r[i]?t:n||(n={}))[i]=e[i]);return n&&T.extend(!0,t,n),t}Ie.href=be.href,T.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:be.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(be.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ne,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":T.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?ze(ze(t,T.ajaxSettings),e):ze(T.ajaxSettings,t)},ajaxPrefilter:je(Le),ajaxTransport:je(Fe),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var n,r,a,o,l,c,u,h,f,p,d=T.ajaxSetup({},e),m=d.context||d,g=d.context&&(m.nodeType||m.jquery)?T(m):T.event,v=T.Deferred(),_=T.Callbacks("once memory"),y=d.statusCode||{},b={},x={},w="canceled",k={readyState:0,getResponseHeader:function(t){var e;if(u){if(!o)for(o={};e=De.exec(a);)o[e[1].toLowerCase()]=e[2];e=o[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return u?a:null},setRequestHeader:function(t,e){return null==u&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,b[t]=e),this},overrideMimeType:function(t){return null==u&&(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(u)k.always(t[k.status]);else for(e in t)y[e]=[y[e],t[e]];return this},abort:function(t){var e=t||w;return n&&n.abort(e),P(0,e),this}};if(v.promise(k),d.url=((t||d.url||be.href)+"").replace(Me,be.protocol+"//"),d.type=e.method||e.type||d.method||d.type,d.dataTypes=(d.dataType||"*").toLowerCase().match(j)||[""],null==d.crossDomain){c=s.createElement("a");try{c.href=d.url,c.href=c.href,d.crossDomain=Ie.protocol+"//"+Ie.host!=c.protocol+"//"+c.host}catch(t){d.crossDomain=!0}}if(d.data&&d.processData&&"string"!=typeof d.data&&(d.data=T.param(d.data,d.traditional)),$e(Le,d,e,k),u)return k;for(f in(h=T.event&&d.global)&&0==T.active++&&T.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!Re.test(d.type),r=d.url.replace(Ee,""),d.hasContent?d.data&&d.processData&&0===(d.contentType||"").indexOf("application/x-www-form-urlencoded")&&(d.data=d.data.replace(Ae,"+")):(p=d.url.slice(r.length),d.data&&(d.processData||"string"==typeof d.data)&&(r+=(we.test(r)?"&":"?")+d.data,delete d.data),!1===d.cache&&(r=r.replace(Oe,"$1"),p=(we.test(r)?"&":"?")+"_="+xe+++p),d.url=r+p),d.ifModified&&(T.lastModified[r]&&k.setRequestHeader("If-Modified-Since",T.lastModified[r]),T.etag[r]&&k.setRequestHeader("If-None-Match",T.etag[r])),(d.data&&d.hasContent&&!1!==d.contentType||e.contentType)&&k.setRequestHeader("Content-Type",d.contentType),k.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Ne+"; q=0.01":""):d.accepts["*"]),d.headers)k.setRequestHeader(f,d.headers[f]);if(d.beforeSend&&(!1===d.beforeSend.call(m,k,d)||u))return k.abort();if(w="abort",_.add(d.complete),k.done(d.success),k.fail(d.error),n=$e(Fe,d,e,k)){if(k.readyState=1,h&&g.trigger("ajaxSend",[k,d]),u)return k;d.async&&d.timeout>0&&(l=i.setTimeout(function(){k.abort("timeout")},d.timeout));try{u=!1,n.send(b,P)}catch(t){if(u)throw t;P(-1,t)}}else P(-1,"No Transport");function P(t,e,s,o){var c,f,p,b,x,w=e;u||(u=!0,l&&i.clearTimeout(l),n=void 0,a=o||"",k.readyState=t>0?4:0,c=t>=200&&t<300||304===t,s&&(b=function(t,e,i){for(var n,r,a,s,o=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(r in o)if(o[r]&&o[r].test(n)){l.unshift(r);break}if(l[0]in i)a=l[0];else{for(r in i){if(!l[0]||t.converters[r+" "+l[0]]){a=r;break}s||(s=r)}a=a||s}if(a)return a!==l[0]&&l.unshift(a),i[a]}(d,k,s)),b=function(t,e,i,n){var r,a,s,o,l,c={},u=t.dataTypes.slice();if(u[1])for(s in t.converters)c[s.toLowerCase()]=t.converters[s];for(a=u.shift();a;)if(t.responseFields[a]&&(i[t.responseFields[a]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=a,a=u.shift())if("*"===a)a=l;else if("*"!==l&&l!==a){if(!(s=c[l+" "+a]||c["* "+a]))for(r in c)if((o=r.split(" "))[1]===a&&(s=c[l+" "+o[0]]||c["* "+o[0]])){!0===s?s=c[r]:!0!==c[r]&&(a=o[0],u.unshift(o[1]));break}if(!0!==s)if(s&&t.throws)e=s(e);else try{e=s(e)}catch(t){return{state:"parsererror",error:s?t:"No conversion from "+l+" to "+a}}}return{state:"success",data:e}}(d,b,k,c),c?(d.ifModified&&((x=k.getResponseHeader("Last-Modified"))&&(T.lastModified[r]=x),(x=k.getResponseHeader("etag"))&&(T.etag[r]=x)),204===t||"HEAD"===d.type?w="nocontent":304===t?w="notmodified":(w=b.state,f=b.data,c=!(p=b.error))):(p=w,!t&&w||(w="error",t<0&&(t=0))),k.status=t,k.statusText=(e||w)+"",c?v.resolveWith(m,[f,w,k]):v.rejectWith(m,[k,w,p]),k.statusCode(y),y=void 0,h&&g.trigger(c?"ajaxSuccess":"ajaxError",[k,d,c?f:p]),_.fireWith(m,[k,w]),h&&(g.trigger("ajaxComplete",[k,d]),--T.active||T.event.trigger("ajaxStop")))}return k},getJSON:function(t,e,i){return T.get(t,e,i,"json")},getScript:function(t,e){return T.get(t,void 0,e,"script")}}),T.each(["get","post"],function(t,e){T[e]=function(t,i,n,r){return _(i)&&(r=r||n,n=i,i=void 0),T.ajax(T.extend({url:t,type:e,dataType:r,data:i,success:n},T.isPlainObject(t)&&t))}}),T._evalUrl=function(t){return T.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},T.fn.extend({wrapAll:function(t){var e;return this[0]&&(_(t)&&(t=t.call(this[0])),e=T(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return _(t)?this.each(function(e){T(this).wrapInner(t.call(this,e))}):this.each(function(){var e=T(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=_(t);return this.each(function(i){T(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){T(this).replaceWith(this.childNodes)}),this}}),T.expr.pseudos.hidden=function(t){return!T.expr.pseudos.visible(t)},T.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},T.ajaxSettings.xhr=function(){try{return new i.XMLHttpRequest}catch(t){}};var Be={0:200,1223:204},qe=T.ajaxSettings.xhr();v.cors=!!qe&&"withCredentials"in qe,v.ajax=qe=!!qe,T.ajaxTransport(function(t){var e,n;if(v.cors||qe&&!t.crossDomain)return{send:function(r,a){var s,o=t.xhr();if(o.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(s in t.xhrFields)o[s]=t.xhrFields[s];for(s in t.mimeType&&o.overrideMimeType&&o.overrideMimeType(t.mimeType),t.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),r)o.setRequestHeader(s,r[s]);e=function(t){return function(){e&&(e=n=o.onload=o.onerror=o.onabort=o.ontimeout=o.onreadystatechange=null,"abort"===t?o.abort():"error"===t?"number"!=typeof o.status?a(0,"error"):a(o.status,o.statusText):a(Be[o.status]||o.status,o.statusText,"text"!==(o.responseType||"text")||"string"!=typeof o.responseText?{binary:o.response}:{text:o.responseText},o.getAllResponseHeaders()))}},o.onload=e(),n=o.onerror=o.ontimeout=e("error"),void 0!==o.onabort?o.onabort=n:o.onreadystatechange=function(){4===o.readyState&&i.setTimeout(function(){e&&n()})},e=e("abort");try{o.send(t.hasContent&&t.data||null)}catch(t){if(e)throw t}},abort:function(){e&&e()}}}),T.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),T.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return T.globalEval(t),t}}}),T.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),T.ajaxTransport("script",function(t){var e,i;if(t.crossDomain)return{send:function(n,r){e=T("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&r("error"===t.type?404:200,t.type)}),s.head.appendChild(e[0])},abort:function(){i&&i()}}});var He=[],Ue=/(=)\?(?=&|$)|\?\?/;T.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=He.pop()||T.expando+"_"+xe++;return this[t]=!0,t}}),T.ajaxPrefilter("json jsonp",function(t,e,n){var r,a,s,o=!1!==t.jsonp&&(Ue.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ue.test(t.data)&&"data");if(o||"jsonp"===t.dataTypes[0])return r=t.jsonpCallback=_(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,o?t[o]=t[o].replace(Ue,"$1"+r):!1!==t.jsonp&&(t.url+=(we.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return s||T.error(r+" was not called"),s[0]},t.dataTypes[0]="json",a=i[r],i[r]=function(){s=arguments},n.always(function(){void 0===a?T(i).removeProp(r):i[r]=a,t[r]&&(t.jsonpCallback=e.jsonpCallback,He.push(r)),s&&_(a)&&a(s[0]),s=a=void 0}),"script"}),v.createHTMLDocument=function(){var t=s.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),T.parseHTML=function(t,e,i){return"string"!=typeof t?[]:("boolean"==typeof e&&(i=e,e=!1),e||(v.createHTMLDocument?((n=(e=s.implementation.createHTMLDocument("")).createElement("base")).href=s.location.href,e.head.appendChild(n)):e=s),r=D.exec(t),a=!i&&[],r?[e.createElement(r[1])]:(r=yt([t],e,a),a&&a.length&&T(a).remove(),T.merge([],r.childNodes)));var n,r,a},T.fn.load=function(t,e,i){var n,r,a,s=this,o=t.indexOf(" ");return o>-1&&(n=de(t.slice(o)),t=t.slice(0,o)),_(e)?(i=e,e=void 0):e&&"object"==typeof e&&(r="POST"),s.length>0&&T.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){a=arguments,s.html(n?T("<div>").append(T.parseHTML(t)).find(n):t)}).always(i&&function(t,e){s.each(function(){i.apply(this,a||[t.responseText,e,t])})}),this},T.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){T.fn[e]=function(t){return this.on(e,t)}}),T.expr.pseudos.animated=function(t){return T.grep(T.timers,function(e){return t===e.elem}).length},T.offset={setOffset:function(t,e,i){var n,r,a,s,o,l,c=T.css(t,"position"),u=T(t),h={};"static"===c&&(t.style.position="relative"),o=u.offset(),a=T.css(t,"top"),l=T.css(t,"left"),("absolute"===c||"fixed"===c)&&(a+l).indexOf("auto")>-1?(s=(n=u.position()).top,r=n.left):(s=parseFloat(a)||0,r=parseFloat(l)||0),_(e)&&(e=e.call(t,i,T.extend({},o))),null!=e.top&&(h.top=e.top-o.top+s),null!=e.left&&(h.left=e.left-o.left+r),"using"in e?e.using.call(t,h):u.css(h)}},T.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){T.offset.setOffset(this,t,e)});var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i,n=this[0],r={top:0,left:0};if("fixed"===T.css(n,"position"))e=n.getBoundingClientRect();else{for(e=this.offset(),i=n.ownerDocument,t=n.offsetParent||i.documentElement;t&&(t===i.body||t===i.documentElement)&&"static"===T.css(t,"position");)t=t.parentNode;t&&t!==n&&1===t.nodeType&&((r=T(t).offset()).top+=T.css(t,"borderTopWidth",!0),r.left+=T.css(t,"borderLeftWidth",!0))}return{top:e.top-r.top-T.css(n,"marginTop",!0),left:e.left-r.left-T.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===T.css(t,"position");)t=t.offsetParent;return t||bt})}}),T.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i="pageYOffset"===e;T.fn[t]=function(n){return X(this,function(t,n,r){var a;if(y(t)?a=t:9===t.nodeType&&(a=t.defaultView),void 0===r)return a?a[e]:t[n];a?a.scrollTo(i?a.pageXOffset:r,i?r:a.pageYOffset):t[n]=r},t,n,arguments.length)}}),T.each(["top","left"],function(t,e){T.cssHooks[e]=Ht(v.pixelPosition,function(t,i){if(i)return i=qt(t,e),$t.test(i)?T(t).position()[e]+"px":i})}),T.each({Height:"height",Width:"width"},function(t,e){T.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){T.fn[n]=function(r,a){var s=arguments.length&&(i||"boolean"!=typeof r),o=i||(!0===r||!0===a?"margin":"border");return X(this,function(e,i,r){var a;return y(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(a=e.documentElement,Math.max(e.body["scroll"+t],a["scroll"+t],e.body["offset"+t],a["offset"+t],a["client"+t])):void 0===r?T.css(e,i,o):T.style(e,i,r,o)},e,s?r:void 0,s)}})}),T.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){T.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),T.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),T.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),T.proxy=function(t,e){var i,n,r;if("string"==typeof e&&(i=t[e],e=t,t=i),_(t))return n=l.call(arguments,2),(r=function(){return t.apply(e||this,n.concat(l.call(arguments)))}).guid=t.guid=t.guid||T.guid++,r},T.holdReady=function(t){t?T.readyWait++:T.ready(!0)},T.isArray=Array.isArray,T.parseJSON=JSON.parse,T.nodeName=O,T.isFunction=_,T.isWindow=y,T.camelCase=V,T.type=w,T.now=Date.now,T.isNumeric=function(t){var e=T.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},void 0===(n=function(){return T}.apply(e,[]))||(t.exports=n);var Xe=i.jQuery,We=i.$;return T.noConflict=function(t){return i.$===T&&(i.$=We),t&&i.jQuery===T&&(i.jQuery=Xe),T},r||(i.jQuery=i.$=T),T})},function(t,e,i){var n,r;/*! ScrollMagic v2.0.5 | (c) 2015 Jan Paepke (@janpaepke) | license & info: http://scrollmagic.io */void 0===(r="function"==typeof(n=function(){"use strict";var t=function(){};t.version="2.0.5",window.addEventListener("mousewheel",function(){});var e="data-scrollmagic-pin-spacer";t.Controller=function(n){var a,s,o="REVERSE",l="PAUSED",c=i.defaults,u=this,h=r.extend({},c,n),f=[],p=!1,d=0,m=l,g=!0,v=0,_=!0,y=function(){h.refreshInterval>0&&(s=window.setTimeout(S,h.refreshInterval))},b=function(){return h.vertical?r.get.scrollTop(h.container):r.get.scrollLeft(h.container)},x=function(){return h.vertical?r.get.height(h.container):r.get.width(h.container)},w=this._setScrollPos=function(t){h.vertical?g?window.scrollTo(r.get.scrollLeft(),t):h.container.scrollTop=t:g?window.scrollTo(t,r.get.scrollTop()):h.container.scrollLeft=t},T=function(){if(_&&p){var t=r.type.Array(p)?p:f.slice(0);p=!1;var e=d,i=(d=u.scrollPos())-e;0!==i&&(m=i>0?"FORWARD":o),m===o&&t.reverse(),t.forEach(function(t){t.update(!0)})}},k=function(){a=r.rAF(T)},P=function(t){"resize"==t.type&&(v=x(),m=l),!0!==p&&(p=!0,k())},S=function(){if(!g&&v!=x()){var t;try{t=new Event("resize",{bubbles:!1,cancelable:!1})}catch(e){(t=document.createEvent("Event")).initEvent("resize",!1,!1)}h.container.dispatchEvent(t)}f.forEach(function(t){t.refresh()}),y()};this._options=h;var C=function(t){if(t.length<=1)return t;var e=t.slice(0);return e.sort(function(t,e){return t.scrollOffset()>e.scrollOffset()?1:-1}),e};return this.addScene=function(e){if(r.type.Array(e))e.forEach(function(t){u.addScene(t)});else if(e instanceof t.Scene)if(e.controller()!==u)e.addTo(u);else if(f.indexOf(e)<0)for(var i in f.push(e),f=C(f),e.on("shift.controller_sort",function(){f=C(f)}),h.globalSceneOptions)e[i]&&e[i].call(e,h.globalSceneOptions[i]);return u},this.removeScene=function(t){if(r.type.Array(t))t.forEach(function(t){u.removeScene(t)});else{var e=f.indexOf(t);e>-1&&(t.off("shift.controller_sort"),f.splice(e,1),t.remove())}return u},this.updateScene=function(e,i){return r.type.Array(e)?e.forEach(function(t){u.updateScene(t,i)}):i?e.update(!0):!0!==p&&e instanceof t.Scene&&(-1==(p=p||[]).indexOf(e)&&p.push(e),p=C(p),k()),u},this.update=function(t){return P({type:"resize"}),t&&T(),u},this.scrollTo=function(i,n){if(r.type.Number(i))w.call(h.container,i,n);else if(i instanceof t.Scene)i.controller()===u&&u.scrollTo(i.scrollOffset(),n);else if(r.type.Function(i))w=i;else{var a=r.get.elements(i)[0];if(a){for(;a.parentNode.hasAttribute(e);)a=a.parentNode;var s=h.vertical?"top":"left",o=r.get.offset(h.container),l=r.get.offset(a);g||(o[s]-=u.scrollPos()),u.scrollTo(l[s]-o[s],n)}}return u},this.scrollPos=function(t){return arguments.length?(r.type.Function(t)&&(b=t),u):b.call(u)},this.info=function(t){var e={size:v,vertical:h.vertical,scrollPos:d,scrollDirection:m,container:h.container,isDocument:g};return arguments.length?void 0!==e[t]?e[t]:void 0:e},this.loglevel=function(){return u},this.enabled=function(t){return arguments.length?(_!=t&&(_=!!t,u.updateScene(f,!0)),u):_},this.destroy=function(t){window.clearTimeout(s);for(var e=f.length;e--;)f[e].destroy(t);return h.container.removeEventListener("resize",P),h.container.removeEventListener("scroll",P),r.cAF(a),null},function(){for(var t in h)c.hasOwnProperty(t)||delete h[t];if(h.container=r.get.elements(h.container)[0],!h.container)throw"ScrollMagic.Controller init failed.";(g=h.container===window||h.container===document.body||!document.body.contains(h.container))&&(h.container=window),v=x(),h.container.addEventListener("resize",P),h.container.addEventListener("scroll",P),h.refreshInterval=parseInt(h.refreshInterval)||c.refreshInterval,y()}(),u};var i={defaults:{container:window,vertical:!0,globalSceneOptions:{},loglevel:2,refreshInterval:100}};t.Controller.addOption=function(t,e){i.defaults[t]=e},t.Controller.extend=function(e){var i=this;t.Controller=function(){return i.apply(this,arguments),this.$super=r.extend({},this),e.apply(this,arguments)||this},r.extend(t.Controller,i),t.Controller.prototype=i.prototype,t.Controller.prototype.constructor=t.Controller},t.Scene=function(i){var a,s,o="BEFORE",l="DURING",c="AFTER",u=n.defaults,h=this,f=r.extend({},u,i),p=o,d=0,m={start:0,end:0},g=0,v=!0,_={};this.on=function(t,e){return r.type.Function(e)&&(t=t.trim().split(" ")).forEach(function(t){var i=t.split("."),n=i[0],r=i[1];"*"!=n&&(_[n]||(_[n]=[]),_[n].push({namespace:r||"",callback:e}))}),h},this.off=function(t,e){return t?((t=t.trim().split(" ")).forEach(function(t){var i=t.split("."),n=i[0],r=i[1]||"",a="*"===n?Object.keys(_):[n];a.forEach(function(t){for(var i=_[t]||[],n=i.length;n--;){var a=i[n];!a||r!==a.namespace&&"*"!==r||e&&e!=a.callback||i.splice(n,1)}i.length||delete _[t]})}),h):h},this.trigger=function(e,i){if(e){var n=e.trim().split("."),r=n[0],a=n[1],s=_[r];s&&s.forEach(function(e){a&&a!==e.namespace||e.callback.call(h,new t.Event(r,e.namespace,h,i))})}return h},h.on("change.internal",function(t){"loglevel"!==t.what&&"tweenChanges"!==t.what&&("triggerElement"===t.what?T():"reverse"===t.what&&h.update())}).on("shift.internal",function(){x(),h.update()}),this.addTo=function(e){return e instanceof t.Controller&&s!=e&&(s&&s.removeScene(h),s=e,S(),w(!0),T(!0),x(),s.info("container").addEventListener("resize",k),e.addScene(h),h.trigger("add",{controller:s}),h.update()),h},this.enabled=function(t){return arguments.length?(v!=t&&(v=!!t,h.update(!0)),h):v},this.remove=function(){if(s){s.info("container").removeEventListener("resize",k);var t=s;s=void 0,t.removeScene(h),h.trigger("remove")}return h},this.destroy=function(t){return h.trigger("destroy",{reset:t}),h.remove(),h.off("*.*"),null},this.update=function(t){if(s)if(t)if(s.enabled()&&v){var e,i=s.info("scrollPos");e=f.duration>0?(i-m.start)/(m.end-m.start):i>=m.start?1:0,h.trigger("update",{startPos:m.start,endPos:m.end,scrollPos:i}),h.progress(e)}else y&&p===l&&E(!0);else s.updateScene(h,!1);return h},this.refresh=function(){return w(),T(),h},this.progress=function(t){if(arguments.length){var e=!1,i=p,n=s?s.info("scrollDirection"):"PAUSED",r=f.reverse||t>=d;if(0===f.duration?(e=d!=t,p=0==(d=1>t&&r?0:1)?o:l):0>t&&p!==o&&r?(d=0,p=o,e=!0):t>=0&&1>t&&r?(d=t,p=l,e=!0):t>=1&&p!==c?(d=1,p=c,e=!0):p!==l||r||E(),e){var a={progress:d,state:p,scrollDirection:n},u=p!=i,m=function(t){h.trigger(t,a)};u&&i!==l&&(m("enter"),m(i===o?"start":"end")),m("progress"),u&&p!==l&&(m(p===o?"start":"end"),m("leave"))}return h}return d};var y,b,x=function(){m={start:g+f.offset},s&&f.triggerElement&&(m.start-=s.info("size")*f.triggerHook),m.end=m.start+f.duration},w=function(t){if(a){var e="duration";C(e,a.call(h))&&!t&&(h.trigger("change",{what:e,newval:f[e]}),h.trigger("shift",{reason:e}))}},T=function(t){var i=0,n=f.triggerElement;if(s&&n){for(var a=s.info(),o=r.get.offset(a.container),l=a.vertical?"top":"left";n.parentNode.hasAttribute(e);)n=n.parentNode;var c=r.get.offset(n);a.isDocument||(o[l]-=s.scrollPos()),i=c[l]-o[l]}var u=i!=g;g=i,u&&!t&&h.trigger("shift",{reason:"triggerElementPosition"})},k=function(){f.triggerHook>0&&h.trigger("shift",{reason:"containerResize"})},P=r.extend(n.validate,{duration:function(t){if(r.type.String(t)&&t.match(/^(\.|\d)*\d+%$/)){var e=parseFloat(t)/100;t=function(){return s?s.info("size")*e:0}}if(r.type.Function(t)){a=t;try{t=parseFloat(a())}catch(e){t=-1}}if(t=parseFloat(t),!r.type.Number(t)||0>t)throw a?(a=void 0,0):0;return t}}),S=function(t){(t=arguments.length?[t]:Object.keys(P)).forEach(function(t){var e;if(P[t])try{e=P[t](f[t])}catch(i){e=u[t]}finally{f[t]=e}})},C=function(t,e){var i=!1,n=f[t];return f[t]!=e&&(f[t]=e,S(t),i=n!=f[t]),i},A=function(t){h[t]||(h[t]=function(e){return arguments.length?("duration"===t&&(a=void 0),C(t,e)&&(h.trigger("change",{what:t,newval:f[t]}),n.shifts.indexOf(t)>-1&&h.trigger("shift",{reason:t})),h):f[t]})};this.controller=function(){return s},this.state=function(){return p},this.scrollOffset=function(){return m.start},this.triggerPosition=function(){var t=f.offset;return s&&(t+=f.triggerElement?g:s.info("size")*h.triggerHook()),t},h.on("shift.internal",function(t){var e="duration"===t.reason;(p===c&&e||p===l&&0===f.duration)&&E(),e&&O()}).on("progress.internal",function(){E()}).on("add.internal",function(){O()}).on("destroy.internal",function(t){h.removePin(t.reset)});var E=function(t){if(y&&s){var e=s.info(),i=b.spacer.firstChild;if(t||p!==l){var n={position:b.inFlow?"relative":"absolute",top:0,left:0},a=r.css(i,"position")!=n.position;b.pushFollowers?f.duration>0&&(p===c&&0===parseFloat(r.css(b.spacer,"padding-top"))?a=!0:p===o&&0===parseFloat(r.css(b.spacer,"padding-bottom"))&&(a=!0)):n[e.vertical?"top":"left"]=f.duration*d,r.css(i,n),a&&O()}else{"fixed"!=r.css(i,"position")&&(r.css(i,{position:"fixed"}),O());var u=r.get.offset(b.spacer,!0),h=f.reverse||0===f.duration?e.scrollPos-m.start:Math.round(d*f.duration*10)/10;u[e.vertical?"top":"left"]+=h,r.css(b.spacer.firstChild,{top:u.top,left:u.left})}}},O=function(){if(y&&s&&b.inFlow){var t=p===l,e=s.info("vertical"),i=b.spacer.firstChild,n=r.isMarginCollapseType(r.css(b.spacer,"display")),a={};b.relSize.width||b.relSize.autoFullWidth?t?r.css(y,{width:r.get.width(b.spacer)}):r.css(y,{width:"100%"}):(a["min-width"]=r.get.width(e?y:i,!0,!0),a.width=t?a["min-width"]:"auto"),b.relSize.height?t?r.css(y,{height:r.get.height(b.spacer)-(b.pushFollowers?f.duration:0)}):r.css(y,{height:"100%"}):(a["min-height"]=r.get.height(e?i:y,!0,!n),a.height=t?a["min-height"]:"auto"),b.pushFollowers&&(a["padding"+(e?"Top":"Left")]=f.duration*d,a["padding"+(e?"Bottom":"Right")]=f.duration*(1-d)),r.css(b.spacer,a)}},D=function(){s&&y&&p===l&&!s.info("isDocument")&&E()},R=function(){s&&y&&p===l&&((b.relSize.width||b.relSize.autoFullWidth)&&r.get.width(window)!=r.get.width(b.spacer.parentNode)||b.relSize.height&&r.get.height(window)!=r.get.height(b.spacer.parentNode))&&O()},M=function(t){s&&y&&p===l&&!s.info("isDocument")&&(t.preventDefault(),s._setScrollPos(s.info("scrollPos")-((t.wheelDelta||t[s.info("vertical")?"wheelDeltaY":"wheelDeltaX"])/3||30*-t.detail)))};this.setPin=function(t,i){if(i=r.extend({},{pushFollowers:!0,spacerClass:"scrollmagic-pin-spacer"},i),!(t=r.get.elements(t)[0]))return h;if("fixed"===r.css(t,"position"))return h;if(y){if(y===t)return h;h.removePin()}var n=(y=t).parentNode.style.display,a=["top","left","bottom","right","margin","marginLeft","marginRight","marginTop","marginBottom"];y.parentNode.style.display="none";var s="absolute"!=r.css(y,"position"),o=r.css(y,a.concat(["display"])),l=r.css(y,["width","height"]);y.parentNode.style.display=n,!s&&i.pushFollowers&&(i.pushFollowers=!1);var c=y.parentNode.insertBefore(document.createElement("div"),y),u=r.extend(o,{position:s?"relative":"absolute",boxSizing:"content-box",mozBoxSizing:"content-box",webkitBoxSizing:"content-box"});if(s||r.extend(u,r.css(y,["width","height"])),r.css(c,u),c.setAttribute(e,""),r.addClass(c,i.spacerClass),b={spacer:c,relSize:{width:"%"===l.width.slice(-1),height:"%"===l.height.slice(-1),autoFullWidth:"auto"===l.width&&s&&r.isMarginCollapseType(o.display)},pushFollowers:i.pushFollowers,inFlow:s},!y.___origStyle){y.___origStyle={};var f=y.style,p=a.concat(["width","height","position","boxSizing","mozBoxSizing","webkitBoxSizing"]);p.forEach(function(t){y.___origStyle[t]=f[t]||""})}return b.relSize.width&&r.css(c,{width:l.width}),b.relSize.height&&r.css(c,{height:l.height}),c.appendChild(y),r.css(y,{position:s?"relative":"absolute",margin:"auto",top:"auto",left:"auto",bottom:"auto",right:"auto"}),(b.relSize.width||b.relSize.autoFullWidth)&&r.css(y,{boxSizing:"border-box",mozBoxSizing:"border-box",webkitBoxSizing:"border-box"}),window.addEventListener("scroll",D),window.addEventListener("resize",D),window.addEventListener("resize",R),y.addEventListener("mousewheel",M),y.addEventListener("DOMMouseScroll",M),E(),h},this.removePin=function(t){if(y){if(p===l&&E(!0),t||!s){var i=b.spacer.firstChild;if(i.hasAttribute(e)){var n=b.spacer.style;margins={},["margin","marginLeft","marginRight","marginTop","marginBottom"].forEach(function(t){margins[t]=n[t]||""}),r.css(i,margins)}b.spacer.parentNode.insertBefore(i,b.spacer),b.spacer.parentNode.removeChild(b.spacer),y.parentNode.hasAttribute(e)||(r.css(y,y.___origStyle),delete y.___origStyle)}window.removeEventListener("scroll",D),window.removeEventListener("resize",D),window.removeEventListener("resize",R),y.removeEventListener("mousewheel",M),y.removeEventListener("DOMMouseScroll",M),y=void 0}return h};var L,F=[];return h.on("destroy.internal",function(t){h.removeClassToggle(t.reset)}),this.setClassToggle=function(t,e){var i=r.get.elements(t);return 0!==i.length&&r.type.String(e)?(F.length>0&&h.removeClassToggle(),L=e,F=i,h.on("enter.internal_class leave.internal_class",function(t){var e="enter"===t.type?r.addClass:r.removeClass;F.forEach(function(t){e(t,L)})}),h):h},this.removeClassToggle=function(t){return t&&F.forEach(function(t){r.removeClass(t,L)}),h.off("start.internal_class end.internal_class"),L=void 0,F=[],h},function(){for(var t in f)u.hasOwnProperty(t)||delete f[t];for(var e in u)A(e);S()}(),h};var n={defaults:{duration:0,offset:0,triggerElement:void 0,triggerHook:.5,reverse:!0,loglevel:2},validate:{offset:function(t){if(t=parseFloat(t),!r.type.Number(t))throw 0;return t},triggerElement:function(t){if(t=t||void 0){var e=r.get.elements(t)[0];if(!e)throw 0;t=e}return t},triggerHook:function(t){var e={onCenter:.5,onEnter:1,onLeave:0};if(r.type.Number(t))t=Math.max(0,Math.min(parseFloat(t),1));else{if(!(t in e))throw 0;t=e[t]}return t},reverse:function(t){return!!t}},shifts:["duration","offset","triggerHook"]};t.Scene.addOption=function(t,e,i,r){t in n.defaults||(n.defaults[t]=e,n.validate[t]=i,r&&n.shifts.push(t))},t.Scene.extend=function(e){var i=this;t.Scene=function(){return i.apply(this,arguments),this.$super=r.extend({},this),e.apply(this,arguments)||this},r.extend(t.Scene,i),t.Scene.prototype=i.prototype,t.Scene.prototype.constructor=t.Scene},t.Event=function(t,e,i,n){for(var r in n=n||{})this[r]=n[r];return this.type=t,this.target=this.currentTarget=i,this.namespace=e||"",this.timeStamp=this.timestamp=Date.now(),this};var r=t._util=function(t){var e,i={},n=function(t){return parseFloat(t)||0},r=function(e){return e.currentStyle?e.currentStyle:t.getComputedStyle(e)},a=function(e,i,a,s){if((i=i===document?t:i)===t)s=!1;else if(!h.DomElement(i))return 0;e=e.charAt(0).toUpperCase()+e.substr(1).toLowerCase();var o=(a?i["offset"+e]||i["outer"+e]:i["client"+e]||i["inner"+e])||0;if(a&&s){var l=r(i);o+="Height"===e?n(l.marginTop)+n(l.marginBottom):n(l.marginLeft)+n(l.marginRight)}return o},s=function(t){return t.replace(/^[^a-z]+([a-z])/g,"$1").replace(/-([a-z])/g,function(t){return t[1].toUpperCase()})};i.extend=function(t){for(t=t||{},e=1;e<arguments.length;e++)if(arguments[e])for(var i in arguments[e])arguments[e].hasOwnProperty(i)&&(t[i]=arguments[e][i]);return t},i.isMarginCollapseType=function(t){return["block","flex","list-item","table","-webkit-box"].indexOf(t)>-1};var o=0,l=["ms","moz","webkit","o"],c=t.requestAnimationFrame,u=t.cancelAnimationFrame;for(e=0;!c&&e<l.length;++e)c=t[l[e]+"RequestAnimationFrame"],u=t[l[e]+"CancelAnimationFrame"]||t[l[e]+"CancelRequestAnimationFrame"];c||(c=function(e){var i=(new Date).getTime(),n=Math.max(0,16-(i-o)),r=t.setTimeout(function(){e(i+n)},n);return o=i+n,r}),u||(u=function(e){t.clearTimeout(e)}),i.rAF=c.bind(t),i.cAF=u.bind(t);var h=i.type=function(t){return Object.prototype.toString.call(t).replace(/^\[object (.+)\]$/,"$1").toLowerCase()};h.String=function(t){return"string"===h(t)},h.Function=function(t){return"function"===h(t)},h.Array=function(t){return Array.isArray(t)},h.Number=function(t){return!h.Array(t)&&t-parseFloat(t)+1>=0},h.DomElement=function(t){return"object"==typeof HTMLElement?t instanceof HTMLElement:t&&"object"==typeof t&&null!==t&&1===t.nodeType&&"string"==typeof t.nodeName};var f=i.get={};return f.elements=function(e){var i=[];if(h.String(e))try{e=document.querySelectorAll(e)}catch(t){return i}if("nodelist"===h(e)||h.Array(e))for(var n=0,r=i.length=e.length;r>n;n++){var a=e[n];i[n]=h.DomElement(a)?a:f.elements(a)}else(h.DomElement(e)||e===document||e===t)&&(i=[e]);return i},f.scrollTop=function(e){return e&&"number"==typeof e.scrollTop?e.scrollTop:t.pageYOffset||0},f.scrollLeft=function(e){return e&&"number"==typeof e.scrollLeft?e.scrollLeft:t.pageXOffset||0},f.width=function(t,e,i){return a("width",t,e,i)},f.height=function(t,e,i){return a("height",t,e,i)},f.offset=function(t,e){var i={top:0,left:0};if(t&&t.getBoundingClientRect){var n=t.getBoundingClientRect();i.top=n.top,i.left=n.left,e||(i.top+=f.scrollTop(),i.left+=f.scrollLeft())}return i},i.addClass=function(t,e){e&&(t.classList?t.classList.add(e):t.className+=" "+e)},i.removeClass=function(t,e){e&&(t.classList?t.classList.remove(e):t.className=t.className.replace(RegExp("(^|\\b)"+e.split(" ").join("|")+"(\\b|$)","gi")," "))},i.css=function(t,e){if(h.String(e))return r(t)[s(e)];if(h.Array(e)){var i={},n=r(t);return e.forEach(function(t){i[t]=n[s(t)]}),i}for(var a in e){var o=e[a];o==parseFloat(o)&&(o+="px"),t.style[s(a)]=o}},i}(window||{});return t})?n.call(e,i,e,t):n)||(t.exports=r)},function(t,e){var i;i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(i=window)}t.exports=i},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,i){(function(n){var r,a=void 0!==t&&t.exports&&void 0!==n?n:this||window;
/*!
 * VERSION: 2.0.1
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 * 
 * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/(a._gsQueue||(a._gsQueue=[])).push(function(){"use strict";a._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},r=function(t,e,i){var n,r,a=t.cycle;for(n in a)r=a[n],t[n]="function"==typeof r?r(i,e[i]):r[i%r.length];delete t.cycle},a=function(t,e,n){i.call(this,t,e,n),this._cycle=0,this._yoyo=!0===this.vars.yoyo||!!this.vars.yoyoEase,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._repeat&&this._uncache(!0),this.render=a.prototype.render},s=1e-10,o=i._internals,l=o.isSelector,c=o.isArray,u=a.prototype=i.to({},.1,{}),h=[];a.version="2.0.1",u.constructor=a,u.kill()._gc=!1,a.killTweensOf=a.killDelayedCallsTo=i.killTweensOf,a.getTweensOf=i.getTweensOf,a.lagSmoothing=i.lagSmoothing,a.ticker=i.ticker,a.render=i.render,u.invalidate=function(){return this._yoyo=!0===this.vars.yoyo||!!this.vars.yoyoEase,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._yoyoEase=null,this._uncache(!0),i.prototype.invalidate.call(this)},u.updateTo=function(t,e){var n,r=this.ratio,a=this.vars.immediateRender||t.immediateRender;for(n in e&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay)),t)this.vars[n]=t[n];if(this._initted||a)if(e)this._initted=!1,a&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&i._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var s=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(s,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||a)for(var o,l=1/(1-r),c=this._firstPT;c;)o=c.s+c.c,c.c*=l,c.s=o-c.c,c=c._next;return this},u.render=function(t,e,n){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var r,a,l,c,u,h,f,p,d,m=this._dirty?this.totalDuration():this._totalDuration,g=this._time,v=this._totalTime,_=this._cycle,y=this._duration,b=this._rawPrevTime;if(t>=m-1e-7&&t>=0?(this._totalTime=m,this._cycle=this._repeat,this._yoyo&&0!=(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=y,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(r=!0,a="onComplete",n=n||this._timeline.autoRemoveChildren),0===y&&(this._initted||!this.vars.lazy||n)&&(this._startTime===this._timeline._duration&&(t=0),(0>b||0>=t&&t>=-1e-7||b===s&&"isPause"!==this.data)&&b!==t&&(n=!0,b>s&&(a="onReverseComplete")),this._rawPrevTime=p=!e||t||b===t?t:s)):1e-7>t?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==v||0===y&&b>0)&&(a="onReverseComplete",r=this._reversed),0>t&&(this._active=!1,0===y&&(this._initted||!this.vars.lazy||n)&&(b>=0&&(n=!0),this._rawPrevTime=p=!e||t||b===t?t:s)),this._initted||(n=!0)):(this._totalTime=this._time=t,0!==this._repeat&&(c=y+this._repeatDelay,this._cycle=this._totalTime/c>>0,0!==this._cycle&&this._cycle===this._totalTime/c&&t>=v&&this._cycle--,this._time=this._totalTime-this._cycle*c,this._yoyo&&0!=(1&this._cycle)&&(this._time=y-this._time,(d=this._yoyoEase||this.vars.yoyoEase)&&(this._yoyoEase||(!0!==d||this._initted?this._yoyoEase=d=!0===d?this._ease:d instanceof Ease?d:Ease.map[d]:(d=this.vars.ease,this._yoyoEase=d=d?d instanceof Ease?d:"function"==typeof d?new Ease(d,this.vars.easeParams):Ease.map[d]||i.defaultEase:i.defaultEase)),this.ratio=d?1-d.getRatio((y-this._time)/y):0)),this._time>y?this._time=y:this._time<0&&(this._time=0)),this._easeType&&!d?(u=this._time/y,h=this._easeType,f=this._easePower,(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===f?u*=u:2===f?u*=u*u:3===f?u*=u*u*u:4===f&&(u*=u*u*u*u),1===h?this.ratio=1-u:2===h?this.ratio=u:this._time/y<.5?this.ratio=u/2:this.ratio=1-u/2):d||(this.ratio=this._ease.getRatio(this._time/y))),g!==this._time||n||_!==this._cycle){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!n&&this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration))return this._time=g,this._totalTime=v,this._rawPrevTime=b,this._cycle=_,o.lazyTweens.push(this),void(this._lazy=[t,e]);!this._time||r||d?r&&this._ease._calcEnd&&!d&&(this.ratio=this._ease.getRatio(0===this._time?0:1)):this.ratio=this._ease.getRatio(this._time/y)}for(!1!==this._lazy&&(this._lazy=!1),this._active||!this._paused&&this._time!==g&&t>=0&&(this._active=!0),0===v&&(2===this._initted&&t>0&&this._init(),this._startAt&&(t>=0?this._startAt.render(t,!0,n):a||(a="_dummyGS")),this.vars.onStart&&(0!==this._totalTime||0===y)&&(e||this._callback("onStart"))),l=this._firstPT;l;)l.f?l.t[l.p](l.c*this.ratio+l.s):l.t[l.p]=l.c*this.ratio+l.s,l=l._next;this._onUpdate&&(0>t&&this._startAt&&this._startTime&&this._startAt.render(t,!0,n),e||(this._totalTime!==v||a)&&this._callback("onUpdate")),this._cycle!==_&&(e||this._gc||this.vars.onRepeat&&this._callback("onRepeat")),a&&(!this._gc||n)&&(0>t&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(t,!0,n),r&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this._callback(a),0===y&&this._rawPrevTime===s&&p!==s&&(this._rawPrevTime=0))}else v!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate"))},a.to=function(t,e,i){return new a(t,e,i)},a.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new a(t,e,i)},a.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new a(t,e,n)},a.staggerTo=a.allTo=function(t,e,s,o,u,f,p){o=o||0;var d,m,g,v,_=0,y=[],b=function(){s.onComplete&&s.onComplete.apply(s.onCompleteScope||this,arguments),u.apply(p||s.callbackScope||this,f||h)},x=s.cycle,w=s.startAt&&s.startAt.cycle;for(c(t)||("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t))),t=t||[],0>o&&((t=n(t)).reverse(),o*=-1),d=t.length-1,g=0;d>=g;g++){for(v in m={},s)m[v]=s[v];if(x&&(r(m,t,g),null!=m.duration&&(e=m.duration,delete m.duration)),w){for(v in w=m.startAt={},s.startAt)w[v]=s.startAt[v];r(m.startAt,t,g)}m.delay=_+(m.delay||0),g===d&&u&&(m.onComplete=b),y[g]=new a(t[g],e,m),_+=o}return y},a.staggerFrom=a.allFrom=function(t,e,i,n,r,s,o){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,a.staggerTo(t,e,i,n,r,s,o)},a.staggerFromTo=a.allFromTo=function(t,e,i,n,r,s,o,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,a.staggerTo(t,e,n,r,s,o,l)},a.delayedCall=function(t,e,i,n,r){return new a(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,useFrames:r,overwrite:0})},a.set=function(t,e){return new a(t,0,e)},a.isTweening=function(t){return i.getTweensOf(t,!0).length>0};var f=function(t,e){for(var n=[],r=0,a=t._first;a;)a instanceof i?n[r++]=a:(e&&(n[r++]=a),r=(n=n.concat(f(a,e))).length),a=a._next;return n},p=a.getAllTweens=function(e){return f(t._rootTimeline,e).concat(f(t._rootFramesTimeline,e))};a.killAll=function(t,i,n,r){null==i&&(i=!0),null==n&&(n=!0);var a,s,o,l=p(0!=r),c=l.length,u=i&&n&&r;for(o=0;c>o;o++)s=l[o],(u||s instanceof e||(a=s.target===s.vars.onComplete)&&n||i&&!a)&&(t?s.totalTime(s._reversed?0:s.totalDuration()):s._enabled(!1,!1))},a.killChildTweensOf=function(t,e){if(null!=t){var r,s,u,h,f,p=o.tweenLookup;if("string"==typeof t&&(t=i.selector(t)||t),l(t)&&(t=n(t)),c(t))for(h=t.length;--h>-1;)a.killChildTweensOf(t[h],e);else{for(u in r=[],p)for(s=p[u].target.parentNode;s;)s===t&&(r=r.concat(p[u].tweens)),s=s.parentNode;for(f=r.length,h=0;f>h;h++)e&&r[h].totalTime(r[h].totalDuration()),r[h]._enabled(!1,!1)}}};var d=function(t,i,n,r){i=!1!==i,n=!1!==n;for(var a,s,o=p(r=!1!==r),l=i&&n&&r,c=o.length;--c>-1;)s=o[c],(l||s instanceof e||(a=s.target===s.vars.onComplete)&&n||i&&!a)&&s.paused(t)};return a.pauseAll=function(t,e,i){d(!0,t,e,i)},a.resumeAll=function(t,e,i){d(!1,t,e,i)},a.globalTimeScale=function(e){var n=t._rootTimeline,r=i.ticker.time;return arguments.length?(e=e||s,n._startTime=r-(r-n._startTime)*n._timeScale/e,n=t._rootFramesTimeline,r=i.ticker.frame,n._startTime=r-(r-n._startTime)*n._timeScale/e,n._timeScale=t._rootTimeline._timeScale=e,e):n._timeScale},u.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!=(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},u.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},u.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!=(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},u.duration=function(e){return arguments.length?t.prototype.duration.call(this,e):this._duration},u.totalDuration=function(t){return arguments.length?-1===this._repeat?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},u.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},u.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},u.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},a},!0),a._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=!0===this.vars.autoRemoveChildren,this.smoothChildTiming=!0===this.vars.smoothChildTiming,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],c(i)&&-1!==i.join("").indexOf("{self}")&&(r[n]=this._swapSelfInParams(i));c(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},r=1e-10,s=i._internals,o=n._internals={},l=s.isSelector,c=s.isArray,u=s.lazyTweens,h=s.lazyRender,f=a._gsDefine.globals,p=function(t){var e,i={};for(e in t)i[e]=t[e];return i},d=function(t,e,i){var n,r,a=t.cycle;for(n in a)r=a[n],t[n]="function"==typeof r?r(i,e[i]):r[i%r.length];delete t.cycle},m=o.pauseCallback=function(){},g=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},v=n.prototype=new e;return n.version="2.0.1",v.constructor=n,v.kill()._gc=v._forcingPlayhead=v._hasPause=!1,v.to=function(t,e,n,r){var a=n.repeat&&f.TweenMax||i;return e?this.add(new a(t,e,n),r):this.set(t,n,r)},v.from=function(t,e,n,r){return this.add((n.repeat&&f.TweenMax||i).from(t,e,n),r)},v.fromTo=function(t,e,n,r,a){var s=r.repeat&&f.TweenMax||i;return e?this.add(s.fromTo(t,e,n,r),a):this.set(t,r,a)},v.staggerTo=function(t,e,r,a,s,o,c,u){var h,f,m=new n({onComplete:o,onCompleteParams:c,callbackScope:u,smoothChildTiming:this.smoothChildTiming}),v=r.cycle;for("string"==typeof t&&(t=i.selector(t)||t),l(t=t||[])&&(t=g(t)),0>(a=a||0)&&((t=g(t)).reverse(),a*=-1),f=0;f<t.length;f++)(h=p(r)).startAt&&(h.startAt=p(h.startAt),h.startAt.cycle&&d(h.startAt,t,f)),v&&(d(h,t,f),null!=h.duration&&(e=h.duration,delete h.duration)),m.to(t[f],e,h,f*a);return this.add(m,s)},v.staggerFrom=function(t,e,i,n,r,a,s,o){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,a,s,o)},v.staggerFromTo=function(t,e,i,n,r,a,s,o,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,a,s,o,l)},v.call=function(t,e,n,r){return this.add(i.delayedCall(0,t,e,n),r)},v.set=function(t,e,n){return n=this._parseTimeOrLabel(n,0,!0),null==e.immediateRender&&(e.immediateRender=n===this._time&&!this._paused),this.add(new i(t,0,e),n)},n.exportRoot=function(t,e){null==(t=t||{}).smoothChildTiming&&(t.smoothChildTiming=!0);var r,a,s,o,l=new n(t),c=l._timeline;for(null==e&&(e=!0),c._remove(l,!0),l._startTime=0,l._rawPrevTime=l._time=l._totalTime=c._time,s=c._first;s;)o=s._next,e&&s instanceof i&&s.target===s.vars.onComplete||(0>(a=s._startTime-s._delay)&&(r=1),l.add(s,a)),s=o;return c.add(l,0),r&&l.totalDuration(),l},v.add=function(r,a,s,o){var l,u,h,f,p,d;if("number"!=typeof a&&(a=this._parseTimeOrLabel(a,0,!0,r)),!(r instanceof t)){if(r instanceof Array||r&&r.push&&c(r)){for(s=s||"normal",o=o||0,l=a,u=r.length,h=0;u>h;h++)c(f=r[h])&&(f=new n({tweens:f})),this.add(f,l),"string"!=typeof f&&"function"!=typeof f&&("sequence"===s?l=f._startTime+f.totalDuration()/f._timeScale:"start"===s&&(f._startTime-=f.delay())),l+=o;return this._uncache(!0)}if("string"==typeof r)return this.addLabel(r,a);if("function"!=typeof r)throw"Cannot add "+r+" into the timeline; it is not a tween, timeline, function, or string.";r=i.delayedCall(0,r)}if(e.prototype.add.call(this,r,a),r._time&&r.render((this.rawTime()-r._startTime)*r._timeScale,!1,!1),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(d=(p=this).rawTime()>r._startTime;p._timeline;)d&&p._timeline.smoothChildTiming?p.totalTime(p._totalTime,!0):p._gc&&p._enabled(!0,!1),p=p._timeline;return this},v.remove=function(e){if(e instanceof t){this._remove(e,!1);var i=e._timeline=e.vars.useFrames?t._rootFramesTimeline:t._rootTimeline;return e._startTime=(e._paused?e._pauseTime:i._time)-(e._reversed?e.totalDuration()-e._totalTime:e._totalTime)/e._timeScale,this}if(e instanceof Array||e&&e.push&&c(e)){for(var n=e.length;--n>-1;)this.remove(e[n]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},v._remove=function(t,i){return e.prototype._remove.call(this,t,i),this._last?this._time>this.duration()&&(this._time=this._duration,this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},v.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},v.insert=v.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},v.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},v.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},v.addPause=function(t,e,n,r){var a=i.delayedCall(0,m,n,r||this);return a.vars.onComplete=a.vars.onReverseComplete=e,a.data="isPause",this._hasPause=!0,this.add(a,t)},v.removeLabel=function(t){return delete this._labels[t],this},v.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},v._parseTimeOrLabel=function(e,i,n,r){var a,s;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&c(r)))for(s=r.length;--s>-1;)r[s]instanceof t&&r[s].timeline===this&&this.remove(r[s]);if(a="number"!=typeof e||i?this.duration()>99999999999?this.recent().endTime(!1):this._duration:0,"string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-a:0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=a);else{if(-1===(s=e.indexOf("=")))return null==this._labels[e]?n?this._labels[e]=a+i:i:this._labels[e]+i;i=parseInt(e.charAt(s-1)+"1",10)*Number(e.substr(s+1)),e=s>1?this._parseTimeOrLabel(e.substr(0,s-1),0,n):a}return Number(e)+i},v.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),!1!==e)},v.stop=function(){return this.paused(!0)},v.gotoAndPlay=function(t,e){return this.play(t,e)},v.gotoAndStop=function(t,e){return this.pause(t,e)},v.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,a,s,o,l,c,f,p=this._time,d=this._dirty?this.totalDuration():this._totalDuration,m=this._startTime,g=this._timeScale,v=this._paused;if(p!==this._time&&(t+=this._time-p),t>=d-1e-7&&t>=0)this._totalTime=this._time=d,this._reversed||this._hasPausedChild()||(a=!0,o="onComplete",l=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=t&&t>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===r)&&this._rawPrevTime!==t&&this._first&&(l=!0,this._rawPrevTime>r&&(o="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,t=d+1e-4;else if(1e-7>t)if(this._totalTime=this._time=0,(0!==p||0===this._duration&&this._rawPrevTime!==r&&(this._rawPrevTime>0||0>t&&this._rawPrevTime>=0))&&(o="onReverseComplete",a=this._reversed),0>t)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(l=a=!0,o="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(l=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,0===t&&a)for(n=this._first;n&&0===n._startTime;)n._duration||(a=!1),n=n._next;t=0,this._initted||(l=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!e){if(t>=p)for(n=this._first;n&&n._startTime<=t&&!c;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(c=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!c;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(c=n),n=n._prev;c&&(this._time=t=c._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=t}if(this._time!==p&&this._first||i||l||c){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==p&&t>0&&(this._active=!0),0===p&&this.vars.onStart&&(0===this._time&&this._duration||e||this._callback("onStart")),(f=this._time)>=p)for(n=this._first;n&&(s=n._next,f===this._time&&(!this._paused||v));)(n._active||n._startTime<=f&&!n._paused&&!n._gc)&&(c===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=s;else for(n=this._last;n&&(s=n._prev,f===this._time&&(!this._paused||v));){if(n._active||n._startTime<=p&&!n._paused&&!n._gc){if(c===n){for(c=n._prev;c&&c.endTime()>this._time;)c.render(c._reversed?c.totalDuration()-(t-c._startTime)*c._timeScale:(t-c._startTime)*c._timeScale,e,i),c=c._prev;c=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=s}this._onUpdate&&(e||(u.length&&h(),this._callback("onUpdate"))),o&&(this._gc||(m===this._startTime||g!==this._timeScale)&&(0===this._time||d>=this.totalDuration())&&(a&&(u.length&&h(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[o]&&this._callback(o)))}},v._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof n&&t._hasPausedChild())return!0;t=t._next}return!1},v.getChildren=function(t,e,n,r){r=r||-9999999999;for(var a=[],s=this._first,o=0;s;)s._startTime<r||(s instanceof i?!1!==e&&(a[o++]=s):(!1!==n&&(a[o++]=s),!1!==t&&(o=(a=a.concat(s.getChildren(!0,e,n))).length))),s=s._next;return a},v.getTweensOf=function(t,e){var n,r,a=this._gc,s=[],o=0;for(a&&this._enabled(!0,!0),r=(n=i.getTweensOf(t)).length;--r>-1;)(n[r].timeline===this||e&&this._contains(n[r]))&&(s[o++]=n[r]);return a&&this._enabled(!1,!0),s},v.recent=function(){return this._recent},v._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},v.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,a=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in a)a[n]>=i&&(a[n]+=t);return this._uncache(!0)},v._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},v.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return!1!==t&&(this._labels={}),this._uncache(!0)},v.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},v._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},v.totalTime=function(e,i,n){this._forcingPlayhead=!0;var r=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,r},v.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},v.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,a=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>a&&this._sortChildren&&!r._paused&&!this._calculatingDuration?(this._calculatingDuration=1,this.add(r,r._startTime-r._delay),this._calculatingDuration=0):a=r._startTime,r._startTime<0&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale,this._time-=r._startTime,this._totalTime-=r._startTime,this._rawPrevTime-=r._startTime),this.shiftChildren(-r._startTime,!1,-9999999999),a=0),(i=r._startTime+r._totalDuration/r._timeScale)>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return t&&this.totalDuration()?this.timeScale(this._totalDuration/t):this},v.paused=function(e){if(!e)for(var i=this._first,n=this._time;i;)i._startTime===n&&"isPause"===i.data&&(i._rawPrevTime=0),i=i._next;return t.prototype.paused.apply(this,arguments)},v.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},v.rawTime=function(t){return t&&(this._paused||this._repeat&&this.time()>0&&this.totalProgress()<1)?this._totalTime%(this._duration+this._repeatDelay):this._paused?this._totalTime:(this._timeline.rawTime(t)-this._startTime)*this._timeScale},n},!0),a._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,i){var n=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=!0===this.vars.yoyo,this._dirty=!0},r=1e-10,s=e._internals,o=s.lazyTweens,l=s.lazyRender,c=a._gsDefine.globals,u=new i(null,null,1,0),h=n.prototype=new t;return h.constructor=n,h.kill()._gc=!1,n.version="2.0.1",h.invalidate=function(){return this._yoyo=!0===this.vars.yoyo,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},h.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},h.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},h.removePause=function(e){return this.removeCallback(t._internals.pauseCallback,e)},h.tweenTo=function(t,i){i=i||{};var n,r,a,s={ease:u,useFrames:this.usesFrames(),immediateRender:!1,lazy:!1},o=i.repeat&&c.TweenMax||e;for(r in i)s[r]=i[r];return s.time=this._parseTimeOrLabel(t),n=Math.abs(Number(s.time)-this._time)/this._timeScale||.001,a=new o(this,n,s),s.onStart=function(){a.target.paused(!0),a.vars.time===a.target.time()||n!==a.duration()||a.isFromTo||a.duration(Math.abs(a.vars.time-a.target.time())/a.target._timeScale).render(a.time(),!0,!0),i.onStart&&i.onStart.apply(i.onStartScope||i.callbackScope||a,i.onStartParams||[])},a},h.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],callbackScope:this},i.immediateRender=!1!==i.immediateRender;var n=this.tweenTo(e,i);return n.isFromTo=1,n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},h.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,a,s,c,u,h,f,p,d=this._time,m=this._dirty?this.totalDuration():this._totalDuration,g=this._duration,v=this._totalTime,_=this._startTime,y=this._timeScale,b=this._rawPrevTime,x=this._paused,w=this._cycle;if(d!==this._time&&(t+=this._time-d),t>=m-1e-7&&t>=0)this._locked||(this._totalTime=m,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(a=!0,c="onComplete",u=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=t&&t>=-1e-7||0>b||b===r)&&b!==t&&this._first&&(u=!0,b>r&&(c="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,this._yoyo&&0!=(1&this._cycle)?this._time=t=0:(this._time=g,t=g+1e-4);else if(1e-7>t)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==d||0===g&&b!==r&&(b>0||0>t&&b>=0)&&!this._locked)&&(c="onReverseComplete",a=this._reversed),0>t)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(u=a=!0,c="onReverseComplete"):b>=0&&this._first&&(u=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=g||!e||t||this._rawPrevTime===t?t:r,0===t&&a)for(n=this._first;n&&0===n._startTime;)n._duration||(a=!1),n=n._next;t=0,this._initted||(u=!0)}else if(0===g&&0>b&&(u=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(h=g+this._repeatDelay,this._cycle=this._totalTime/h>>0,0!==this._cycle&&this._cycle===this._totalTime/h&&t>=v&&this._cycle--,this._time=this._totalTime-this._cycle*h,this._yoyo&&0!=(1&this._cycle)&&(this._time=g-this._time),this._time>g?(this._time=g,t=g+1e-4):this._time<0?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!e){if((t=this._time)>=d||this._repeat&&w!==this._cycle)for(n=this._first;n&&n._startTime<=t&&!f;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(f=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!f;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(f=n),n=n._prev;f&&f._startTime<g&&(this._time=t=f._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var T=this._yoyo&&0!=(1&w),k=T===(this._yoyo&&0!=(1&this._cycle)),P=this._totalTime,S=this._cycle,C=this._rawPrevTime,A=this._time;if(this._totalTime=w*g,this._cycle<w?T=!T:this._totalTime+=g,this._time=d,this._rawPrevTime=0===g?b-1e-4:b,this._cycle=w,this._locked=!0,d=T?0:g,this.render(d,e,0===g),e||this._gc||this.vars.onRepeat&&(this._cycle=S,this._locked=!1,this._callback("onRepeat")),d!==this._time)return;if(k&&(this._cycle=w,this._locked=!0,d=T?g+1e-4:-1e-4,this.render(d,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=A,this._totalTime=P,this._cycle=S,this._rawPrevTime=C}if(this._time!==d&&this._first||i||u||f){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==v&&t>0&&(this._active=!0),0===v&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||e||this._callback("onStart")),(p=this._time)>=d)for(n=this._first;n&&(s=n._next,p===this._time&&(!this._paused||x));)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(f===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=s;else for(n=this._last;n&&(s=n._prev,p===this._time&&(!this._paused||x));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(f===n){for(f=n._prev;f&&f.endTime()>this._time;)f.render(f._reversed?f.totalDuration()-(t-f._startTime)*f._timeScale:(t-f._startTime)*f._timeScale,e,i),f=f._prev;f=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=s}this._onUpdate&&(e||(o.length&&l(),this._callback("onUpdate"))),c&&(this._locked||this._gc||(_===this._startTime||y!==this._timeScale)&&(0===this._time||m>=this.totalDuration())&&(a&&(o.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[c]&&this._callback(c)))}else v!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate"))},h.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,a=[],s=this.getChildren(t,e,i),o=0,l=s.length;for(n=0;l>n;n++)(r=s[n]).isActive()&&(a[o++]=r);return a},h.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;n>e;e++)if(i[e].time>t)return i[e].name;return null},h.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(e[i].time<t)return e[i].name;return null},h.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},h.invalidate=function(){return this._locked=!1,t.prototype.invalidate.call(this)},h.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!=(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()||0},h.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()||0},h.totalDuration=function(e){return arguments.length?-1!==this._repeat&&e?this.timeScale(this.totalDuration()/e):this:(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},h.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!=(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},h.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},h.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},h.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},h.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},n},!0),function(){var t=180/Math.PI,e=[],i=[],n=[],r={},s=a._gsDefine.globals,o=function(t,e,i,n){i===n&&(i=n-(n-e)/1e6),t===e&&(e=t+(i-t)/1e6),this.a=t,this.b=e,this.c=i,this.d=n,this.da=n-t,this.ca=i-t,this.ba=e-t},l=function(t,e,i,n){var r={a:t},a={},s={},o={c:n},l=(t+e)/2,c=(e+i)/2,u=(i+n)/2,h=(l+c)/2,f=(c+u)/2,p=(f-h)/8;return r.b=l+(t-l)/4,a.b=h+p,r.c=a.a=(r.b+a.b)/2,a.c=s.a=(h+f)/2,s.b=f-p,o.b=u+(n-u)/4,s.c=o.a=(s.b+o.b)/2,[r,a,s,o]},c=function(t,r,a,s,o){var c,u,h,f,p,d,m,g,v,_,y,b,x,w=t.length-1,T=0,k=t[0].a;for(c=0;w>c;c++)u=(p=t[T]).a,h=p.d,f=t[T+1].d,o?(y=e[c],x=((b=i[c])+y)*r*.25/(s?.5:n[c]||.5),g=h-((d=h-(h-u)*(s?.5*r:0!==y?x/y:0))+(((m=h+(f-h)*(s?.5*r:0!==b?x/b:0))-d)*(3*y/(y+b)+.5)/4||0))):g=h-((d=h-(h-u)*r*.5)+(m=h+(f-h)*r*.5))/2,d+=g,m+=g,p.c=v=d,p.b=0!==c?k:k=p.a+.6*(p.c-p.a),p.da=h-u,p.ca=v-u,p.ba=k-u,a?(_=l(u,k,v,h),t.splice(T,1,_[0],_[1],_[2],_[3]),T+=4):T++,k=m;(p=t[T]).b=k,p.c=k+.4*(p.d-k),p.da=p.d-p.a,p.ca=p.c-p.a,p.ba=k-p.a,a&&(_=l(p.a,k,p.c,p.d),t.splice(T,1,_[0],_[1],_[2],_[3]))},u=function(t,n,r,a){var s,l,c,u,h,f,p=[];if(a)for(l=(t=[a].concat(t)).length;--l>-1;)"string"==typeof(f=t[l][n])&&"="===f.charAt(1)&&(t[l][n]=a[n]+Number(f.charAt(0)+f.substr(2)));if(0>(s=t.length-2))return p[0]=new o(t[0][n],0,0,t[0][n]),p;for(l=0;s>l;l++)c=t[l][n],u=t[l+1][n],p[l]=new o(c,0,0,u),r&&(h=t[l+2][n],e[l]=(e[l]||0)+(u-c)*(u-c),i[l]=(i[l]||0)+(h-u)*(h-u));return p[l]=new o(t[l][n],0,0,t[l+1][n]),p},h=function(t,a,s,o,l,h){var f,p,d,m,g,v,_,y,b={},x=[],w=h||t[0];for(p in l="string"==typeof l?","+l+",":",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",null==a&&(a=1),t[0])x.push(p);if(t.length>1){for(y=t[t.length-1],_=!0,f=x.length;--f>-1;)if(p=x[f],Math.abs(w[p]-y[p])>.05){_=!1;break}_&&(t=t.concat(),h&&t.unshift(h),t.push(t[1]),h=t[t.length-3])}for(e.length=i.length=n.length=0,f=x.length;--f>-1;)p=x[f],r[p]=-1!==l.indexOf(","+p+","),b[p]=u(t,p,r[p],h);for(f=e.length;--f>-1;)e[f]=Math.sqrt(e[f]),i[f]=Math.sqrt(i[f]);if(!o){for(f=x.length;--f>-1;)if(r[p])for(v=(d=b[x[f]]).length-1,m=0;v>m;m++)g=d[m+1].da/i[m]+d[m].da/e[m]||0,n[m]=(n[m]||0)+g*g;for(f=n.length;--f>-1;)n[f]=Math.sqrt(n[f])}for(f=x.length,m=s?4:1;--f>-1;)d=b[p=x[f]],c(d,a,s,o,r[p]),_&&(d.splice(0,m),d.splice(d.length-m,m));return b},f=function(t,e,i){var n,r,a,s,l,c,u,h,f,p,d,m={},g="cubic"===(e=e||"soft")?3:2,v="soft"===e,_=[];if(v&&i&&(t=[i].concat(t)),null==t||t.length<g+1)throw"invalid Bezier data";for(f in t[0])_.push(f);for(c=_.length;--c>-1;){for(m[f=_[c]]=l=[],p=0,h=t.length,u=0;h>u;u++)n=null==i?t[u][f]:"string"==typeof(d=t[u][f])&&"="===d.charAt(1)?i[f]+Number(d.charAt(0)+d.substr(2)):Number(d),v&&u>1&&h-1>u&&(l[p++]=(n+l[p-2])/2),l[p++]=n;for(h=p-g+1,p=0,u=0;h>u;u+=g)n=l[u],r=l[u+1],a=l[u+2],s=2===g?0:l[u+3],l[p++]=d=3===g?new o(n,r,a,s):new o(n,(2*r+n)/3,(2*r+a)/3,a);l.length=p}return m},p=function(t,e,i){for(var n,r,a,s,o,l,c,u,h,f,p,d=1/i,m=t.length;--m>-1;)for(a=(f=t[m]).a,s=f.d-a,o=f.c-a,l=f.b-a,n=r=0,u=1;i>=u;u++)n=r-(r=((c=d*u)*c*s+3*(h=1-c)*(c*o+h*l))*c),e[p=m*i+u-1]=(e[p]||0)+n*n},d=function(t,e){var i,n,r,a,s=[],o=[],l=0,c=0,u=(e=e>>0||6)-1,h=[],f=[];for(i in t)p(t[i],s,e);for(r=s.length,n=0;r>n;n++)l+=Math.sqrt(s[n]),f[a=n%e]=l,a===u&&(c+=l,h[a=n/e>>0]=f,o[a]=c,l=0,f=[]);return{length:c,lengths:o,segments:h}},m=a._gsDefine.plugin({propName:"bezier",priority:-1,version:"1.3.8",API:2,global:!0,init:function(t,e,i){this._target=t,e instanceof Array&&(e={values:e}),this._func={},this._mod={},this._props=[],this._timeRes=null==e.timeResolution?6:parseInt(e.timeResolution,10);var n,r,a,s,o,l=e.values||[],c={},u=l[0],p=e.autoRotate||i.vars.orientToBezier;for(n in this._autoRotate=p?p instanceof Array?p:[["x","y","rotation",!0===p?0:Number(p)||0]]:null,u)this._props.push(n);for(a=this._props.length;--a>-1;)n=this._props[a],this._overwriteProps.push(n),r=this._func[n]="function"==typeof t[n],c[n]=r?t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)]():parseFloat(t[n]),o||c[n]!==l[0][n]&&(o=c);if(this._beziers="cubic"!==e.type&&"quadratic"!==e.type&&"soft"!==e.type?h(l,isNaN(e.curviness)?1:e.curviness,!1,"thruBasic"===e.type,e.correlate,o):f(l,e.type,c),this._segCount=this._beziers[n].length,this._timeRes){var m=d(this._beziers,this._timeRes);this._length=m.length,this._lengths=m.lengths,this._segments=m.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(p=this._autoRotate)for(this._initialRotations=[],p[0]instanceof Array||(this._autoRotate=p=[p]),a=p.length;--a>-1;){for(s=0;3>s;s++)n=p[a][s],this._func[n]="function"==typeof t[n]&&t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)];n=p[a][2],this._initialRotations[a]=(this._func[n]?this._func[n].call(this._target):this._target[n])||0,this._overwriteProps.push(n)}return this._startRatio=i.vars.runBackwards?1:0,!0},set:function(e){var i,n,r,a,s,o,l,c,u,h,f=this._segCount,p=this._func,d=this._target,m=e!==this._startRatio;if(this._timeRes){if(u=this._lengths,h=this._curSeg,e*=this._length,r=this._li,e>this._l2&&f-1>r){for(c=f-1;c>r&&(this._l2=u[++r])<=e;);this._l1=u[r-1],this._li=r,this._curSeg=h=this._segments[r],this._s2=h[this._s1=this._si=0]}else if(e<this._l1&&r>0){for(;r>0&&(this._l1=u[--r])>=e;);0===r&&e<this._l1?this._l1=0:r++,this._l2=u[r],this._li=r,this._curSeg=h=this._segments[r],this._s1=h[(this._si=h.length-1)-1]||0,this._s2=h[this._si]}if(i=r,e-=this._l1,r=this._si,e>this._s2&&r<h.length-1){for(c=h.length-1;c>r&&(this._s2=h[++r])<=e;);this._s1=h[r-1],this._si=r}else if(e<this._s1&&r>0){for(;r>0&&(this._s1=h[--r])>=e;);0===r&&e<this._s1?this._s1=0:r++,this._s2=h[r],this._si=r}o=(r+(e-this._s1)/(this._s2-this._s1))*this._prec||0}else o=(e-(i=0>e?0:e>=1?f-1:f*e>>0)*(1/f))*f;for(n=1-o,r=this._props.length;--r>-1;)a=this._props[r],l=(o*o*(s=this._beziers[a][i]).da+3*n*(o*s.ca+n*s.ba))*o+s.a,this._mod[a]&&(l=this._mod[a](l,d)),p[a]?d[a](l):d[a]=l;if(this._autoRotate){var g,v,_,y,b,x,w,T=this._autoRotate;for(r=T.length;--r>-1;)a=T[r][2],x=T[r][3]||0,w=!0===T[r][4]?1:t,s=this._beziers[T[r][0]],g=this._beziers[T[r][1]],s&&g&&(s=s[i],g=g[i],v=s.a+(s.b-s.a)*o,v+=((y=s.b+(s.c-s.b)*o)-v)*o,y+=(s.c+(s.d-s.c)*o-y)*o,_=g.a+(g.b-g.a)*o,_+=((b=g.b+(g.c-g.b)*o)-_)*o,b+=(g.c+(g.d-g.c)*o-b)*o,l=m?Math.atan2(b-_,y-v)*w+x:this._initialRotations[r],this._mod[a]&&(l=this._mod[a](l,d)),p[a]?d[a](l):d[a]=l)}}}),g=m.prototype;m.bezierThrough=h,m.cubicToQuadratic=l,m._autoCSS=!0,m.quadraticToCubic=function(t,e,i){return new o(t,(2*e+t)/3,(2*e+i)/3,i)},m._cssRegister=function(){var t=s.CSSPlugin;if(t){var e=t._internals,i=e._parseToProxy,n=e._setPluginRatio,r=e.CSSPropTween;e._registerComplexSpecialProp("bezier",{parser:function(t,e,a,s,o,l){e instanceof Array&&(e={values:e}),l=new m;var c,u,h,f=e.values,p=f.length-1,d=[],g={};if(0>p)return o;for(c=0;p>=c;c++)h=i(t,f[c],s,o,l,p!==c),d[c]=h.end;for(u in e)g[u]=e[u];return g.values=d,(o=new r(t,"bezier",0,0,h.pt,2)).data=h,o.plugin=l,o.setRatio=n,0===g.autoRotate&&(g.autoRotate=!0),!g.autoRotate||g.autoRotate instanceof Array||(c=!0===g.autoRotate?0:Number(g.autoRotate),g.autoRotate=null!=h.end.left?[["left","top","rotation",c,!1]]:null!=h.end.x&&[["x","y","rotation",c,!1]]),g.autoRotate&&(s._transform||s._enableTransforms(!1),h.autoRotate=s._target._gsTransform,h.proxy.rotation=h.autoRotate.rotation||0,s._overwriteProps.push("rotation")),l._onInitTween(h.proxy,g,s._tween),o}})}},g._mod=function(t){for(var e,i=this._overwriteProps,n=i.length;--n>-1;)(e=t[i[n]])&&"function"==typeof e&&(this._mod[i[n]]=e)},g._kill=function(t){var e,i,n=this._props;for(e in this._beziers)if(e in t)for(delete this._beziers[e],delete this._func[e],i=n.length;--i>-1;)n[i]===e&&n.splice(i,1);if(n=this._autoRotate)for(i=n.length;--i>-1;)t[n[i][2]]&&n.splice(i,1);return this._super._kill.call(this,t)}}(),a._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(t,e){var i,n,r,s,o=function(){t.call(this,"css"),this._overwriteProps.length=0,this.setRatio=o.prototype.setRatio},l=a._gsDefine.globals,c={},u=o.prototype=new t("css");u.constructor=o,o.version="1.20.5",o.API=2,o.defaultTransformPerspective=0,o.defaultSkewType="compensated",o.defaultSmoothOrigin=!0,u="px",o.suffixMap={top:u,right:u,bottom:u,left:u,width:u,height:u,fontSize:u,padding:u,margin:u,perspective:u,lineHeight:""};var h,f,p,d,m,g,v,_,y=/(?:\-|\.|\b)(\d|\.|e\-)+/g,b=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,x=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,w=/(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,T=/(?:\d|\-|\+|=|#|\.)*/g,k=/opacity *= *([^)]*)/i,P=/opacity:([^;]*)/i,S=/alpha\(opacity *=.+?\)/i,C=/^(rgb|hsl)/,A=/([A-Z])/g,E=/-([a-z])/gi,O=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,D=function(t,e){return e.toUpperCase()},R=/(?:Left|Right|Width)/i,M=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,L=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,F=/,(?=[^\)]*(?:\(|$))/gi,N=/[\s,\(]/i,I=Math.PI/180,j=180/Math.PI,$={},z={style:{}},B=a.document||{createElement:function(){return z}},q=function(t,e){return B.createElementNS?B.createElementNS(e||"http://www.w3.org/1999/xhtml",t):B.createElement(t)},H=q("div"),U=q("img"),X=o._internals={_specialProps:c},W=(a.navigator||{}).userAgent||"",G=function(){var t=W.indexOf("Android"),e=q("a");return p=-1!==W.indexOf("Safari")&&-1===W.indexOf("Chrome")&&(-1===t||parseFloat(W.substr(t+8,2))>3),m=p&&parseFloat(W.substr(W.indexOf("Version/")+8,2))<6,d=-1!==W.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(W)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(W))&&(g=parseFloat(RegExp.$1)),!!e&&(e.style.cssText="top:1px;opacity:.55;",/^0.55/.test(e.style.opacity))}(),Y=function(t){return k.test("string"==typeof t?t:(t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?parseFloat(RegExp.$1)/100:1},V=function(t){a.console&&console.log(t)},Z="",K="",Q=function(t,e){var i,n,r=(e=e||H).style;if(void 0!==r[t])return t;for(t=t.charAt(0).toUpperCase()+t.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+t];);return n>=0?(Z="-"+(K=3===n?"ms":i[n]).toLowerCase()+"-",K+t):null},J=("undefined"!=typeof window?window:B.defaultView||{getComputedStyle:function(){}}).getComputedStyle,tt=o.getStyle=function(t,e,i,n,r){var a;return G||"opacity"!==e?(!n&&t.style[e]?a=t.style[e]:(i=i||J(t))?a=i[e]||i.getPropertyValue(e)||i.getPropertyValue(e.replace(A,"-$1").toLowerCase()):t.currentStyle&&(a=t.currentStyle[e]),null==r||a&&"none"!==a&&"auto"!==a&&"auto auto"!==a?a:r):Y(t)},et=X.convertToPixels=function(t,i,n,r,a){if("px"===r||!r&&"lineHeight"!==i)return n;if("auto"===r||!n)return 0;var s,l,c,u=R.test(i),h=t,f=H.style,p=0>n,d=1===n;if(p&&(n=-n),d&&(n*=100),"lineHeight"!==i||r)if("%"===r&&-1!==i.indexOf("border"))s=n/100*(u?t.clientWidth:t.clientHeight);else{if(f.cssText="border:0 solid red;position:"+tt(t,"position")+";line-height:0;","%"!==r&&h.appendChild&&"v"!==r.charAt(0)&&"rem"!==r)f[u?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(h=t.parentNode||B.body,-1!==tt(h,"display").indexOf("flex")&&(f.position="absolute"),l=h._gsCache,c=e.ticker.frame,l&&u&&l.time===c)return l.width*n/100;f[u?"width":"height"]=n+r}h.appendChild(H),s=parseFloat(H[u?"offsetWidth":"offsetHeight"]),h.removeChild(H),u&&"%"===r&&!1!==o.cacheWidths&&((l=h._gsCache=h._gsCache||{}).time=c,l.width=s/n*100),0!==s||a||(s=et(t,i,n,r,!0))}else l=J(t).lineHeight,t.style.lineHeight=n,s=parseFloat(J(t).lineHeight),t.style.lineHeight=l;return d&&(s/=100),p?-s:s},it=X.calculateOffset=function(t,e,i){if("absolute"!==tt(t,"position",i))return 0;var n="left"===e?"Left":"Top",r=tt(t,"margin"+n,i);return t["offset"+n]-(et(t,e,parseFloat(r),r.replace(T,""))||0)},nt=function(t,e){var i,n,r,a={};if(e=e||J(t,null))if(i=e.length)for(;--i>-1;)(-1===(r=e[i]).indexOf("-transform")||Ot===r)&&(a[r.replace(E,D)]=e.getPropertyValue(r));else for(i in e)(-1===i.indexOf("Transform")||Et===i)&&(a[i]=e[i]);else if(e=t.currentStyle||t.style)for(i in e)"string"==typeof i&&void 0===a[i]&&(a[i.replace(E,D)]=e[i]);return G||(a.opacity=Y(t)),n=Ht(t,e,!1),a.rotation=n.rotation,a.skewX=n.skewX,a.scaleX=n.scaleX,a.scaleY=n.scaleY,a.x=n.x,a.y=n.y,Rt&&(a.z=n.z,a.rotationX=n.rotationX,a.rotationY=n.rotationY,a.scaleZ=n.scaleZ),a.filters&&delete a.filters,a},rt=function(t,e,i,n,r){var a,s,o,l={},c=t.style;for(s in i)"cssText"!==s&&"length"!==s&&isNaN(s)&&(e[s]!==(a=i[s])||r&&r[s])&&-1===s.indexOf("Origin")&&("number"==typeof a||"string"==typeof a)&&(l[s]="auto"!==a||"left"!==s&&"top"!==s?""!==a&&"auto"!==a&&"none"!==a||"string"!=typeof e[s]||""===e[s].replace(w,"")?a:0:it(t,s),void 0!==c[s]&&(o=new yt(c,s,c[s],o)));if(n)for(s in n)"className"!==s&&(l[s]=n[s]);return{difs:l,firstMPT:o}},at={width:["Left","Right"],height:["Top","Bottom"]},st=["marginLeft","marginRight","marginTop","marginBottom"],ot=function(t,e,i){if("svg"===(t.nodeName+"").toLowerCase())return(i||J(t))[e]||0;if(t.getCTM&&zt(t))return t.getBBox()[e]||0;var n=parseFloat("width"===e?t.offsetWidth:t.offsetHeight),r=at[e],a=r.length;for(i=i||J(t,null);--a>-1;)n-=parseFloat(tt(t,"padding"+r[a],i,!0))||0,n-=parseFloat(tt(t,"border"+r[a]+"Width",i,!0))||0;return n},lt=function(t,e){if("contain"===t||"auto"===t||"auto auto"===t)return t+" ";(null==t||""===t)&&(t="0 0");var i,n=t.split(" "),r=-1!==t.indexOf("left")?"0%":-1!==t.indexOf("right")?"100%":n[0],a=-1!==t.indexOf("top")?"0%":-1!==t.indexOf("bottom")?"100%":n[1];if(n.length>3&&!e){for(n=t.split(", ").join(",").split(","),t=[],i=0;i<n.length;i++)t.push(lt(n[i]));return t.join(",")}return null==a?a="center"===r?"50%":"0":"center"===a&&(a="50%"),("center"===r||isNaN(parseFloat(r))&&-1===(r+"").indexOf("="))&&(r="50%"),t=r+" "+a+(n.length>2?" "+n[2]:""),e&&(e.oxp=-1!==r.indexOf("%"),e.oyp=-1!==a.indexOf("%"),e.oxr="="===r.charAt(1),e.oyr="="===a.charAt(1),e.ox=parseFloat(r.replace(w,"")),e.oy=parseFloat(a.replace(w,"")),e.v=t),e||t},ct=function(t,e){return"function"==typeof t&&(t=t(_,v)),"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2)):parseFloat(t)-parseFloat(e)||0},ut=function(t,e){return"function"==typeof t&&(t=t(_,v)),null==t?e:"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2))+e:parseFloat(t)||0},ht=function(t,e,i,n){var r,a,s,o,l;return"function"==typeof t&&(t=t(_,v)),null==t?o=e:"number"==typeof t?o=t:(r=360,a=t.split("_"),s=((l="="===t.charAt(1))?parseInt(t.charAt(0)+"1",10)*parseFloat(a[0].substr(2)):parseFloat(a[0]))*(-1===t.indexOf("rad")?1:j)-(l?0:e),a.length&&(n&&(n[i]=e+s),-1!==t.indexOf("short")&&((s%=r)!==s%(r/2)&&(s=0>s?s+r:s-r)),-1!==t.indexOf("_cw")&&0>s?s=(s+9999999999*r)%r-(s/r|0)*r:-1!==t.indexOf("ccw")&&s>0&&(s=(s-9999999999*r)%r-(s/r|0)*r)),o=e+s),1e-6>o&&o>-1e-6&&(o=0),o},ft={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},pt=function(t,e,i){return 255*(1>6*(t=0>t?t+1:t>1?t-1:t)?e+(i-e)*t*6:.5>t?i:2>3*t?e+(i-e)*(2/3-t)*6:e)+.5|0},dt=o.parseColor=function(t,e){var i,n,r,a,s,o,l,c,u,h,f;if(t)if("number"==typeof t)i=[t>>16,t>>8&255,255&t];else{if(","===t.charAt(t.length-1)&&(t=t.substr(0,t.length-1)),ft[t])i=ft[t];else if("#"===t.charAt(0))4===t.length&&(t="#"+(n=t.charAt(1))+n+(r=t.charAt(2))+r+(a=t.charAt(3))+a),i=[(t=parseInt(t.substr(1),16))>>16,t>>8&255,255&t];else if("hsl"===t.substr(0,3))if(i=f=t.match(y),e){if(-1!==t.indexOf("="))return t.match(b)}else s=Number(i[0])%360/360,o=Number(i[1])/100,n=2*(l=Number(i[2])/100)-(r=.5>=l?l*(o+1):l+o-l*o),i.length>3&&(i[3]=Number(i[3])),i[0]=pt(s+1/3,n,r),i[1]=pt(s,n,r),i[2]=pt(s-1/3,n,r);else i=t.match(y)||ft.transparent;i[0]=Number(i[0]),i[1]=Number(i[1]),i[2]=Number(i[2]),i.length>3&&(i[3]=Number(i[3]))}else i=ft.black;return e&&!f&&(n=i[0]/255,r=i[1]/255,a=i[2]/255,l=((c=Math.max(n,r,a))+(u=Math.min(n,r,a)))/2,c===u?s=o=0:(h=c-u,o=l>.5?h/(2-c-u):h/(c+u),s=c===n?(r-a)/h+(a>r?6:0):c===r?(a-n)/h+2:(n-r)/h+4,s*=60),i[0]=s+.5|0,i[1]=100*o+.5|0,i[2]=100*l+.5|0),i},mt=function(t,e){var i,n,r,a=t.match(gt)||[],s=0,o="";if(!a.length)return t;for(i=0;i<a.length;i++)n=a[i],s+=(r=t.substr(s,t.indexOf(n,s)-s)).length+n.length,3===(n=dt(n,e)).length&&n.push(1),o+=r+(e?"hsla("+n[0]+","+n[1]+"%,"+n[2]+"%,"+n[3]:"rgba("+n.join(","))+")";return o+t.substr(s)},gt="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";for(u in ft)gt+="|"+u+"\\b";gt=new RegExp(gt+")","gi"),o.colorStringFilter=function(t){var e,i=t[0]+" "+t[1];gt.test(i)&&(e=-1!==i.indexOf("hsl(")||-1!==i.indexOf("hsla("),t[0]=mt(t[0],e),t[1]=mt(t[1],e)),gt.lastIndex=0},e.defaultStringFilter||(e.defaultStringFilter=o.colorStringFilter);var vt=function(t,e,i,n){if(null==t)return function(t){return t};var r,a=e?(t.match(gt)||[""])[0]:"",s=t.split(a).join("").match(x)||[],o=t.substr(0,t.indexOf(s[0])),l=")"===t.charAt(t.length-1)?")":"",c=-1!==t.indexOf(" ")?" ":",",u=s.length,h=u>0?s[0].replace(y,""):"";return u?r=e?function(t){var e,f,p,d;if("number"==typeof t)t+=h;else if(n&&F.test(t)){for(d=t.replace(F,"|").split("|"),p=0;p<d.length;p++)d[p]=r(d[p]);return d.join(",")}if(e=(t.match(gt)||[a])[0],p=(f=t.split(e).join("").match(x)||[]).length,u>p--)for(;++p<u;)f[p]=i?f[(p-1)/2|0]:s[p];return o+f.join(c)+c+e+l+(-1!==t.indexOf("inset")?" inset":"")}:function(t){var e,a,f;if("number"==typeof t)t+=h;else if(n&&F.test(t)){for(a=t.replace(F,"|").split("|"),f=0;f<a.length;f++)a[f]=r(a[f]);return a.join(",")}if(f=(e=t.match(x)||[]).length,u>f--)for(;++f<u;)e[f]=i?e[(f-1)/2|0]:s[f];return o+e.join(c)+l}:function(t){return t}},_t=function(t){return t=t.split(","),function(e,i,n,r,a,s,o){var l,c=(i+"").split(" ");for(o={},l=0;4>l;l++)o[t[l]]=c[l]=c[l]||c[(l-1)/2>>0];return r.parse(e,o,a,s)}},yt=(X._setPluginRatio=function(t){this.plugin.setRatio(t);for(var e,i,n,r,a,s=this.data,o=s.proxy,l=s.firstMPT;l;)e=o[l.v],l.r?e=l.r(e):1e-6>e&&e>-1e-6&&(e=0),l.t[l.p]=e,l=l._next;if(s.autoRotate&&(s.autoRotate.rotation=s.mod?s.mod.call(this._tween,o.rotation,this.t,this._tween):o.rotation),1===t||0===t)for(l=s.firstMPT,a=1===t?"e":"b";l;){if((i=l.t).type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;n<i.l;n++)r+=i["xn"+n]+i["xs"+(n+1)];i[a]=r}}else i[a]=i.s+i.xs0;l=l._next}},function(t,e,i,n,r){this.t=t,this.p=e,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),bt=(X._parseToProxy=function(t,e,i,n,r,a){var s,o,l,c,u,h=n,f={},p={},d=i._transform,m=$;for(i._transform=null,$=e,n=u=i.parse(t,e,n,r),$=m,a&&(i._transform=d,h&&(h._prev=null,h._prev&&(h._prev._next=null)));n&&n!==h;){if(n.type<=1&&(p[o=n.p]=n.s+n.c,f[o]=n.s,a||(c=new yt(n,"s",o,c,n.r),n.c=0),1===n.type))for(s=n.l;--s>0;)l="xn"+s,p[o=n.p+"_"+l]=n.data[l],f[o]=n[l],a||(c=new yt(n,l,o,c,n.rxp[l]));n=n._next}return{proxy:f,end:p,firstMPT:c,pt:u}},X.CSSPropTween=function(t,e,n,r,a,o,l,c,u,h,f){this.t=t,this.p=e,this.s=n,this.c=r,this.n=l||e,t instanceof bt||s.push(this.n),this.r=c?"function"==typeof c?c:Math.round:c,this.type=o||0,u&&(this.pr=u,i=!0),this.b=void 0===h?n:h,this.e=void 0===f?n+r:f,a&&(this._next=a,a._prev=this)}),xt=function(t,e,i,n,r,a){var s=new bt(t,e,i,n-i,r,-1,a);return s.b=i,s.e=s.xs0=n,s},wt=o.parseComplex=function(t,e,i,n,r,a,s,l,c,u){i=i||a||"","function"==typeof n&&(n=n(_,v)),s=new bt(t,e,0,0,s,u?2:1,null,!1,l,i,n),n+="",r&&gt.test(n+i)&&(n=[i,n],o.colorStringFilter(n),i=n[0],n=n[1]);var f,p,d,m,g,x,w,T,k,P,S,C,A,E=i.split(", ").join(",").split(" "),O=n.split(", ").join(",").split(" "),D=E.length,R=!1!==h;for((-1!==n.indexOf(",")||-1!==i.indexOf(","))&&(-1!==(n+i).indexOf("rgb")||-1!==(n+i).indexOf("hsl")?(E=E.join(" ").replace(F,", ").split(" "),O=O.join(" ").replace(F,", ").split(" ")):(E=E.join(" ").split(",").join(", ").split(" "),O=O.join(" ").split(",").join(", ").split(" ")),D=E.length),D!==O.length&&(D=(E=(a||"").split(" ")).length),s.plugin=c,s.setRatio=u,gt.lastIndex=0,f=0;D>f;f++)if(m=E[f],g=O[f]+"",(T=parseFloat(m))||0===T)s.appendXtra("",T,ct(g,T),g.replace(b,""),!(!R||-1===g.indexOf("px"))&&Math.round,!0);else if(r&&gt.test(m))C=")"+((C=g.indexOf(")")+1)?g.substr(C):""),A=-1!==g.indexOf("hsl")&&G,P=g,m=dt(m,A),g=dt(g,A),(k=m.length+g.length>6)&&!G&&0===g[3]?(s["xs"+s.l]+=s.l?" transparent":"transparent",s.e=s.e.split(O[f]).join("transparent")):(G||(k=!1),A?s.appendXtra(P.substr(0,P.indexOf("hsl"))+(k?"hsla(":"hsl("),m[0],ct(g[0],m[0]),",",!1,!0).appendXtra("",m[1],ct(g[1],m[1]),"%,",!1).appendXtra("",m[2],ct(g[2],m[2]),k?"%,":"%"+C,!1):s.appendXtra(P.substr(0,P.indexOf("rgb"))+(k?"rgba(":"rgb("),m[0],g[0]-m[0],",",Math.round,!0).appendXtra("",m[1],g[1]-m[1],",",Math.round).appendXtra("",m[2],g[2]-m[2],k?",":C,Math.round),k&&(m=m.length<4?1:m[3],s.appendXtra("",m,(g.length<4?1:g[3])-m,C,!1))),gt.lastIndex=0;else if(x=m.match(y)){if(!(w=g.match(b))||w.length!==x.length)return s;for(d=0,p=0;p<x.length;p++)S=x[p],P=m.indexOf(S,d),s.appendXtra(m.substr(d,P-d),Number(S),ct(w[p],S),"",!(!R||"px"!==m.substr(P+S.length,2))&&Math.round,0===p),d=P+S.length;s["xs"+s.l]+=m.substr(d)}else s["xs"+s.l]+=s.l||s["xs"+s.l]?" "+g:g;if(-1!==n.indexOf("=")&&s.data){for(C=s.xs0+s.data.s,f=1;f<s.l;f++)C+=s["xs"+f]+s.data["xn"+f];s.e=C+s["xs"+f]}return s.l||(s.type=-1,s.xs0=s.e),s.xfirst||s},Tt=9;for((u=bt.prototype).l=u.pr=0;--Tt>0;)u["xn"+Tt]=0,u["xs"+Tt]="";u.xs0="",u._next=u._prev=u.xfirst=u.data=u.plugin=u.setRatio=u.rxp=null,u.appendXtra=function(t,e,i,n,r,a){var s=this,o=s.l;return s["xs"+o]+=a&&(o||s["xs"+o])?" "+t:t||"",i||0===o||s.plugin?(s.l++,s.type=s.setRatio?2:1,s["xs"+s.l]=n||"",o>0?(s.data["xn"+o]=e+i,s.rxp["xn"+o]=r,s["xn"+o]=e,s.plugin||(s.xfirst=new bt(s,"xn"+o,e,i,s.xfirst||s,0,s.n,r,s.pr),s.xfirst.xs0=0),s):(s.data={s:e+i},s.rxp={},s.s=e,s.c=i,s.r=r,s)):(s["xs"+o]+=e+(n||""),s)};var kt=function(t,e){e=e||{},this.p=e.prefix&&Q(t)||t,c[t]=c[this.p]=this,this.format=e.formatter||vt(e.defaultValue,e.color,e.collapsible,e.multi),e.parser&&(this.parse=e.parser),this.clrs=e.color,this.multi=e.multi,this.keyword=e.keyword,this.dflt=e.defaultValue,this.pr=e.priority||0},Pt=X._registerComplexSpecialProp=function(t,e,i){"object"!=typeof e&&(e={parser:i});var n,r=t.split(","),a=e.defaultValue;for(i=i||[a],n=0;n<r.length;n++)e.prefix=0===n&&e.prefix,e.defaultValue=i[n]||a,new kt(r[n],e)},St=X._registerPluginProp=function(t){if(!c[t]){var e=t.charAt(0).toUpperCase()+t.substr(1)+"Plugin";Pt(t,{parser:function(t,i,n,r,a,s,o){var u=l.com.greensock.plugins[e];return u?(u._cssRegister(),c[n].parse(t,i,n,r,a,s,o)):(V("Error: "+e+" js file not loaded."),a)}})}};(u=kt.prototype).parseComplex=function(t,e,i,n,r,a){var s,o,l,c,u,h,f=this.keyword;if(this.multi&&(F.test(i)||F.test(e)?(o=e.replace(F,"|").split("|"),l=i.replace(F,"|").split("|")):f&&(o=[e],l=[i])),l){for(c=l.length>o.length?l.length:o.length,s=0;c>s;s++)e=o[s]=o[s]||this.dflt,i=l[s]=l[s]||this.dflt,f&&((u=e.indexOf(f))!==(h=i.indexOf(f))&&(-1===h?o[s]=o[s].split(f).join(""):-1===u&&(o[s]+=" "+f)));e=o.join(", "),i=l.join(", ")}return wt(t,this.p,e,i,this.clrs,this.dflt,n,this.pr,r,a)},u.parse=function(t,e,i,n,a,s,o){return this.parseComplex(t.style,this.format(tt(t,this.p,r,!1,this.dflt)),this.format(e),a,s)},o.registerSpecialProp=function(t,e,i){Pt(t,{parser:function(t,n,r,a,s,o,l){var c=new bt(t,r,0,0,s,2,r,!1,i);return c.plugin=o,c.setRatio=e(t,n,a._tween,r),c},priority:i})},o.useSVGTransformAttr=!0;var Ct,At="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),Et=Q("transform"),Ot=Z+"transform",Dt=Q("transformOrigin"),Rt=null!==Q("perspective"),Mt=X.Transform=function(){this.perspective=parseFloat(o.defaultTransformPerspective)||0,this.force3D=!(!1===o.defaultForce3D||!Rt)&&(o.defaultForce3D||"auto")},Lt=a.SVGElement,Ft=function(t,e,i){var n,r=B.createElementNS("http://www.w3.org/2000/svg",t),a=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(a,"$1-$2").toLowerCase(),i[n]);return e.appendChild(r),r},Nt=B.documentElement||{},It=function(){var t,e,i,n=g||/Android/i.test(W)&&!a.chrome;return B.createElementNS&&!n&&(t=Ft("svg",Nt),i=(e=Ft("rect",t,{width:100,height:50,x:100})).getBoundingClientRect().width,e.style[Dt]="50% 50%",e.style[Et]="scaleX(0.5)",n=i===e.getBoundingClientRect().width&&!(d&&Rt),Nt.removeChild(t)),n}(),jt=function(t,e,i,n,r,a){var s,l,c,u,h,f,p,d,m,g,v,_,y,b,x=t._gsTransform,w=qt(t,!0);x&&(y=x.xOrigin,b=x.yOrigin),(!n||(s=n.split(" ")).length<2)&&(0===(p=t.getBBox()).x&&0===p.y&&p.width+p.height===0&&(p={x:parseFloat(t.hasAttribute("x")?t.getAttribute("x"):t.hasAttribute("cx")?t.getAttribute("cx"):0)||0,y:parseFloat(t.hasAttribute("y")?t.getAttribute("y"):t.hasAttribute("cy")?t.getAttribute("cy"):0)||0,width:0,height:0}),s=[(-1!==(e=lt(e).split(" "))[0].indexOf("%")?parseFloat(e[0])/100*p.width:parseFloat(e[0]))+p.x,(-1!==e[1].indexOf("%")?parseFloat(e[1])/100*p.height:parseFloat(e[1]))+p.y]),i.xOrigin=u=parseFloat(s[0]),i.yOrigin=h=parseFloat(s[1]),n&&w!==Bt&&(f=w[0],p=w[1],d=w[2],m=w[3],g=w[4],v=w[5],(_=f*m-p*d)&&(l=u*(m/_)+h*(-d/_)+(d*v-m*g)/_,c=u*(-p/_)+h*(f/_)-(f*v-p*g)/_,u=i.xOrigin=s[0]=l,h=i.yOrigin=s[1]=c)),x&&(a&&(i.xOffset=x.xOffset,i.yOffset=x.yOffset,x=i),r||!1!==r&&!1!==o.defaultSmoothOrigin?(l=u-y,c=h-b,x.xOffset+=l*w[0]+c*w[2]-l,x.yOffset+=l*w[1]+c*w[3]-c):x.xOffset=x.yOffset=0),a||t.setAttribute("data-svg-origin",s.join(" "))},$t=function(t){var e,i=q("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),n=this.parentNode,r=this.nextSibling,a=this.style.cssText;if(Nt.appendChild(i),i.appendChild(this),this.style.display="block",t)try{e=this.getBBox(),this._originalGetBBox=this.getBBox,this.getBBox=$t}catch(t){}else this._originalGetBBox&&(e=this._originalGetBBox());return r?n.insertBefore(this,r):n.appendChild(this),Nt.removeChild(i),this.style.cssText=a,e},zt=function(t){return!(!Lt||!t.getCTM||t.parentNode&&!t.ownerSVGElement||!function(t){try{return t.getBBox()}catch(e){return $t.call(t,!0)}}(t))},Bt=[1,0,0,1,0,0],qt=function(t,e){var i,n,r,a,s,o,l=t._gsTransform||new Mt,c=t.style;if(Et?n=tt(t,Ot,null,!0):t.currentStyle&&(n=(n=t.currentStyle.filter.match(M))&&4===n.length?[n[0].substr(4),Number(n[2].substr(4)),Number(n[1].substr(4)),n[3].substr(4),l.x||0,l.y||0].join(","):""),i=!n||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,!Et||!(o=!J(t)||"none"===J(t).display)&&t.parentNode||(o&&(a=c.display,c.display="block"),t.parentNode||(s=1,Nt.appendChild(t)),i=!(n=tt(t,Ot,null,!0))||"none"===n||"matrix(1, 0, 0, 1, 0, 0)"===n,a?c.display=a:o&&Gt(c,"display"),s&&Nt.removeChild(t)),(l.svg||t.getCTM&&zt(t))&&(i&&-1!==(c[Et]+"").indexOf("matrix")&&(n=c[Et],i=0),r=t.getAttribute("transform"),i&&r&&(n="matrix("+(r=t.transform.baseVal.consolidate().matrix).a+","+r.b+","+r.c+","+r.d+","+r.e+","+r.f+")",i=0)),i)return Bt;for(r=(n||"").match(y)||[],Tt=r.length;--Tt>-1;)a=Number(r[Tt]),r[Tt]=(s=a-(a|=0))?(1e5*s+(0>s?-.5:.5)|0)/1e5+a:a;return e&&r.length>6?[r[0],r[1],r[4],r[5],r[12],r[13]]:r},Ht=X.getTransform=function(t,i,n,r){if(t._gsTransform&&n&&!r)return t._gsTransform;var a,s,l,c,u,h,f=n&&t._gsTransform||new Mt,p=f.scaleX<0,d=2e-5,m=1e5,g=Rt&&(parseFloat(tt(t,Dt,i,!1,"0 0 0").split(" ")[2])||f.zOrigin)||0,v=parseFloat(o.defaultTransformPerspective)||0;if(f.svg=!(!t.getCTM||!zt(t)),f.svg&&(jt(t,tt(t,Dt,i,!1,"50% 50%")+"",f,t.getAttribute("data-svg-origin")),Ct=o.useSVGTransformAttr||It),(a=qt(t))!==Bt){if(16===a.length){var _,y,b,x,w,T=a[0],k=a[1],P=a[2],S=a[3],C=a[4],A=a[5],E=a[6],O=a[7],D=a[8],R=a[9],M=a[10],L=a[12],F=a[13],N=a[14],I=a[11],$=Math.atan2(E,M);f.zOrigin&&(L=D*(N=-f.zOrigin)-a[12],F=R*N-a[13],N=M*N+f.zOrigin-a[14]),f.rotationX=$*j,$&&(_=C*(x=Math.cos(-$))+D*(w=Math.sin(-$)),y=A*x+R*w,b=E*x+M*w,D=C*-w+D*x,R=A*-w+R*x,M=E*-w+M*x,I=O*-w+I*x,C=_,A=y,E=b),$=Math.atan2(-P,M),f.rotationY=$*j,$&&(y=k*(x=Math.cos(-$))-R*(w=Math.sin(-$)),b=P*x-M*w,R=k*w+R*x,M=P*w+M*x,I=S*w+I*x,T=_=T*x-D*w,k=y,P=b),$=Math.atan2(k,T),f.rotation=$*j,$&&(_=T*(x=Math.cos($))+k*(w=Math.sin($)),y=C*x+A*w,b=D*x+R*w,k=k*x-T*w,A=A*x-C*w,R=R*x-D*w,T=_,C=y,D=b),f.rotationX&&Math.abs(f.rotationX)+Math.abs(f.rotation)>359.9&&(f.rotationX=f.rotation=0,f.rotationY=180-f.rotationY),$=Math.atan2(C,A),f.scaleX=(Math.sqrt(T*T+k*k+P*P)*m+.5|0)/m,f.scaleY=(Math.sqrt(A*A+E*E)*m+.5|0)/m,f.scaleZ=(Math.sqrt(D*D+R*R+M*M)*m+.5|0)/m,T/=f.scaleX,C/=f.scaleY,k/=f.scaleX,A/=f.scaleY,Math.abs($)>d?(f.skewX=$*j,C=0,"simple"!==f.skewType&&(f.scaleY*=1/Math.cos($))):f.skewX=0,f.perspective=I?1/(0>I?-I:I):0,f.x=L,f.y=F,f.z=N,f.svg&&(f.x-=f.xOrigin-(f.xOrigin*T-f.yOrigin*C),f.y-=f.yOrigin-(f.yOrigin*k-f.xOrigin*A))}else if(!Rt||r||!a.length||f.x!==a[4]||f.y!==a[5]||!f.rotationX&&!f.rotationY){var z=a.length>=6,B=z?a[0]:1,q=a[1]||0,H=a[2]||0,U=z?a[3]:1;f.x=a[4]||0,f.y=a[5]||0,l=Math.sqrt(B*B+q*q),c=Math.sqrt(U*U+H*H),u=B||q?Math.atan2(q,B)*j:f.rotation||0,h=H||U?Math.atan2(H,U)*j+u:f.skewX||0,f.scaleX=l,f.scaleY=c,f.rotation=u,f.skewX=h,Rt&&(f.rotationX=f.rotationY=f.z=0,f.perspective=v,f.scaleZ=1),f.svg&&(f.x-=f.xOrigin-(f.xOrigin*B+f.yOrigin*H),f.y-=f.yOrigin-(f.xOrigin*q+f.yOrigin*U))}for(s in Math.abs(f.skewX)>90&&Math.abs(f.skewX)<270&&(p?(f.scaleX*=-1,f.skewX+=f.rotation<=0?180:-180,f.rotation+=f.rotation<=0?180:-180):(f.scaleY*=-1,f.skewX+=f.skewX<=0?180:-180)),f.zOrigin=g,f)f[s]<d&&f[s]>-d&&(f[s]=0)}return n&&(t._gsTransform=f,f.svg&&(Ct&&t.style[Et]?e.delayedCall(.001,function(){Gt(t.style,Et)}):!Ct&&t.getAttribute("transform")&&e.delayedCall(.001,function(){t.removeAttribute("transform")}))),f},Ut=function(t){var e,i,n=this.data,r=-n.rotation*I,a=r+n.skewX*I,s=1e5,o=(Math.cos(r)*n.scaleX*s|0)/s,l=(Math.sin(r)*n.scaleX*s|0)/s,c=(Math.sin(a)*-n.scaleY*s|0)/s,u=(Math.cos(a)*n.scaleY*s|0)/s,h=this.t.style,f=this.t.currentStyle;if(f){i=l,l=-c,c=-i,e=f.filter,h.filter="";var p,d,m=this.t.offsetWidth,v=this.t.offsetHeight,_="absolute"!==f.position,y="progid:DXImageTransform.Microsoft.Matrix(M11="+o+", M12="+l+", M21="+c+", M22="+u,b=n.x+m*n.xPercent/100,x=n.y+v*n.yPercent/100;if(null!=n.ox&&(b+=(p=(n.oxp?m*n.ox*.01:n.ox)-m/2)-(p*o+(d=(n.oyp?v*n.oy*.01:n.oy)-v/2)*l),x+=d-(p*c+d*u)),_?y+=", Dx="+((p=m/2)-(p*o+(d=v/2)*l)+b)+", Dy="+(d-(p*c+d*u)+x)+")":y+=", sizingMethod='auto expand')",-1!==e.indexOf("DXImageTransform.Microsoft.Matrix(")?h.filter=e.replace(L,y):h.filter=y+" "+e,(0===t||1===t)&&1===o&&0===l&&0===c&&1===u&&(_&&-1===y.indexOf("Dx=0, Dy=0")||k.test(e)&&100!==parseFloat(RegExp.$1)||-1===e.indexOf(e.indexOf("Alpha"))&&h.removeAttribute("filter")),!_){var w,P,S,C=8>g?1:-1;for(p=n.ieOffsetX||0,d=n.ieOffsetY||0,n.ieOffsetX=Math.round((m-((0>o?-o:o)*m+(0>l?-l:l)*v))/2+b),n.ieOffsetY=Math.round((v-((0>u?-u:u)*v+(0>c?-c:c)*m))/2+x),Tt=0;4>Tt;Tt++)S=(i=-1!==(w=f[P=st[Tt]]).indexOf("px")?parseFloat(w):et(this.t,P,parseFloat(w),w.replace(T,""))||0)!==n[P]?2>Tt?-n.ieOffsetX:-n.ieOffsetY:2>Tt?p-n.ieOffsetX:d-n.ieOffsetY,h[P]=(n[P]=Math.round(i-S*(0===Tt||2===Tt?1:C)))+"px"}}},Xt=X.set3DTransformRatio=X.setTransformRatio=function(t){var e,i,n,r,a,s,o,l,c,u,h,f,p,m,g,v,_,y,b,x,w,T,k,P=this.data,S=this.t.style,C=P.rotation,A=P.rotationX,E=P.rotationY,O=P.scaleX,D=P.scaleY,R=P.scaleZ,M=P.x,L=P.y,F=P.z,N=P.svg,j=P.perspective,$=P.force3D,z=P.skewY,B=P.skewX;if(z&&(B+=z,C+=z),!((1!==t&&0!==t||"auto"!==$||this.tween._totalTime!==this.tween._totalDuration&&this.tween._totalTime)&&$||F||j||E||A||1!==R)||Ct&&N||!Rt)C||B||N?(C*=I,T=B*I,k=1e5,i=Math.cos(C)*O,a=Math.sin(C)*O,n=Math.sin(C-T)*-D,s=Math.cos(C-T)*D,T&&"simple"===P.skewType&&(e=Math.tan(T-z*I),n*=e=Math.sqrt(1+e*e),s*=e,z&&(e=Math.tan(z*I),i*=e=Math.sqrt(1+e*e),a*=e)),N&&(M+=P.xOrigin-(P.xOrigin*i+P.yOrigin*n)+P.xOffset,L+=P.yOrigin-(P.xOrigin*a+P.yOrigin*s)+P.yOffset,Ct&&(P.xPercent||P.yPercent)&&(g=this.t.getBBox(),M+=.01*P.xPercent*g.width,L+=.01*P.yPercent*g.height),(g=1e-6)>M&&M>-g&&(M=0),g>L&&L>-g&&(L=0)),b=(i*k|0)/k+","+(a*k|0)/k+","+(n*k|0)/k+","+(s*k|0)/k+","+M+","+L+")",N&&Ct?this.t.setAttribute("transform","matrix("+b):S[Et]=(P.xPercent||P.yPercent?"translate("+P.xPercent+"%,"+P.yPercent+"%) matrix(":"matrix(")+b):S[Et]=(P.xPercent||P.yPercent?"translate("+P.xPercent+"%,"+P.yPercent+"%) matrix(":"matrix(")+O+",0,0,"+D+","+M+","+L+")";else{if(d&&((g=1e-4)>O&&O>-g&&(O=R=2e-5),g>D&&D>-g&&(D=R=2e-5),!j||P.z||P.rotationX||P.rotationY||(j=0)),C||B)C*=I,v=i=Math.cos(C),_=a=Math.sin(C),B&&(C-=B*I,v=Math.cos(C),_=Math.sin(C),"simple"===P.skewType&&(e=Math.tan((B-z)*I),v*=e=Math.sqrt(1+e*e),_*=e,P.skewY&&(e=Math.tan(z*I),i*=e=Math.sqrt(1+e*e),a*=e))),n=-_,s=v;else{if(!(E||A||1!==R||j||N))return void(S[Et]=(P.xPercent||P.yPercent?"translate("+P.xPercent+"%,"+P.yPercent+"%) translate3d(":"translate3d(")+M+"px,"+L+"px,"+F+"px)"+(1!==O||1!==D?" scale("+O+","+D+")":""));i=s=1,n=a=0}u=1,r=o=l=c=h=f=0,p=j?-1/j:0,m=P.zOrigin,g=1e-6,x=",",w="0",(C=E*I)&&(v=Math.cos(C),l=-(_=Math.sin(C)),h=p*-_,r=i*_,o=a*_,u=v,p*=v,i*=v,a*=v),(C=A*I)&&(e=n*(v=Math.cos(C))+r*(_=Math.sin(C)),y=s*v+o*_,c=u*_,f=p*_,r=n*-_+r*v,o=s*-_+o*v,u*=v,p*=v,n=e,s=y),1!==R&&(r*=R,o*=R,u*=R,p*=R),1!==D&&(n*=D,s*=D,c*=D,f*=D),1!==O&&(i*=O,a*=O,l*=O,h*=O),(m||N)&&(m&&(M+=r*-m,L+=o*-m,F+=u*-m+m),N&&(M+=P.xOrigin-(P.xOrigin*i+P.yOrigin*n)+P.xOffset,L+=P.yOrigin-(P.xOrigin*a+P.yOrigin*s)+P.yOffset),g>M&&M>-g&&(M=w),g>L&&L>-g&&(L=w),g>F&&F>-g&&(F=0)),b=P.xPercent||P.yPercent?"translate("+P.xPercent+"%,"+P.yPercent+"%) matrix3d(":"matrix3d(",b+=(g>i&&i>-g?w:i)+x+(g>a&&a>-g?w:a)+x+(g>l&&l>-g?w:l),b+=x+(g>h&&h>-g?w:h)+x+(g>n&&n>-g?w:n)+x+(g>s&&s>-g?w:s),A||E||1!==R?(b+=x+(g>c&&c>-g?w:c)+x+(g>f&&f>-g?w:f)+x+(g>r&&r>-g?w:r),b+=x+(g>o&&o>-g?w:o)+x+(g>u&&u>-g?w:u)+x+(g>p&&p>-g?w:p)+x):b+=",0,0,0,0,1,0,",b+=M+x+L+x+F+x+(j?1+-F/j:1)+")",S[Et]=b}};(u=Mt.prototype).x=u.y=u.z=u.skewX=u.skewY=u.rotation=u.rotationX=u.rotationY=u.zOrigin=u.xPercent=u.yPercent=u.xOffset=u.yOffset=0,u.scaleX=u.scaleY=u.scaleZ=1,Pt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",{parser:function(t,e,i,n,a,s,l){if(n._lastParsedTransform===l)return a;n._lastParsedTransform=l;var c,u=l.scale&&"function"==typeof l.scale?l.scale:0;"function"==typeof l[i]&&(c=l[i],l[i]=e),u&&(l.scale=u(_,t));var h,f,p,d,m,g,y,b,x,w=t._gsTransform,T=t.style,k=At.length,P=l,S={},C="transformOrigin",A=Ht(t,r,!0,P.parseTransform),E=P.transform&&("function"==typeof P.transform?P.transform(_,v):P.transform);if(A.skewType=P.skewType||A.skewType||o.defaultSkewType,n._transform=A,E&&"string"==typeof E&&Et)(f=H.style)[Et]=E,f.display="block",f.position="absolute",-1!==E.indexOf("%")&&(f.width=tt(t,"width"),f.height=tt(t,"height")),B.body.appendChild(H),h=Ht(H,null,!1),"simple"===A.skewType&&(h.scaleY*=Math.cos(h.skewX*I)),A.svg&&(g=A.xOrigin,y=A.yOrigin,h.x-=A.xOffset,h.y-=A.yOffset,(P.transformOrigin||P.svgOrigin)&&(E={},jt(t,lt(P.transformOrigin),E,P.svgOrigin,P.smoothOrigin,!0),g=E.xOrigin,y=E.yOrigin,h.x-=E.xOffset-A.xOffset,h.y-=E.yOffset-A.yOffset),(g||y)&&(b=qt(H,!0),h.x-=g-(g*b[0]+y*b[2]),h.y-=y-(g*b[1]+y*b[3]))),B.body.removeChild(H),h.perspective||(h.perspective=A.perspective),null!=P.xPercent&&(h.xPercent=ut(P.xPercent,A.xPercent)),null!=P.yPercent&&(h.yPercent=ut(P.yPercent,A.yPercent));else if("object"==typeof P){if(h={scaleX:ut(null!=P.scaleX?P.scaleX:P.scale,A.scaleX),scaleY:ut(null!=P.scaleY?P.scaleY:P.scale,A.scaleY),scaleZ:ut(P.scaleZ,A.scaleZ),x:ut(P.x,A.x),y:ut(P.y,A.y),z:ut(P.z,A.z),xPercent:ut(P.xPercent,A.xPercent),yPercent:ut(P.yPercent,A.yPercent),perspective:ut(P.transformPerspective,A.perspective)},null!=(m=P.directionalRotation))if("object"==typeof m)for(f in m)P[f]=m[f];else P.rotation=m;"string"==typeof P.x&&-1!==P.x.indexOf("%")&&(h.x=0,h.xPercent=ut(P.x,A.xPercent)),"string"==typeof P.y&&-1!==P.y.indexOf("%")&&(h.y=0,h.yPercent=ut(P.y,A.yPercent)),h.rotation=ht("rotation"in P?P.rotation:"shortRotation"in P?P.shortRotation+"_short":"rotationZ"in P?P.rotationZ:A.rotation,A.rotation,"rotation",S),Rt&&(h.rotationX=ht("rotationX"in P?P.rotationX:"shortRotationX"in P?P.shortRotationX+"_short":A.rotationX||0,A.rotationX,"rotationX",S),h.rotationY=ht("rotationY"in P?P.rotationY:"shortRotationY"in P?P.shortRotationY+"_short":A.rotationY||0,A.rotationY,"rotationY",S)),h.skewX=ht(P.skewX,A.skewX),h.skewY=ht(P.skewY,A.skewY)}for(Rt&&null!=P.force3D&&(A.force3D=P.force3D,d=!0),(p=A.force3D||A.z||A.rotationX||A.rotationY||h.z||h.rotationX||h.rotationY||h.perspective)||null==P.scale||(h.scaleZ=1);--k>-1;)((E=h[x=At[k]]-A[x])>1e-6||-1e-6>E||null!=P[x]||null!=$[x])&&(d=!0,a=new bt(A,x,A[x],E,a),x in S&&(a.e=S[x]),a.xs0=0,a.plugin=s,n._overwriteProps.push(a.n));return E=P.transformOrigin,A.svg&&(E||P.svgOrigin)&&(g=A.xOffset,y=A.yOffset,jt(t,lt(E),h,P.svgOrigin,P.smoothOrigin),a=xt(A,"xOrigin",(w?A:h).xOrigin,h.xOrigin,a,C),a=xt(A,"yOrigin",(w?A:h).yOrigin,h.yOrigin,a,C),(g!==A.xOffset||y!==A.yOffset)&&(a=xt(A,"xOffset",w?g:A.xOffset,A.xOffset,a,C),a=xt(A,"yOffset",w?y:A.yOffset,A.yOffset,a,C)),E="0px 0px"),(E||Rt&&p&&A.zOrigin)&&(Et?(d=!0,x=Dt,E=(E||tt(t,x,r,!1,"50% 50%"))+"",(a=new bt(T,x,0,0,a,-1,C)).b=T[x],a.plugin=s,Rt?(f=A.zOrigin,E=E.split(" "),A.zOrigin=(E.length>2&&(0===f||"0px"!==E[2])?parseFloat(E[2]):f)||0,a.xs0=a.e=E[0]+" "+(E[1]||"50%")+" 0px",(a=new bt(A,"zOrigin",0,0,a,-1,a.n)).b=f,a.xs0=a.e=A.zOrigin):a.xs0=a.e=E):lt(E+"",A)),d&&(n._transformType=A.svg&&Ct||!p&&3!==this._transformType?2:3),c&&(l[i]=c),u&&(l.scale=u),a},prefix:!0}),Pt("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),Pt("borderRadius",{defaultValue:"0px",parser:function(t,e,i,a,s,o){e=this.format(e);var l,c,u,h,f,p,d,m,g,v,_,y,b,x,w,T,k=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],P=t.style;for(g=parseFloat(t.offsetWidth),v=parseFloat(t.offsetHeight),l=e.split(" "),c=0;c<k.length;c++)this.p.indexOf("border")&&(k[c]=Q(k[c])),-1!==(f=h=tt(t,k[c],r,!1,"0px")).indexOf(" ")&&(f=(h=f.split(" "))[0],h=h[1]),p=u=l[c],d=parseFloat(f),y=f.substr((d+"").length),(b="="===p.charAt(1))?(m=parseInt(p.charAt(0)+"1",10),p=p.substr(2),m*=parseFloat(p),_=p.substr((m+"").length-(0>m?1:0))||""):(m=parseFloat(p),_=p.substr((m+"").length)),""===_&&(_=n[i]||y),_!==y&&(x=et(t,"borderLeft",d,y),w=et(t,"borderTop",d,y),"%"===_?(f=x/g*100+"%",h=w/v*100+"%"):"em"===_?(f=x/(T=et(t,"borderLeft",1,"em"))+"em",h=w/T+"em"):(f=x+"px",h=w+"px"),b&&(p=parseFloat(f)+m+_,u=parseFloat(h)+m+_)),s=wt(P,k[c],f+" "+h,p+" "+u,!1,"0px",s);return s},prefix:!0,formatter:vt("0px 0px 0px 0px",!1,!0)}),Pt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",{defaultValue:"0px",parser:function(t,e,i,n,a,s){return wt(t.style,i,this.format(tt(t,i,r,!1,"0px 0px")),this.format(e),!1,"0px",a)},prefix:!0,formatter:vt("0px 0px",!1,!0)}),Pt("backgroundPosition",{defaultValue:"0 0",parser:function(t,e,i,n,a,s){var o,l,c,u,h,f,p="background-position",d=r||J(t,null),m=this.format((d?g?d.getPropertyValue(p+"-x")+" "+d.getPropertyValue(p+"-y"):d.getPropertyValue(p):t.currentStyle.backgroundPositionX+" "+t.currentStyle.backgroundPositionY)||"0 0"),v=this.format(e);if(-1!==m.indexOf("%")!=(-1!==v.indexOf("%"))&&v.split(",").length<2&&((f=tt(t,"backgroundImage").replace(O,""))&&"none"!==f)){for(o=m.split(" "),l=v.split(" "),U.setAttribute("src",f),c=2;--c>-1;)(u=-1!==(m=o[c]).indexOf("%"))!==(-1!==l[c].indexOf("%"))&&(h=0===c?t.offsetWidth-U.width:t.offsetHeight-U.height,o[c]=u?parseFloat(m)/100*h+"px":parseFloat(m)/h*100+"%");m=o.join(" ")}return this.parseComplex(t.style,m,v,a,s)},formatter:lt}),Pt("backgroundSize",{defaultValue:"0 0",formatter:function(t){return"co"===(t+="").substr(0,2)?t:lt(-1===t.indexOf(" ")?t+" "+t:t)}}),Pt("perspective",{defaultValue:"0px",prefix:!0}),Pt("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),Pt("transformStyle",{prefix:!0}),Pt("backfaceVisibility",{prefix:!0}),Pt("userSelect",{prefix:!0}),Pt("margin",{parser:_t("marginTop,marginRight,marginBottom,marginLeft")}),Pt("padding",{parser:_t("paddingTop,paddingRight,paddingBottom,paddingLeft")}),Pt("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(t,e,i,n,a,s){var o,l,c;return 9>g?(l=t.currentStyle,c=8>g?" ":",",o="rect("+l.clipTop+c+l.clipRight+c+l.clipBottom+c+l.clipLeft+")",e=this.format(e).split(",").join(c)):(o=this.format(tt(t,this.p,r,!1,this.dflt)),e=this.format(e)),this.parseComplex(t.style,o,e,a,s)}}),Pt("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),Pt("autoRound,strictUnits",{parser:function(t,e,i,n,r){return r}}),Pt("border",{defaultValue:"0px solid #000",parser:function(t,e,i,n,a,s){var o=tt(t,"borderTopWidth",r,!1,"0px"),l=this.format(e).split(" "),c=l[0].replace(T,"");return"px"!==c&&(o=parseFloat(o)/et(t,"borderTopWidth",1,c)+c),this.parseComplex(t.style,this.format(o+" "+tt(t,"borderTopStyle",r,!1,"solid")+" "+tt(t,"borderTopColor",r,!1,"#000")),l.join(" "),a,s)},color:!0,formatter:function(t){var e=t.split(" ");return e[0]+" "+(e[1]||"solid")+" "+(t.match(gt)||["#000"])[0]}}),Pt("borderWidth",{parser:_t("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),Pt("float,cssFloat,styleFloat",{parser:function(t,e,i,n,r,a){var s=t.style,o="cssFloat"in s?"cssFloat":"styleFloat";return new bt(s,o,0,0,r,-1,i,!1,0,s[o],e)}});var Wt=function(t){var e,i=this.t,n=i.filter||tt(this.data,"filter")||"",r=this.s+this.c*t|0;100===r&&(-1===n.indexOf("atrix(")&&-1===n.indexOf("radient(")&&-1===n.indexOf("oader(")?(i.removeAttribute("filter"),e=!tt(this.data,"filter")):(i.filter=n.replace(S,""),e=!0)),e||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),-1===n.indexOf("pacity")?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(k,"opacity="+r))};Pt("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(t,e,i,n,a,s){var o=parseFloat(tt(t,"opacity",r,!1,"1")),l=t.style,c="autoAlpha"===i;return"string"==typeof e&&"="===e.charAt(1)&&(e=("-"===e.charAt(0)?-1:1)*parseFloat(e.substr(2))+o),c&&1===o&&"hidden"===tt(t,"visibility",r)&&0!==e&&(o=0),G?a=new bt(l,"opacity",o,e-o,a):((a=new bt(l,"opacity",100*o,100*(e-o),a)).xn1=c?1:0,l.zoom=1,a.type=2,a.b="alpha(opacity="+a.s+")",a.e="alpha(opacity="+(a.s+a.c)+")",a.data=t,a.plugin=s,a.setRatio=Wt),c&&((a=new bt(l,"visibility",0,0,a,-1,null,!1,0,0!==o?"inherit":"hidden",0===e?"hidden":"inherit")).xs0="inherit",n._overwriteProps.push(a.n),n._overwriteProps.push(i)),a}});var Gt=function(t,e){e&&(t.removeProperty?(("ms"===e.substr(0,2)||"webkit"===e.substr(0,6))&&(e="-"+e),t.removeProperty(e.replace(A,"-$1").toLowerCase())):t.removeAttribute(e))},Yt=function(t){if(this.t._gsClassPT=this,1===t||0===t){this.t.setAttribute("class",0===t?this.b:this.e);for(var e=this.data,i=this.t.style;e;)e.v?i[e.p]=e.v:Gt(i,e.p),e=e._next;1===t&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};Pt("className",{parser:function(t,e,n,a,s,o,l){var c,u,h,f,p,d=t.getAttribute("class")||"",m=t.style.cssText;if((s=a._classNamePT=new bt(t,n,0,0,s,2)).setRatio=Yt,s.pr=-11,i=!0,s.b=d,u=nt(t,r),h=t._gsClassPT){for(f={},p=h.data;p;)f[p.p]=1,p=p._next;h.setRatio(1)}return t._gsClassPT=s,s.e="="!==e.charAt(1)?e:d.replace(new RegExp("(?:\\s|^)"+e.substr(2)+"(?![\\w-])"),"")+("+"===e.charAt(0)?" "+e.substr(2):""),t.setAttribute("class",s.e),c=rt(t,u,nt(t),l,f),t.setAttribute("class",d),s.data=c.firstMPT,t.style.cssText=m,s.xfirst=a.parse(t,c.difs,s,o)}});var Vt=function(t){if((1===t||0===t)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var e,i,n,r,a,s=this.t.style,o=c.transform.parse;if("all"===this.e)s.cssText="",r=!0;else for(n=(e=this.e.split(" ").join("").split(",")).length;--n>-1;)i=e[n],c[i]&&(c[i].parse===o?r=!0:i="transformOrigin"===i?Dt:c[i].p),Gt(s,i);r&&(Gt(s,Et),(a=this.t._gsTransform)&&(a.svg&&(this.t.removeAttribute("data-svg-origin"),this.t.removeAttribute("transform")),delete this.t._gsTransform))}};for(Pt("clearProps",{parser:function(t,e,n,r,a){return(a=new bt(t,n,0,0,a,2)).setRatio=Vt,a.e=e,a.pr=-10,a.data=r._tween,i=!0,a}}),u="bezier,throwProps,physicsProps,physics2D".split(","),Tt=u.length;Tt--;)St(u[Tt]);(u=o.prototype)._firstPT=u._lastParsedTransform=u._transform=null,u._onInitTween=function(t,e,a,l){if(!t.nodeType)return!1;this._target=v=t,this._tween=a,this._vars=e,_=l,h=e.autoRound,i=!1,n=e.suffixMap||o.suffixMap,r=J(t,""),s=this._overwriteProps;var u,d,g,y,b,x,w,T,k,S=t.style;if(f&&""===S.zIndex&&(("auto"===(u=tt(t,"zIndex",r))||""===u)&&this._addLazySet(S,"zIndex",0)),"string"==typeof e&&(y=S.cssText,u=nt(t,r),S.cssText=y+";"+e,u=rt(t,u,nt(t)).difs,!G&&P.test(e)&&(u.opacity=parseFloat(RegExp.$1)),e=u,S.cssText=y),e.className?this._firstPT=d=c.className.parse(t,e.className,"className",this,null,null,e):this._firstPT=d=this.parse(t,e,null),this._transformType){for(k=3===this._transformType,Et?p&&(f=!0,""===S.zIndex&&(("auto"===(w=tt(t,"zIndex",r))||""===w)&&this._addLazySet(S,"zIndex",0)),m&&this._addLazySet(S,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(k?"visible":"hidden"))):S.zoom=1,g=d;g&&g._next;)g=g._next;T=new bt(t,"transform",0,0,null,2),this._linkCSSP(T,null,g),T.setRatio=Et?Xt:Ut,T.data=this._transform||Ht(t,r,!0),T.tween=a,T.pr=-1,s.pop()}if(i){for(;d;){for(x=d._next,g=y;g&&g.pr>d.pr;)g=g._next;(d._prev=g?g._prev:b)?d._prev._next=d:y=d,(d._next=g)?g._prev=d:b=d,d=x}this._firstPT=y}return!0},u.parse=function(t,e,i,a){var s,o,l,u,f,p,d,m,g,y,b=t.style;for(s in e){if("function"==typeof(p=e[s])&&(p=p(_,v)),o=c[s])i=o.parse(t,p,s,this,i,a,e);else{if("--"===s.substr(0,2)){this._tween._propLookup[s]=this._addTween.call(this._tween,t.style,"setProperty",J(t).getPropertyValue(s)+"",p+"",s,!1,s);continue}f=tt(t,s,r)+"",g="string"==typeof p,"color"===s||"fill"===s||"stroke"===s||-1!==s.indexOf("Color")||g&&C.test(p)?(g||(p=((p=dt(p)).length>3?"rgba(":"rgb(")+p.join(",")+")"),i=wt(b,s,f,p,!0,"transparent",i,0,a)):g&&N.test(p)?i=wt(b,s,f,p,!0,null,i,0,a):(d=(l=parseFloat(f))||0===l?f.substr((l+"").length):"",(""===f||"auto"===f)&&("width"===s||"height"===s?(l=ot(t,s,r),d="px"):"left"===s||"top"===s?(l=it(t,s,r),d="px"):(l="opacity"!==s?0:1,d="")),(y=g&&"="===p.charAt(1))?(u=parseInt(p.charAt(0)+"1",10),p=p.substr(2),u*=parseFloat(p),m=p.replace(T,"")):(u=parseFloat(p),m=g?p.replace(T,""):""),""===m&&(m=s in n?n[s]:d),p=u||0===u?(y?u+l:u)+m:e[s],d!==m&&(""!==m||"lineHeight"===s)&&(u||0===u)&&l&&(l=et(t,s,l,d),"%"===m?(l/=et(t,s,100,"%")/100,!0!==e.strictUnits&&(f=l+"%")):"em"===m||"rem"===m||"vw"===m||"vh"===m?l/=et(t,s,1,m):"px"!==m&&(u=et(t,s,u,m),m="px"),y&&(u||0===u)&&(p=u+l+m)),y&&(u+=l),!l&&0!==l||!u&&0!==u?void 0!==b[s]&&(p||p+""!="NaN"&&null!=p)?(i=new bt(b,s,u||l||0,0,i,-1,s,!1,0,f,p)).xs0="none"!==p||"display"!==s&&-1===s.indexOf("Style")?p:f:V("invalid "+s+" tween value: "+e[s]):(i=new bt(b,s,l,u-l,i,0,s,!1!==h&&("px"===m||"zIndex"===s),0,f,p)).xs0=m)}a&&i&&!i.plugin&&(i.plugin=a)}return i},u.setRatio=function(t){var e,i,n,r=this._firstPT;if(1!==t||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(t||this._tween._time!==this._tween._duration&&0!==this._tween._time||-1e-6===this._tween._rawPrevTime)for(;r;){if(e=r.c*t+r.s,r.r?e=r.r(e):1e-6>e&&e>-1e-6&&(e=0),r.type)if(1===r.type)if(2===(n=r.l))r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else-1===r.type?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(t);else r.t[r.p]=e+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(t),r=r._next;else for(;r;){if(2!==r.type)if(r.r&&-1!==r.type)if(e=r.r(r.s+r.c),r.type){if(1===r.type){for(n=r.l,i=r.xs0+e+r.xs1,n=1;n<r.l;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}}else r.t[r.p]=e+r.xs0;else r.t[r.p]=r.e;else r.setRatio(t);r=r._next}},u._enableTransforms=function(t){this._transform=this._transform||Ht(this._target,r,!0),this._transformType=this._transform.svg&&Ct||!t&&3!==this._transformType?2:3};var Zt=function(t){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};u._addLazySet=function(t,e,i){var n=this._firstPT=new bt(t,e,0,0,this._firstPT,2);n.e=i,n.setRatio=Zt,n.data=this},u._linkCSSP=function(t,e,i,n){return t&&(e&&(e._prev=t),t._next&&(t._next._prev=t._prev),t._prev?t._prev._next=t._next:this._firstPT===t&&(this._firstPT=t._next,n=!0),i?i._next=t:n||null!==this._firstPT||(this._firstPT=t),t._next=e,t._prev=i),t},u._mod=function(t){for(var e=this._firstPT;e;)"function"==typeof t[e.p]&&(e.r=t[e.p]),e=e._next},u._kill=function(e){var i,n,r,a=e;if(e.autoAlpha||e.alpha){for(n in a={},e)a[n]=e[n];a.opacity=1,a.autoAlpha&&(a.visibility=1)}for(e.className&&(i=this._classNamePT)&&((r=i.xfirst)&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),i=this._firstPT;i;)i.plugin&&i.plugin!==n&&i.plugin._kill&&(i.plugin._kill(e),n=i.plugin),i=i._next;return t.prototype._kill.call(this,a)};var Kt=function(t,e,i){var n,r,a,s;if(t.slice)for(r=t.length;--r>-1;)Kt(t[r],e,i);else for(r=(n=t.childNodes).length;--r>-1;)s=(a=n[r]).type,a.style&&(e.push(nt(a)),i&&i.push(a)),1!==s&&9!==s&&11!==s||!a.childNodes.length||Kt(a,e,i)};return o.cascadeTo=function(t,i,n){var r,a,s,o,l=e.to(t,i,n),c=[l],u=[],h=[],f=[],p=e._internals.reservedProps;for(t=l._targets||l.target,Kt(t,u,f),l.render(i,!0,!0),Kt(t,h),l.render(0,!0,!0),l._enabled(!0),r=f.length;--r>-1;)if((a=rt(f[r],u[r],h[r])).firstMPT){for(s in a=a.difs,n)p[s]&&(a[s]=n[s]);for(s in o={},a)o[s]=u[r][s];c.push(e.fromTo(f[r],i,o,a))}return c},t.activate([o]),o},!0),function(){var t=a._gsDefine.plugin({propName:"roundProps",version:"1.7.0",priority:-1,API:2,init:function(t,e,i){return this._tween=i,!0}}),e=function(t){var e=1>t?Math.pow(10,(t+"").length-2):1;return function(i){return(Math.round(i/t)*t*e|0)/e}},i=function(t,e){for(;t;)t.f||t.blob||(t.m=e||Math.round),t=t._next},n=t.prototype;n._onInitAllProps=function(){var t,n,r,a,s=this._tween,o=s.vars.roundProps,l={},c=s._propLookup.roundProps;if("object"!=typeof o||o.push)for("string"==typeof o&&(o=o.split(",")),r=o.length;--r>-1;)l[o[r]]=Math.round;else for(a in o)l[a]=e(o[a]);for(a in l)for(t=s._firstPT;t;)n=t._next,t.pg?t.t._mod(l):t.n===a&&(2===t.f&&t.t?i(t.t._firstPT,l[a]):(this._add(t.t,a,t.s,t.c,l[a]),n&&(n._prev=t._prev),t._prev?t._prev._next=n:s._firstPT===t&&(s._firstPT=n),t._next=t._prev=null,s._propLookup[a]=c)),t=n;return!1},n._add=function(t,e,i,n,r){this._addTween(t,e,i,i+n,e,r||Math.round),this._overwriteProps.push(e)}}(),a._gsDefine.plugin({propName:"attr",API:2,version:"0.6.1",init:function(t,e,i,n){var r,a;if("function"!=typeof t.setAttribute)return!1;for(r in e)"function"==typeof(a=e[r])&&(a=a(n,t)),this._addTween(t,"setAttribute",t.getAttribute(r)+"",a+"",r,!1,r),this._overwriteProps.push(r);return!0}}),a._gsDefine.plugin({propName:"directionalRotation",version:"0.3.1",API:2,init:function(t,e,i,n){"object"!=typeof e&&(e={rotation:e}),this.finals={};var r,a,s,o,l,c,u=!0===e.useRadians?2*Math.PI:360;for(r in e)"useRadians"!==r&&("function"==typeof(o=e[r])&&(o=o(n,t)),a=(c=(o+"").split("_"))[0],s=parseFloat("function"!=typeof t[r]?t[r]:t[r.indexOf("set")||"function"!=typeof t["get"+r.substr(3)]?r:"get"+r.substr(3)]()),l=(o=this.finals[r]="string"==typeof a&&"="===a.charAt(1)?s+parseInt(a.charAt(0)+"1",10)*Number(a.substr(2)):Number(a)||0)-s,c.length&&(-1!==(a=c.join("_")).indexOf("short")&&((l%=u)!==l%(u/2)&&(l=0>l?l+u:l-u)),-1!==a.indexOf("_cw")&&0>l?l=(l+9999999999*u)%u-(l/u|0)*u:-1!==a.indexOf("ccw")&&l>0&&(l=(l-9999999999*u)%u-(l/u|0)*u)),(l>1e-6||-1e-6>l)&&(this._addTween(t,r,s,s+l,r),this._overwriteProps.push(r)));return!0},set:function(t){var e;if(1!==t)this._super.setRatio.call(this,t);else for(e=this._firstPT;e;)e.f?e.t[e.p](this.finals[e.p]):e.t[e.p]=this.finals[e.p],e=e._next}})._autoCSS=!0,a._gsDefine("easing.Back",["easing.Ease"],function(t){var e,i,n,r,s=a.GreenSockGlobals||a,o=s.com.greensock,l=2*Math.PI,c=Math.PI/2,u=o._class,h=function(e,i){var n=u("easing."+e,function(){},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,n},f=t.register||function(){},p=function(t,e,i,n,r){var a=u("easing."+t,{easeOut:new e,easeIn:new i,easeInOut:new n},!0);return f(a,t),a},d=function(t,e,i){this.t=t,this.v=e,i&&(this.next=i,i.prev=this,this.c=i.v-e,this.gap=i.t-t)},m=function(e,i){var n=u("easing."+e,function(t){this._p1=t||0===t?t:1.70158,this._p2=1.525*this._p1},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,r.config=function(t){return new n(t)},n},g=p("Back",m("BackOut",function(t){return(t-=1)*t*((this._p1+1)*t+this._p1)+1}),m("BackIn",function(t){return t*t*((this._p1+1)*t-this._p1)}),m("BackInOut",function(t){return(t*=2)<1?.5*t*t*((this._p2+1)*t-this._p2):.5*((t-=2)*t*((this._p2+1)*t+this._p2)+2)})),v=u("easing.SlowMo",function(t,e,i){e=e||0===e?e:.7,null==t?t=.7:t>1&&(t=1),this._p=1!==t?e:0,this._p1=(1-t)/2,this._p2=t,this._p3=this._p1+this._p2,this._calcEnd=!0===i},!0),_=v.prototype=new t;return _.constructor=v,_.getRatio=function(t){var e=t+(.5-t)*this._p;return t<this._p1?this._calcEnd?1-(t=1-t/this._p1)*t:e-(t=1-t/this._p1)*t*t*t*e:t>this._p3?this._calcEnd?1===t?0:1-(t=(t-this._p3)/this._p1)*t:e+(t-e)*(t=(t-this._p3)/this._p1)*t*t*t:this._calcEnd?1:e},v.ease=new v(.7,.7),_.config=v.config=function(t,e,i){return new v(t,e,i)},(_=(e=u("easing.SteppedEase",function(t,e){t=t||1,this._p1=1/t,this._p2=t+(e?0:1),this._p3=e?1:0},!0)).prototype=new t).constructor=e,_.getRatio=function(t){return 0>t?t=0:t>=1&&(t=.999999999),((this._p2*t|0)+this._p3)*this._p1},_.config=e.config=function(t,i){return new e(t,i)},(_=(i=u("easing.ExpoScaleEase",function(t,e,i){this._p1=Math.log(e/t),this._p2=e-t,this._p3=t,this._ease=i},!0)).prototype=new t).constructor=i,_.getRatio=function(t){return this._ease&&(t=this._ease.getRatio(t)),(this._p3*Math.exp(this._p1*t)-this._p3)/this._p2},_.config=i.config=function(t,e,n){return new i(t,e,n)},(_=(n=u("easing.RoughEase",function(e){for(var i,n,r,a,s,o,l=(e=e||{}).taper||"none",c=[],u=0,h=0|(e.points||20),f=h,p=!1!==e.randomize,m=!0===e.clamp,g=e.template instanceof t?e.template:null,v="number"==typeof e.strength?.4*e.strength:.4;--f>-1;)i=p?Math.random():1/h*f,n=g?g.getRatio(i):i,"none"===l?r=v:"out"===l?r=(a=1-i)*a*v:"in"===l?r=i*i*v:.5>i?r=(a=2*i)*a*.5*v:r=(a=2*(1-i))*a*.5*v,p?n+=Math.random()*r-.5*r:f%2?n+=.5*r:n-=.5*r,m&&(n>1?n=1:0>n&&(n=0)),c[u++]={x:i,y:n};for(c.sort(function(t,e){return t.x-e.x}),o=new d(1,1,null),f=h;--f>-1;)s=c[f],o=new d(s.x,s.y,o);this._prev=new d(0,0,0!==o.t?o:o.next)},!0)).prototype=new t).constructor=n,_.getRatio=function(t){var e=this._prev;if(t>e.t){for(;e.next&&t>=e.t;)e=e.next;e=e.prev}else for(;e.prev&&t<=e.t;)e=e.prev;return this._prev=e,e.v+(t-e.t)/e.gap*e.c},_.config=function(t){return new n(t)},n.ease=new n,p("Bounce",h("BounceOut",function(t){return 1/2.75>t?7.5625*t*t:2/2.75>t?7.5625*(t-=1.5/2.75)*t+.75:2.5/2.75>t?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}),h("BounceIn",function(t){return(t=1-t)<1/2.75?1-7.5625*t*t:2/2.75>t?1-(7.5625*(t-=1.5/2.75)*t+.75):2.5/2.75>t?1-(7.5625*(t-=2.25/2.75)*t+.9375):1-(7.5625*(t-=2.625/2.75)*t+.984375)}),h("BounceInOut",function(t){var e=.5>t;return t=1/2.75>(t=e?1-2*t:2*t-1)?7.5625*t*t:2/2.75>t?7.5625*(t-=1.5/2.75)*t+.75:2.5/2.75>t?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,e?.5*(1-t):.5*t+.5})),p("Circ",h("CircOut",function(t){return Math.sqrt(1-(t-=1)*t)}),h("CircIn",function(t){return-(Math.sqrt(1-t*t)-1)}),h("CircInOut",function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)})),p("Elastic",(r=function(e,i,n){var r=u("easing."+e,function(t,e){this._p1=t>=1?t:1,this._p2=(e||n)/(1>t?t:1),this._p3=this._p2/l*(Math.asin(1/this._p1)||0),this._p2=l/this._p2},!0),a=r.prototype=new t;return a.constructor=r,a.getRatio=i,a.config=function(t,e){return new r(t,e)},r})("ElasticOut",function(t){return this._p1*Math.pow(2,-10*t)*Math.sin((t-this._p3)*this._p2)+1},.3),r("ElasticIn",function(t){return-this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2)},.3),r("ElasticInOut",function(t){return(t*=2)<1?this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*this._p2)*-.5:this._p1*Math.pow(2,-10*(t-=1))*Math.sin((t-this._p3)*this._p2)*.5+1},.45)),p("Expo",h("ExpoOut",function(t){return 1-Math.pow(2,-10*t)}),h("ExpoIn",function(t){return Math.pow(2,10*(t-1))-.001}),h("ExpoInOut",function(t){return(t*=2)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*(t-1)))})),p("Sine",h("SineOut",function(t){return Math.sin(t*c)}),h("SineIn",function(t){return 1-Math.cos(t*c)}),h("SineInOut",function(t){return-.5*(Math.cos(Math.PI*t)-1)})),u("easing.EaseLookup",{find:function(e){return t.map[e]}},!0),f(s.SlowMo,"SlowMo","ease,"),f(n,"RoughEase","ease,"),f(e,"SteppedEase","ease,"),g},!0)}),a._gsDefine&&a._gsQueue.pop()(),function(n,a){"use strict";var s={},o=n.document,l=n.GreenSockGlobals=n.GreenSockGlobals||n,c=l[a];if(c)return void 0!==t&&t.exports&&(t.exports=c),c;var u,h,f,p,d,m=function(t){var e,i=t.split("."),n=l;for(e=0;e<i.length;e++)n[i[e]]=n=n[i[e]]||{};return n},g=m("com.greensock"),v=1e-10,_=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},y=function(){},b=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),x={},w=function(n,o,c,u){this.sc=x[n]?x[n].sc:[],x[n]=this,this.gsClass=null,this.func=c;var h=[];this.check=function(f){for(var p,d,g,v,_=o.length,y=_;--_>-1;)(p=x[o[_]]||new w(o[_],[])).gsClass?(h[_]=p.gsClass,y--):f&&p.sc.push(this);if(0===y&&c){if(g=(d=("com.greensock."+n).split(".")).pop(),v=m(d.join("."))[g]=this.gsClass=c.apply(c,h),u)if(l[g]=s[g]=v,void 0!==t&&t.exports)if(n===a)for(_ in t.exports=s[a]=v,s)v[_]=s[_];else s[a]&&(s[a][g]=v);else i(3)&&(void 0===(r=function(){return v}.apply(e,[]))||(t.exports=r));for(_=0;_<this.sc.length;_++)this.sc[_].check()}},this.check(!0)},T=n._gsDefine=function(t,e,i,n){return new w(t,e,i,n)},k=g._class=function(t,e,i){return e=e||function(){},T(t,[],function(){return e},i),e};T.globals=l;var P=[0,0,1,1],S=k("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?P.concat(e):P},!0),C=S.map={},A=S.register=function(t,e,i,n){for(var r,a,s,o,l=e.split(","),c=l.length,u=(i||"easeIn,easeOut,easeInOut").split(",");--c>-1;)for(a=l[c],r=n?k("easing."+a,null,!0):g.easing[a]||{},s=u.length;--s>-1;)o=u[s],C[a+"."+o]=C[o+a]=r[o]=t.getRatio?t:t[o]||new t};for((f=S.prototype)._calcEnd=!1,f.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:.5>t?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:.5>t?n/2:1-n/2},h=(u=["Linear","Quad","Cubic","Quart","Quint,Strong"]).length;--h>-1;)f=u[h]+",Power"+h,A(new S(null,null,1,h),f,"easeOut",!0),A(new S(null,null,2,h),f,"easeIn"+(0===h?",easeNone":"")),A(new S(null,null,3,h),f,"easeInOut");C.linear=g.easing.Linear.easeIn,C.swing=g.easing.Quad.easeInOut;var E=k("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});(f=E.prototype).addEventListener=function(t,e,i,n,r){r=r||0;var a,s,o=this._listeners[t],l=0;for(this!==p||d||p.wake(),null==o&&(this._listeners[t]=o=[]),s=o.length;--s>-1;)(a=o[s]).c===e&&a.s===i?o.splice(s,1):0===l&&a.pr<r&&(l=s+1);o.splice(l,0,{c:e,s:i,up:n,pr:r})},f.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},f.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for((e=r.length)>1&&(r=r.slice(0)),i=this._eventTarget;--e>-1;)(n=r[e])&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var O=n.requestAnimationFrame,D=n.cancelAnimationFrame,R=Date.now||function(){return(new Date).getTime()},M=R();for(h=(u=["ms","moz","webkit","o"]).length;--h>-1&&!O;)O=n[u[h]+"RequestAnimationFrame"],D=n[u[h]+"CancelAnimationFrame"]||n[u[h]+"CancelRequestAnimationFrame"];k("Ticker",function(t,e){var i,n,r,a,s,l=this,c=R(),u=!(!1===e||!O)&&"auto",h=500,f=33,m=function(t){var e,o,u=R()-M;u>h&&(c+=u-f),M+=u,l.time=(M-c)/1e3,e=l.time-s,(!i||e>0||!0===t)&&(l.frame++,s+=e+(e>=a?.004:a-e),o=!0),!0!==t&&(r=n(m)),o&&l.dispatchEvent("tick")};E.call(l),l.time=l.frame=0,l.tick=function(){m(!0)},l.lagSmoothing=function(t,e){return arguments.length?(h=t||1/v,void(f=Math.min(e,h,0))):1/v>h},l.sleep=function(){null!=r&&(u&&D?D(r):clearTimeout(r),n=y,r=null,l===p&&(d=!1))},l.wake=function(t){null!==r?l.sleep():t?c+=-M+(M=R()):l.frame>10&&(M=R()-h+5),n=0===i?y:u&&O?O:function(t){return setTimeout(t,1e3*(s-l.time)+1|0)},l===p&&(d=!0),m(2)},l.fps=function(t){return arguments.length?(a=1/((i=t)||60),s=this.time+a,void l.wake()):i},l.useRAF=function(t){return arguments.length?(l.sleep(),u=t,void l.fps(i)):u},l.fps(t),setTimeout(function(){"auto"===u&&l.frame<5&&"hidden"!==(o||{}).visibilityState&&l.useRAF(!1)},1500)}),(f=g.Ticker.prototype=new g.events.EventDispatcher).constructor=g.Ticker;var L=k("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=!0===e.immediateRender,this.data=e.data,this._reversed=!0===e.reversed,J){d||p.wake();var i=this.vars.useFrames?Q:J;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});p=L.ticker=new g.Ticker,(f=L.prototype)._dirty=f._gc=f._initted=f._paused=!1,f._totalTime=f._time=0,f._rawPrevTime=-1,f._next=f._last=f._onUpdate=f._timeline=f.timeline=null,f._paused=!1;var F=function(){d&&R()-M>2e3&&("hidden"!==(o||{}).visibilityState||!p.lagSmoothing())&&p.wake();var t=setTimeout(F,2e3);t.unref&&t.unref()};F(),f.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},f.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},f.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},f.seek=function(t,e){return this.totalTime(Number(t),!1!==e)},f.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,!1!==e,!0)},f.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},f.render=function(t,e,i){},f.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},f.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime(!0))>=i&&t<i+this.totalDuration()/this._timeScale-1e-7},f._enabled=function(t,e){return d||p.wake(),this._gc=!t,this._active=this.isActive(),!0!==e&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},f._kill=function(t,e){return this._enabled(!1,!1)},f.kill=function(t,e){return this._kill(t,e),this},f._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},f._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},f._callback=function(t){var e=this.vars,i=e[t],n=e[t+"Params"],r=e[t+"Scope"]||e.callbackScope||this;switch(n?n.length:0){case 0:i.call(r);break;case 1:i.call(r,n[0]);break;case 2:i.call(r,n[0],n[1]);break;default:i.apply(r,n)}},f.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=b(i)&&-1!==i.join("").indexOf("{self}")?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},f.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},f.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},f.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},f.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},f.totalTime=function(t,e,i){if(d||p.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>t&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==t||0===this._duration)&&($.length&&et(),this.render(t,e,!1),$.length&&et())}return this},f.progress=f.totalProgress=function(t,e){var i=this.duration();return arguments.length?this.totalTime(i*t,e):i?this._time/i:this.ratio},f.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},f.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},f.timeScale=function(t){if(!arguments.length)return this._timeScale;var e,i;for(t=t||v,this._timeline&&this._timeline.smoothChildTiming&&(i=(e=this._pauseTime)||0===e?e:this._timeline.totalTime(),this._startTime=i-(i-this._startTime)*this._timeScale/t),this._timeScale=t,i=this.timeline;i&&i.timeline;)i._dirty=!0,i.totalDuration(),i=i.timeline;return this},f.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},f.paused=function(t){if(!arguments.length)return this._paused;var e,i,n=this._timeline;return t!=this._paused&&n&&(d||t||p.wake(),i=(e=n.rawTime())-this._pauseTime,!t&&n.smoothChildTiming&&(this._startTime+=i,this._uncache(!1)),this._pauseTime=t?e:null,this._paused=t,this._active=this.isActive(),!t&&0!==i&&this._initted&&this.duration()&&(e=n.smoothChildTiming?this._totalTime:(e-this._startTime)/this._timeScale,this.render(e,e===this._totalTime,!0))),this._gc&&!t&&this._enabled(!0,!1),this};var N=k("core.SimpleTimeline",function(t){L.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});(f=N.prototype=new L).constructor=N,f.kill()._gc=!1,f._first=f._last=f._recent=null,f._sortChildren=!1,f.add=f.insert=function(t,e,i,n){var r,a;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=this.rawTime()-(t._timeline.rawTime()-t._pauseTime)),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),r=this._last,this._sortChildren)for(a=t._startTime;r&&r._startTime>a;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=r,this._recent=t,this._timeline&&this._uncache(!0),this},f._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},f.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused&&!r._gc)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},f.rawTime=function(){return d||p.wake(),this._totalTime};var I=k("TweenLite",function(t,e,i){if(L.call(this,e,i),this.render=I.prototype.render,null==t)throw"Cannot tween a null target.";this.target=t="string"!=typeof t?t:I.selector(t)||t;var r,a,s,o=t.jquery||t.length&&t!==n&&t[0]&&(t[0]===n||t[0].nodeType&&t[0].style&&!t.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?K[I.defaultOverwrite]:"number"==typeof l?l>>0:K[l],(o||t instanceof Array||t.push&&b(t))&&"number"!=typeof t[0])for(this._targets=s=_(t),this._propLookup=[],this._siblings=[],r=0;r<s.length;r++)(a=s[r])?"string"!=typeof a?a.length&&a!==n&&a[0]&&(a[0]===n||a[0].nodeType&&a[0].style&&!a.nodeType)?(s.splice(r--,1),this._targets=s=s.concat(_(a))):(this._siblings[r]=it(a,this,!1),1===l&&this._siblings[r].length>1&&rt(a,this,null,1,this._siblings[r])):"string"==typeof(a=s[r--]=I.selector(a))&&s.splice(r+1,1):s.splice(r--,1);else this._propLookup={},this._siblings=it(t,this,!1),1===l&&this._siblings.length>1&&rt(t,this,null,1,this._siblings);(this.vars.immediateRender||0===e&&0===this._delay&&!1!==this.vars.immediateRender)&&(this._time=-v,this.render(Math.min(0,-this._delay)))},!0),j=function(t){return t&&t.length&&t!==n&&t[0]&&(t[0]===n||t[0].nodeType&&t[0].style&&!t.nodeType)};(f=I.prototype=new L).constructor=I,f.kill()._gc=!1,f.ratio=0,f._firstPT=f._targets=f._overwrittenProps=f._startAt=null,f._notifyPluginsOfEnabled=f._lazy=!1,I.version="2.0.1",I.defaultEase=f._ease=new S(null,null,1,1),I.defaultOverwrite="auto",I.ticker=p,I.autoSleep=120,I.lagSmoothing=function(t,e){p.lagSmoothing(t,e)},I.selector=n.$||n.jQuery||function(t){var e=n.$||n.jQuery;return e?(I.selector=e,e(t)):(o||(o=n.document),o?o.querySelectorAll?o.querySelectorAll(t):o.getElementById("#"===t.charAt(0)?t.substr(1):t):t)};var $=[],z={},B=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,q=/[\+-]=-?[\.\d]/,H=function(t){for(var e,i=this._firstPT;i;)e=i.blob?1===t&&null!=this.end?this.end:t?this.join(""):this.start:i.c*t+i.s,i.m?e=i.m.call(this._tween,e,this._target||i.t,this._tween):1e-6>e&&e>-1e-6&&!i.blob&&(e=0),i.f?i.fp?i.t[i.p](i.fp,e):i.t[i.p](e):i.t[i.p]=e,i=i._next},U=function(t,e,i,n){var r,a,s,o,l,c,u,h=[],f=0,p="",d=0;for(h.start=t,h.end=e,t=h[0]=t+"",e=h[1]=e+"",i&&(i(h),t=h[0],e=h[1]),h.length=0,r=t.match(B)||[],a=e.match(B)||[],n&&(n._next=null,n.blob=1,h._firstPT=h._applyPT=n),l=a.length,o=0;l>o;o++)u=a[o],p+=(c=e.substr(f,e.indexOf(u,f)-f))||!o?c:",",f+=c.length,d?d=(d+1)%5:"rgba("===c.substr(-5)&&(d=1),u===r[o]||r.length<=o?p+=u:(p&&(h.push(p),p=""),s=parseFloat(r[o]),h.push(s),h._firstPT={_next:h._firstPT,t:h,p:h.length-1,s:s,c:("="===u.charAt(1)?parseInt(u.charAt(0)+"1",10)*parseFloat(u.substr(2)):parseFloat(u)-s)||0,f:0,m:d&&4>d?Math.round:0}),f+=u.length;return(p+=e.substr(f))&&h.push(p),h.setRatio=H,q.test(e)&&(h.end=null),h},X=function(t,e,i,n,r,a,s,o,l){"function"==typeof n&&(n=n(l||0,t));var c=typeof t[e],u="function"!==c?"":e.indexOf("set")||"function"!=typeof t["get"+e.substr(3)]?e:"get"+e.substr(3),h="get"!==i?i:u?s?t[u](s):t[u]():t[e],f="string"==typeof n&&"="===n.charAt(1),p={t:t,p:e,s:h,f:"function"===c,pg:0,n:r||e,m:a?"function"==typeof a?a:Math.round:0,pr:0,c:f?parseInt(n.charAt(0)+"1",10)*parseFloat(n.substr(2)):parseFloat(n)-h||0};return("number"!=typeof h||"number"!=typeof n&&!f)&&(s||isNaN(h)||!f&&isNaN(n)||"boolean"==typeof h||"boolean"==typeof n?(p.fp=s,p={t:U(h,f?parseFloat(p.s)+p.c+(p.s+"").replace(/[0-9\-\.]/g,""):n,o||I.defaultStringFilter,p),p:"setRatio",s:0,c:1,f:2,pg:0,n:r||e,pr:0,m:0}):(p.s=parseFloat(h),f||(p.c=parseFloat(n)-p.s||0))),p.c?((p._next=this._firstPT)&&(p._next._prev=p),this._firstPT=p,p):void 0},W=I._internals={isArray:b,isSelector:j,lazyTweens:$,blobDif:U},G=I._plugins={},Y=W.tweenLookup={},V=0,Z=W.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1,yoyoEase:1},K={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},Q=L._rootFramesTimeline=new N,J=L._rootTimeline=new N,tt=30,et=W.lazyRender=function(){var t,e=$.length;for(z={};--e>-1;)(t=$[e])&&!1!==t._lazy&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);$.length=0};J._startTime=p.time,Q._startTime=p.frame,J._active=Q._active=!0,setTimeout(et,1),L._updateRoot=I.render=function(){var t,e,i;if($.length&&et(),J.render((p.time-J._startTime)*J._timeScale,!1,!1),Q.render((p.frame-Q._startTime)*Q._timeScale,!1,!1),$.length&&et(),p.frame>=tt){for(i in tt=p.frame+(parseInt(I.autoSleep,10)||120),Y){for(t=(e=Y[i].tweens).length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete Y[i]}if((!(i=J._first)||i._paused)&&I.autoSleep&&!Q._first&&1===p._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||p.sleep()}}},p.addEventListener("tick",L._updateRoot);var it=function(t,e,i){var n,r,a=t._gsTweenID;if(Y[a||(t._gsTweenID=a="t"+V++)]||(Y[a]={target:t,tweens:[]}),e&&((n=Y[a].tweens)[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return Y[a].tweens},nt=function(t,e,i,n){var r,a,s=t.vars.onOverwrite;return s&&(r=s(t,e,i,n)),(s=I.onOverwrite)&&(a=s(t,e,i,n)),!1!==r&&!1!==a},rt=function(t,e,i,n,r){var a,s,o,l;if(1===n||n>=4){for(l=r.length,a=0;l>a;a++)if((o=r[a])!==e)o._gc||o._kill(null,t,e)&&(s=!0);else if(5===n)break;return s}var c,u=e._startTime+v,h=[],f=0,p=0===e._duration;for(a=r.length;--a>-1;)(o=r[a])===e||o._gc||o._paused||(o._timeline!==e._timeline?(c=c||at(e,0,p),0===at(o,c,p)&&(h[f++]=o)):o._startTime<=u&&o._startTime+o.totalDuration()/o._timeScale>u&&((p||!o._initted)&&u-o._startTime<=2e-10||(h[f++]=o)));for(a=f;--a>-1;)if(o=h[a],2===n&&o._kill(i,t,e)&&(s=!0),2!==n||!o._firstPT&&o._initted){if(2!==n&&!nt(o,e))continue;o._enabled(!1,!1)&&(s=!0)}return s},at=function(t,e,i){for(var n=t._timeline,r=n._timeScale,a=t._startTime;n._timeline;){if(a+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return(a/=r)>e?a-e:i&&a===e||!t._initted&&2*v>a-e?v:(a+=t.totalDuration()/t._timeScale/r)>e+v?0:a-e-v};f._init=function(){var t,e,i,n,r,a,s=this.vars,o=this._overwrittenProps,l=this._duration,c=!!s.immediateRender,u=s.ease;if(s.startAt){for(n in this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={},s.startAt)r[n]=s.startAt[n];if(r.data="isStart",r.overwrite=!1,r.immediateRender=!0,r.lazy=c&&!1!==s.lazy,r.startAt=r.delay=null,r.onUpdate=s.onUpdate,r.onUpdateParams=s.onUpdateParams,r.onUpdateScope=s.onUpdateScope||s.callbackScope||this,this._startAt=I.to(this.target||{},0,r),c)if(this._time>0)this._startAt=null;else if(0!==l)return}else if(s.runBackwards&&0!==l)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{for(n in 0!==this._time&&(c=!1),i={},s)Z[n]&&"autoCSS"!==n||(i[n]=s[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=c&&!1!==s.lazy,i.immediateRender=c,this._startAt=I.to(this.target,0,i),c){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=u=u?u instanceof S?u:"function"==typeof u?new S(u,s.easeParams):C[u]||I.defaultEase:I.defaultEase,s.easeParams instanceof Array&&u.config&&(this._ease=u.config.apply(u,s.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(a=this._targets.length,t=0;a>t;t++)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],o?o[t]:null,t)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,o,0);if(e&&I._onPluginEvent("_onInitAllProps",this),o&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),s.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=s.onUpdate,this._initted=!0},f._initProps=function(t,e,i,r,a){var s,o,l,c,u,h;if(null==t)return!1;for(s in z[t._gsTweenID]&&et(),this.vars.css||t.style&&t!==n&&t.nodeType&&G.css&&!1!==this.vars.autoCSS&&function(t,e){var i,n={};for(i in t)Z[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!G[i]||G[i]&&G[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n}(this.vars,t),this.vars)if(h=this.vars[s],Z[s])h&&(h instanceof Array||h.push&&b(h))&&-1!==h.join("").indexOf("{self}")&&(this.vars[s]=h=this._swapSelfInParams(h,this));else if(G[s]&&(c=new G[s])._onInitTween(t,this.vars[s],this,a)){for(this._firstPT=u={_next:this._firstPT,t:c,p:"setRatio",s:0,c:1,f:1,n:s,pg:1,pr:c._priority,m:0},o=c._overwriteProps.length;--o>-1;)e[c._overwriteProps[o]]=this._firstPT;(c._priority||c._onInitAllProps)&&(l=!0),(c._onDisable||c._onEnable)&&(this._notifyPluginsOfEnabled=!0),u._next&&(u._next._prev=u)}else e[s]=X.call(this,t,s,"get",h,s,0,null,this.vars.stringFilter,a);return r&&this._kill(r,t)?this._initProps(t,e,i,r,a):this._overwrite>1&&this._firstPT&&i.length>1&&rt(t,this,e,this._overwrite,i)?(this._kill(e,t),this._initProps(t,e,i,r,a)):(this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration)&&(z[t._gsTweenID]=!0),l)},f.render=function(t,e,i){var n,r,a,s,o=this._time,l=this._duration,c=this._rawPrevTime;if(t>=l-1e-7&&t>=0)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(0>c||0>=t&&t>=-1e-7||c===v&&"isPause"!==this.data)&&c!==t&&(i=!0,c>v&&(r="onReverseComplete")),this._rawPrevTime=s=!e||t||c===t?t:v);else if(1e-7>t)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==o||0===l&&c>0)&&(r="onReverseComplete",n=this._reversed),0>t&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(c>=0&&(c!==v||"isPause"!==this.data)&&(i=!0),this._rawPrevTime=s=!e||t||c===t?t:v)),(!this._initted||this._startAt&&this._startAt.progress())&&(i=!0);else if(this._totalTime=this._time=t,this._easeType){var u=t/l,h=this._easeType,f=this._easePower;(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===f?u*=u:2===f?u*=u*u:3===f?u*=u*u*u:4===f&&(u*=u*u*u*u),this.ratio=1===h?1-u:2===h?u:.5>t/l?u/2:1-u/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==o||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=o,this._rawPrevTime=c,$.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(!1!==this._lazy&&(this._lazy=!1),this._active||!this._paused&&this._time!==o&&t>=0&&(this._active=!0),0===o&&(this._startAt&&(t>=0?this._startAt.render(t,!0,i):r||(r="_dummyGS")),this.vars.onStart&&(0!==this._time||0===l)&&(e||this._callback("onStart"))),a=this._firstPT;a;)a.f?a.t[a.p](a.c*this.ratio+a.s):a.t[a.p]=a.c*this.ratio+a.s,a=a._next;this._onUpdate&&(0>t&&this._startAt&&-1e-4!==t&&this._startAt.render(t,!0,i),e||(this._time!==o||n||i)&&this._callback("onUpdate")),r&&(!this._gc||i)&&(0>t&&this._startAt&&!this._onUpdate&&-1e-4!==t&&this._startAt.render(t,!0,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===l&&this._rawPrevTime===v&&s!==v&&(this._rawPrevTime=0))}},f._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:I.selector(e)||e;var n,r,a,s,o,l,c,u,h,f=i&&this._time&&i._startTime===this._startTime&&this._timeline===i._timeline;if((b(e)||j(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n],i)&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){o=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;o=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(o){if(c=t||o,u=t!==r&&"all"!==r&&t!==o&&("object"!=typeof t||!t._tempKill),i&&(I.onOverwrite||this.vars.onOverwrite)){for(a in c)o[a]&&(h||(h=[]),h.push(a));if((h||!t)&&!nt(this,i,e,h))return!1}for(a in c)(s=o[a])&&(f&&(s.f?s.t[s.p](s.s):s.t[s.p]=s.s,l=!0),s.pg&&s.t._kill(c)&&(l=!0),s.pg&&0!==s.t._overwriteProps.length||(s._prev?s._prev._next=s._next:s===this._firstPT&&(this._firstPT=s._next),s._next&&(s._next._prev=s._prev),s._next=s._prev=null),delete o[a]),u&&(r[a]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},f.invalidate=function(){return this._notifyPluginsOfEnabled&&I._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],L.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-v,this.render(Math.min(0,-this._delay))),this},f._enabled=function(t,e){if(d||p.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=it(n[i],this,!0);else this._siblings=it(this.target,this,!0)}return L.prototype._enabled.call(this,t,e),!(!this._notifyPluginsOfEnabled||!this._firstPT)&&I._onPluginEvent(t?"_onEnable":"_onDisable",this)},I.to=function(t,e,i){return new I(t,e,i)},I.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new I(t,e,i)},I.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new I(t,e,n)},I.delayedCall=function(t,e,i,n,r){return new I(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,lazy:!1,useFrames:r,overwrite:0})},I.set=function(t,e){return new I(t,0,e)},I.getTweensOf=function(t,e){if(null==t)return[];var i,n,r,a;if(t="string"!=typeof t?t:I.selector(t)||t,(b(t)||j(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(I.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(a=n[i],r=i;--r>-1;)a===n[r]&&n.splice(i,1)}else if(t._gsTweenID)for(i=(n=it(t).concat()).length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n||[]},I.killTweensOf=I.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=I.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var st=k("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=st.prototype},!0);if(f=st.prototype,st.version="1.19.0",st.API=2,f._firstPT=null,f._addTween=X,f.setRatio=H,f._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},f._mod=f._roundProps=function(t){for(var e,i=this._firstPT;i;)(e=t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")])&&"function"==typeof e&&(2===i.f?i.t._applyPT.m=e:i.m=e),i=i._next},I._onPluginEvent=function(t,e){var i,n,r,a,s,o=e._firstPT;if("_onInitAllProps"===t){for(;o;){for(s=o._next,n=r;n&&n.pr>o.pr;)n=n._next;(o._prev=n?n._prev:a)?o._prev._next=o:r=o,(o._next=n)?n._prev=o:a=o,o=s}o=e._firstPT=r}for(;o;)o.pg&&"function"==typeof o.t[t]&&o.t[t]()&&(i=!0),o=o._next;return i},st.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===st.API&&(G[(new t[e])._propName]=t[e]);return!0},T.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,a={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},s=k("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){st.call(this,i,n),this._overwriteProps=r||[]},!0===t.global),o=s.prototype=new st(i);for(e in o.constructor=s,s.API=t.API,a)"function"==typeof t[e]&&(o[a[e]]=t[e]);return s.version=t.version,st.activate([s]),s},u=n._gsQueue){for(h=0;h<u.length;h++)u[h]();for(f in x)x[f].func||n.console.log("GSAP encountered missing dependency: "+f)}d=!1}(void 0!==t&&t.exports&&void 0!==n?n:this||window,"TweenMax")}).call(this,i(2))},function(t,e,i){(function(n){var r,a,s,o=void 0!==t&&t.exports&&void 0!==n?n:this||window;
/*!
 * VERSION: 2.0.1
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */(o._gsQueue||(o._gsQueue=[])).push(function(){"use strict";o._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,i){var n=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=!0===this.vars.yoyo,this._dirty=!0},r=1e-10,a=e._internals,s=a.lazyTweens,l=a.lazyRender,c=o._gsDefine.globals,u=new i(null,null,1,0),h=n.prototype=new t;return h.constructor=n,h.kill()._gc=!1,n.version="2.0.1",h.invalidate=function(){return this._yoyo=!0===this.vars.yoyo,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},h.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},h.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},h.removePause=function(e){return this.removeCallback(t._internals.pauseCallback,e)},h.tweenTo=function(t,i){i=i||{};var n,r,a,s={ease:u,useFrames:this.usesFrames(),immediateRender:!1,lazy:!1},o=i.repeat&&c.TweenMax||e;for(r in i)s[r]=i[r];return s.time=this._parseTimeOrLabel(t),n=Math.abs(Number(s.time)-this._time)/this._timeScale||.001,a=new o(this,n,s),s.onStart=function(){a.target.paused(!0),a.vars.time===a.target.time()||n!==a.duration()||a.isFromTo||a.duration(Math.abs(a.vars.time-a.target.time())/a.target._timeScale).render(a.time(),!0,!0),i.onStart&&i.onStart.apply(i.onStartScope||i.callbackScope||a,i.onStartParams||[])},a},h.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],callbackScope:this},i.immediateRender=!1!==i.immediateRender;var n=this.tweenTo(e,i);return n.isFromTo=1,n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},h.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,a,o,c,u,h,f,p,d=this._time,m=this._dirty?this.totalDuration():this._totalDuration,g=this._duration,v=this._totalTime,_=this._startTime,y=this._timeScale,b=this._rawPrevTime,x=this._paused,w=this._cycle;if(d!==this._time&&(t+=this._time-d),t>=m-1e-7&&t>=0)this._locked||(this._totalTime=m,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(a=!0,c="onComplete",u=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=t&&t>=-1e-7||0>b||b===r)&&b!==t&&this._first&&(u=!0,b>r&&(c="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,this._yoyo&&0!=(1&this._cycle)?this._time=t=0:(this._time=g,t=g+1e-4);else if(1e-7>t)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==d||0===g&&b!==r&&(b>0||0>t&&b>=0)&&!this._locked)&&(c="onReverseComplete",a=this._reversed),0>t)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(u=a=!0,c="onReverseComplete"):b>=0&&this._first&&(u=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=g||!e||t||this._rawPrevTime===t?t:r,0===t&&a)for(n=this._first;n&&0===n._startTime;)n._duration||(a=!1),n=n._next;t=0,this._initted||(u=!0)}else if(0===g&&0>b&&(u=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(h=g+this._repeatDelay,this._cycle=this._totalTime/h>>0,0!==this._cycle&&this._cycle===this._totalTime/h&&t>=v&&this._cycle--,this._time=this._totalTime-this._cycle*h,this._yoyo&&0!=(1&this._cycle)&&(this._time=g-this._time),this._time>g?(this._time=g,t=g+1e-4):this._time<0?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!e){if((t=this._time)>=d||this._repeat&&w!==this._cycle)for(n=this._first;n&&n._startTime<=t&&!f;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(f=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!f;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(f=n),n=n._prev;f&&f._startTime<g&&(this._time=t=f._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var T=this._yoyo&&0!=(1&w),k=T===(this._yoyo&&0!=(1&this._cycle)),P=this._totalTime,S=this._cycle,C=this._rawPrevTime,A=this._time;if(this._totalTime=w*g,this._cycle<w?T=!T:this._totalTime+=g,this._time=d,this._rawPrevTime=0===g?b-1e-4:b,this._cycle=w,this._locked=!0,d=T?0:g,this.render(d,e,0===g),e||this._gc||this.vars.onRepeat&&(this._cycle=S,this._locked=!1,this._callback("onRepeat")),d!==this._time)return;if(k&&(this._cycle=w,this._locked=!0,d=T?g+1e-4:-1e-4,this.render(d,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=A,this._totalTime=P,this._cycle=S,this._rawPrevTime=C}if(this._time!==d&&this._first||i||u||f){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==v&&t>0&&(this._active=!0),0===v&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||e||this._callback("onStart")),(p=this._time)>=d)for(n=this._first;n&&(o=n._next,p===this._time&&(!this._paused||x));)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(f===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=o;else for(n=this._last;n&&(o=n._prev,p===this._time&&(!this._paused||x));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(f===n){for(f=n._prev;f&&f.endTime()>this._time;)f.render(f._reversed?f.totalDuration()-(t-f._startTime)*f._timeScale:(t-f._startTime)*f._timeScale,e,i),f=f._prev;f=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=o}this._onUpdate&&(e||(s.length&&l(),this._callback("onUpdate"))),c&&(this._locked||this._gc||(_===this._startTime||y!==this._timeScale)&&(0===this._time||m>=this.totalDuration())&&(a&&(s.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[c]&&this._callback(c)))}else v!==this._totalTime&&this._onUpdate&&(e||this._callback("onUpdate"))},h.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,a=[],s=this.getChildren(t,e,i),o=0,l=s.length;for(n=0;l>n;n++)(r=s[n]).isActive()&&(a[o++]=r);return a},h.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;n>e;e++)if(i[e].time>t)return i[e].name;return null},h.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(e[i].time<t)return e[i].name;return null},h.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},h.invalidate=function(){return this._locked=!1,t.prototype.invalidate.call(this)},h.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!=(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()||0},h.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()||0},h.totalDuration=function(e){return arguments.length?-1!==this._repeat&&e?this.timeScale(this.totalDuration()/e):this:(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},h.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!=(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},h.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},h.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},h.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},h.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},n},!0),o._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=!0===this.vars.autoRemoveChildren,this.smoothChildTiming=!0===this.vars.smoothChildTiming,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],c(i)&&-1!==i.join("").indexOf("{self}")&&(r[n]=this._swapSelfInParams(i));c(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},r=1e-10,a=i._internals,s=n._internals={},l=a.isSelector,c=a.isArray,u=a.lazyTweens,h=a.lazyRender,f=o._gsDefine.globals,p=function(t){var e,i={};for(e in t)i[e]=t[e];return i},d=function(t,e,i){var n,r,a=t.cycle;for(n in a)r=a[n],t[n]="function"==typeof r?r(i,e[i]):r[i%r.length];delete t.cycle},m=s.pauseCallback=function(){},g=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},v=n.prototype=new e;return n.version="2.0.1",v.constructor=n,v.kill()._gc=v._forcingPlayhead=v._hasPause=!1,v.to=function(t,e,n,r){var a=n.repeat&&f.TweenMax||i;return e?this.add(new a(t,e,n),r):this.set(t,n,r)},v.from=function(t,e,n,r){return this.add((n.repeat&&f.TweenMax||i).from(t,e,n),r)},v.fromTo=function(t,e,n,r,a){var s=r.repeat&&f.TweenMax||i;return e?this.add(s.fromTo(t,e,n,r),a):this.set(t,r,a)},v.staggerTo=function(t,e,r,a,s,o,c,u){var h,f,m=new n({onComplete:o,onCompleteParams:c,callbackScope:u,smoothChildTiming:this.smoothChildTiming}),v=r.cycle;for("string"==typeof t&&(t=i.selector(t)||t),l(t=t||[])&&(t=g(t)),0>(a=a||0)&&((t=g(t)).reverse(),a*=-1),f=0;f<t.length;f++)(h=p(r)).startAt&&(h.startAt=p(h.startAt),h.startAt.cycle&&d(h.startAt,t,f)),v&&(d(h,t,f),null!=h.duration&&(e=h.duration,delete h.duration)),m.to(t[f],e,h,f*a);return this.add(m,s)},v.staggerFrom=function(t,e,i,n,r,a,s,o){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,a,s,o)},v.staggerFromTo=function(t,e,i,n,r,a,s,o,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,a,s,o,l)},v.call=function(t,e,n,r){return this.add(i.delayedCall(0,t,e,n),r)},v.set=function(t,e,n){return n=this._parseTimeOrLabel(n,0,!0),null==e.immediateRender&&(e.immediateRender=n===this._time&&!this._paused),this.add(new i(t,0,e),n)},n.exportRoot=function(t,e){null==(t=t||{}).smoothChildTiming&&(t.smoothChildTiming=!0);var r,a,s,o,l=new n(t),c=l._timeline;for(null==e&&(e=!0),c._remove(l,!0),l._startTime=0,l._rawPrevTime=l._time=l._totalTime=c._time,s=c._first;s;)o=s._next,e&&s instanceof i&&s.target===s.vars.onComplete||(0>(a=s._startTime-s._delay)&&(r=1),l.add(s,a)),s=o;return c.add(l,0),r&&l.totalDuration(),l},v.add=function(r,a,s,o){var l,u,h,f,p,d;if("number"!=typeof a&&(a=this._parseTimeOrLabel(a,0,!0,r)),!(r instanceof t)){if(r instanceof Array||r&&r.push&&c(r)){for(s=s||"normal",o=o||0,l=a,u=r.length,h=0;u>h;h++)c(f=r[h])&&(f=new n({tweens:f})),this.add(f,l),"string"!=typeof f&&"function"!=typeof f&&("sequence"===s?l=f._startTime+f.totalDuration()/f._timeScale:"start"===s&&(f._startTime-=f.delay())),l+=o;return this._uncache(!0)}if("string"==typeof r)return this.addLabel(r,a);if("function"!=typeof r)throw"Cannot add "+r+" into the timeline; it is not a tween, timeline, function, or string.";r=i.delayedCall(0,r)}if(e.prototype.add.call(this,r,a),r._time&&r.render((this.rawTime()-r._startTime)*r._timeScale,!1,!1),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(d=(p=this).rawTime()>r._startTime;p._timeline;)d&&p._timeline.smoothChildTiming?p.totalTime(p._totalTime,!0):p._gc&&p._enabled(!0,!1),p=p._timeline;return this},v.remove=function(e){if(e instanceof t){this._remove(e,!1);var i=e._timeline=e.vars.useFrames?t._rootFramesTimeline:t._rootTimeline;return e._startTime=(e._paused?e._pauseTime:i._time)-(e._reversed?e.totalDuration()-e._totalTime:e._totalTime)/e._timeScale,this}if(e instanceof Array||e&&e.push&&c(e)){for(var n=e.length;--n>-1;)this.remove(e[n]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},v._remove=function(t,i){return e.prototype._remove.call(this,t,i),this._last?this._time>this.duration()&&(this._time=this._duration,this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},v.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},v.insert=v.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},v.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},v.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},v.addPause=function(t,e,n,r){var a=i.delayedCall(0,m,n,r||this);return a.vars.onComplete=a.vars.onReverseComplete=e,a.data="isPause",this._hasPause=!0,this.add(a,t)},v.removeLabel=function(t){return delete this._labels[t],this},v.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},v._parseTimeOrLabel=function(e,i,n,r){var a,s;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&c(r)))for(s=r.length;--s>-1;)r[s]instanceof t&&r[s].timeline===this&&this.remove(r[s]);if(a="number"!=typeof e||i?this.duration()>99999999999?this.recent().endTime(!1):this._duration:0,"string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-a:0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=a);else{if(-1===(s=e.indexOf("=")))return null==this._labels[e]?n?this._labels[e]=a+i:i:this._labels[e]+i;i=parseInt(e.charAt(s-1)+"1",10)*Number(e.substr(s+1)),e=s>1?this._parseTimeOrLabel(e.substr(0,s-1),0,n):a}return Number(e)+i},v.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),!1!==e)},v.stop=function(){return this.paused(!0)},v.gotoAndPlay=function(t,e){return this.play(t,e)},v.gotoAndStop=function(t,e){return this.pause(t,e)},v.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,a,s,o,l,c,f,p=this._dirty?this.totalDuration():this._totalDuration,d=this._time,m=this._startTime,g=this._timeScale,v=this._paused;if(t>=p-1e-7&&t>=0)this._totalTime=this._time=p,this._reversed||this._hasPausedChild()||(a=!0,o="onComplete",l=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=t&&t>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===r)&&this._rawPrevTime!==t&&this._first&&(l=!0,this._rawPrevTime>r&&(o="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,t=p+1e-4;else if(1e-7>t)if(this._totalTime=this._time=0,(0!==d||0===this._duration&&this._rawPrevTime!==r&&(this._rawPrevTime>0||0>t&&this._rawPrevTime>=0))&&(o="onReverseComplete",a=this._reversed),0>t)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(l=a=!0,o="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(l=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,0===t&&a)for(n=this._first;n&&0===n._startTime;)n._duration||(a=!1),n=n._next;t=0,this._initted||(l=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!e){if(t>=d)for(n=this._first;n&&n._startTime<=t&&!c;)n._duration||"isPause"!==n.data||n.ratio||0===n._startTime&&0===this._rawPrevTime||(c=n),n=n._next;else for(n=this._last;n&&n._startTime>=t&&!c;)n._duration||"isPause"===n.data&&n._rawPrevTime>0&&(c=n),n=n._prev;c&&(this._time=t=c._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=t}if(this._time!==d&&this._first||i||l||c){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==d&&t>0&&(this._active=!0),0===d&&this.vars.onStart&&(0===this._time&&this._duration||e||this._callback("onStart")),(f=this._time)>=d)for(n=this._first;n&&(s=n._next,f===this._time&&(!this._paused||v));)(n._active||n._startTime<=f&&!n._paused&&!n._gc)&&(c===n&&this.pause(),n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=s;else for(n=this._last;n&&(s=n._prev,f===this._time&&(!this._paused||v));){if(n._active||n._startTime<=d&&!n._paused&&!n._gc){if(c===n){for(c=n._prev;c&&c.endTime()>this._time;)c.render(c._reversed?c.totalDuration()-(t-c._startTime)*c._timeScale:(t-c._startTime)*c._timeScale,e,i),c=c._prev;c=null,this.pause()}n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)}n=s}this._onUpdate&&(e||(u.length&&h(),this._callback("onUpdate"))),o&&(this._gc||(m===this._startTime||g!==this._timeScale)&&(0===this._time||p>=this.totalDuration())&&(a&&(u.length&&h(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[o]&&this._callback(o)))}},v._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof n&&t._hasPausedChild())return!0;t=t._next}return!1},v.getChildren=function(t,e,n,r){r=r||-9999999999;for(var a=[],s=this._first,o=0;s;)s._startTime<r||(s instanceof i?!1!==e&&(a[o++]=s):(!1!==n&&(a[o++]=s),!1!==t&&(o=(a=a.concat(s.getChildren(!0,e,n))).length))),s=s._next;return a},v.getTweensOf=function(t,e){var n,r,a=this._gc,s=[],o=0;for(a&&this._enabled(!0,!0),r=(n=i.getTweensOf(t)).length;--r>-1;)(n[r].timeline===this||e&&this._contains(n[r]))&&(s[o++]=n[r]);return a&&this._enabled(!1,!0),s},v.recent=function(){return this._recent},v._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},v.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,a=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in a)a[n]>=i&&(a[n]+=t);return this._uncache(!0)},v._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},v.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return!1!==t&&(this._labels={}),this._uncache(!0)},v.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},v._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},v.totalTime=function(e,i,n){this._forcingPlayhead=!0;var r=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,r},v.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},v.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,a=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>a&&this._sortChildren&&!r._paused&&!this._calculatingDuration?(this._calculatingDuration=1,this.add(r,r._startTime-r._delay),this._calculatingDuration=0):a=r._startTime,r._startTime<0&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale,this._time-=r._startTime,this._totalTime-=r._startTime,this._rawPrevTime-=r._startTime),this.shiftChildren(-r._startTime,!1,-9999999999),a=0),(i=r._startTime+r._totalDuration/r._timeScale)>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return t&&this.totalDuration()?this.timeScale(this._totalDuration/t):this},v.paused=function(e){if(!e)for(var i=this._first,n=this._time;i;)i._startTime===n&&"isPause"===i.data&&(i._rawPrevTime=0),i=i._next;return t.prototype.paused.apply(this,arguments)},v.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},v.rawTime=function(t){return t&&(this._paused||this._repeat&&this.time()>0&&this.totalProgress()<1)?this._totalTime%(this._duration+this._repeatDelay):this._paused?this._totalTime:(this._timeline.rawTime(t)-this._startTime)*this._timeScale},n},!0)}),o._gsDefine&&o._gsQueue.pop()(),function(n){"use strict";var l=function(){return(o.GreenSockGlobals||o).TimelineMax};void 0!==t&&t.exports?(i(6),t.exports=l()):i(3)&&(a=[i(6)],void 0===(s="function"==typeof(r=l)?r.apply(e,a):r)||(t.exports=s))}()}).call(this,i(2))},function(t,e,i){(function(n){var r;
/*!
 * VERSION: 2.0.1
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */!function(n,a){"use strict";var s={},o=n.document,l=n.GreenSockGlobals=n.GreenSockGlobals||n,c=l[a];if(c)return void 0!==t&&t.exports&&(t.exports=c),c;var u,h,f,p,d,m=function(t){var e,i=t.split("."),n=l;for(e=0;e<i.length;e++)n[i[e]]=n=n[i[e]]||{};return n},g=m("com.greensock"),v=1e-10,_=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},y=function(){},b=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),x={},w=function(n,o,c,u){this.sc=x[n]?x[n].sc:[],x[n]=this,this.gsClass=null,this.func=c;var h=[];this.check=function(f){for(var p,d,g,v,_=o.length,y=_;--_>-1;)(p=x[o[_]]||new w(o[_],[])).gsClass?(h[_]=p.gsClass,y--):f&&p.sc.push(this);if(0===y&&c){if(g=(d=("com.greensock."+n).split(".")).pop(),v=m(d.join("."))[g]=this.gsClass=c.apply(c,h),u)if(l[g]=s[g]=v,void 0!==t&&t.exports)if(n===a)for(_ in t.exports=s[a]=v,s)v[_]=s[_];else s[a]&&(s[a][g]=v);else i(3)&&(void 0===(r=function(){return v}.apply(e,[]))||(t.exports=r));for(_=0;_<this.sc.length;_++)this.sc[_].check()}},this.check(!0)},T=n._gsDefine=function(t,e,i,n){return new w(t,e,i,n)},k=g._class=function(t,e,i){return e=e||function(){},T(t,[],function(){return e},i),e};T.globals=l;var P=[0,0,1,1],S=k("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?P.concat(e):P},!0),C=S.map={},A=S.register=function(t,e,i,n){for(var r,a,s,o,l=e.split(","),c=l.length,u=(i||"easeIn,easeOut,easeInOut").split(",");--c>-1;)for(a=l[c],r=n?k("easing."+a,null,!0):g.easing[a]||{},s=u.length;--s>-1;)o=u[s],C[a+"."+o]=C[o+a]=r[o]=t.getRatio?t:t[o]||new t};for((f=S.prototype)._calcEnd=!1,f.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:.5>t?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:.5>t?n/2:1-n/2},h=(u=["Linear","Quad","Cubic","Quart","Quint,Strong"]).length;--h>-1;)f=u[h]+",Power"+h,A(new S(null,null,1,h),f,"easeOut",!0),A(new S(null,null,2,h),f,"easeIn"+(0===h?",easeNone":"")),A(new S(null,null,3,h),f,"easeInOut");C.linear=g.easing.Linear.easeIn,C.swing=g.easing.Quad.easeInOut;var E=k("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});(f=E.prototype).addEventListener=function(t,e,i,n,r){r=r||0;var a,s,o=this._listeners[t],l=0;for(this!==p||d||p.wake(),null==o&&(this._listeners[t]=o=[]),s=o.length;--s>-1;)(a=o[s]).c===e&&a.s===i?o.splice(s,1):0===l&&a.pr<r&&(l=s+1);o.splice(l,0,{c:e,s:i,up:n,pr:r})},f.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},f.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for((e=r.length)>1&&(r=r.slice(0)),i=this._eventTarget;--e>-1;)(n=r[e])&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var O=n.requestAnimationFrame,D=n.cancelAnimationFrame,R=Date.now||function(){return(new Date).getTime()},M=R();for(h=(u=["ms","moz","webkit","o"]).length;--h>-1&&!O;)O=n[u[h]+"RequestAnimationFrame"],D=n[u[h]+"CancelAnimationFrame"]||n[u[h]+"CancelRequestAnimationFrame"];k("Ticker",function(t,e){var i,n,r,a,s,l=this,c=R(),u=!(!1===e||!O)&&"auto",h=500,f=33,m=function(t){var e,o,u=R()-M;u>h&&(c+=u-f),M+=u,l.time=(M-c)/1e3,e=l.time-s,(!i||e>0||!0===t)&&(l.frame++,s+=e+(e>=a?.004:a-e),o=!0),!0!==t&&(r=n(m)),o&&l.dispatchEvent("tick")};E.call(l),l.time=l.frame=0,l.tick=function(){m(!0)},l.lagSmoothing=function(t,e){return arguments.length?(h=t||1/v,void(f=Math.min(e,h,0))):1/v>h},l.sleep=function(){null!=r&&(u&&D?D(r):clearTimeout(r),n=y,r=null,l===p&&(d=!1))},l.wake=function(t){null!==r?l.sleep():t?c+=-M+(M=R()):l.frame>10&&(M=R()-h+5),n=0===i?y:u&&O?O:function(t){return setTimeout(t,1e3*(s-l.time)+1|0)},l===p&&(d=!0),m(2)},l.fps=function(t){return arguments.length?(a=1/((i=t)||60),s=this.time+a,void l.wake()):i},l.useRAF=function(t){return arguments.length?(l.sleep(),u=t,void l.fps(i)):u},l.fps(t),setTimeout(function(){"auto"===u&&l.frame<5&&"hidden"!==(o||{}).visibilityState&&l.useRAF(!1)},1500)}),(f=g.Ticker.prototype=new g.events.EventDispatcher).constructor=g.Ticker;var L=k("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=!0===e.immediateRender,this.data=e.data,this._reversed=!0===e.reversed,J){d||p.wake();var i=this.vars.useFrames?Q:J;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});p=L.ticker=new g.Ticker,(f=L.prototype)._dirty=f._gc=f._initted=f._paused=!1,f._totalTime=f._time=0,f._rawPrevTime=-1,f._next=f._last=f._onUpdate=f._timeline=f.timeline=null,f._paused=!1;var F=function(){d&&R()-M>2e3&&("hidden"!==(o||{}).visibilityState||!p.lagSmoothing())&&p.wake();var t=setTimeout(F,2e3);t.unref&&t.unref()};F(),f.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},f.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},f.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},f.seek=function(t,e){return this.totalTime(Number(t),!1!==e)},f.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,!1!==e,!0)},f.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},f.render=function(t,e,i){},f.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},f.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime(!0))>=i&&t<i+this.totalDuration()/this._timeScale-1e-7},f._enabled=function(t,e){return d||p.wake(),this._gc=!t,this._active=this.isActive(),!0!==e&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},f._kill=function(t,e){return this._enabled(!1,!1)},f.kill=function(t,e){return this._kill(t,e),this},f._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},f._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},f._callback=function(t){var e=this.vars,i=e[t],n=e[t+"Params"],r=e[t+"Scope"]||e.callbackScope||this;switch(n?n.length:0){case 0:i.call(r);break;case 1:i.call(r,n[0]);break;case 2:i.call(r,n[0],n[1]);break;default:i.apply(r,n)}},f.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=b(i)&&-1!==i.join("").indexOf("{self}")?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},f.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},f.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},f.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},f.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},f.totalTime=function(t,e,i){if(d||p.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>t&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==t||0===this._duration)&&($.length&&et(),this.render(t,e,!1),$.length&&et())}return this},f.progress=f.totalProgress=function(t,e){var i=this.duration();return arguments.length?this.totalTime(i*t,e):i?this._time/i:this.ratio},f.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},f.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},f.timeScale=function(t){if(!arguments.length)return this._timeScale;var e,i;for(t=t||v,this._timeline&&this._timeline.smoothChildTiming&&(i=(e=this._pauseTime)||0===e?e:this._timeline.totalTime(),this._startTime=i-(i-this._startTime)*this._timeScale/t),this._timeScale=t,i=this.timeline;i&&i.timeline;)i._dirty=!0,i.totalDuration(),i=i.timeline;return this},f.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},f.paused=function(t){if(!arguments.length)return this._paused;var e,i,n=this._timeline;return t!=this._paused&&n&&(d||t||p.wake(),i=(e=n.rawTime())-this._pauseTime,!t&&n.smoothChildTiming&&(this._startTime+=i,this._uncache(!1)),this._pauseTime=t?e:null,this._paused=t,this._active=this.isActive(),!t&&0!==i&&this._initted&&this.duration()&&(e=n.smoothChildTiming?this._totalTime:(e-this._startTime)/this._timeScale,this.render(e,e===this._totalTime,!0))),this._gc&&!t&&this._enabled(!0,!1),this};var N=k("core.SimpleTimeline",function(t){L.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});(f=N.prototype=new L).constructor=N,f.kill()._gc=!1,f._first=f._last=f._recent=null,f._sortChildren=!1,f.add=f.insert=function(t,e,i,n){var r,a;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=this.rawTime()-(t._timeline.rawTime()-t._pauseTime)),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),r=this._last,this._sortChildren)for(a=t._startTime;r&&r._startTime>a;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=r,this._recent=t,this._timeline&&this._uncache(!0),this},f._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},f.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused&&!r._gc)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},f.rawTime=function(){return d||p.wake(),this._totalTime};var I=k("TweenLite",function(t,e,i){if(L.call(this,e,i),this.render=I.prototype.render,null==t)throw"Cannot tween a null target.";this.target=t="string"!=typeof t?t:I.selector(t)||t;var r,a,s,o=t.jquery||t.length&&t!==n&&t[0]&&(t[0]===n||t[0].nodeType&&t[0].style&&!t.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?K[I.defaultOverwrite]:"number"==typeof l?l>>0:K[l],(o||t instanceof Array||t.push&&b(t))&&"number"!=typeof t[0])for(this._targets=s=_(t),this._propLookup=[],this._siblings=[],r=0;r<s.length;r++)(a=s[r])?"string"!=typeof a?a.length&&a!==n&&a[0]&&(a[0]===n||a[0].nodeType&&a[0].style&&!a.nodeType)?(s.splice(r--,1),this._targets=s=s.concat(_(a))):(this._siblings[r]=it(a,this,!1),1===l&&this._siblings[r].length>1&&rt(a,this,null,1,this._siblings[r])):"string"==typeof(a=s[r--]=I.selector(a))&&s.splice(r+1,1):s.splice(r--,1);else this._propLookup={},this._siblings=it(t,this,!1),1===l&&this._siblings.length>1&&rt(t,this,null,1,this._siblings);(this.vars.immediateRender||0===e&&0===this._delay&&!1!==this.vars.immediateRender)&&(this._time=-v,this.render(Math.min(0,-this._delay)))},!0),j=function(t){return t&&t.length&&t!==n&&t[0]&&(t[0]===n||t[0].nodeType&&t[0].style&&!t.nodeType)};(f=I.prototype=new L).constructor=I,f.kill()._gc=!1,f.ratio=0,f._firstPT=f._targets=f._overwrittenProps=f._startAt=null,f._notifyPluginsOfEnabled=f._lazy=!1,I.version="2.0.1",I.defaultEase=f._ease=new S(null,null,1,1),I.defaultOverwrite="auto",I.ticker=p,I.autoSleep=120,I.lagSmoothing=function(t,e){p.lagSmoothing(t,e)},I.selector=n.$||n.jQuery||function(t){var e=n.$||n.jQuery;return e?(I.selector=e,e(t)):(o||(o=n.document),o?o.querySelectorAll?o.querySelectorAll(t):o.getElementById("#"===t.charAt(0)?t.substr(1):t):t)};var $=[],z={},B=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,q=/[\+-]=-?[\.\d]/,H=function(t){for(var e,i=this._firstPT;i;)e=i.blob?1===t&&null!=this.end?this.end:t?this.join(""):this.start:i.c*t+i.s,i.m?e=i.m.call(this._tween,e,this._target||i.t,this._tween):1e-6>e&&e>-1e-6&&!i.blob&&(e=0),i.f?i.fp?i.t[i.p](i.fp,e):i.t[i.p](e):i.t[i.p]=e,i=i._next},U=function(t,e,i,n){var r,a,s,o,l,c,u,h=[],f=0,p="",d=0;for(h.start=t,h.end=e,t=h[0]=t+"",e=h[1]=e+"",i&&(i(h),t=h[0],e=h[1]),h.length=0,r=t.match(B)||[],a=e.match(B)||[],n&&(n._next=null,n.blob=1,h._firstPT=h._applyPT=n),l=a.length,o=0;l>o;o++)u=a[o],p+=(c=e.substr(f,e.indexOf(u,f)-f))||!o?c:",",f+=c.length,d?d=(d+1)%5:"rgba("===c.substr(-5)&&(d=1),u===r[o]||r.length<=o?p+=u:(p&&(h.push(p),p=""),s=parseFloat(r[o]),h.push(s),h._firstPT={_next:h._firstPT,t:h,p:h.length-1,s:s,c:("="===u.charAt(1)?parseInt(u.charAt(0)+"1",10)*parseFloat(u.substr(2)):parseFloat(u)-s)||0,f:0,m:d&&4>d?Math.round:0}),f+=u.length;return(p+=e.substr(f))&&h.push(p),h.setRatio=H,q.test(e)&&(h.end=null),h},X=function(t,e,i,n,r,a,s,o,l){"function"==typeof n&&(n=n(l||0,t));var c=typeof t[e],u="function"!==c?"":e.indexOf("set")||"function"!=typeof t["get"+e.substr(3)]?e:"get"+e.substr(3),h="get"!==i?i:u?s?t[u](s):t[u]():t[e],f="string"==typeof n&&"="===n.charAt(1),p={t:t,p:e,s:h,f:"function"===c,pg:0,n:r||e,m:a?"function"==typeof a?a:Math.round:0,pr:0,c:f?parseInt(n.charAt(0)+"1",10)*parseFloat(n.substr(2)):parseFloat(n)-h||0};return("number"!=typeof h||"number"!=typeof n&&!f)&&(s||isNaN(h)||!f&&isNaN(n)||"boolean"==typeof h||"boolean"==typeof n?(p.fp=s,p={t:U(h,f?parseFloat(p.s)+p.c+(p.s+"").replace(/[0-9\-\.]/g,""):n,o||I.defaultStringFilter,p),p:"setRatio",s:0,c:1,f:2,pg:0,n:r||e,pr:0,m:0}):(p.s=parseFloat(h),f||(p.c=parseFloat(n)-p.s||0))),p.c?((p._next=this._firstPT)&&(p._next._prev=p),this._firstPT=p,p):void 0},W=I._internals={isArray:b,isSelector:j,lazyTweens:$,blobDif:U},G=I._plugins={},Y=W.tweenLookup={},V=0,Z=W.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1,yoyoEase:1},K={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},Q=L._rootFramesTimeline=new N,J=L._rootTimeline=new N,tt=30,et=W.lazyRender=function(){var t,e=$.length;for(z={};--e>-1;)(t=$[e])&&!1!==t._lazy&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);$.length=0};J._startTime=p.time,Q._startTime=p.frame,J._active=Q._active=!0,setTimeout(et,1),L._updateRoot=I.render=function(){var t,e,i;if($.length&&et(),J.render((p.time-J._startTime)*J._timeScale,!1,!1),Q.render((p.frame-Q._startTime)*Q._timeScale,!1,!1),$.length&&et(),p.frame>=tt){for(i in tt=p.frame+(parseInt(I.autoSleep,10)||120),Y){for(t=(e=Y[i].tweens).length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete Y[i]}if((!(i=J._first)||i._paused)&&I.autoSleep&&!Q._first&&1===p._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||p.sleep()}}},p.addEventListener("tick",L._updateRoot);var it=function(t,e,i){var n,r,a=t._gsTweenID;if(Y[a||(t._gsTweenID=a="t"+V++)]||(Y[a]={target:t,tweens:[]}),e&&((n=Y[a].tweens)[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return Y[a].tweens},nt=function(t,e,i,n){var r,a,s=t.vars.onOverwrite;return s&&(r=s(t,e,i,n)),(s=I.onOverwrite)&&(a=s(t,e,i,n)),!1!==r&&!1!==a},rt=function(t,e,i,n,r){var a,s,o,l;if(1===n||n>=4){for(l=r.length,a=0;l>a;a++)if((o=r[a])!==e)o._gc||o._kill(null,t,e)&&(s=!0);else if(5===n)break;return s}var c,u=e._startTime+v,h=[],f=0,p=0===e._duration;for(a=r.length;--a>-1;)(o=r[a])===e||o._gc||o._paused||(o._timeline!==e._timeline?(c=c||at(e,0,p),0===at(o,c,p)&&(h[f++]=o)):o._startTime<=u&&o._startTime+o.totalDuration()/o._timeScale>u&&((p||!o._initted)&&u-o._startTime<=2e-10||(h[f++]=o)));for(a=f;--a>-1;)if(o=h[a],2===n&&o._kill(i,t,e)&&(s=!0),2!==n||!o._firstPT&&o._initted){if(2!==n&&!nt(o,e))continue;o._enabled(!1,!1)&&(s=!0)}return s},at=function(t,e,i){for(var n=t._timeline,r=n._timeScale,a=t._startTime;n._timeline;){if(a+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return(a/=r)>e?a-e:i&&a===e||!t._initted&&2*v>a-e?v:(a+=t.totalDuration()/t._timeScale/r)>e+v?0:a-e-v};f._init=function(){var t,e,i,n,r,a,s=this.vars,o=this._overwrittenProps,l=this._duration,c=!!s.immediateRender,u=s.ease;if(s.startAt){for(n in this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={},s.startAt)r[n]=s.startAt[n];if(r.data="isStart",r.overwrite=!1,r.immediateRender=!0,r.lazy=c&&!1!==s.lazy,r.startAt=r.delay=null,r.onUpdate=s.onUpdate,r.onUpdateParams=s.onUpdateParams,r.onUpdateScope=s.onUpdateScope||s.callbackScope||this,this._startAt=I.to(this.target||{},0,r),c)if(this._time>0)this._startAt=null;else if(0!==l)return}else if(s.runBackwards&&0!==l)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{for(n in 0!==this._time&&(c=!1),i={},s)Z[n]&&"autoCSS"!==n||(i[n]=s[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=c&&!1!==s.lazy,i.immediateRender=c,this._startAt=I.to(this.target,0,i),c){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=u=u?u instanceof S?u:"function"==typeof u?new S(u,s.easeParams):C[u]||I.defaultEase:I.defaultEase,s.easeParams instanceof Array&&u.config&&(this._ease=u.config.apply(u,s.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(a=this._targets.length,t=0;a>t;t++)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],o?o[t]:null,t)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,o,0);if(e&&I._onPluginEvent("_onInitAllProps",this),o&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),s.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=s.onUpdate,this._initted=!0},f._initProps=function(t,e,i,r,a){var s,o,l,c,u,h;if(null==t)return!1;for(s in z[t._gsTweenID]&&et(),this.vars.css||t.style&&t!==n&&t.nodeType&&G.css&&!1!==this.vars.autoCSS&&function(t,e){var i,n={};for(i in t)Z[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!G[i]||G[i]&&G[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n}(this.vars,t),this.vars)if(h=this.vars[s],Z[s])h&&(h instanceof Array||h.push&&b(h))&&-1!==h.join("").indexOf("{self}")&&(this.vars[s]=h=this._swapSelfInParams(h,this));else if(G[s]&&(c=new G[s])._onInitTween(t,this.vars[s],this,a)){for(this._firstPT=u={_next:this._firstPT,t:c,p:"setRatio",s:0,c:1,f:1,n:s,pg:1,pr:c._priority,m:0},o=c._overwriteProps.length;--o>-1;)e[c._overwriteProps[o]]=this._firstPT;(c._priority||c._onInitAllProps)&&(l=!0),(c._onDisable||c._onEnable)&&(this._notifyPluginsOfEnabled=!0),u._next&&(u._next._prev=u)}else e[s]=X.call(this,t,s,"get",h,s,0,null,this.vars.stringFilter,a);return r&&this._kill(r,t)?this._initProps(t,e,i,r,a):this._overwrite>1&&this._firstPT&&i.length>1&&rt(t,this,e,this._overwrite,i)?(this._kill(e,t),this._initProps(t,e,i,r,a)):(this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration)&&(z[t._gsTweenID]=!0),l)},f.render=function(t,e,i){var n,r,a,s,o=this._time,l=this._duration,c=this._rawPrevTime;if(t>=l-1e-7&&t>=0)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete",i=i||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(0>c||0>=t&&t>=-1e-7||c===v&&"isPause"!==this.data)&&c!==t&&(i=!0,c>v&&(r="onReverseComplete")),this._rawPrevTime=s=!e||t||c===t?t:v);else if(1e-7>t)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==o||0===l&&c>0)&&(r="onReverseComplete",n=this._reversed),0>t&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(c>=0&&(c!==v||"isPause"!==this.data)&&(i=!0),this._rawPrevTime=s=!e||t||c===t?t:v)),(!this._initted||this._startAt&&this._startAt.progress())&&(i=!0);else if(this._totalTime=this._time=t,this._easeType){var u=t/l,h=this._easeType,f=this._easePower;(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===f?u*=u:2===f?u*=u*u:3===f?u*=u*u*u:4===f&&(u*=u*u*u*u),this.ratio=1===h?1-u:2===h?u:.5>t/l?u/2:1-u/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==o||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=o,this._rawPrevTime=c,$.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(!1!==this._lazy&&(this._lazy=!1),this._active||!this._paused&&this._time!==o&&t>=0&&(this._active=!0),0===o&&(this._startAt&&(t>=0?this._startAt.render(t,!0,i):r||(r="_dummyGS")),this.vars.onStart&&(0!==this._time||0===l)&&(e||this._callback("onStart"))),a=this._firstPT;a;)a.f?a.t[a.p](a.c*this.ratio+a.s):a.t[a.p]=a.c*this.ratio+a.s,a=a._next;this._onUpdate&&(0>t&&this._startAt&&-1e-4!==t&&this._startAt.render(t,!0,i),e||(this._time!==o||n||i)&&this._callback("onUpdate")),r&&(!this._gc||i)&&(0>t&&this._startAt&&!this._onUpdate&&-1e-4!==t&&this._startAt.render(t,!0,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this._callback(r),0===l&&this._rawPrevTime===v&&s!==v&&(this._rawPrevTime=0))}},f._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:I.selector(e)||e;var n,r,a,s,o,l,c,u,h,f=i&&this._time&&i._startTime===this._startTime&&this._timeline===i._timeline;if((b(e)||j(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n],i)&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){o=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;o=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(o){if(c=t||o,u=t!==r&&"all"!==r&&t!==o&&("object"!=typeof t||!t._tempKill),i&&(I.onOverwrite||this.vars.onOverwrite)){for(a in c)o[a]&&(h||(h=[]),h.push(a));if((h||!t)&&!nt(this,i,e,h))return!1}for(a in c)(s=o[a])&&(f&&(s.f?s.t[s.p](s.s):s.t[s.p]=s.s,l=!0),s.pg&&s.t._kill(c)&&(l=!0),s.pg&&0!==s.t._overwriteProps.length||(s._prev?s._prev._next=s._next:s===this._firstPT&&(this._firstPT=s._next),s._next&&(s._next._prev=s._prev),s._next=s._prev=null),delete o[a]),u&&(r[a]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},f.invalidate=function(){return this._notifyPluginsOfEnabled&&I._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],L.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-v,this.render(Math.min(0,-this._delay))),this},f._enabled=function(t,e){if(d||p.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=it(n[i],this,!0);else this._siblings=it(this.target,this,!0)}return L.prototype._enabled.call(this,t,e),!(!this._notifyPluginsOfEnabled||!this._firstPT)&&I._onPluginEvent(t?"_onEnable":"_onDisable",this)},I.to=function(t,e,i){return new I(t,e,i)},I.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new I(t,e,i)},I.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new I(t,e,n)},I.delayedCall=function(t,e,i,n,r){return new I(e,0,{delay:t,onComplete:e,onCompleteParams:i,callbackScope:n,onReverseComplete:e,onReverseCompleteParams:i,immediateRender:!1,lazy:!1,useFrames:r,overwrite:0})},I.set=function(t,e){return new I(t,0,e)},I.getTweensOf=function(t,e){if(null==t)return[];var i,n,r,a;if(t="string"!=typeof t?t:I.selector(t)||t,(b(t)||j(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(I.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(a=n[i],r=i;--r>-1;)a===n[r]&&n.splice(i,1)}else if(t._gsTweenID)for(i=(n=it(t).concat()).length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n||[]},I.killTweensOf=I.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=I.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var st=k("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=st.prototype},!0);if(f=st.prototype,st.version="1.19.0",st.API=2,f._firstPT=null,f._addTween=X,f.setRatio=H,f._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},f._mod=f._roundProps=function(t){for(var e,i=this._firstPT;i;)(e=t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")])&&"function"==typeof e&&(2===i.f?i.t._applyPT.m=e:i.m=e),i=i._next},I._onPluginEvent=function(t,e){var i,n,r,a,s,o=e._firstPT;if("_onInitAllProps"===t){for(;o;){for(s=o._next,n=r;n&&n.pr>o.pr;)n=n._next;(o._prev=n?n._prev:a)?o._prev._next=o:r=o,(o._next=n)?n._prev=o:a=o,o=s}o=e._firstPT=r}for(;o;)o.pg&&"function"==typeof o.t[t]&&o.t[t]()&&(i=!0),o=o._next;return i},st.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===st.API&&(G[(new t[e])._propName]=t[e]);return!0},T.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,a={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},s=k("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){st.call(this,i,n),this._overwriteProps=r||[]},!0===t.global),o=s.prototype=new st(i);for(e in o.constructor=s,s.API=t.API,a)"function"==typeof t[e]&&(o[a[e]]=t[e]);return s.version=t.version,st.activate([s]),s},u=n._gsQueue){for(h=0;h<u.length;h++)u[h]();for(f in x)x[f].func||n.console.log("GSAP encountered missing dependency: "+f)}d=!1}(void 0!==t&&t.exports&&void 0!==n?n:this||window,"TweenLite")}).call(this,i(2))},function(t,e,i){i(8),t.exports=i(13)},function(t,e,i){"use strict";i.r(e),function(t){i(1),i(9),i(10),i(11),i(12);var e=window.innerWidth;function n(){t(".nav-wrap").animate({top:"-150%",bottom:"150%"},300),t("body").removeClass("fixed")}t(".hum").on("click",function(){t(".nav-wrap").animate({top:"0",bottom:"0"},300),t("body").addClass("fixed")}),t(".nav-mob-close").on("click",function(){n()}),t(".nav a").on("click",function(){n()}),t(window).resize(function(){var e=t(".nav");t(".page").hasClass("fixed")&&window.innerWidth>992&&(t(".page").removeClass("fixed"),e.css({bottom:"150%",top:"-150%"}))});var r=16;e<480&&(r=14),e<992&&e>767&&(r=12);var a=9;e<992&&e>767&&(a=12);var s=t(".buy-grid .item-wrap").length;t(".buy-grid .item-wrap:not(:lt("+r+"))").hide(),s<=r&&t(".buy #buy-more").hide();var o=t(".news-grid .item-wrap").length;t(".news-grid .item-wrap:not(:lt("+a+"))").hide(),o<=a&&t(".news #news-more").hide(),t(document).ready(function(){t(".contacts-map").length>0&&function(){var e="#contactsMap",i=t(e).data("lat"),n=t(e).data("lng"),r=t(e).data("zoom"),a=(window.innerWidth,{lat:i,lng:n}),s=new google.maps.Map(document.getElementById("contactsMap"),{zoom:r,center:a,disableDefaultUI:!0});new google.maps.Marker({position:a,map:s})}()}),t(".buy #buy-more").click(function(e){e.preventDefault();var i=t(".buy-grid .item-wrap:hidden").length;i>r?t(".buy-grid .item-wrap:hidden:lt("+r+")").fadeIn(900):i<=r&&(t(".buy-grid .item-wrap:hidden:lt("+r+")").fadeIn(900),t(".buy #buy-more").hide())}),t(".news #news-more").click(function(e){e.preventDefault();var i=t(".news-grid .item-wrap:hidden").length;i>a?t(".news-grid .item-wrap:hidden:lt("+a+")").fadeIn(900):i<=a&&(t(".news-grid .item-wrap:hidden:lt("+a+")").fadeIn(900),t(".news #news-more").hide())}),t(".form-input, .form-textarea").each(function(e){let i=t(this);if(i.hasClass("wpcf7-validates-as-required")){let t=i.attr("placeholder");t+="*",i.attr("placeholder",t)}}),t("input[type=tel]").inputmask({mask:"+7 (999) 999 99 99",placeholder:"-",showMaskOnHover:!1});var l=document.querySelector(".contacts-form");l.addEventListener("wpcf7mailsent",function(e){t.fancybox.open('<div class="thanks"><h2>Ð¡Ð¿Ð°ÑÐ¸Ð±Ð¾!</h2><p>ÐÐ°ÑÐ° Ð·Ð°ÑÐ²ÐºÐ° Ð¿ÑÐ¸Ð½ÑÑÐ° Ð¸ Ð² ÑÐºÐ¾ÑÐ¾Ð¼ Ð²ÑÐµÐ¼ÐµÐ½Ð¸ Ñ ÐÐ°Ð¼Ð¸ ÑÐ²ÑÐ¶ÐµÑÑÑ Ð½Ð°Ñ Ð¼ÐµÐ½ÐµÐ´Ð¶ÐµÑ!</p></div>'),setTimeout(function(){t.fancybox.close()},2e3)},!1),l.addEventListener("wpcf7mailfailed",function(e){t.fancybox.open('<div class="thanks"><h2>ÐÑÐ¸Ð±ÐºÐ°!</h2><p>ÐÐ¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ Ð·Ð°Ð¿Ð¾Ð»Ð½Ð¸ÑÑ ÑÐ¾ÑÐ¼Ñ Ð¿Ð¾Ð²ÑÐ¾ÑÐ½Ð¾!</p></div>'),setTimeout(function(){t.fancybox.close()},2e3)},!1)}.call(this,i(0))},function(t,e,i){var n,r,a;/*! ScrollMagic v2.0.5 | (c) 2015 Jan Paepke (@janpaepke) | license & info: http://scrollmagic.io */r=[i(1),i(4),i(5)],void 0===(a="function"==typeof(n=function(t,e,i){"use strict";t.Scene.addOption("tweenChanges",!1,function(t){return!!t}),t.Scene.extend(function(){var t,n=this;n.on("progress.plugin_gsap",function(){r()}),n.on("destroy.plugin_gsap",function(t){n.removeTween(t.reset)});var r=function(){if(t){var e=n.progress(),i=n.state();t.repeat&&-1===t.repeat()?"DURING"===i&&t.paused()?t.play():"DURING"===i||t.paused()||t.pause():e!=t.progress()&&(0===n.duration()?e>0?t.play():t.reverse():n.tweenChanges()&&t.tweenTo?t.tweenTo(e*t.duration()):t.progress(e).pause())}};n.setTween=function(a,s,o){var l;arguments.length>1&&(arguments.length<3&&(o=s,s=1),a=e.to(a,s,o));try{(l=i?new i({smoothChildTiming:!0}).add(a):a).pause()}catch(t){return n}return t&&n.removeTween(),t=l,a.repeat&&-1===a.repeat()&&(t.repeat(-1),t.yoyo(a.yoyo())),r(),n},n.removeTween=function(e){return t&&(e&&t.progress(0).pause(),t.kill(),t=void 0),n}})})?n.apply(e,r):n)||(t.exports=a)},function(t,e,i){(function(t){
/*!
* jquery.inputmask.bundle.js
* https://github.com/RobinHerbots/Inputmask
* Copyright (c) 2010 - 2017 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 3.3.11
*/
!function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var i={};e.m=t,e.c=i,e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=3)}([function(t,e,i){"use strict";var n,r,a;"function"==typeof Symbol&&Symbol.iterator,r=[i(2)],void 0!==(a="function"==typeof(n=function(t){return t})?n.apply(e,r):n)&&(t.exports=a)},function(t,e,i){"use strict";var n,r,a,s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};r=[i(0),i(10),i(11)],void 0!==(a="function"==typeof(n=function(t,e,i,n){function r(e,i,s){if(!(this instanceof r))return new r(e,i,s);this.el=n,this.events={},this.maskset=n,this.refreshValue=!1,!0!==s&&(t.isPlainObject(e)?i=e:(i=i||{}).alias=e,this.opts=t.extend(!0,{},this.defaults,i),this.noMasksCache=i&&i.definitions!==n,this.userOptions=i||{},this.isRTL=this.opts.numericInput,a(this.opts.alias,i,this.opts))}function a(e,i,s){var o=r.prototype.aliases[e];return o?(o.alias&&a(o.alias,n,s),t.extend(!0,s,o),t.extend(!0,s,i),!0):(null===s.mask&&(s.mask=e),!1)}function o(e,i){function a(e,a,s){var o=!1;if(null!==e&&""!==e||((o=null!==s.regex)?e=(e=s.regex).replace(/^(\^)(.*)(\$)$/,"$2"):(o=!0,e=".*")),1===e.length&&!1===s.greedy&&0!==s.repeat&&(s.placeholder=""),s.repeat>0||"*"===s.repeat||"+"===s.repeat){var l="*"===s.repeat?0:"+"===s.repeat?1:s.repeat;e=s.groupmarker.start+e+s.groupmarker.end+s.quantifiermarker.start+l+","+s.repeat+s.quantifiermarker.end}var c,u=o?"regex_"+s.regex:s.numericInput?e.split("").reverse().join(""):e;return r.prototype.masksCache[u]===n||!0===i?(c={mask:e,maskToken:r.prototype.analyseMask(e,o,s),validPositions:{},_buffer:n,buffer:n,tests:{},metadata:a,maskLength:n},!0!==i&&(r.prototype.masksCache[u]=c,c=t.extend(!0,{},r.prototype.masksCache[u]))):c=t.extend(!0,{},r.prototype.masksCache[u]),c}if(t.isFunction(e.mask)&&(e.mask=e.mask(e)),t.isArray(e.mask)){if(e.mask.length>1){e.keepStatic=null===e.keepStatic||e.keepStatic;var s=e.groupmarker.start;return t.each(e.numericInput?e.mask.reverse():e.mask,function(i,r){s.length>1&&(s+=e.groupmarker.end+e.alternatormarker+e.groupmarker.start),r.mask===n||t.isFunction(r.mask)?s+=r:s+=r.mask}),a(s+=e.groupmarker.end,e.mask,e)}e.mask=e.mask.pop()}return e.mask&&e.mask.mask!==n&&!t.isFunction(e.mask.mask)?a(e.mask.mask,e.mask,e):a(e.mask,e.mask,e)}function l(a,o,c){function d(t,e,i){e=e||0;var r,a,s,o=[],l=0,u=v();do{!0===t&&m().validPositions[l]?(a=(s=m().validPositions[l]).match,r=s.locator.slice(),o.push(!0===i?s.input:!1===i?a.nativeDef:L(l,a))):(a=(s=b(l,r,l-1)).match,r=s.locator.slice(),(!1===c.jitMasking||l<u||"number"==typeof c.jitMasking&&isFinite(c.jitMasking)&&c.jitMasking>l)&&o.push(!1===i?a.nativeDef:L(l,a))),l++}while((W===n||l<W)&&(null!==a.fn||""!==a.def)||e>l);return""===o[o.length-1]&&o.pop(),m().maskLength=l+1,o}function m(){return o}function g(t){var e=m();e.buffer=n,!0!==t&&(e.validPositions={},e.p=0)}function v(t,e,i){var r=-1,a=-1,s=i||m().validPositions;for(var o in t===n&&(t=-1),s){var l=parseInt(o);s[l]&&(e||!0!==s[l].generatedInput)&&(l<=t&&(r=l),l>=t&&(a=l))}return-1!==r&&t-r>1||a<t?r:a}function _(e,i,r,a){var s,o=e,l=t.extend(!0,{},m().validPositions),u=!1;for(m().p=e,s=i-1;s>=o;s--)m().validPositions[s]!==n&&(!0!==r&&(!m().validPositions[s].match.optionality&&function(t){var e=m().validPositions[t];if(e!==n&&null===e.match.fn){var i=m().validPositions[t-1],r=m().validPositions[t+1];return i!==n&&r!==n}return!1}(s)||!1===c.canClearPosition(m(),s,v(),a,c))||delete m().validPositions[s]);for(g(!0),s=o+1;s<=v();){for(;m().validPositions[o]!==n;)o++;if(s<o&&(s=o+1),m().validPositions[s]===n&&E(s))s++;else{var h=b(s);!1===u&&l[o]&&l[o].match.def===h.match.def?(m().validPositions[o]=t.extend(!0,{},l[o]),m().validPositions[o].input=h.input,delete m().validPositions[s],s++):w(o,h.match.def)?!1!==A(o,h.input||L(s),!0)&&(delete m().validPositions[s],s++,u=!0):E(s)||(s++,o--),o++}}g(!0)}function y(t,e){for(var i,r=t,a=v(),s=m().validPositions[a]||T(0)[0],o=s.alternation!==n?s.locator[s.alternation].toString().split(","):[],l=0;l<r.length&&(!((i=r[l]).match&&(c.greedy&&!0!==i.match.optionalQuantifier||(!1===i.match.optionality||!1===i.match.newBlockMarker)&&!0!==i.match.optionalQuantifier)&&(s.alternation===n||s.alternation!==i.alternation||i.locator[s.alternation]!==n&&C(i.locator[s.alternation].toString().split(","),o)))||!0===e&&(null!==i.match.fn||/[0-9a-bA-Z]/.test(i.match.def)));l++);return i}function b(t,e,i){return m().validPositions[t]||y(T(t,e?e.slice():e,i))}function x(t){return m().validPositions[t]?m().validPositions[t]:T(t)[0]}function w(t,e){for(var i=!1,n=T(t),r=0;r<n.length;r++)if(n[r].match&&n[r].match.def===e){i=!0;break}return i}function T(e,i,r){function a(i,r,s,l){function h(s,l,g){function v(e,i){var n=0===t.inArray(e,i.matches);return n||t.each(i.matches,function(t,r){if(!0===r.isQuantifier&&(n=v(e,i.matches[t-1])))return!1}),n}function _(e,i,r){var a,s;if(m().validPositions[e-1]&&r&&m().tests[e])for(var o=m().validPositions[e-1].locator,l=m().tests[e][0].locator,c=0;c<r;c++)if(o[c]!==l[c])return o.slice(r+1);return(m().tests[e]||m().validPositions[e])&&t.each(m().tests[e]||[m().validPositions[e]],function(t,e){var o=r!==n?r:e.alternation,l=e.locator[o]!==n?e.locator[o].toString().indexOf(i):-1;(s===n||l<s)&&-1!==l&&(a=e,s=l)}),a?a.locator.slice((r!==n?r:a.alternation)+1):r!==n?_(e,i):n}if(u>1e4)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+m().mask;if(u===e&&s.matches===n)return f.push({match:s,locator:l.reverse(),cd:d}),!0;if(s.matches!==n){if(s.isGroup&&g!==s){if(s=h(i.matches[t.inArray(s,i.matches)+1],l))return!0}else if(s.isOptional){var y=s;if(s=a(s,r,l,g)){if(!v(o=f[f.length-1].match,y))return!0;p=!0,u=e}}else if(s.isAlternator){var b,x=s,w=[],T=f.slice(),k=l.length,P=r.length>0?r.shift():-1;if(-1===P||"string"==typeof P){var S,C=u,A=r.slice(),E=[];if("string"==typeof P)E=P.split(",");else for(S=0;S<x.matches.length;S++)E.push(S);for(var O=0;O<E.length;O++){if(S=parseInt(E[O]),f=[],r=_(u,S,k)||A.slice(),!0!==(s=h(x.matches[S]||i.matches[S],[S].concat(l),g)||s)&&s!==n&&E[E.length-1]<x.matches.length){var D=t.inArray(s,i.matches)+1;i.matches.length>D&&(s=h(i.matches[D],[D].concat(l.slice(1,l.length)),g))&&(E.push(D.toString()),t.each(f,function(t,e){e.alternation=l.length-1}))}b=f.slice(),u=C,f=[];for(var R=0;R<b.length;R++){var M=b[R],L=!1;M.alternation=M.alternation||k;for(var F=0;F<w.length;F++){var N=w[F];if("string"!=typeof P||-1!==t.inArray(M.locator[M.alternation].toString(),E)){if(function(t,e){return t.match.nativeDef===e.match.nativeDef||t.match.def===e.match.nativeDef||t.match.nativeDef===e.match.def}(M,N)){L=!0,M.alternation===N.alternation&&-1===N.locator[N.alternation].toString().indexOf(M.locator[M.alternation])&&(N.locator[N.alternation]=N.locator[N.alternation]+","+M.locator[M.alternation],N.alternation=M.alternation),M.match.nativeDef===N.match.def&&(M.locator[M.alternation]=N.locator[N.alternation],w.splice(w.indexOf(N),1,M));break}if(M.match.def===N.match.def){L=!1;break}if(function(t,i){return null===t.match.fn&&null!==i.match.fn&&i.match.fn.test(t.match.def,m(),e,!1,c,!1)}(M,N)||function(t,i){return null!==t.match.fn&&null!==i.match.fn&&i.match.fn.test(t.match.def.replace(/[\[\]]/g,""),m(),e,!1,c,!1)}(M,N)){M.alternation===N.alternation&&-1===M.locator[M.alternation].toString().indexOf(N.locator[N.alternation].toString().split("")[0])&&(M.na=M.na||M.locator[M.alternation].toString(),-1===M.na.indexOf(M.locator[M.alternation].toString().split("")[0])&&(M.na=M.na+","+M.locator[N.alternation].toString().split("")[0]),L=!0,M.locator[M.alternation]=N.locator[N.alternation].toString().split("")[0]+","+M.locator[M.alternation],w.splice(w.indexOf(N),0,M));break}}}L||w.push(M)}}"string"==typeof P&&(w=t.map(w,function(e,i){if(isFinite(i)){var r=e.alternation,a=e.locator[r].toString().split(",");e.locator[r]=n,e.alternation=n;for(var s=0;s<a.length;s++)-1!==t.inArray(a[s],E)&&(e.locator[r]!==n?(e.locator[r]+=",",e.locator[r]+=a[s]):e.locator[r]=parseInt(a[s]),e.alternation=r);if(e.locator[r]!==n)return e}})),f=T.concat(w),u=e,p=f.length>0,s=w.length>0,r=A.slice()}else s=h(x.matches[P]||i.matches[P],[P].concat(l),g);if(s)return!0}else if(s.isQuantifier&&g!==i.matches[t.inArray(s,i.matches)-1])for(var I=s,j=r.length>0?r.shift():0;j<(isNaN(I.quantifier.max)?j+1:I.quantifier.max)&&u<=e;j++){var $=i.matches[t.inArray(I,i.matches)-1];if(s=h($,[j].concat(l),$)){if((o=f[f.length-1].match).optionalQuantifier=j>I.quantifier.min-1,v(o,$)){if(j>I.quantifier.min-1){p=!0,u=e;break}return!0}return!0}}else if(s=a(s,r,l,g))return!0}else u++}for(var g=r.length>0?r.shift():0;g<i.matches.length;g++)if(!0!==i.matches[g].isQuantifier){var v=h(i.matches[g],[g].concat(s),l);if(v&&u===e)return v;if(u>e)break}}function s(t){if(c.keepStatic&&e>0&&t.length>1+(""===t[t.length-1].match.def?1:0)&&!0!==t[0].match.optionality&&!0!==t[0].match.optionalQuantifier&&null===t[0].match.fn&&!/[0-9a-bA-Z]/.test(t[0].match.def)){if(m().validPositions[e-1]===n)return[y(t)];if(m().validPositions[e-1].alternation===t[0].alternation)return[y(t)];if(m().validPositions[e-1])return[y(t)]}return t}var o,l=m().maskToken,u=i?r:0,h=i?i.slice():[0],f=[],p=!1,d=i?i.join(""):"";if(e>-1){if(i===n){for(var g,v=e-1;(g=m().validPositions[v]||m().tests[v])===n&&v>-1;)v--;g!==n&&v>-1&&(h=function(e){var i=[];return t.isArray(e)||(e=[e]),e.length>0&&(e[0].alternation===n?0===(i=y(e.slice()).locator.slice()).length&&(i=e[0].locator.slice()):t.each(e,function(t,e){if(""!==e.def)if(0===i.length)i=e.locator.slice();else for(var n=0;n<i.length;n++)e.locator[n]&&-1===i[n].toString().indexOf(e.locator[n])&&(i[n]+=","+e.locator[n])})),i}(g),d=h.join(""),u=v)}if(m().tests[e]&&m().tests[e][0].cd===d)return s(m().tests[e]);for(var _=h.shift();_<l.length&&!(a(l[_],h,[_])&&u===e||u>e);_++);}return(0===f.length||p)&&f.push({match:{fn:null,cardinality:0,optionality:!0,casing:null,def:"",placeholder:""},locator:[],cd:d}),i!==n&&m().tests[e]?s(t.extend(!0,[],f)):(m().tests[e]=t.extend(!0,[],f),s(m().tests[e]))}function k(){return m()._buffer===n&&(m()._buffer=d(!1,1),m().buffer===n&&(m().buffer=m()._buffer.slice())),m()._buffer}function P(t){return m().buffer!==n&&!0!==t||(m().buffer=d(!0,v(),!0)),m().buffer}function S(t,e,i){var r,a;if(!0===t)g(),t=0,e=i.length;else for(r=t;r<e;r++)delete m().validPositions[r];for(a=t,r=t;r<e;r++)if(g(!0),i[r]!==c.skipOptionalPartCharacter){var s=A(a,i[r],!0,!0);!1!==s&&(g(!0),a=s.caret!==n?s.caret:s.pos+1)}}function C(e,i,r){for(var a,s=c.greedy?i:i.slice(0,1),o=!1,l=r!==n?r.split(","):[],u=0;u<l.length;u++)-1!==(a=e.indexOf(l[u]))&&e.splice(a,1);for(var h=0;h<e.length;h++)if(-1!==t.inArray(e[h],s)){o=!0;break}return o}function A(e,i,a,s,o,l){function u(t){var e=K?t.begin-t.end>1||t.begin-t.end==1:t.end-t.begin>1||t.end-t.begin==1;return e&&0===t.begin&&t.end===m().maskLength?"full":e}function h(i,a,o){var l=!1;return t.each(T(i),function(h,p){for(var d=p.match,y=a?1:0,b="",x=d.cardinality;x>y;x--)b+=R(i-(x-1));if(a&&(b+=a),P(!0),!1!==(l=null!=d.fn?d.fn.test(b,m(),i,o,c,u(e)):(a===d.def||a===c.skipOptionalPartCharacter)&&""!==d.def&&{c:L(i,d,!0)||d.def,pos:i})){var w=l.c!==n?l.c:a;w=w===c.skipOptionalPartCharacter&&null===d.fn?L(i,d,!0)||d.def:w;var T=i,k=P();if(l.remove!==n&&(t.isArray(l.remove)||(l.remove=[l.remove]),t.each(l.remove.sort(function(t,e){return e-t}),function(t,e){_(e,e+1,!0)})),l.insert!==n&&(t.isArray(l.insert)||(l.insert=[l.insert]),t.each(l.insert.sort(function(t,e){return t-e}),function(t,e){A(e.pos,e.c,!0,s)})),l.refreshFromBuffer){var C=l.refreshFromBuffer;if(S(!0===C?C:C.start,C.end,k),l.pos===n&&l.c===n)return l.pos=v(),!1;if((T=l.pos!==n?l.pos:i)!==i)return l=t.extend(l,A(T,w,!0,s)),!1}else if(!0!==l&&l.pos!==n&&l.pos!==i&&(T=l.pos,S(i,T,P().slice()),T!==i))return l=t.extend(l,A(T,w,!0)),!1;return(!0===l||l.pos!==n||l.c!==n)&&(h>0&&g(!0),f(T,t.extend({},p,{input:function(e,i,n){switch(c.casing||i.casing){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"title":var a=m().validPositions[n-1];e=0===n||a&&a.input===String.fromCharCode(r.keyCode.SPACE)?e.toUpperCase():e.toLowerCase();break;default:if(t.isFunction(c.casing)){var s=Array.prototype.slice.call(arguments);s.push(m().validPositions),e=c.casing.apply(this,s)}}return e}(w,d,T)}),s,u(e))||(l=!1),!1)}}),l}function f(e,i,r,a){if(a||c.insertMode&&m().validPositions[e]!==n&&r===n){var s,o=t.extend(!0,{},m().validPositions),l=v(n,!0);for(s=e;s<=l;s++)delete m().validPositions[s];m().validPositions[e]=t.extend(!0,{},i);var u,h=!0,f=m().validPositions,d=!1,_=m().maskLength;for(s=u=e;s<=l;s++){var y=o[s];if(y!==n)for(var b=u;b<m().maskLength&&(null===y.match.fn&&f[s]&&(!0===f[s].match.optionalQuantifier||!0===f[s].match.optionality)||null!=y.match.fn);){if(b++,!1===d&&o[b]&&o[b].match.def===y.match.def)m().validPositions[b]=t.extend(!0,{},o[b]),m().validPositions[b].input=y.input,p(b),u=b,h=!0;else if(w(b,y.match.def)){var x=A(b,y.input,!0,!0);h=!1!==x,u=x.caret||x.insert?v():b,d=!0}else if(!(h=!0===y.generatedInput)&&b>=m().maskLength-1)break;if(m().maskLength<_&&(m().maskLength=_),h)break}if(!h)break}if(!h)return m().validPositions=t.extend(!0,{},o),g(!0),!1}else m().validPositions[e]=t.extend(!0,{},i);return g(!0),!0}function p(e){for(var i=e-1;i>-1&&!m().validPositions[i];i--);var r,a;for(i++;i<e;i++)m().validPositions[i]===n&&(!1===c.jitMasking||c.jitMasking>i)&&(""===(a=T(i,b(i-1).locator,i-1).slice())[a.length-1].match.def&&a.pop(),(r=y(a))&&(r.match.def===c.radixPointDefinitionSymbol||!E(i,!0)||t.inArray(c.radixPoint,P())<i&&r.match.fn&&r.match.fn.test(L(i),m(),i,!1,c))&&!1!==(x=h(i,L(i,r.match,!0)||(null==r.match.fn?r.match.def:""!==L(i)?L(i):P()[i]),!0))&&(m().validPositions[x.pos||i].generatedInput=!0))}a=!0===a;var d=e;e.begin!==n&&(d=K&&!u(e)?e.end:e.begin);var x=!0,k=t.extend(!0,{},m().validPositions);if(t.isFunction(c.preValidation)&&!a&&!0!==s&&!0!==l&&(x=c.preValidation(P(),d,i,u(e),c)),!0===x){if(p(d),u(e)&&(B(n,r.keyCode.DELETE,e,!0,!0),d=m().p),d<m().maskLength&&(W===n||d<W)&&(x=h(d,i,a),(!a||!0===s)&&!1===x&&!0!==l)){var D=m().validPositions[d];if(!D||null!==D.match.fn||D.match.def!==i&&i!==c.skipOptionalPartCharacter){if((c.insertMode||m().validPositions[O(d)]===n)&&!E(d,!0))for(var M=d+1,F=O(d);M<=F;M++)if(!1!==(x=h(M,i,a))){!function(e,i){var r=m().validPositions[i];if(r)for(var a=r.locator,s=a.length,o=e;o<i;o++)if(m().validPositions[o]===n&&!E(o,!0)){var l=T(o).slice(),c=y(l,!0),u=-1;""===l[l.length-1].match.def&&l.pop(),t.each(l,function(t,e){for(var i=0;i<s;i++){if(e.locator[i]===n||!C(e.locator[i].toString().split(","),a[i].toString().split(","),e.na)){var r=a[i],o=c.locator[i],l=e.locator[i];r-o>Math.abs(r-l)&&(c=e);break}u<i&&(u=i,c=e)}}),(c=t.extend({},c,{input:L(o,c.match,!0)||c.match.def})).generatedInput=!0,f(o,c,!0),m().validPositions[i]=n,h(i,r.input,!0)}}(d,x.pos!==n?x.pos:M),d=M;break}}else x={caret:O(d)}}!1===x&&c.keepStatic&&!a&&!0!==o&&(x=function(e,i,r){var a,o,l,u,h,f,p,d,_=t.extend(!0,{},m().validPositions),y=!1,b=v();for(u=m().validPositions[b];b>=0;b--)if((l=m().validPositions[b])&&l.alternation!==n){if(a=b,o=m().validPositions[a].alternation,u.locator[l.alternation]!==l.locator[l.alternation])break;u=l}if(o!==n){d=parseInt(a);var x=u.locator[u.alternation||o]!==n?u.locator[u.alternation||o]:p[0];x.length>0&&(x=x.split(",")[0]);var w=m().validPositions[d],k=m().validPositions[d-1];t.each(T(d,k?k.locator:n,d-1),function(a,l){p=l.locator[o]?l.locator[o].toString().split(","):[];for(var u=0;u<p.length;u++){var b=[],T=0,k=0,P=!1;if(x<p[u]&&(l.na===n||-1===t.inArray(p[u],l.na.split(","))||-1===t.inArray(x.toString(),p))){m().validPositions[d]=t.extend(!0,{},l);var S=m().validPositions[d].locator;for(m().validPositions[d].locator[o]=parseInt(p[u]),null==l.match.fn?(w.input!==l.match.def&&(P=!0,!0!==w.generatedInput&&b.push(w.input)),k++,m().validPositions[d].generatedInput=!/[0-9a-bA-Z]/.test(l.match.def),m().validPositions[d].input=l.match.def):m().validPositions[d].input=w.input,h=d+1;h<v(n,!0)+1;h++)(f=m().validPositions[h])&&!0!==f.generatedInput&&/[0-9a-bA-Z]/.test(f.input)?b.push(f.input):h<e&&T++,delete m().validPositions[h];for(P&&b[0]===l.match.def&&b.shift(),g(!0),y=!0;b.length>0;){var C=b.shift();if(C!==c.skipOptionalPartCharacter&&!(y=A(v(n,!0)+1,C,!1,s,!0)))break}if(y){m().validPositions[d].locator=S;var E=v(e)+1;for(h=d+1;h<v()+1;h++)((f=m().validPositions[h])===n||null==f.match.fn)&&h<e+(k-T)&&k++;y=A((e+=k-T)>E?E:e,i,r,s,!0)}if(y)return!1;g(),m().validPositions=t.extend(!0,{},_)}}})}return y}(d,i,a)),!0===x&&(x={pos:d})}if(t.isFunction(c.postValidation)&&!1!==x&&!a&&!0!==s&&!0!==l){var N=c.postValidation(P(!0),x,c);if(N.refreshFromBuffer&&N.buffer){var I=N.refreshFromBuffer;S(!0===I?I:I.start,I.end,N.buffer)}x=!0===N?x:N}return x&&x.pos===n&&(x.pos=d),!1!==x&&!0!==l||(g(!0),m().validPositions=t.extend(!0,{},k)),x}function E(t,e){var i=b(t).match;if(""===i.def&&(i=x(t).match),null!=i.fn)return i.fn;if(!0!==e&&t>-1){var n=T(t);return n.length>1+(""===n[n.length-1].match.def?1:0)}return!1}function O(t,e){var i=m().maskLength;if(t>=i)return i;var n=t;for(T(i+1).length>1&&(d(!0,i+1,!0),i=m().maskLength);++n<i&&(!0===e&&(!0!==x(n).match.newBlockMarker||!E(n))||!0!==e&&!E(n)););return n}function D(t,e){var i,n=t;if(n<=0)return 0;for(;--n>0&&(!0===e&&!0!==x(n).match.newBlockMarker||!0!==e&&!E(n)&&((i=T(n)).length<2||2===i.length&&""===i[1].match.def)););return n}function R(t){return m().validPositions[t]===n?L(t):m().validPositions[t].input}function M(e,i,r,a,s){if(a&&t.isFunction(c.onBeforeWrite)){var o=c.onBeforeWrite.call(V,a,i,r,c);if(o){if(o.refreshFromBuffer){var l=o.refreshFromBuffer;S(!0===l?l:l.start,l.end,o.buffer||i),i=P(!0)}r!==n&&(r=o.caret!==n?o.caret:r)}}e!==n&&(e.inputmask._valueSet(i.join("")),r===n||a!==n&&"blur"===a.type?H(e,r,0===i.length):p&&a&&"input"===a.type?setTimeout(function(){I(e,r)},0):I(e,r),!0===s&&(J=!0,t(e).trigger("input")))}function L(e,i,r){if((i=i||x(e).match).placeholder!==n||!0===r)return t.isFunction(i.placeholder)?i.placeholder(c):i.placeholder;if(null===i.fn){if(e>-1&&m().validPositions[e]===n){var a,s=T(e),o=[];if(s.length>1+(""===s[s.length-1].match.def?1:0))for(var l=0;l<s.length;l++)if(!0!==s[l].match.optionality&&!0!==s[l].match.optionalQuantifier&&(null===s[l].match.fn||a===n||!1!==s[l].match.fn.test(a.match.def,m(),e,!0,c))&&(o.push(s[l]),null===s[l].match.fn&&(a=s[l]),o.length>1&&/[0-9a-bA-Z]/.test(o[0].match.def)))return c.placeholder.charAt(e%c.placeholder.length)}return i.def}return c.placeholder.charAt(e%c.placeholder.length)}function F(e,a,s,o,l){var u=o.slice(),h="",f=-1,p=n;if(g(),s||!0===c.autoUnmask)f=O(f);else{var d=k().slice(0,O(-1)).join(""),_=u.join("").match(new RegExp("^"+r.escapeRegex(d),"g"));_&&_.length>0&&(u.splice(0,_.length*d.length),f=O(f))}if(-1===f?(m().p=O(f),f=0):m().p=f,t.each(u,function(i,r){if(r!==n)if(m().validPositions[i]===n&&u[i]===L(i)&&E(i,!0)&&!1===A(i,u[i],!0,n,n,!0))m().p++;else{var a=new t.Event("_checkval");a.which=r.charCodeAt(0),h+=r;var o=v(n,!0),l=m().validPositions[o],d=b(o+1,l?l.locator.slice():n,o);if(!function(t,e){return-1!==k().slice(t,O(t)).join("").indexOf(e)&&!E(t)&&x(t).match.nativeDef===e.charAt(e.length-1)}(f,h)||s||c.autoUnmask){var _=s?i:null==d.match.fn&&d.match.optionality&&o+1<m().p?o+1:m().p;p=nt.keypressEvent.call(e,a,!0,!1,s,_),f=_+1,h=""}else p=nt.keypressEvent.call(e,a,!0,!1,!0,o+1);if(!1!==p&&!s&&t.isFunction(c.onBeforeWrite)){var y=p;if(p=c.onBeforeWrite.call(V,a,P(),p.forwardPosition,c),(p=t.extend(y,p))&&p.refreshFromBuffer){var w=p.refreshFromBuffer;S(!0===w?w:w.start,w.end,p.buffer),g(!0),p.caret&&(m().p=p.caret,p.forwardPosition=p.caret)}}}}),a){var y=n;i.activeElement===e&&p&&(y=c.numericInput?D(p.forwardPosition):p.forwardPosition),M(e,P(),y,l||new t.Event("checkval"),l&&"input"===l.type)}}function N(e){if(e){if(e.inputmask===n)return e.value;e.inputmask&&e.inputmask.refreshValue&&nt.setValueEvent.call(e)}var i=[],r=m().validPositions;for(var a in r)r[a].match&&null!=r[a].match.fn&&i.push(r[a].input);var s=0===i.length?"":(K?i.reverse():i).join("");if(t.isFunction(c.onUnMask)){var o=(K?P().slice().reverse():P()).join("");s=c.onUnMask.call(V,o,s,c)}return s}function I(t,r,a,s){function o(t){return!0===s||!K||"number"!=typeof t||c.greedy&&""===c.placeholder||(t=P().join("").length-t),t}var l;if(r===n)return t.setSelectionRange?(r=t.selectionStart,a=t.selectionEnd):e.getSelection?(l=e.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==t&&l.commonAncestorContainer!==t||(r=l.startOffset,a=l.endOffset):i.selection&&i.selection.createRange&&(a=(r=0-(l=i.selection.createRange()).duplicate().moveStart("character",-t.inputmask._valueGet().length))+l.text.length),{begin:o(r),end:o(a)};if(r.begin!==n&&(a=r.end,r=r.begin),"number"==typeof r){r=o(r),a="number"==typeof(a=o(a))?a:r;var h=parseInt(((t.ownerDocument.defaultView||e).getComputedStyle?(t.ownerDocument.defaultView||e).getComputedStyle(t,null):t.currentStyle).fontSize)*a;if(t.scrollLeft=h>t.scrollWidth?h:0,u||!1!==c.insertMode||r!==a||a++,t.setSelectionRange)t.selectionStart=r,t.selectionEnd=a;else if(e.getSelection){if(l=i.createRange(),t.firstChild===n||null===t.firstChild){var f=i.createTextNode("");t.appendChild(f)}l.setStart(t.firstChild,r<t.inputmask._valueGet().length?r:t.inputmask._valueGet().length),l.setEnd(t.firstChild,a<t.inputmask._valueGet().length?a:t.inputmask._valueGet().length),l.collapse(!0);var p=e.getSelection();p.removeAllRanges(),p.addRange(l)}else t.createTextRange&&((l=t.createTextRange()).collapse(!0),l.moveEnd("character",a),l.moveStart("character",r),l.select());H(t,{begin:r,end:a})}}function j(e){var i,r,a=P(),s=a.length,o=v(),l={},c=m().validPositions[o],u=c!==n?c.locator.slice():n;for(i=o+1;i<a.length;i++)u=(r=b(i,u,i-1)).locator.slice(),l[i]=t.extend(!0,{},r);var h=c&&c.alternation!==n?c.locator[c.alternation]:n;for(i=s-1;i>o&&((r=l[i]).match.optionality||r.match.optionalQuantifier&&r.match.newBlockMarker||h&&(h!==l[i].locator[c.alternation]&&null!=r.match.fn||null===r.match.fn&&r.locator[c.alternation]&&C(r.locator[c.alternation].toString().split(","),h.toString().split(","))&&""!==T(i)[0].def))&&a[i]===L(i,r.match);i--)s--;return e?{l:s,def:l[s]?l[s].match:n}:s}function $(t){for(var e,i=j(),r=t.length,a=m().validPositions[v()];i<r&&!E(i,!0)&&(e=a!==n?b(i,a.locator.slice(""),a):x(i))&&!0!==e.match.optionality&&(!0!==e.match.optionalQuantifier&&!0!==e.match.newBlockMarker||i+1===r&&""===(a!==n?b(i+1,a.locator.slice(""),a):x(i+1)).match.def);)i++;for(;(e=m().validPositions[i-1])&&e&&e.match.optionality&&e.input===c.skipOptionalPartCharacter;)i--;return t.splice(i),t}function z(e){if(t.isFunction(c.isComplete))return c.isComplete(e,c);if("*"===c.repeat)return n;var i=!1,r=j(!0),a=D(r.l);if(r.def===n||r.def.newBlockMarker||r.def.optionality||r.def.optionalQuantifier){i=!0;for(var s=0;s<=a;s++){var o=b(s).match;if(null!==o.fn&&m().validPositions[s]===n&&!0!==o.optionality&&!0!==o.optionalQuantifier||null===o.fn&&e[s]!==L(s,o)){i=!1;break}}}return i}function B(e,i,a,s,o){if((c.numericInput||K)&&(i===r.keyCode.BACKSPACE?i=r.keyCode.DELETE:i===r.keyCode.DELETE&&(i=r.keyCode.BACKSPACE),K)){var l=a.end;a.end=a.begin,a.begin=l}i===r.keyCode.BACKSPACE&&(a.end-a.begin<1||!1===c.insertMode)?(a.begin=D(a.begin),m().validPositions[a.begin]!==n&&m().validPositions[a.begin].input===c.groupSeparator&&a.begin--):i===r.keyCode.DELETE&&a.begin===a.end&&(a.end=E(a.end,!0)&&m().validPositions[a.end]&&m().validPositions[a.end].input!==c.radixPoint?a.end+1:O(a.end)+1,m().validPositions[a.begin]!==n&&m().validPositions[a.begin].input===c.groupSeparator&&a.end++),_(a.begin,a.end,!1,s),!0!==s&&function(){if(c.keepStatic){for(var i=[],r=v(-1,!0),a=t.extend(!0,{},m().validPositions),s=m().validPositions[r];r>=0;r--){var o=m().validPositions[r];if(o){if(!0!==o.generatedInput&&/[0-9a-bA-Z]/.test(o.input)&&i.push(o.input),delete m().validPositions[r],o.alternation!==n&&o.locator[o.alternation]!==s.locator[o.alternation])break;s=o}}if(r>-1)for(m().p=O(v(-1,!0));i.length>0;){var l=new t.Event("keypress");l.which=i.pop().charCodeAt(0),nt.keypressEvent.call(e,l,!0,!1,!1,m().p)}else m().validPositions=t.extend(!0,{},a)}}();var u=v(a.begin,!0);if(u<a.begin)m().p=O(u);else if(!0!==s&&(m().p=a.begin,!0!==o))for(;m().p<u&&m().validPositions[m().p]===n;)m().p++}function q(n){var r=(n.ownerDocument.defaultView||e).getComputedStyle(n,null),a=i.createElement("div");a.style.width=r.width,a.style.textAlign=r.textAlign,(G=i.createElement("div")).className="im-colormask",n.parentNode.insertBefore(G,n),n.parentNode.removeChild(n),G.appendChild(a),G.appendChild(n),n.style.left=a.offsetLeft+"px",t(n).on("click",function(t){return I(n,function(t){var e,a=i.createElement("span");for(var s in r)isNaN(s)&&-1!==s.indexOf("font")&&(a.style[s]=r[s]);a.style.textTransform=r.textTransform,a.style.letterSpacing=r.letterSpacing,a.style.position="absolute",a.style.height="auto",a.style.width="auto",a.style.visibility="hidden",a.style.whiteSpace="nowrap",i.body.appendChild(a);var o,l=n.inputmask._valueGet(),c=0;for(e=0,o=l.length;e<=o;e++){if(a.innerHTML+=l.charAt(e)||"_",a.offsetWidth>=t){var u=t-c,h=a.offsetWidth-t;a.innerHTML=l.charAt(e),e=(u-=a.offsetWidth/3)<h?e-1:e;break}c=a.offsetWidth}return i.body.removeChild(a),e}(t.clientX)),nt.clickEvent.call(n,[t])}),t(n).on("keydown",function(t){t.shiftKey||!1===c.insertMode||setTimeout(function(){H(n)},0)})}function H(t,e,r){function a(){f||null!==o.fn&&l.input!==n?f&&(null!==o.fn&&l.input!==n||""===o.def)&&(f=!1,h+="</span>"):(f=!0,h+="<span class='im-static'>")}function s(n){!0!==n&&p!==e.begin||i.activeElement!==t||(h+="<span class='im-caret' style='border-right-width: 1px;border-right-style: solid;'></span>")}var o,l,u,h="",f=!1,p=0;if(G!==n){var d=P();if(e===n?e=I(t):e.begin===n&&(e={begin:e,end:e}),!0!==r){var g=v();do{s(),m().validPositions[p]?(l=m().validPositions[p],o=l.match,u=l.locator.slice(),a(),h+=d[p]):(l=b(p,u,p-1),o=l.match,u=l.locator.slice(),(!1===c.jitMasking||p<g||"number"==typeof c.jitMasking&&isFinite(c.jitMasking)&&c.jitMasking>p)&&(a(),h+=L(p,o))),p++}while((W===n||p<W)&&(null!==o.fn||""!==o.def)||g>p||f);-1===h.indexOf("im-caret")&&s(!0),f&&a()}var _=G.getElementsByTagName("div")[0];_.innerHTML=h,t.inputmask.positionColorMask(t,_)}}o=o||this.maskset,c=c||this.opts;var U,X,W,G,Y,V=this,Z=this.el,K=this.isRTL,Q=!1,J=!1,tt=!1,et=!1,it={on:function(e,i,a){var s=function(e){if(this.inputmask===n&&"FORM"!==this.nodeName){var i=t.data(this,"_inputmask_opts");i?new r(i).mask(this):it.off(this)}else{if("setvalue"===e.type||"FORM"===this.nodeName||!(this.disabled||this.readOnly&&!("keydown"===e.type&&e.ctrlKey&&67===e.keyCode||!1===c.tabThrough&&e.keyCode===r.keyCode.TAB))){switch(e.type){case"input":if(!0===J)return J=!1,e.preventDefault();break;case"keydown":Q=!1,J=!1;break;case"keypress":if(!0===Q)return e.preventDefault();Q=!0;break;case"click":if(h||f){var s=this,o=arguments;return setTimeout(function(){a.apply(s,o)},0),!1}}var l=a.apply(this,arguments);return!1===l&&(e.preventDefault(),e.stopPropagation()),l}e.preventDefault()}};e.inputmask.events[i]=e.inputmask.events[i]||[],e.inputmask.events[i].push(s),-1!==t.inArray(i,["submit","reset"])?null!==e.form&&t(e.form).on(i,s):t(e).on(i,s)},off:function(e,i){var n;e.inputmask&&e.inputmask.events&&(i?(n=[])[i]=e.inputmask.events[i]:n=e.inputmask.events,t.each(n,function(i,n){for(;n.length>0;){var r=n.pop();-1!==t.inArray(i,["submit","reset"])?null!==e.form&&t(e.form).off(i,r):t(e).off(i,r)}delete e.inputmask.events[i]}))}},nt={keydownEvent:function(e){var n=this,a=t(n),s=e.keyCode,o=I(n);if(s===r.keyCode.BACKSPACE||s===r.keyCode.DELETE||f&&s===r.keyCode.BACKSPACE_SAFARI||e.ctrlKey&&s===r.keyCode.X&&!function(t){var e=i.createElement("input"),n="oncut"in e;return n||(e.setAttribute("oncut","return;"),n="function"==typeof e.oncut),e=null,n}())e.preventDefault(),B(n,s,o),M(n,P(!0),m().p,e,n.inputmask._valueGet()!==P().join("")),n.inputmask._valueGet()===k().join("")?a.trigger("cleared"):!0===z(P())&&a.trigger("complete");else if(s===r.keyCode.END||s===r.keyCode.PAGE_DOWN){e.preventDefault();var l=O(v());c.insertMode||l!==m().maskLength||e.shiftKey||l--,I(n,e.shiftKey?o.begin:l,l,!0)}else s===r.keyCode.HOME&&!e.shiftKey||s===r.keyCode.PAGE_UP?(e.preventDefault(),I(n,0,e.shiftKey?o.begin:0,!0)):(c.undoOnEscape&&s===r.keyCode.ESCAPE||90===s&&e.ctrlKey)&&!0!==e.altKey?(F(n,!0,!1,U.split("")),a.trigger("click")):s!==r.keyCode.INSERT||e.shiftKey||e.ctrlKey?!0===c.tabThrough&&s===r.keyCode.TAB?(!0===e.shiftKey?(null===x(o.begin).match.fn&&(o.begin=O(o.begin)),o.end=D(o.begin,!0),o.begin=D(o.end,!0)):(o.begin=O(o.begin,!0),o.end=O(o.begin,!0),o.end<m().maskLength&&o.end--),o.begin<m().maskLength&&(e.preventDefault(),I(n,o.begin,o.end))):e.shiftKey||!1===c.insertMode&&(s===r.keyCode.RIGHT?setTimeout(function(){var t=I(n);I(n,t.begin)},0):s===r.keyCode.LEFT&&setTimeout(function(){var t=I(n);I(n,K?t.begin+1:t.begin-1)},0)):(c.insertMode=!c.insertMode,I(n,c.insertMode||o.begin!==m().maskLength?o.begin:o.begin-1));c.onKeyDown.call(this,e,P(),I(n).begin,c),tt=-1!==t.inArray(s,c.ignorables)},keypressEvent:function(e,i,a,s,o){var l=this,u=t(l),h=e.which||e.charCode||e.keyCode;if(!(!0===i||e.ctrlKey&&e.altKey)&&(e.ctrlKey||e.metaKey||tt))return h===r.keyCode.ENTER&&U!==P().join("")&&(U=P().join(""),setTimeout(function(){u.trigger("change")},0)),!0;if(h){46===h&&!1===e.shiftKey&&""!==c.radixPoint&&(h=c.radixPoint.charCodeAt(0));var f,p=i?{begin:o,end:o}:I(l),d=String.fromCharCode(h);m().writeOutBuffer=!0;var v=A(p,d,s);if(!1!==v&&(g(!0),f=v.caret!==n?v.caret:i?v.pos+1:O(v.pos),m().p=f),!1!==a&&(setTimeout(function(){c.onKeyValidation.call(l,h,v,c)},0),m().writeOutBuffer&&!1!==v)){var _=P();M(l,_,c.numericInput&&v.caret===n?D(f):f,e,!0!==i),!0!==i&&setTimeout(function(){!0===z(_)&&u.trigger("complete")},0)}if(e.preventDefault(),i)return!1!==v&&(v.forwardPosition=f),v}},pasteEvent:function(i){var n,r=i.originalEvent||i,a=t(this),s=this.inputmask._valueGet(!0),o=I(this);K&&(n=o.end,o.end=o.begin,o.begin=n);var l=s.substr(0,o.begin),u=s.substr(o.end,s.length);if(l===(K?k().reverse():k()).slice(0,o.begin).join("")&&(l=""),u===(K?k().reverse():k()).slice(o.end).join("")&&(u=""),K&&(n=l,l=u,u=n),e.clipboardData&&e.clipboardData.getData)s=l+e.clipboardData.getData("Text")+u;else{if(!r.clipboardData||!r.clipboardData.getData)return!0;s=l+r.clipboardData.getData("text/plain")+u}var h=s;if(t.isFunction(c.onBeforePaste)){if(!1===(h=c.onBeforePaste.call(V,s,c)))return i.preventDefault();h||(h=s)}return F(this,!1,!1,K?h.split("").reverse():h.toString().split("")),M(this,P(),O(v()),i,U!==P().join("")),!0===z(P())&&a.trigger("complete"),i.preventDefault()},inputFallBackEvent:function(e){var i=this,n=i.inputmask._valueGet();if(P().join("")!==n){var a=I(i);if(!1===function(e,i,n){if("."===i.charAt(n.begin-1)&&""!==c.radixPoint&&((i=i.split(""))[n.begin-1]=c.radixPoint.charAt(0),i=i.join("")),i.charAt(n.begin-1)===c.radixPoint&&i.length>P().length){var r=new t.Event("keypress");return r.which=c.radixPoint.charCodeAt(0),nt.keypressEvent.call(e,r,!0,!0,!1,n.begin-1),!1}}(i,n,a))return!1;if(n=n.replace(new RegExp("("+r.escapeRegex(k().join(""))+")*"),""),!1===function(e,i,n){if(h){var r=i.replace(P().join(""),"");if(1===r.length){var a=new t.Event("keypress");return a.which=r.charCodeAt(0),nt.keypressEvent.call(e,a,!0,!0,!1,m().validPositions[n.begin-1]?n.begin:n.begin-1),!1}}}(i,n,a))return!1;a.begin>n.length&&(I(i,n.length),a=I(i));var s=P().join(""),o=n.substr(0,a.begin),l=n.substr(a.begin),u=s.substr(0,a.begin),f=s.substr(a.begin),p=a,d="",g=!1;if(o!==u){p.begin=0;for(var v=(g=o.length>=u.length)?o.length:u.length,_=0;o.charAt(_)===u.charAt(_)&&_<v;_++)p.begin++;g&&(d+=o.slice(p.begin,p.end))}l!==f&&(l.length>f.length?g&&(p.end=p.begin):l.length<f.length?p.end+=f.length-l.length:l.charAt(0)!==f.charAt(0)&&p.end++),M(i,P(),p),d.length>0?t.each(d.split(""),function(e,n){var r=new t.Event("keypress");r.which=n.charCodeAt(0),tt=!1,nt.keypressEvent.call(i,r)}):(p.begin===p.end-1&&I(i,D(p.begin+1),p.end),e.keyCode=r.keyCode.DELETE,nt.keydownEvent.call(i,e)),e.preventDefault()}},setValueEvent:function(e){this.inputmask.refreshValue=!1;var i=this.inputmask._valueGet(!0);t.isFunction(c.onBeforeMask)&&(i=c.onBeforeMask.call(V,i,c)||i),i=i.split(""),F(this,!0,!1,K?i.reverse():i),U=P().join(""),(c.clearMaskOnLostFocus||c.clearIncomplete)&&this.inputmask._valueGet()===k().join("")&&this.inputmask._valueSet("")},focusEvent:function(t){var e=this.inputmask._valueGet();c.showMaskOnFocus&&(!c.showMaskOnHover||c.showMaskOnHover&&""===e)&&(this.inputmask._valueGet()!==P().join("")?M(this,P(),O(v())):!1===et&&I(this,O(v()))),!0===c.positionCaretOnTab&&!1===et&&""!==e&&(M(this,P(),I(this)),nt.clickEvent.apply(this,[t,!0])),U=P().join("")},mouseleaveEvent:function(t){if(et=!1,c.clearMaskOnLostFocus&&i.activeElement!==this){var e=P().slice(),n=this.inputmask._valueGet();n!==this.getAttribute("placeholder")&&""!==n&&(-1===v()&&n===k().join("")?e=[]:$(e),M(this,e))}},clickEvent:function(e,r){var a=this;setTimeout(function(){if(i.activeElement===a){var e=I(a);if(r&&(K?e.end=e.begin:e.begin=e.end),e.begin===e.end)switch(c.positionCaretOnClick){case"none":break;case"radixFocus":if(function(e){if(""!==c.radixPoint){var i=m().validPositions;if(i[e]===n||i[e].input===L(e)){if(e<O(-1))return!0;var r=t.inArray(c.radixPoint,P());if(-1!==r){for(var a in i)if(r<a&&i[a].input!==L(a))return!1;return!0}}}return!1}(e.begin)){var s=P().join("").indexOf(c.radixPoint);I(a,c.numericInput?O(s):s);break}default:var o=e.begin,l=v(o,!0),u=O(l);if(o<u)I(a,E(o,!0)||E(o-1,!0)?o:O(o));else{var h=m().validPositions[l],f=b(u,h?h.match.locator:n,h),p=L(u,f.match);if(""!==p&&P()[u]!==p&&!0!==f.match.optionalQuantifier&&!0!==f.match.newBlockMarker||!E(u,!0)&&f.match.def===p){var d=O(u);(o>=d||o===u)&&(u=d)}I(a,u)}}}},0)},dblclickEvent:function(t){var e=this;setTimeout(function(){I(e,0,O(v()))},0)},cutEvent:function(n){var a=t(this),s=I(this),o=n.originalEvent||n,l=e.clipboardData||o.clipboardData,c=K?P().slice(s.end,s.begin):P().slice(s.begin,s.end);l.setData("text",K?c.reverse().join(""):c.join("")),i.execCommand&&i.execCommand("copy"),B(this,r.keyCode.DELETE,s),M(this,P(),m().p,n,U!==P().join("")),this.inputmask._valueGet()===k().join("")&&a.trigger("cleared")},blurEvent:function(e){var i=t(this);if(this.inputmask){var r=this.inputmask._valueGet(),a=P().slice();""!==r&&(c.clearMaskOnLostFocus&&(-1===v()&&r===k().join("")?a=[]:$(a)),!1===z(a)&&(setTimeout(function(){i.trigger("incomplete")},0),c.clearIncomplete&&(g(),a=c.clearMaskOnLostFocus?[]:k().slice())),M(this,a,n,e)),U!==P().join("")&&(U=a.join(""),i.trigger("change"))}},mouseenterEvent:function(t){et=!0,i.activeElement!==this&&c.showMaskOnHover&&this.inputmask._valueGet()!==P().join("")&&M(this,P())},submitEvent:function(t){U!==P().join("")&&X.trigger("change"),c.clearMaskOnLostFocus&&-1===v()&&Z.inputmask._valueGet&&Z.inputmask._valueGet()===k().join("")&&Z.inputmask._valueSet(""),c.removeMaskOnSubmit&&(Z.inputmask._valueSet(Z.inputmask.unmaskedvalue(),!0),setTimeout(function(){M(Z,P())},0))},resetEvent:function(t){Z.inputmask.refreshValue=!0,setTimeout(function(){X.trigger("setvalue")},0)}};if(r.prototype.positionColorMask=function(t,e){t.style.left=e.offsetLeft+"px"},a!==n)switch(a.action){case"isComplete":return Z=a.el,z(P());case"unmaskedvalue":return Z!==n&&a.value===n||(Y=a.value,Y=(t.isFunction(c.onBeforeMask)&&c.onBeforeMask.call(V,Y,c)||Y).split(""),F(n,!1,!1,K?Y.reverse():Y),t.isFunction(c.onBeforeWrite)&&c.onBeforeWrite.call(V,n,P(),0,c)),N(Z);case"mask":!function(e){it.off(e);var r=function(e,r){var a=e.getAttribute("type"),o="INPUT"===e.tagName&&-1!==t.inArray(a,r.supportsInputType)||e.isContentEditable||"TEXTAREA"===e.tagName;if(!o)if("INPUT"===e.tagName){var l=i.createElement("input");l.setAttribute("type",a),o="text"===l.type,l=null}else o="partial";return!1!==o?function(e){function a(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==v()||!0!==r.nullable?i.activeElement===this&&r.clearMaskOnLostFocus?(K?$(P().slice()).reverse():$(P().slice())).join(""):l.call(this):"":l.call(this)}function o(e){c.call(this,e),this.inputmask&&t(this).trigger("setvalue")}var l,c;if(!e.inputmask.__valueGet){if(!0!==r.noValuePatching){if(Object.getOwnPropertyDescriptor){"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===s("test".__proto__)?function(t){return t.__proto__}:function(t){return t.constructor.prototype});var u=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e),"value"):n;u&&u.get&&u.set?(l=u.get,c=u.set,Object.defineProperty(e,"value",{get:a,set:o,configurable:!0})):"INPUT"!==e.tagName&&(l=function(){return this.textContent},c=function(t){this.textContent=t},Object.defineProperty(e,"value",{get:a,set:o,configurable:!0}))}else i.__lookupGetter__&&e.__lookupGetter__("value")&&(l=e.__lookupGetter__("value"),c=e.__lookupSetter__("value"),e.__defineGetter__("value",a),e.__defineSetter__("value",o));e.inputmask.__valueGet=l,e.inputmask.__valueSet=c}e.inputmask._valueGet=function(t){return K&&!0!==t?l.call(this.el).split("").reverse().join(""):l.call(this.el)},e.inputmask._valueSet=function(t,e){c.call(this.el,null===t||t===n?"":!0!==e&&K?t.split("").reverse().join(""):t)},l===n&&(l=function(){return this.value},c=function(t){this.value=t},function(e){if(t.valHooks&&(t.valHooks[e]===n||!0!==t.valHooks[e].inputmaskpatch)){var i=t.valHooks[e]&&t.valHooks[e].get?t.valHooks[e].get:function(t){return t.value},a=t.valHooks[e]&&t.valHooks[e].set?t.valHooks[e].set:function(t,e){return t.value=e,t};t.valHooks[e]={get:function(t){if(t.inputmask){if(t.inputmask.opts.autoUnmask)return t.inputmask.unmaskedvalue();var e=i(t);return-1!==v(n,n,t.inputmask.maskset.validPositions)||!0!==r.nullable?e:""}return i(t)},set:function(e,i){var n,r=t(e);return n=a(e,i),e.inputmask&&r.trigger("setvalue"),n},inputmaskpatch:!0}}}(e.type),function(e){it.on(e,"mouseenter",function(e){var i=t(this);this.inputmask._valueGet()!==P().join("")&&i.trigger("setvalue")})}(e))}}(e):e.inputmask=n,o}(e,c);if(!1!==r&&(X=t(Z=e),-1===(W=Z!==n?Z.maxLength:n)&&(W=n),!0===c.colorMask&&q(Z),p&&(Z.hasOwnProperty("inputmode")&&(Z.inputmode=c.inputmode,Z.setAttribute("inputmode",c.inputmode)),"rtfm"===c.androidHack&&(!0!==c.colorMask&&q(Z),Z.type="password")),!0===r&&(it.on(Z,"submit",nt.submitEvent),it.on(Z,"reset",nt.resetEvent),it.on(Z,"mouseenter",nt.mouseenterEvent),it.on(Z,"blur",nt.blurEvent),it.on(Z,"focus",nt.focusEvent),it.on(Z,"mouseleave",nt.mouseleaveEvent),!0!==c.colorMask&&it.on(Z,"click",nt.clickEvent),it.on(Z,"dblclick",nt.dblclickEvent),it.on(Z,"paste",nt.pasteEvent),it.on(Z,"dragdrop",nt.pasteEvent),it.on(Z,"drop",nt.pasteEvent),it.on(Z,"cut",nt.cutEvent),it.on(Z,"complete",c.oncomplete),it.on(Z,"incomplete",c.onincomplete),it.on(Z,"cleared",c.oncleared),p||!0===c.inputEventOnly?Z.removeAttribute("maxLength"):(it.on(Z,"keydown",nt.keydownEvent),it.on(Z,"keypress",nt.keypressEvent)),it.on(Z,"compositionstart",t.noop),it.on(Z,"compositionupdate",t.noop),it.on(Z,"compositionend",t.noop),it.on(Z,"keyup",t.noop),it.on(Z,"input",nt.inputFallBackEvent),it.on(Z,"beforeinput",t.noop)),it.on(Z,"setvalue",nt.setValueEvent),U=k().join(""),""!==Z.inputmask._valueGet(!0)||!1===c.clearMaskOnLostFocus||i.activeElement===Z)){var a=t.isFunction(c.onBeforeMask)&&c.onBeforeMask.call(V,Z.inputmask._valueGet(!0),c)||Z.inputmask._valueGet(!0);""!==a&&F(Z,!0,!1,K?a.split("").reverse():a.split(""));var o=P().slice();U=o.join(""),!1===z(o)&&c.clearIncomplete&&g(),c.clearMaskOnLostFocus&&i.activeElement!==Z&&(-1===v()?o=[]:$(o)),M(Z,o),i.activeElement===Z&&I(Z,O(v()))}}(Z);break;case"format":return Y=(t.isFunction(c.onBeforeMask)&&c.onBeforeMask.call(V,a.value,c)||a.value).split(""),F(n,!0,!1,K?Y.reverse():Y),a.metadata?{value:K?P().slice().reverse().join(""):P().join(""),metadata:l.call(this,{action:"getmetadata"},o,c)}:K?P().slice().reverse().join(""):P().join("");case"isValid":a.value?(Y=a.value.split(""),F(n,!0,!0,K?Y.reverse():Y)):a.value=P().join("");for(var rt=P(),at=j(),st=rt.length-1;st>at&&!E(st);st--);return rt.splice(at,st+1-at),z(rt)&&a.value===P().join("");case"getemptymask":return k().join("");case"remove":return Z&&Z.inputmask&&(X=t(Z),Z.inputmask._valueSet(c.autoUnmask?N(Z):Z.inputmask._valueGet(!0)),it.off(Z),Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Z),"value")&&Z.inputmask.__valueGet&&Object.defineProperty(Z,"value",{get:Z.inputmask.__valueGet,set:Z.inputmask.__valueSet,configurable:!0}):i.__lookupGetter__&&Z.__lookupGetter__("value")&&Z.inputmask.__valueGet&&(Z.__defineGetter__("value",Z.inputmask.__valueGet),Z.__defineSetter__("value",Z.inputmask.__valueSet)),Z.inputmask=n),Z;case"getmetadata":if(t.isArray(o.metadata)){var ot=d(!0,0,!1).join("");return t.each(o.metadata,function(t,e){if(e.mask===ot)return ot=e,!1}),ot}return o.metadata}}var c=navigator.userAgent,u=/mobile/i.test(c),h=/iemobile/i.test(c),f=/iphone/i.test(c)&&!h,p=/android/i.test(c)&&!h;return r.prototype={dataAttribute:"data-inputmask",defaults:{placeholder:"_",optionalmarker:{start:"[",end:"]"},quantifiermarker:{start:"{",end:"}"},groupmarker:{start:"(",end:")"},alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:t.noop,onincomplete:t.noop,oncleared:t.noop,repeat:0,greedy:!0,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,clearIncomplete:!1,alias:null,onKeyDown:t.noop,onBeforeMask:null,onBeforePaste:function(e,i){return t.isFunction(i.onBeforeMask)?i.onBeforeMask.call(this,e,i):e},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:t.noop,skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",radixPointDefinitionSymbol:n,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","password"],ignorables:[8,9,13,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,canClearPosition:t.noop,preValidation:null,postValidation:null,staticDefinitionSymbol:n,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"verbatim",colorMask:!1,androidHack:!1,importDataAttributes:!0},definitions:{9:{validator:"[0-9ï¼-ï¼]",cardinality:1,definitionSymbol:"*"},a:{validator:"[A-Za-zÐ-ÑÐÑÃ-Ã¿Âµ]",cardinality:1,definitionSymbol:"*"},"*":{validator:"[0-9ï¼-ï¼A-Za-zÐ-ÑÐÑÃ-Ã¿Âµ]",cardinality:1}},aliases:{},masksCache:{},mask:function(s){var c=this;return"string"==typeof s&&(s=i.getElementById(s)||i.querySelectorAll(s)),s=s.nodeName?[s]:s,t.each(s,function(i,s){var u=t.extend(!0,{},c.opts);!function(i,r,s,o){if(!0===r.importDataAttributes){var l,c,u,h,f=function(t,r){null!==(r=r!==n?r:i.getAttribute(o+"-"+t))&&("string"==typeof r&&(0===t.indexOf("on")?r=e[r]:"false"===r?r=!1:"true"===r&&(r=!0)),s[t]=r)},p=i.getAttribute(o);if(p&&""!==p&&(p=p.replace(new RegExp("'","g"),'"'),c=JSON.parse("{"+p+"}")),c)for(h in u=n,c)if("alias"===h.toLowerCase()){u=c[h];break}for(l in f("alias",u),s.alias&&a(s.alias,s,r),r){if(c)for(h in u=n,c)if(h.toLowerCase()===l.toLowerCase()){u=c[h];break}f(l,u)}}t.extend(!0,r,s),("rtl"===i.dir||r.rightAlign)&&(i.style.textAlign="right"),("rtl"===i.dir||r.numericInput)&&(i.dir="ltr",i.removeAttribute("dir"),r.isRTL=!0)}(s,u,t.extend(!0,{},c.userOptions),c.dataAttribute);var h=o(u,c.noMasksCache);h!==n&&(s.inputmask!==n&&(s.inputmask.opts.autoUnmask=!0,s.inputmask.remove()),s.inputmask=new r(n,n,!0),s.inputmask.opts=u,s.inputmask.noMasksCache=c.noMasksCache,s.inputmask.userOptions=t.extend(!0,{},c.userOptions),s.inputmask.isRTL=u.isRTL||u.numericInput,s.inputmask.el=s,s.inputmask.maskset=h,t.data(s,"_inputmask_opts",u),l.call(s.inputmask,{action:"mask"}))}),s&&s[0]&&s[0].inputmask||this},option:function(e,i){return"string"==typeof e?this.opts[e]:"object"===(void 0===e?"undefined":s(e))?(t.extend(this.userOptions,e),this.el&&!0!==i&&this.mask(this.el),this):void 0},unmaskedvalue:function(t){return this.maskset=this.maskset||o(this.opts,this.noMasksCache),l.call(this,{action:"unmaskedvalue",value:t})},remove:function(){return l.call(this,{action:"remove"})},getemptymask:function(){return this.maskset=this.maskset||o(this.opts,this.noMasksCache),l.call(this,{action:"getemptymask"})},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||o(this.opts,this.noMasksCache),l.call(this,{action:"isComplete"})},getmetadata:function(){return this.maskset=this.maskset||o(this.opts,this.noMasksCache),l.call(this,{action:"getmetadata"})},isValid:function(t){return this.maskset=this.maskset||o(this.opts,this.noMasksCache),l.call(this,{action:"isValid",value:t})},format:function(t,e){return this.maskset=this.maskset||o(this.opts,this.noMasksCache),l.call(this,{action:"format",value:t,metadata:e})},analyseMask:function(e,i,a){function s(t,e,i,n){this.matches=[],this.openGroup=t||!1,this.alternatorGroup=!1,this.isGroup=t||!1,this.isOptional=e||!1,this.isQuantifier=i||!1,this.isAlternator=n||!1,this.quantifier={min:1,max:1}}function o(e,s,o){o=o!==n?o:e.matches.length;var l=e.matches[o-1];if(i)0===s.indexOf("[")||_&&/\\d|\\s|\\w]/i.test(s)||"."===s?e.matches.splice(o++,0,{fn:new RegExp(s,a.casing?"i":""),cardinality:1,optionality:e.isOptional,newBlockMarker:l===n||l.def!==s,casing:null,def:s,placeholder:n,nativeDef:s}):(_&&(s=s[s.length-1]),t.each(s.split(""),function(t,i){l=e.matches[o-1],e.matches.splice(o++,0,{fn:null,cardinality:0,optionality:e.isOptional,newBlockMarker:l===n||l.def!==i&&null!==l.fn,casing:null,def:a.staticDefinitionSymbol||i,placeholder:a.staticDefinitionSymbol!==n?i:n,nativeDef:i})})),_=!1;else{var c=(a.definitions?a.definitions[s]:n)||r.prototype.definitions[s];if(c&&!_){for(var u=c.prevalidator,h=u?u.length:0,f=1;f<c.cardinality;f++){var p=h>=f?u[f-1]:[],d=p.validator,m=p.cardinality;e.matches.splice(o++,0,{fn:d?"string"==typeof d?new RegExp(d,a.casing?"i":""):new function(){this.test=d}:new RegExp("."),cardinality:m||1,optionality:e.isOptional,newBlockMarker:l===n||l.def!==(c.definitionSymbol||s),casing:c.casing,def:c.definitionSymbol||s,placeholder:c.placeholder,nativeDef:s}),l=e.matches[o-1]}e.matches.splice(o++,0,{fn:c.validator?"string"==typeof c.validator?new RegExp(c.validator,a.casing?"i":""):new function(){this.test=c.validator}:new RegExp("."),cardinality:c.cardinality,optionality:e.isOptional,newBlockMarker:l===n||l.def!==(c.definitionSymbol||s),casing:c.casing,def:c.definitionSymbol||s,placeholder:c.placeholder,nativeDef:s})}else e.matches.splice(o++,0,{fn:null,cardinality:0,optionality:e.isOptional,newBlockMarker:l===n||l.def!==s&&null!==l.fn,casing:null,def:a.staticDefinitionSymbol||s,placeholder:a.staticDefinitionSymbol!==n?s:n,nativeDef:s}),_=!1}}function l(){if(b.length>0){if(o(f=b[b.length-1],u),f.isAlternator){p=b.pop();for(var t=0;t<p.matches.length;t++)p.matches[t].isGroup=!1;b.length>0?(f=b[b.length-1]).matches.push(p):y.matches.push(p)}}else o(y,u)}var c,u,h,f,p,d,m,g=/(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g,v=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,_=!1,y=new s,b=[],x=[];for(i&&(a.optionalmarker.start=n,a.optionalmarker.end=n);c=i?v.exec(e):g.exec(e);){if(u=c[0],i)switch(u.charAt(0)){case"?":u="{0,1}";break;case"+":case"*":u="{"+u+"}"}if(_)l();else switch(u.charAt(0)){case a.escapeChar:_=!0,i&&l();break;case a.optionalmarker.end:case a.groupmarker.end:if((h=b.pop()).openGroup=!1,h!==n)if(b.length>0){if((f=b[b.length-1]).matches.push(h),f.isAlternator){p=b.pop();for(var w=0;w<p.matches.length;w++)p.matches[w].isGroup=!1,p.matches[w].alternatorGroup=!1;b.length>0?(f=b[b.length-1]).matches.push(p):y.matches.push(p)}}else y.matches.push(h);else l();break;case a.optionalmarker.start:b.push(new s(!1,!0));break;case a.groupmarker.start:b.push(new s(!0));break;case a.quantifiermarker.start:var T=new s(!1,!1,!0),k=(u=u.replace(/[{}]/g,"")).split(","),P=isNaN(k[0])?k[0]:parseInt(k[0]),S=1===k.length?P:isNaN(k[1])?k[1]:parseInt(k[1]);if("*"!==S&&"+"!==S||(P="*"===S?0:1),T.quantifier={min:P,max:S},b.length>0){var C=b[b.length-1].matches;(c=C.pop()).isGroup||((m=new s(!0)).matches.push(c),c=m),C.push(c),C.push(T)}else(c=y.matches.pop()).isGroup||(i&&null===c.fn&&"."===c.def&&(c.fn=new RegExp(c.def,a.casing?"i":"")),(m=new s(!0)).matches.push(c),c=m),y.matches.push(c),y.matches.push(T);break;case a.alternatormarker:if(b.length>0){var A=(f=b[b.length-1]).matches[f.matches.length-1];d=f.openGroup&&(A.matches===n||!1===A.isGroup&&!1===A.isAlternator)?b.pop():f.matches.pop()}else d=y.matches.pop();if(d.isAlternator)b.push(d);else if(d.alternatorGroup?(p=b.pop(),d.alternatorGroup=!1):p=new s(!1,!1,!1,!0),p.matches.push(d),b.push(p),d.openGroup){d.openGroup=!1;var E=new s(!0);E.alternatorGroup=!0,b.push(E)}break;default:l()}}for(;b.length>0;)h=b.pop(),y.matches.push(h);return y.matches.length>0&&(function e(r){r&&r.matches&&t.each(r.matches,function(t,s){var l=r.matches[t+1];(l===n||l.matches===n||!1===l.isQuantifier)&&s&&s.isGroup&&(s.isGroup=!1,i||(o(s,a.groupmarker.start,0),!0!==s.openGroup&&o(s,a.groupmarker.end))),e(s)})}(y),x.push(y)),(a.numericInput||a.isRTL)&&function t(e){for(var i in e.matches=e.matches.reverse(),e.matches)if(e.matches.hasOwnProperty(i)){var r=parseInt(i);if(e.matches[i].isQuantifier&&e.matches[r+1]&&e.matches[r+1].isGroup){var s=e.matches[i];e.matches.splice(i,1),e.matches.splice(r+1,0,s)}e.matches[i].matches!==n?e.matches[i]=t(e.matches[i]):e.matches[i]=function(t){return t===a.optionalmarker.start?t=a.optionalmarker.end:t===a.optionalmarker.end?t=a.optionalmarker.start:t===a.groupmarker.start?t=a.groupmarker.end:t===a.groupmarker.end&&(t=a.groupmarker.start),t}(e.matches[i])}return e}(x[0]),x}},r.extendDefaults=function(e){t.extend(!0,r.prototype.defaults,e)},r.extendDefinitions=function(e){t.extend(!0,r.prototype.definitions,e)},r.extendAliases=function(e){t.extend(!0,r.prototype.aliases,e)},r.format=function(t,e,i){return r(e).format(t,i)},r.unmask=function(t,e){return r(e).unmaskedvalue(t)},r.isValid=function(t,e){return r(e).isValid(t)},r.remove=function(e){t.each(e,function(t,e){e.inputmask&&e.inputmask.remove()})},r.escapeRegex=function(t){return t.replace(new RegExp("(\\"+["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"].join("|\\")+")","gim"),"\\$1")},r.keyCode={ALT:18,BACKSPACE:8,BACKSPACE_SAFARI:127,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91,X:88},r})?n.apply(e,r):n)&&(t.exports=a)},function(e,i){e.exports=t},function(t,e,i){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}i(4),i(9),i(12),i(13),i(14),i(15);var r=n(i(1)),a=n(i(0)),s=n(i(2));a.default===s.default&&i(16),window.Inputmask=r.default},function(t,e,i){var n=i(5);"string"==typeof n&&(n=[[t.i,n,""]]);var r={hmr:!0,transform:void 0};i(7)(n,r),n.locals&&(t.exports=n.locals)},function(t,e,i){(t.exports=i(6)(void 0)).push([t.i,"span.im-caret {\r\n    -webkit-animation: 1s blink step-end infinite;\r\n    animation: 1s blink step-end infinite;\r\n}\r\n\r\n@keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\n@-webkit-keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\nspan.im-static {\r\n    color: grey;\r\n}\r\n\r\ndiv.im-colormask {\r\n    display: inline-block;\r\n    border-style: inset;\r\n    border-width: 2px;\r\n    -webkit-appearance: textfield;\r\n    -moz-appearance: textfield;\r\n    appearance: textfield;\r\n}\r\n\r\ndiv.im-colormask > input {\r\n    position: absolute;\r\n    display: inline-block;\r\n    background-color: transparent;\r\n    color: transparent;\r\n    -webkit-appearance: caret;\r\n    -moz-appearance: caret;\r\n    appearance: caret;\r\n    border-style: none;\r\n    left: 0; /*calculated*/\r\n}\r\n\r\ndiv.im-colormask > input:focus {\r\n    outline: none;\r\n}\r\n\r\ndiv.im-colormask > input::-moz-selection{\r\n    background: none;\r\n}\r\n\r\ndiv.im-colormask > input::selection{\r\n    background: none;\r\n}\r\ndiv.im-colormask > input::-moz-selection{\r\n    background: none;\r\n}\r\n\r\ndiv.im-colormask > div {\r\n    color: black;\r\n    display: inline-block;\r\n    width: 100px; /*calculated*/\r\n}",""])},function(t,e){function i(t,e){var i=t[1]||"",n=t[3];if(!n)return i;if(e&&"function"==typeof btoa){var r=function(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}(n),a=n.sources.map(function(t){return"/*# sourceURL="+n.sourceRoot+t+" */"});return[i].concat(a).concat([r]).join("\n")}return[i].join("\n")}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=i(e,t);return e[2]?"@media "+e[2]+"{"+n+"}":n}).join("")},e.i=function(t,i){"string"==typeof t&&(t=[[null,t,""]]);for(var n={},r=0;r<this.length;r++){var a=this[r][0];"number"==typeof a&&(n[a]=!0)}for(r=0;r<t.length;r++){var s=t[r];"number"==typeof s[0]&&n[s[0]]||(i&&!s[2]?s[2]=i:i&&(s[2]="("+s[2]+") and ("+i+")"),e.push(s))}},e}},function(t,e,i){function n(t,e){for(var i=0;i<t.length;i++){var n=t[i],r=h[n.id];if(r){for(r.refs++,s=0;s<r.parts.length;s++)r.parts[s](n.parts[s]);for(;s<n.parts.length;s++)r.parts.push(c(n.parts[s],e))}else{for(var a=[],s=0;s<n.parts.length;s++)a.push(c(n.parts[s],e));h[n.id]={id:n.id,refs:1,parts:a}}}}function r(t,e){for(var i=[],n={},r=0;r<t.length;r++){var a=t[r],s=e.base?a[0]+e.base:a[0],o={css:a[1],media:a[2],sourceMap:a[3]};n[s]?n[s].parts.push(o):i.push(n[s]={id:s,parts:[o]})}return i}function a(t,e){var i=p(t.insertInto);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var n=g[g.length-1];if("top"===t.insertAt)n?n.nextSibling?i.insertBefore(e,n.nextSibling):i.appendChild(e):i.insertBefore(e,i.firstChild),g.push(e);else if("bottom"===t.insertAt)i.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=p(t.insertInto+" "+t.insertAt.before);i.insertBefore(e,r)}}function s(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=g.indexOf(t);e>=0&&g.splice(e,1)}function o(t){var e=document.createElement("style");return t.attrs.type="text/css",l(e,t.attrs),a(t,e),e}function l(t,e){Object.keys(e).forEach(function(i){t.setAttribute(i,e[i])})}function c(t,e){var i,n,r,c;if(e.transform&&t.css){if(!(c=e.transform(t.css)))return function(){};t.css=c}if(e.singleton){var h=m++;i=d||(d=o(e)),n=u.bind(null,i,h,!1),r=u.bind(null,i,h,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(i=function(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",l(e,t.attrs),a(t,e),e}(e),n=function(t,e,i){var n=i.css,r=i.sourceMap,a=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||a)&&(n=v(n)),r&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var s=new Blob([n],{type:"text/css"}),o=t.href;t.href=URL.createObjectURL(s),o&&URL.revokeObjectURL(o)}.bind(null,i,e),r=function(){s(i),i.href&&URL.revokeObjectURL(i.href)}):(i=o(e),n=function(t,e){var i=e.css,n=e.media;if(n&&t.setAttribute("media",n),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}.bind(null,i),r=function(){s(i)});return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else r()}}function u(t,e,i,n){var r=i?"":n.css;if(t.styleSheet)t.styleSheet.cssText=_(e,r);else{var a=document.createTextNode(r),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(a,s[e]):t.appendChild(a)}}var h={},f=function(t){var e;return function(){return void 0===e&&(e=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),e}}(),p=function(t){var e={};return function(t){if(void 0===e[t]){var i=function(t){return document.querySelector(t)}.call(this,t);if(i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}}(),d=null,m=0,g=[],v=i(8);t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=f()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var i=r(t,e);return n(i,e),function(t){for(var a=[],s=0;s<i.length;s++){var o=i[s];(l=h[o.id]).refs--,a.push(l)}for(t&&n(r(t,e),e),s=0;s<a.length;s++){var l=a[s];if(0===l.refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete h[l.id]}}}};var _=function(){var t=[];return function(e,i){return t[e]=i,t.filter(Boolean).join("\n")}}()},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var i=e.protocol+"//"+e.host,n=i+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var r,a=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?t:(r=0===a.indexOf("//")?a:0===a.indexOf("/")?i+a:n+a.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")})}},function(t,e,i){"use strict";var n,r,a;"function"==typeof Symbol&&Symbol.iterator,r=[i(0),i(1)],void 0!==(a="function"==typeof(n=function(t,e){return e.extendAliases({"dd/mm/yyyy":{mask:"1/2/y",placeholder:"dd/mm/yyyy",regex:{val1pre:new RegExp("[0-3]"),val1:new RegExp("0[1-9]|[12][0-9]|3[01]"),val2pre:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[1-9]|[12][0-9]|3[01])"+i+"[01])")},val2:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[1-9]|[12][0-9])"+i+"(0[1-9]|1[012]))|(30"+i+"(0[13-9]|1[012]))|(31"+i+"(0[13578]|1[02]))")}},leapday:"29/02/",separator:"/",yearrange:{minyear:1900,maxyear:2099},isInYearRange:function(t,e,i){if(isNaN(t))return!1;var n=parseInt(t.concat(e.toString().slice(t.length))),r=parseInt(t.concat(i.toString().slice(t.length)));return!isNaN(n)&&e<=n&&n<=i||!isNaN(r)&&e<=r&&r<=i},determinebaseyear:function(t,e,i){var n=(new Date).getFullYear();if(t>n)return t;if(e<n){for(var r=e.toString().slice(0,2),a=e.toString().slice(2,4);e<r+i;)r--;var s=r+a;return t>s?t:s}if(t<=n&&n<=e){for(var o=n.toString().slice(0,2);e<o+i;)o--;var l=o+i;return l<t?t:l}return n},onKeyDown:function(i,n,r,a){var s=t(this);if(i.ctrlKey&&i.keyCode===e.keyCode.RIGHT){var o=new Date;s.val(o.getDate().toString()+(o.getMonth()+1).toString()+o.getFullYear().toString()),s.trigger("setvalue")}},getFrontValue:function(t,e,i){for(var n=0,r=0,a=0;a<t.length&&"2"!==t.charAt(a);a++){var s=i.definitions[t.charAt(a)];s?(n+=r,r=s.cardinality):r++}return e.join("").substr(n,r)},postValidation:function(t,e,i){var n,r,a=t.join("");return 0===i.mask.indexOf("y")?(r=a.substr(0,4),n=a.substring(4,10)):(r=a.substring(6,10),n=a.substr(0,6)),e&&(n!==i.leapday||function(t){return isNaN(t)||29===new Date(t,2,0).getDate()}(r))},definitions:{1:{validator:function(t,e,i,n,r){var a=r.regex.val1.test(t);return n||a||t.charAt(1)!==r.separator&&-1==="-./".indexOf(t.charAt(1))||!(a=r.regex.val1.test("0"+t.charAt(0)))?a:(e.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:t.charAt(0)})},cardinality:2,prevalidator:[{validator:function(t,e,i,n,r){var a=t;isNaN(e.buffer[i+1])||(a+=e.buffer[i+1]);var s=1===a.length?r.regex.val1pre.test(a):r.regex.val1.test(a);if(s&&e.validPositions[i]&&(r.regex.val2(r.separator).test(t+e.validPositions[i].input)||(e.validPositions[i].input="0"===t?"1":"0")),!n&&!s){if(s=r.regex.val1.test(t+"0"))return e.buffer[i]=t,e.buffer[++i]="0",{pos:i,c:"0"};if(s=r.regex.val1.test("0"+t))return e.buffer[i]="0",{pos:++i}}return s},cardinality:1}]},2:{validator:function(t,e,i,n,r){var a=r.getFrontValue(e.mask,e.buffer,r);-1!==a.indexOf(r.placeholder[0])&&(a="01"+r.separator);var s=r.regex.val2(r.separator).test(a+t);return n||s||t.charAt(1)!==r.separator&&-1==="-./".indexOf(t.charAt(1))||!(s=r.regex.val2(r.separator).test(a+"0"+t.charAt(0)))?s:(e.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:t.charAt(0)})},cardinality:2,prevalidator:[{validator:function(t,e,i,n,r){isNaN(e.buffer[i+1])||(t+=e.buffer[i+1]);var a=r.getFrontValue(e.mask,e.buffer,r);-1!==a.indexOf(r.placeholder[0])&&(a="01"+r.separator);var s=1===t.length?r.regex.val2pre(r.separator).test(a+t):r.regex.val2(r.separator).test(a+t);return s&&e.validPositions[i]&&(r.regex.val2(r.separator).test(t+e.validPositions[i].input)||(e.validPositions[i].input="0"===t?"1":"0")),n||s||!(s=r.regex.val2(r.separator).test(a+"0"+t))?s:(e.buffer[i]="0",{pos:++i})},cardinality:1}]},y:{validator:function(t,e,i,n,r){return r.isInYearRange(t,r.yearrange.minyear,r.yearrange.maxyear)},cardinality:4,prevalidator:[{validator:function(t,e,i,n,r){var a=r.isInYearRange(t,r.yearrange.minyear,r.yearrange.maxyear);if(!n&&!a){var s=r.determinebaseyear(r.yearrange.minyear,r.yearrange.maxyear,t+"0").toString().slice(0,1);if(a=r.isInYearRange(s+t,r.yearrange.minyear,r.yearrange.maxyear))return e.buffer[i++]=s.charAt(0),{pos:i};if(s=r.determinebaseyear(r.yearrange.minyear,r.yearrange.maxyear,t+"0").toString().slice(0,2),a=r.isInYearRange(s+t,r.yearrange.minyear,r.yearrange.maxyear))return e.buffer[i++]=s.charAt(0),e.buffer[i++]=s.charAt(1),{pos:i}}return a},cardinality:1},{validator:function(t,e,i,n,r){var a=r.isInYearRange(t,r.yearrange.minyear,r.yearrange.maxyear);if(!n&&!a){var s=r.determinebaseyear(r.yearrange.minyear,r.yearrange.maxyear,t).toString().slice(0,2);if(a=r.isInYearRange(t[0]+s[1]+t[1],r.yearrange.minyear,r.yearrange.maxyear))return e.buffer[i++]=s.charAt(1),{pos:i};if(s=r.determinebaseyear(r.yearrange.minyear,r.yearrange.maxyear,t).toString().slice(0,2),a=r.isInYearRange(s+t,r.yearrange.minyear,r.yearrange.maxyear))return e.buffer[i-1]=s.charAt(0),e.buffer[i++]=s.charAt(1),e.buffer[i++]=t.charAt(0),{refreshFromBuffer:{start:i-3,end:i},pos:i}}return a},cardinality:2},{validator:function(t,e,i,n,r){return r.isInYearRange(t,r.yearrange.minyear,r.yearrange.maxyear)},cardinality:3}]}},insertMode:!1,autoUnmask:!1},"mm/dd/yyyy":{placeholder:"mm/dd/yyyy",alias:"dd/mm/yyyy",regex:{val2pre:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[13-9]|1[012])"+i+"[0-3])|(02"+i+"[0-2])")},val2:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[1-9]|1[012])"+i+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+i+"30)|((0[13578]|1[02])"+i+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(i,n,r,a){var s=t(this);if(i.ctrlKey&&i.keyCode===e.keyCode.RIGHT){var o=new Date;s.val((o.getMonth()+1).toString()+o.getDate().toString()+o.getFullYear().toString()),s.trigger("setvalue")}}},"yyyy/mm/dd":{mask:"y/1/2",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",leapday:"/02/29",onKeyDown:function(i,n,r,a){var s=t(this);if(i.ctrlKey&&i.keyCode===e.keyCode.RIGHT){var o=new Date;s.val(o.getFullYear().toString()+(o.getMonth()+1).toString()+o.getDate().toString()),s.trigger("setvalue")}}},"dd.mm.yyyy":{mask:"1.2.y",placeholder:"dd.mm.yyyy",leapday:"29.02.",separator:".",alias:"dd/mm/yyyy"},"dd-mm-yyyy":{mask:"1-2-y",placeholder:"dd-mm-yyyy",leapday:"29-02-",separator:"-",alias:"dd/mm/yyyy"},"mm.dd.yyyy":{mask:"1.2.y",placeholder:"mm.dd.yyyy",leapday:"02.29.",separator:".",alias:"mm/dd/yyyy"},"mm-dd-yyyy":{mask:"1-2-y",placeholder:"mm-dd-yyyy",leapday:"02-29-",separator:"-",alias:"mm/dd/yyyy"},"yyyy.mm.dd":{mask:"y.1.2",placeholder:"yyyy.mm.dd",leapday:".02.29",separator:".",alias:"yyyy/mm/dd"},"yyyy-mm-dd":{mask:"y-1-2",placeholder:"yyyy-mm-dd",leapday:"-02-29",separator:"-",alias:"yyyy/mm/dd"},datetime:{mask:"1/2/y h:s",placeholder:"dd/mm/yyyy hh:mm",alias:"dd/mm/yyyy",regex:{hrspre:new RegExp("[012]"),hrs24:new RegExp("2[0-4]|1[3-9]"),hrs:new RegExp("[01][0-9]|2[0-4]"),ampm:new RegExp("^[a|p|A|P][m|M]"),mspre:new RegExp("[0-5]"),ms:new RegExp("[0-5][0-9]")},timeseparator:":",hourFormat:"24",definitions:{h:{validator:function(t,e,i,n,r){if("24"===r.hourFormat&&24===parseInt(t,10))return e.buffer[i-1]="0",e.buffer[i]="0",{refreshFromBuffer:{start:i-1,end:i},c:"0"};var a=r.regex.hrs.test(t);if(!n&&!a&&(t.charAt(1)===r.timeseparator||-1!=="-.:".indexOf(t.charAt(1)))&&(a=r.regex.hrs.test("0"+t.charAt(0))))return e.buffer[i-1]="0",e.buffer[i]=t.charAt(0),{refreshFromBuffer:{start:++i-2,end:i},pos:i,c:r.timeseparator};if(a&&"24"!==r.hourFormat&&r.regex.hrs24.test(t)){var s=parseInt(t,10);return 24===s?(e.buffer[i+5]="a",e.buffer[i+6]="m"):(e.buffer[i+5]="p",e.buffer[i+6]="m"),(s-=12)<10?(e.buffer[i]=s.toString(),e.buffer[i-1]="0"):(e.buffer[i]=s.toString().charAt(1),e.buffer[i-1]=s.toString().charAt(0)),{refreshFromBuffer:{start:i-1,end:i+6},c:e.buffer[i]}}return a},cardinality:2,prevalidator:[{validator:function(t,e,i,n,r){var a=r.regex.hrspre.test(t);return n||a||!(a=r.regex.hrs.test("0"+t))?a:(e.buffer[i]="0",{pos:++i})},cardinality:1}]},s:{validator:"[0-5][0-9]",cardinality:2,prevalidator:[{validator:function(t,e,i,n,r){var a=r.regex.mspre.test(t);return n||a||!(a=r.regex.ms.test("0"+t))?a:(e.buffer[i]="0",{pos:++i})},cardinality:1}]},t:{validator:function(t,e,i,n,r){return r.regex.ampm.test(t+"m")},casing:"lower",cardinality:1}},insertMode:!1,autoUnmask:!1},datetime12:{mask:"1/2/y h:s t\\m",placeholder:"dd/mm/yyyy hh:mm xm",alias:"datetime",hourFormat:"12"},"mm/dd/yyyy hh:mm xm":{mask:"1/2/y h:s t\\m",placeholder:"mm/dd/yyyy hh:mm xm",alias:"datetime12",regex:{val2pre:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[13-9]|1[012])"+i+"[0-3])|(02"+i+"[0-2])")},val2:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[1-9]|1[012])"+i+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+i+"30)|((0[13578]|1[02])"+i+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(i,n,r,a){var s=t(this);if(i.ctrlKey&&i.keyCode===e.keyCode.RIGHT){var o=new Date;s.val((o.getMonth()+1).toString()+o.getDate().toString()+o.getFullYear().toString()),s.trigger("setvalue")}}},"hh:mm t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"h:s t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"hh:mm:ss":{mask:"h:s:s",placeholder:"hh:mm:ss",alias:"datetime",autoUnmask:!1},"hh:mm":{mask:"h:s",placeholder:"hh:mm",alias:"datetime",autoUnmask:!1},date:{alias:"dd/mm/yyyy"},"mm/yyyy":{mask:"1/y",placeholder:"mm/yyyy",leapday:"donotuse",separator:"/",alias:"mm/dd/yyyy"},shamsi:{regex:{val2pre:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[1-9]|1[012])"+i+"[0-3])")},val2:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[1-9]|1[012])"+i+"(0[1-9]|[12][0-9]))|((0[1-9]|1[012])"+i+"30)|((0[1-6])"+i+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},yearrange:{minyear:1300,maxyear:1499},mask:"y/1/2",leapday:"/12/30",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",clearIncomplete:!0},"yyyy-mm-dd hh:mm:ss":{mask:"y-1-2 h:s:s",placeholder:"yyyy-mm-dd hh:mm:ss",alias:"datetime",separator:"-",leapday:"-02-29",regex:{val2pre:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[13-9]|1[012])"+i+"[0-3])|(02"+i+"[0-2])")},val2:function(t){var i=e.escapeRegex.call(this,t);return new RegExp("((0[1-9]|1[012])"+i+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+i+"30)|((0[13578]|1[02])"+i+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},onKeyDown:function(t,e,i,n){}}}),e})?n.apply(e,r):n)&&(t.exports=a)},function(t,e,i){"use strict";var n;"function"==typeof Symbol&&Symbol.iterator,void 0!==(n=function(){return window}.call(e,i,e,t))&&(t.exports=n)},function(t,e,i){"use strict";var n;"function"==typeof Symbol&&Symbol.iterator,void 0!==(n=function(){return document}.call(e,i,e,t))&&(t.exports=n)},function(t,e,i){"use strict";var n,r,a;"function"==typeof Symbol&&Symbol.iterator,r=[i(0),i(1)],void 0!==(a="function"==typeof(n=function(t,e){return e.extendDefinitions({A:{validator:"[A-Za-zÐ-ÑÐÑÃ-Ã¿Âµ]",cardinality:1,casing:"upper"},"&":{validator:"[0-9A-Za-zÐ-ÑÐÑÃ-Ã¿Âµ]",cardinality:1,casing:"upper"},"#":{validator:"[0-9A-Fa-f]",cardinality:1,casing:"upper"}}),e.extendAliases({url:{definitions:{i:{validator:".",cardinality:1}},mask:"(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}",insertMode:!1,autoUnmask:!1,inputmode:"url"},ip:{mask:"i[i[i]].i[i[i]].i[i[i]].i[i[i]]",definitions:{i:{validator:function(t,e,i,n,r){return i-1>-1&&"."!==e.buffer[i-1]?(t=e.buffer[i-1]+t,t=i-2>-1&&"."!==e.buffer[i-2]?e.buffer[i-2]+t:"0"+t):t="00"+t,new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(t)},cardinality:1}},onUnMask:function(t,e,i){return t},inputmode:"numeric"},email:{mask:"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",greedy:!1,onBeforePaste:function(t,e){return(t=t.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]",cardinality:1,casing:"lower"},"-":{validator:"[0-9A-Za-z-]",cardinality:1,casing:"lower"}},onUnMask:function(t,e,i){return t},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",cardinality:1,casing:"upper"}},clearIncomplete:!0,autoUnmask:!0}}),e})?n.apply(e,r):n)&&(t.exports=a)},function(t,e,i){"use strict";var n,r,a;"function"==typeof Symbol&&Symbol.iterator,r=[i(0),i(1)],void 0!==(a="function"==typeof(n=function(t,e,i){function n(t,i){for(var n="",r=0;r<t.length;r++)e.prototype.definitions[t.charAt(r)]||i.definitions[t.charAt(r)]||i.optionalmarker.start===t.charAt(r)||i.optionalmarker.end===t.charAt(r)||i.quantifiermarker.start===t.charAt(r)||i.quantifiermarker.end===t.charAt(r)||i.groupmarker.start===t.charAt(r)||i.groupmarker.end===t.charAt(r)||i.alternatormarker===t.charAt(r)?n+="\\"+t.charAt(r):n+=t.charAt(r);return n}return e.extendAliases({numeric:{mask:function(t){if(0!==t.repeat&&isNaN(t.integerDigits)&&(t.integerDigits=t.repeat),t.repeat=0,t.groupSeparator===t.radixPoint&&("."===t.radixPoint?t.groupSeparator=",":","===t.radixPoint?t.groupSeparator=".":t.groupSeparator="")," "===t.groupSeparator&&(t.skipOptionalPartCharacter=i),t.autoGroup=t.autoGroup&&""!==t.groupSeparator,t.autoGroup&&("string"==typeof t.groupSize&&isFinite(t.groupSize)&&(t.groupSize=parseInt(t.groupSize)),isFinite(t.integerDigits))){var e=Math.floor(t.integerDigits/t.groupSize),r=t.integerDigits%t.groupSize;t.integerDigits=parseInt(t.integerDigits)+(0===r?e-1:e),t.integerDigits<1&&(t.integerDigits="*")}t.placeholder.length>1&&(t.placeholder=t.placeholder.charAt(0)),"radixFocus"===t.positionCaretOnClick&&""===t.placeholder&&!1===t.integerOptional&&(t.positionCaretOnClick="lvp"),t.definitions[";"]=t.definitions["~"],t.definitions[";"].definitionSymbol="~",!0===t.numericInput&&(t.positionCaretOnClick="radixFocus"===t.positionCaretOnClick?"lvp":t.positionCaretOnClick,t.digitsOptional=!1,isNaN(t.digits)&&(t.digits=2),t.decimalProtect=!1);var a="[+]";if(a+=n(t.prefix,t),!0===t.integerOptional?a+="~{1,"+t.integerDigits+"}":a+="~{"+t.integerDigits+"}",t.digits!==i){t.radixPointDefinitionSymbol=t.decimalProtect?":":t.radixPoint;var s=t.digits.toString().split(",");isFinite(s[0]&&s[1]&&isFinite(s[1]))?a+=t.radixPointDefinitionSymbol+";{"+t.digits+"}":(isNaN(t.digits)||parseInt(t.digits)>0)&&(t.digitsOptional?a+="["+t.radixPointDefinitionSymbol+";{1,"+t.digits+"}]":a+=t.radixPointDefinitionSymbol+";{"+t.digits+"}")}return a+=n(t.suffix,t),a+="[-]",t.greedy=!1,a},placeholder:"",greedy:!1,digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",groupSize:3,groupSeparator:"",autoGroup:!1,allowMinus:!0,negationSymbol:{front:"-",back:""},integerDigits:"+",integerOptional:!0,prefix:"",suffix:"",rightAlign:!0,decimalProtect:!0,min:null,max:null,step:1,insertMode:!0,autoUnmask:!1,unmaskAsNumber:!1,inputmode:"numeric",preValidation:function(e,n,r,a,s){if("-"===r||r===s.negationSymbol.front)return!0===s.allowMinus&&(s.isNegative=s.isNegative===i||!s.isNegative,""===e.join("")||{caret:n,dopost:!0});if(!1===a&&r===s.radixPoint&&s.digits!==i&&(isNaN(s.digits)||parseInt(s.digits)>0)){var o=t.inArray(s.radixPoint,e);if(-1!==o)return!0===s.numericInput?n===o:{caret:o+1}}return!0},postValidation:function(n,r,a){var s=a.suffix.split(""),o=a.prefix.split("");if(r.pos===i&&r.caret!==i&&!0!==r.dopost)return r;var l=r.caret!==i?r.caret:r.pos,c=n.slice();a.numericInput&&(l=c.length-l-1,c=c.reverse());var u=c[l];if(u===a.groupSeparator&&(u=c[l+=1]),l===c.length-a.suffix.length-1&&u===a.radixPoint)return r;u!==i&&u!==a.radixPoint&&u!==a.negationSymbol.front&&u!==a.negationSymbol.back&&(c[l]="?",a.prefix.length>0&&l>=(!1===a.isNegative?1:0)&&l<a.prefix.length-1+(!1===a.isNegative?1:0)?o[l-(!1===a.isNegative?1:0)]="?":a.suffix.length>0&&l>=c.length-a.suffix.length-(!1===a.isNegative?1:0)&&(s[l-(c.length-a.suffix.length-(!1===a.isNegative?1:0))]="?")),o=o.join(""),s=s.join("");var h=c.join("").replace(o,"");if(h=(h=(h=(h=h.replace(s,"")).replace(new RegExp(e.escapeRegex(a.groupSeparator),"g"),"")).replace(new RegExp("[-"+e.escapeRegex(a.negationSymbol.front)+"]","g"),"")).replace(new RegExp(e.escapeRegex(a.negationSymbol.back)+"$"),""),isNaN(a.placeholder)&&(h=h.replace(new RegExp(e.escapeRegex(a.placeholder),"g"),"")),h.length>1&&1!==h.indexOf(a.radixPoint)&&("0"===u&&(h=h.replace(/^\?/g,"")),h=h.replace(/^0/g,"")),h.charAt(0)===a.radixPoint&&""!==a.radixPoint&&!0!==a.numericInput&&(h="0"+h),""!==h){if(h=h.split(""),(!a.digitsOptional||a.enforceDigitsOnBlur&&"blur"===r.event)&&isFinite(a.digits)){var f=t.inArray(a.radixPoint,h),p=t.inArray(a.radixPoint,c);-1===f&&(h.push(a.radixPoint),f=h.length-1);for(var d=1;d<=a.digits;d++)a.digitsOptional&&(!a.enforceDigitsOnBlur||"blur"!==r.event)||h[f+d]!==i&&h[f+d]!==a.placeholder.charAt(0)?-1!==p&&c[p+d]!==i&&(h[f+d]=h[f+d]||c[p+d]):h[f+d]=r.placeholder||a.placeholder.charAt(0)}if(!0!==a.autoGroup||""===a.groupSeparator||u===a.radixPoint&&r.pos===i&&!r.dopost)h=h.join("");else{var m=h[h.length-1]===a.radixPoint&&r.c===a.radixPoint;h=e(function(t,e){var i="";if(i+="("+e.groupSeparator+"*{"+e.groupSize+"}){*}",""!==e.radixPoint){var n=t.join("").split(e.radixPoint);n[1]&&(i+=e.radixPoint+"*{"+n[1].match(/^\d*\??\d*/)[0].length+"}")}return i}(h,a),{numericInput:!0,jitMasking:!0,definitions:{"*":{validator:"[0-9?]",cardinality:1}}}).format(h.join("")),m&&(h+=a.radixPoint),h.charAt(0)===a.groupSeparator&&h.substr(1)}}if(a.isNegative&&"blur"===r.event&&(a.isNegative="0"!==h),h=o+h,h+=s,a.isNegative&&(h=a.negationSymbol.front+h,h+=a.negationSymbol.back),h=h.split(""),u!==i)if(u!==a.radixPoint&&u!==a.negationSymbol.front&&u!==a.negationSymbol.back)(l=t.inArray("?",h))>-1?h[l]=u:l=r.caret||0;else if(u===a.radixPoint||u===a.negationSymbol.front||u===a.negationSymbol.back){var g=t.inArray(u,h);-1!==g&&(l=g)}a.numericInput&&(l=h.length-l-1,h=h.reverse());var v={caret:u===i||r.pos!==i?l+(a.numericInput?-1:1):l,buffer:h,refreshFromBuffer:r.dopost||n.join("")!==h.join("")};return v.refreshFromBuffer?v:r},onBeforeWrite:function(n,r,a,s){if(n)switch(n.type){case"keydown":return s.postValidation(r,{caret:a,dopost:!0},s);case"blur":case"checkval":var o;if(function(t){t.parseMinMaxOptions===i&&(null!==t.min&&(t.min=t.min.toString().replace(new RegExp(e.escapeRegex(t.groupSeparator),"g"),""),","===t.radixPoint&&(t.min=t.min.replace(t.radixPoint,".")),t.min=isFinite(t.min)?parseFloat(t.min):NaN,isNaN(t.min)&&(t.min=Number.MIN_VALUE)),null!==t.max&&(t.max=t.max.toString().replace(new RegExp(e.escapeRegex(t.groupSeparator),"g"),""),","===t.radixPoint&&(t.max=t.max.replace(t.radixPoint,".")),t.max=isFinite(t.max)?parseFloat(t.max):NaN,isNaN(t.max)&&(t.max=Number.MAX_VALUE)),t.parseMinMaxOptions="done")}(s),null!==s.min||null!==s.max){if(o=s.onUnMask(r.join(""),i,t.extend({},s,{unmaskAsNumber:!0})),null!==s.min&&o<s.min)return s.isNegative=s.min<0,s.postValidation(s.min.toString().replace(".",s.radixPoint).split(""),{caret:a,dopost:!0,placeholder:"0"},s);if(null!==s.max&&o>s.max)return s.isNegative=s.max<0,s.postValidation(s.max.toString().replace(".",s.radixPoint).split(""),{caret:a,dopost:!0,placeholder:"0"},s)}return s.postValidation(r,{caret:a,placeholder:"0",event:"blur"},s);case"_checkval":return{caret:a}}},regex:{integerPart:function(t,i){return i?new RegExp("["+e.escapeRegex(t.negationSymbol.front)+"+]?"):new RegExp("["+e.escapeRegex(t.negationSymbol.front)+"+]?\\d+")},integerNPart:function(t){return new RegExp("[\\d"+e.escapeRegex(t.groupSeparator)+e.escapeRegex(t.placeholder.charAt(0))+"]+")}},definitions:{"~":{validator:function(t,n,r,a,s,o){var l=a?new RegExp("[0-9"+e.escapeRegex(s.groupSeparator)+"]").test(t):new RegExp("[0-9]").test(t);if(!0===l){if(!0!==s.numericInput&&n.validPositions[r]!==i&&"~"===n.validPositions[r].match.def&&!o){var c=n.buffer.join(""),u=(c=(c=c.replace(new RegExp("[-"+e.escapeRegex(s.negationSymbol.front)+"]","g"),"")).replace(new RegExp(e.escapeRegex(s.negationSymbol.back)+"$"),"")).split(s.radixPoint);u.length>1&&(u[1]=u[1].replace(/0/g,s.placeholder.charAt(0))),"0"===u[0]&&(u[0]=u[0].replace(/0/g,s.placeholder.charAt(0))),c=u[0]+s.radixPoint+u[1]||"";var h=n._buffer.join("");for(c===s.radixPoint&&(c=h);null===c.match(e.escapeRegex(h)+"$");)h=h.slice(1);l=(c=(c=c.replace(h,"")).split(""))[r]===i?{pos:r,remove:r}:{pos:r}}}else a||t!==s.radixPoint||n.validPositions[r-1]!==i||(n.buffer[r]="0",l={pos:r+1});return l},cardinality:1},"+":{validator:function(t,e,i,n,r){return r.allowMinus&&("-"===t||t===r.negationSymbol.front)},cardinality:1,placeholder:""},"-":{validator:function(t,e,i,n,r){return r.allowMinus&&t===r.negationSymbol.back},cardinality:1,placeholder:""},":":{validator:function(t,i,n,r,a){var s="["+e.escapeRegex(a.radixPoint)+"]",o=new RegExp(s).test(t);return o&&i.validPositions[n]&&i.validPositions[n].match.placeholder===a.radixPoint&&(o={caret:n+1}),o},cardinality:1,placeholder:function(t){return t.radixPoint}}},onUnMask:function(t,i,n){if(""===i&&!0===n.nullable)return i;var r=t.replace(n.prefix,"");return r=(r=r.replace(n.suffix,"")).replace(new RegExp(e.escapeRegex(n.groupSeparator),"g"),""),""!==n.placeholder.charAt(0)&&(r=r.replace(new RegExp(n.placeholder.charAt(0),"g"),"0")),n.unmaskAsNumber?(""!==n.radixPoint&&-1!==r.indexOf(n.radixPoint)&&(r=r.replace(e.escapeRegex.call(this,n.radixPoint),".")),r=(r=r.replace(new RegExp("^"+e.escapeRegex(n.negationSymbol.front)),"-")).replace(new RegExp(e.escapeRegex(n.negationSymbol.back)+"$"),""),Number(r)):r},isComplete:function(t,i){var n=t.join("");if(t.slice().join("")!==n)return!1;var r=n.replace(i.prefix,"");return r=(r=r.replace(i.suffix,"")).replace(new RegExp(e.escapeRegex(i.groupSeparator),"g"),""),","===i.radixPoint&&(r=r.replace(e.escapeRegex(i.radixPoint),".")),isFinite(r)},onBeforeMask:function(t,n){if(n.isNegative=i,t=t.toString().charAt(t.length-1)===n.radixPoint?t.toString().substr(0,t.length-1):t.toString(),""!==n.radixPoint&&isFinite(t)){var r=t.split("."),a=""!==n.groupSeparator?parseInt(n.groupSize):0;2===r.length&&(r[0].length>a||r[1].length>a||r[0].length<=a&&r[1].length<a)&&(t=t.replace(".",n.radixPoint))}var s=t.match(/,/g),o=t.match(/\./g);if(t=o&&s?o.length>s.length?(t=t.replace(/\./g,"")).replace(",",n.radixPoint):s.length>o.length?(t=t.replace(/,/g,"")).replace(".",n.radixPoint):t.indexOf(".")<t.indexOf(",")?t.replace(/\./g,""):t.replace(/,/g,""):t.replace(new RegExp(e.escapeRegex(n.groupSeparator),"g"),""),0===n.digits&&(-1!==t.indexOf(".")?t=t.substring(0,t.indexOf(".")):-1!==t.indexOf(",")&&(t=t.substring(0,t.indexOf(",")))),""!==n.radixPoint&&isFinite(n.digits)&&-1!==t.indexOf(n.radixPoint)){var l=t.split(n.radixPoint)[1].match(new RegExp("\\d*"))[0];if(parseInt(n.digits)<l.toString().length){var c=Math.pow(10,parseInt(n.digits));t=t.replace(e.escapeRegex(n.radixPoint),"."),t=(t=Math.round(parseFloat(t)*c)/c).toString().replace(".",n.radixPoint)}}return t},canClearPosition:function(t,e,i,n,r){var a=t.validPositions[e],s=a.input!==r.radixPoint||null!==t.validPositions[e].match.fn&&!1===r.decimalProtect||a.input===r.radixPoint&&t.validPositions[e+1]&&null===t.validPositions[e+1].match.fn||isFinite(a.input)||e===i||a.input===r.groupSeparator||a.input===r.negationSymbol.front||a.input===r.negationSymbol.back;return!s||"+"!==a.match.nativeDef&&"-"!==a.match.nativeDef||(r.isNegative=!1),s},onKeyDown:function(i,n,r,a){var s=t(this);if(i.ctrlKey)switch(i.keyCode){case e.keyCode.UP:s.val(parseFloat(this.inputmask.unmaskedvalue())+parseInt(a.step)),s.trigger("setvalue");break;case e.keyCode.DOWN:s.val(parseFloat(this.inputmask.unmaskedvalue())-parseInt(a.step)),s.trigger("setvalue")}}},currency:{prefix:"$ ",groupSeparator:",",alias:"numeric",placeholder:"0",autoGroup:!0,digits:2,digitsOptional:!1,clearMaskOnLostFocus:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",digits:0,radixPoint:""},percentage:{alias:"numeric",digits:2,digitsOptional:!0,radixPoint:".",placeholder:"0",autoGroup:!1,min:0,max:100,suffix:" %",allowMinus:!1}}),e})?n.apply(e,r):n)&&(t.exports=a)},function(t,e,i){"use strict";var n,r,a;"function"==typeof Symbol&&Symbol.iterator,r=[i(0),i(1)],void 0!==(a="function"==typeof(n=function(t,e){function i(t,e){var i=(t.mask||t).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),n=(e.mask||e).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),r=(t.mask||t).split("#")[0],a=(e.mask||e).split("#")[0];return 0===a.indexOf(r)?-1:0===r.indexOf(a)?1:i.localeCompare(n)}var n=e.prototype.analyseMask;return e.prototype.analyseMask=function(e,i,r){var a={};return r.phoneCodes&&(r.phoneCodes&&r.phoneCodes.length>1e3&&(function t(i,n,r){n=n||"",r=r||a,""!==n&&(r[n]={});for(var s="",o=r[n]||r,l=i.length-1;l>=0;l--)o[s=(e=i[l].mask||i[l]).substr(0,1)]=o[s]||[],o[s].unshift(e.substr(1)),i.splice(l,1);for(var c in o)o[c].length>500&&t(o[c].slice(),c,o)}((e=e.substr(1,e.length-2)).split(r.groupmarker.end+r.alternatormarker+r.groupmarker.start)),e=function e(i){var n="",a=[];for(var s in i)t.isArray(i[s])?1===i[s].length?a.push(s+i[s]):a.push(s+r.groupmarker.start+i[s].join(r.groupmarker.end+r.alternatormarker+r.groupmarker.start)+r.groupmarker.end):a.push(s+e(i[s]));return 1===a.length?n+=a[0]:n+=r.groupmarker.start+a.join(r.groupmarker.end+r.alternatormarker+r.groupmarker.start)+r.groupmarker.end,n}(a)),e=e.replace(/9/g,"\\9")),n.call(this,e,i,r)},e.extendAliases({abstractphone:{groupmarker:{start:"<",end:">"},countrycode:"",phoneCodes:[],mask:function(t){return t.definitions={"#":e.prototype.definitions[9]},t.phoneCodes.sort(i)},keepStatic:!0,onBeforeMask:function(t,e){var i=t.replace(/^0{1,2}/,"").replace(/[\s]/g,"");return(i.indexOf(e.countrycode)>1||-1===i.indexOf(e.countrycode))&&(i="+"+e.countrycode+i),i},onUnMask:function(t,e,i){return t.replace(/[()#-]/g,"")},inputmode:"tel"}}),e})?n.apply(e,r):n)&&(t.exports=a)},function(t,e,i){"use strict";var n,r,a;"function"==typeof Symbol&&Symbol.iterator,r=[i(0),i(1)],void 0!==(a="function"==typeof(n=function(t,e){return e.extendAliases({Regex:{mask:"r",greedy:!1,repeat:"*",regex:null,regexTokens:null,tokenizer:/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,quantifierFilter:/[0-9]+[^,]/,isComplete:function(t,e){return new RegExp(e.regex,e.casing?"i":"").test(t.join(""))},definitions:{r:{validator:function(e,i,n,r,a){function s(t,e){this.matches=[],this.isGroup=t||!1,this.isQuantifier=e||!1,this.quantifier={min:1,max:1},this.repeaterPart=void 0}function o(e,i){var n=!1;i&&(h+="(",p++);for(var r=0;r<e.matches.length;r++){var s=e.matches[r];if(!0===s.isGroup)n=o(s,!0);else if(!0===s.isQuantifier){var c=t.inArray(s,e.matches),u=e.matches[c-1],f=h;if(isNaN(s.quantifier.max)){for(;s.repeaterPart&&s.repeaterPart!==h&&s.repeaterPart.length>h.length&&!(n=o(u,!0)););(n=n||o(u,!0))&&(s.repeaterPart=h),h=f+s.quantifier.max}else{for(var d=0,m=s.quantifier.max-1;d<m&&!(n=o(u,!0));d++);h=f+"{"+s.quantifier.min+","+s.quantifier.max+"}"}}else if(void 0!==s.matches)for(var g=0;g<s.length&&!(n=o(s[g],i));g++);else{var v;if("["==s.charAt(0)){for(v=h,v+=s,b=0;b<p;b++)v+=")";n=(x=new RegExp("^("+v+")$",a.casing?"i":"")).test(l)}else for(var _=0,y=s.length;_<y;_++)if("\\"!==s.charAt(_)){v=h,v=(v+=s.substr(0,_+1)).replace(/\|$/,"");for(var b=0;b<p;b++)v+=")";var x=new RegExp("^("+v+")$",a.casing?"i":"");if(n=x.test(l))break}h+=s}if(n)break}return i&&(h+=")",p--),n}var l,c,u=i.buffer.slice(),h="",f=!1,p=0;null===a.regexTokens&&function(){var t,e,i=new s,n=[];for(a.regexTokens=[];t=a.tokenizer.exec(a.regex);)switch((e=t[0]).charAt(0)){case"(":n.push(new s(!0));break;case")":c=n.pop(),n.length>0?n[n.length-1].matches.push(c):i.matches.push(c);break;case"{":case"+":case"*":var r=new s(!1,!0),o=(e=e.replace(/[{}]/g,"")).split(","),l=isNaN(o[0])?o[0]:parseInt(o[0]),u=1===o.length?l:isNaN(o[1])?o[1]:parseInt(o[1]);if(r.quantifier={min:l,max:u},n.length>0){var h=n[n.length-1].matches;(t=h.pop()).isGroup||((c=new s(!0)).matches.push(t),t=c),h.push(t),h.push(r)}else(t=i.matches.pop()).isGroup||((c=new s(!0)).matches.push(t),t=c),i.matches.push(t),i.matches.push(r);break;default:n.length>0?n[n.length-1].matches.push(e):i.matches.push(e)}i.matches.length>0&&a.regexTokens.push(i)}(),u.splice(n,0,e),l=u.join("");for(var d=0;d<a.regexTokens.length;d++){var m=a.regexTokens[d];if(f=o(m,m.isGroup))break}return f},cardinality:1}}}}),e})?n.apply(e,r):n)&&(t.exports=a)},function(t,e,i){"use strict";var n,r,a,s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};r=[i(2),i(1)],void 0!==(a="function"==typeof(n=function(t,e){return void 0===t.fn.inputmask&&(t.fn.inputmask=function(i,n){var r,a=this[0];if(void 0===n&&(n={}),"string"==typeof i)switch(i){case"unmaskedvalue":return a&&a.inputmask?a.inputmask.unmaskedvalue():t(a).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return a&&a.inputmask?a.inputmask.getemptymask():"";case"hasMaskedValue":return!(!a||!a.inputmask)&&a.inputmask.hasMaskedValue();case"isComplete":return!a||!a.inputmask||a.inputmask.isComplete();case"getmetadata":return a&&a.inputmask?a.inputmask.getmetadata():void 0;case"setvalue":t(a).val(n),a&&void 0===a.inputmask&&t(a).triggerHandler("setvalue");break;case"option":if("string"!=typeof n)return this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(n)});if(a&&void 0!==a.inputmask)return a.inputmask.option(n);break;default:return n.alias=i,r=new e(n),this.each(function(){r.mask(this)})}else{if("object"==(void 0===i?"undefined":s(i)))return r=new e(i),void 0===i.mask&&void 0===i.alias?this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(i);r.mask(this)}):this.each(function(){r.mask(this)});if(void 0===i)return this.each(function(){(r=new e(n)).mask(this)})}}),t.fn.inputmask})?n.apply(e,r):n)&&(t.exports=a)}])}).call(this,i(0))},function(t,e,i){(function(t,e){!function(t,e,i,n){"use strict";function r(t){var e=i(t.currentTarget),n=t.data?t.data.options:{},r=e.attr("data-fancybox")||"",a=0,s=[];t.isDefaultPrevented()||(t.preventDefault(),r?(a=(s=(s=n.selector?i(n.selector):t.data?t.data.items:[]).length?s.filter('[data-fancybox="'+r+'"]'):i('[data-fancybox="'+r+'"]')).index(e))<0&&(a=0):s=[e],i.fancybox.open(s,n,a))}if(i){if(i.fn.fancybox)return void("console"in t&&console.log("fancyBox already initialized"));var a={loop:!1,margin:[44,0],gutter:50,keyboard:!0,arrows:!0,infobar:!0,toolbar:!0,buttons:["slideShow","fullScreen","thumbs","share","close"],idleTime:3,smallBtn:"auto",protect:!1,modal:!1,image:{preload:"auto"},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen allowtransparency="true" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},defaultType:"image",animationEffect:"zoom",animationDuration:500,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption-wrap"><div class="fancybox-caption"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}<p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}"><svg viewBox="0 0 40 40"><path d="M20,23 L20,8 L20,23 L13,16 L20,23 L27,16 L20,23 M26,28 L13,28 L27,28 L14,28" /></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg viewBox="0 0 40 40"><path d="M 18,17 m-8,0 a 8,8 0 1,0 16,0 a 8,8 0 1,0 -16,0 M25,23 L31,29 L25,23" /></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg viewBox="0 0 40 40"><path d="M10,10 L30,30 M30,10 L10,30" /></svg></button>',smallBtn:'<button data-fancybox-close class="fancybox-close-small" title="{{CLOSE}}"></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><svg viewBox="0 0 40 40"><path d="M10,20 L30,20 L10,20 L18,28 L10,20 L18,12 L10,20"></path></svg></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><svg viewBox="0 0 40 40"><path d="M30,20 L10,20 L30,20 L22,28 L30,20 L22,12 L30,20"></path></svg></button>'},parentEl:"body",autoFocus:!1,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:4e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},onInit:i.noop,beforeLoad:i.noop,afterLoad:i.noop,beforeShow:i.noop,afterShow:i.noop,beforeClose:i.noop,afterClose:i.noop,onActivate:i.noop,onDeactivate:i.noop,clickContent:function(t,e){return"image"===t.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{margin:0,clickContent:function(t,e){return"image"===t.type&&"toggleControls"},clickSlide:function(t,e){return"image"===t.type?"toggleControls":"close"},dblclickContent:function(t,e){return"image"===t.type&&"zoom"},dblclickSlide:function(t,e){return"image"===t.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schliessen",NEXT:"Weiter",PREV:"ZurÃ¼ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es spÃ¤ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"MaÃstab"}}},s=i(t),o=i(e),l=0,c=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)},u=function(){var t,i=e.createElement("fakeelement"),r={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in r)if(i.style[t]!==n)return r[t];return"transitionend"}(),h=function(t){return t&&t.length&&t[0].offsetHeight},f=function(t,n,r){var a=this;a.opts=i.extend(!0,{index:r},i.fancybox.defaults,n||{}),i.fancybox.isMobile&&(a.opts=i.extend(!0,{},a.opts,a.opts.mobile)),n&&i.isArray(n.buttons)&&(a.opts.buttons=n.buttons),a.id=a.opts.id||++l,a.group=[],a.currIndex=parseInt(a.opts.index,10)||0,a.prevIndex=null,a.prevPos=null,a.currPos=0,a.firstRun=null,a.createGroup(t),a.group.length&&(a.$lastFocus=i(e.activeElement).blur(),a.slides={},a.init())};i.extend(f.prototype,{init:function(){var r,a,s,l=this,c=l.group[l.currIndex],u=c.opts,h=i.fancybox.scrollbarWidth;l.scrollTop=o.scrollTop(),l.scrollLeft=o.scrollLeft(),i.fancybox.getInstance()||(i("body").addClass("fancybox-active"),/iPad|iPhone|iPod/.test(navigator.userAgent)&&!t.MSStream?"image"!==c.type&&i("body").css("top",-1*i("body").scrollTop()).addClass("fancybox-iosfix"):!i.fancybox.isMobile&&e.body.scrollHeight>t.innerHeight&&(h===n&&(r=i('<div style="width:50px;height:50px;overflow:scroll;" />').appendTo("body"),h=i.fancybox.scrollbarWidth=r[0].offsetWidth-r[0].clientWidth,r.remove()),i("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar { margin-right: '+h+"px; }</style>"),i("body").addClass("compensate-for-scrollbar"))),s="",i.each(u.buttons,function(t,e){s+=u.btnTpl[e]||""}),a=i(l.translate(l,u.baseTpl.replace("{{buttons}}",s).replace("{{arrows}}",u.btnTpl.arrowLeft+u.btnTpl.arrowRight))).attr("id","fancybox-container-"+l.id).addClass("fancybox-is-hidden").addClass(u.baseClass).data("FancyBox",l).appendTo(u.parentEl),l.$refs={container:a},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach(function(t){l.$refs[t]=a.find(".fancybox-"+t)}),l.trigger("onInit"),l.activate(),l.jumpTo(l.currIndex)},translate:function(t,e){var i=t.opts.i18n[t.opts.lang];return e.replace(/\{\{(\w+)\}\}/g,function(t,e){var r=i[e];return r===n?t:r})},createGroup:function(t){var e=this,r=i.makeArray(t);i.each(r,function(t,r){var a,s,o,l,c={},u={};i.isPlainObject(r)?(c=r,u=r.opts||r):"object"===i.type(r)&&i(r).length?(u=(a=i(r)).data(),(u=i.extend({},u,u.options||{})).$orig=a,c.src=u.src||a.attr("href"),c.type||c.src||(c.type="inline",c.src=r)):c={type:"html",src:r+""},c.opts=i.extend(!0,{},e.opts,u),i.isArray(u.buttons)&&(c.opts.buttons=u.buttons),s=c.type||c.opts.type,o=c.src||"",!s&&o&&(o.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?s="image":o.match(/\.(pdf)((\?|#).*)?$/i)?s="pdf":"#"===o.charAt(0)&&(s="inline")),s?c.type=s:e.trigger("objectNeedsType",c),c.index=e.group.length,c.opts.$orig&&!c.opts.$orig.length&&delete c.opts.$orig,!c.opts.$thumb&&c.opts.$orig&&(c.opts.$thumb=c.opts.$orig.find("img:first")),c.opts.$thumb&&!c.opts.$thumb.length&&delete c.opts.$thumb,"function"===i.type(c.opts.caption)&&(c.opts.caption=c.opts.caption.apply(r,[e,c])),"function"===i.type(e.opts.caption)&&(c.opts.caption=e.opts.caption.apply(r,[e,c])),c.opts.caption instanceof i||(c.opts.caption=c.opts.caption===n?"":c.opts.caption+""),"ajax"===s&&((l=o.split(/\s+/,2)).length>1&&(c.src=l.shift(),c.opts.filter=l.shift())),"auto"==c.opts.smallBtn&&(i.inArray(s,["html","inline","ajax"])>-1?(c.opts.toolbar=!1,c.opts.smallBtn=!0):c.opts.smallBtn=!1),"pdf"===s&&(c.type="iframe",c.opts.iframe.preload=!1),c.opts.modal&&(c.opts=i.extend(!0,c.opts,{infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),e.group.push(c)})},addEvents:function(){var n=this;n.removeEvents(),n.$refs.container.on("click.fb-close","[data-fancybox-close]",function(t){t.stopPropagation(),t.preventDefault(),n.close(t)}).on("click.fb-prev touchend.fb-prev","[data-fancybox-prev]",function(t){t.stopPropagation(),t.preventDefault(),n.previous()}).on("click.fb-next touchend.fb-next","[data-fancybox-next]",function(t){t.stopPropagation(),t.preventDefault(),n.next()}).on("click.fb","[data-fancybox-zoom]",function(t){n[n.isScaledDown()?"scaleToActual":"scaleToFit"]()}),s.on("orientationchange.fb resize.fb",function(t){t&&t.originalEvent&&"resize"===t.originalEvent.type?c(function(){n.update()}):(n.$refs.stage.hide(),setTimeout(function(){n.$refs.stage.show(),n.update()},600))}),o.on("focusin.fb",function(t){var r=i.fancybox?i.fancybox.getInstance():null;r.isClosing||!r.current||!r.current.opts.trapFocus||i(t.target).hasClass("fancybox-container")||i(t.target).is(e)||r&&"fixed"!==i(t.target).css("position")&&!r.$refs.container.has(t.target).length&&(t.stopPropagation(),r.focus(),s.scrollTop(n.scrollTop).scrollLeft(n.scrollLeft))}),o.on("keydown.fb",function(t){var e=n.current,r=t.keyCode||t.which;if(e&&e.opts.keyboard&&!i(t.target).is("input")&&!i(t.target).is("textarea"))return 8===r||27===r?(t.preventDefault(),void n.close(t)):37===r||38===r?(t.preventDefault(),void n.previous()):39===r||40===r?(t.preventDefault(),void n.next()):void n.trigger("afterKeydown",t,r)}),n.group[n.currIndex].opts.idleTime&&(n.idleSecondsCounter=0,o.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(t){n.idleSecondsCounter=0,n.isIdle&&n.showControls(),n.isIdle=!1}),n.idleInterval=t.setInterval(function(){n.idleSecondsCounter++,n.idleSecondsCounter>=n.group[n.currIndex].opts.idleTime&&(n.isIdle=!0,n.idleSecondsCounter=0,n.hideControls())},1e3))},removeEvents:function(){var e=this;s.off("orientationchange.fb resize.fb"),o.off("focusin.fb keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),e.idleInterval&&(t.clearInterval(e.idleInterval),e.idleInterval=null)},previous:function(t){return this.jumpTo(this.currPos-1,t)},next:function(t){return this.jumpTo(this.currPos+1,t)},jumpTo:function(t,e,r){var a,s,o,l,c,u,f,p=this,d=p.group.length;if(!(p.isSliding||p.isClosing||p.isAnimating&&p.firstRun)){if(t=parseInt(t,10),!(s=p.current?p.current.opts.loop:p.opts.loop)&&(t<0||t>=d))return!1;if(a=p.firstRun=null===p.firstRun,!(d<2&&!a&&p.isSliding)){if(l=p.current,p.prevIndex=p.currIndex,p.prevPos=p.currPos,o=p.createSlide(t),d>1&&((s||o.index>0)&&p.createSlide(t-1),(s||o.index<d-1)&&p.createSlide(t+1)),p.current=o,p.currIndex=o.index,p.currPos=o.pos,p.trigger("beforeShow",a),p.updateControls(),u=i.fancybox.getTranslate(o.$slide),o.isMoved=(0!==u.left||0!==u.top)&&!o.$slide.hasClass("fancybox-animated"),o.forcedDuration=n,i.isNumeric(e)?o.forcedDuration=e:e=o.opts[a?"animationDuration":"transitionDuration"],e=parseInt(e,10),a)return o.opts.animationEffect&&e&&p.$refs.container.css("transition-duration",e+"ms"),p.$refs.container.removeClass("fancybox-is-hidden"),h(p.$refs.container),p.$refs.container.addClass("fancybox-is-open"),o.$slide.addClass("fancybox-slide--current"),p.loadSlide(o),void p.preload();i.each(p.slides,function(t,e){i.fancybox.stop(e.$slide)}),o.$slide.removeClass("fancybox-slide--next fancybox-slide--previous").addClass("fancybox-slide--current"),o.isMoved?(c=Math.round(o.$slide.width()),i.each(p.slides,function(t,n){var r=n.pos-o.pos;i.fancybox.animate(n.$slide,{top:0,left:r*c+r*n.opts.gutter},e,function(){n.$slide.removeAttr("style").removeClass("fancybox-slide--next fancybox-slide--previous"),n.pos===p.currPos&&(o.isMoved=!1,p.complete())})})):p.$refs.stage.children().removeAttr("style"),o.isLoaded?p.revealContent(o):p.loadSlide(o),p.preload(),l.pos!==o.pos&&(f="fancybox-slide--"+(l.pos>o.pos?"next":"previous"),l.$slide.removeClass("fancybox-slide--complete fancybox-slide--current fancybox-slide--next fancybox-slide--previous"),l.isComplete=!1,e&&(o.isMoved||o.opts.transitionEffect)&&(o.isMoved?l.$slide.addClass(f):(f="fancybox-animated "+f+" fancybox-fx-"+o.opts.transitionEffect,i.fancybox.animate(l.$slide,f,e,function(){l.$slide.removeClass(f).removeAttr("style")}))))}}},createSlide:function(t){var e,n,r=this;return n=(n=t%r.group.length)<0?r.group.length+n:n,!r.slides[t]&&r.group[n]&&(e=i('<div class="fancybox-slide"></div>').appendTo(r.$refs.stage),r.slides[t]=i.extend(!0,{},r.group[n],{pos:t,$slide:e,isLoaded:!1}),r.updateSlide(r.slides[t])),r.slides[t]},scaleToActual:function(t,e,r){var a,s,o,l,c,u=this,h=u.current,f=h.$content,p=parseInt(h.$slide.width(),10),d=parseInt(h.$slide.height(),10),m=h.width,g=h.height;"image"!=h.type||h.hasError||!f||u.isAnimating||(i.fancybox.stop(f),u.isAnimating=!0,t=t===n?.5*p:t,e=e===n?.5*d:e,l=m/(a=i.fancybox.getTranslate(f)).width,c=g/a.height,s=.5*p-.5*m,o=.5*d-.5*g,m>p&&((s=a.left*l-(t*l-t))>0&&(s=0),s<p-m&&(s=p-m)),g>d&&((o=a.top*c-(e*c-e))>0&&(o=0),o<d-g&&(o=d-g)),u.updateCursor(m,g),i.fancybox.animate(f,{top:o,left:s,scaleX:l,scaleY:c},r||330,function(){u.isAnimating=!1}),u.SlideShow&&u.SlideShow.isActive&&u.SlideShow.stop())},scaleToFit:function(t){var e,n=this,r=n.current,a=r.$content;"image"!=r.type||r.hasError||!a||n.isAnimating||(i.fancybox.stop(a),n.isAnimating=!0,e=n.getFitPos(r),n.updateCursor(e.width,e.height),i.fancybox.animate(a,{top:e.top,left:e.left,scaleX:e.width/a.width(),scaleY:e.height/a.height()},t||330,function(){n.isAnimating=!1}))},getFitPos:function(t){var e,n,r,a,s,o=t.$content,l=t.width,c=t.height,u=t.opts.margin;return!(!o||!o.length||!l&&!c)&&("number"===i.type(u)&&(u=[u,u]),2==u.length&&(u=[u[0],u[1],u[0],u[1]]),e=parseInt(this.$refs.stage.width(),10)-(u[1]+u[3]),n=parseInt(this.$refs.stage.height(),10)-(u[0]+u[2]),r=Math.min(1,e/l,n/c),a=Math.floor(r*l),s=Math.floor(r*c),{top:Math.floor(.5*(n-s))+u[0],left:Math.floor(.5*(e-a))+u[3],width:a,height:s})},update:function(){var t=this;i.each(t.slides,function(e,i){t.updateSlide(i)})},updateSlide:function(t){var e=this,n=t.$content;n&&(t.width||t.height)&&(e.isAnimating=!1,i.fancybox.stop(n),i.fancybox.setTranslate(n,e.getFitPos(t)),t.pos===e.currPos&&e.updateCursor()),t.$slide.trigger("refresh"),e.trigger("onUpdate",t)},updateCursor:function(t,e){var i=this,r=i.$refs.container.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-drag fancybox-can-zoomOut");i.current&&!i.isClosing&&(i.isZoomable()?(r.addClass("fancybox-is-zoomable"),(t!==n&&e!==n?t<i.current.width&&e<i.current.height:i.isScaledDown())?r.addClass("fancybox-can-zoomIn"):i.current.opts.touch?r.addClass("fancybox-can-drag"):r.addClass("fancybox-can-zoomOut")):i.current.opts.touch&&r.addClass("fancybox-can-drag"))},isZoomable:function(){var t,e=this,n=e.current;if(n&&!e.isClosing)return!!("image"===n.type&&n.isLoaded&&!n.hasError&&("zoom"===n.opts.clickContent||i.isFunction(n.opts.clickContent)&&"zoom"===n.opts.clickContent(n))&&(t=e.getFitPos(n),n.width>t.width||n.height>t.height))},isScaledDown:function(){var t=this.current,e=t.$content,n=!1;return e&&(n=(n=i.fancybox.getTranslate(e)).width<t.width||n.height<t.height),n},canPan:function(){var t=this.current,e=t.$content,i=!1;return e&&(i=this.getFitPos(t),i=Math.abs(e.width()-i.width)>1||Math.abs(e.height()-i.height)>1),i},loadSlide:function(t){var e,n,r,a=this;if(!t.isLoading&&!t.isLoaded){switch(t.isLoading=!0,a.trigger("beforeLoad",t),e=t.type,(n=t.$slide).off("refresh").trigger("onReset").addClass("fancybox-slide--"+(e||"unknown")).addClass(t.opts.slideClass),e){case"image":a.setImage(t);break;case"iframe":a.setIframe(t);break;case"html":a.setContent(t,t.src||t.content);break;case"inline":i(t.src).length?a.setContent(t,i(t.src)):a.setError(t);break;case"ajax":a.showLoading(t),r=i.ajax(i.extend({},t.opts.ajax.settings,{url:t.src,success:function(e,i){"success"===i&&a.setContent(t,e)},error:function(e,i){e&&"abort"!==i&&a.setError(t)}})),n.one("onReset",function(){r.abort()});break;default:a.setError(t)}return!0}},setImage:function(e){var n,r,a,s,o=this,l=e.opts.srcset||e.opts.image.srcset;if(l){a=t.devicePixelRatio||1,s=t.innerWidth*a,(r=l.split(",").map(function(t){var e={};return t.trim().split(/\s+/).forEach(function(t,i){var n=parseInt(t.substring(0,t.length-1),10);return 0===i?e.url=t:void(n&&(e.value=n,e.postfix=t[t.length-1]))}),e})).sort(function(t,e){return t.value-e.value});for(var c=0;c<r.length;c++){var u=r[c];if("w"===u.postfix&&u.value>=s||"x"===u.postfix&&u.value>=a){n=u;break}}!n&&r.length&&(n=r[r.length-1]),n&&(e.src=n.url,e.width&&e.height&&"w"==n.postfix&&(e.height=e.width/e.height*n.value,e.width=n.value))}e.$content=i('<div class="fancybox-image-wrap"></div>').addClass("fancybox-is-hidden").appendTo(e.$slide),!1!==e.opts.preload&&e.opts.width&&e.opts.height&&(e.opts.thumb||e.opts.$thumb)?(e.width=e.opts.width,e.height=e.opts.height,e.$ghost=i("<img />").one("error",function(){i(this).remove(),e.$ghost=null,o.setBigImage(e)}).one("load",function(){o.afterLoad(e),o.setBigImage(e)}).addClass("fancybox-image").appendTo(e.$content).attr("src",e.opts.thumb||e.opts.$thumb.attr("src"))):o.setBigImage(e)},setBigImage:function(t){var e=this,n=i("<img />");t.$image=n.one("error",function(){e.setError(t)}).one("load",function(){clearTimeout(t.timouts),t.timouts=null,e.isClosing||(t.width=this.naturalWidth,t.height=this.naturalHeight,t.opts.image.srcset&&n.attr("sizes","100vw").attr("srcset",t.opts.image.srcset),e.hideLoading(t),t.$ghost?t.timouts=setTimeout(function(){t.timouts=null,t.$ghost.hide()},Math.min(300,Math.max(1e3,t.height/1600))):e.afterLoad(t))}).addClass("fancybox-image").attr("src",t.src).appendTo(t.$content),(n[0].complete||"complete"==n[0].readyState)&&n[0].naturalWidth&&n[0].naturalHeight?n.trigger("load"):n[0].error?n.trigger("error"):t.timouts=setTimeout(function(){n[0].complete||t.hasError||e.showLoading(t)},100)},setIframe:function(t){var e,r=this,a=t.opts.iframe,s=t.$slide;t.$content=i('<div class="fancybox-content'+(a.preload?" fancybox-is-hidden":"")+'"></div>').css(a.css).appendTo(s),e=i(a.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(a.attr).appendTo(t.$content),a.preload?(r.showLoading(t),e.on("load.fb error.fb",function(e){this.isReady=1,t.$slide.trigger("refresh"),r.afterLoad(t)}),s.on("refresh.fb",function(){var i,r,s=t.$content,o=a.css.width,l=a.css.height;if(1===e[0].isReady){try{r=e.contents().find("body")}catch(t){}r&&r.length&&(o===n&&(i=e[0].contentWindow.document.documentElement.scrollWidth,o=Math.ceil(r.outerWidth(!0)+(s.width()-i)),o+=s.outerWidth()-s.innerWidth()),l===n&&(l=Math.ceil(r.outerHeight(!0)),l+=s.outerHeight()-s.innerHeight()),o&&s.width(o),l&&s.height(l)),s.removeClass("fancybox-is-hidden")}})):this.afterLoad(t),e.attr("src",t.src),!0===t.opts.smallBtn&&t.$content.prepend(r.translate(t,t.opts.btnTpl.smallBtn)),s.one("onReset",function(){try{i(this).find("iframe").hide().attr("src","//about:blank")}catch(t){}i(this).empty(),t.isLoaded=!1})},setContent:function(t,e){this.isClosing||(this.hideLoading(t),t.$slide.empty(),function(t){return t&&t.hasOwnProperty&&t instanceof i}(e)&&e.parent().length?(e.parent(".fancybox-slide--inline").trigger("onReset"),t.$placeholder=i("<div></div>").hide().insertAfter(e),e.css("display","inline-block")):t.hasError||("string"===i.type(e)&&(3===(e=i("<div>").append(i.trim(e)).contents())[0].nodeType&&(e=i("<div>").html(e))),t.opts.filter&&(e=i("<div>").html(e).find(t.opts.filter))),t.$slide.one("onReset",function(){t.$placeholder&&(t.$placeholder.after(e.hide()).remove(),t.$placeholder=null),t.$smallBtn&&(t.$smallBtn.remove(),t.$smallBtn=null),t.hasError||(i(this).empty(),t.isLoaded=!1)}),t.$content=i(e).appendTo(t.$slide),this.afterLoad(t))},setError:function(t){t.hasError=!0,t.$slide.removeClass("fancybox-slide--"+t.type),this.setContent(t,this.translate(t,t.opts.errorTpl))},showLoading:function(t){(t=t||this.current)&&!t.$spinner&&(t.$spinner=i(this.opts.spinnerTpl).appendTo(t.$slide))},hideLoading:function(t){(t=t||this.current)&&t.$spinner&&(t.$spinner.remove(),delete t.$spinner)},afterLoad:function(t){var e=this;e.isClosing||(t.isLoading=!1,t.isLoaded=!0,e.trigger("afterLoad",t),e.hideLoading(t),t.opts.smallBtn&&!t.$smallBtn&&(t.$smallBtn=i(e.translate(t,t.opts.btnTpl.smallBtn)).appendTo(t.$content.filter("div,form").first())),t.opts.protect&&t.$content&&!t.hasError&&(t.$content.on("contextmenu.fb",function(t){return 2==t.button&&t.preventDefault(),!0}),"image"===t.type&&i('<div class="fancybox-spaceball"></div>').appendTo(t.$content)),e.revealContent(t))},revealContent:function(t){var e,r,a,s,o,l=this,c=t.$slide,u=!1;return e=t.opts[l.firstRun?"animationEffect":"transitionEffect"],a=t.opts[l.firstRun?"animationDuration":"transitionDuration"],a=parseInt(t.forcedDuration===n?a:t.forcedDuration,10),!t.isMoved&&t.pos===l.currPos&&a||(e=!1),"zoom"!==e||t.pos===l.currPos&&a&&"image"===t.type&&!t.hasError&&(u=l.getThumbPos(t))||(e="fade"),"zoom"===e?((o=l.getFitPos(t)).scaleX=o.width/u.width,o.scaleY=o.height/u.height,delete o.width,delete o.height,"auto"==(s=t.opts.zoomOpacity)&&(s=Math.abs(t.width/t.height-u.width/u.height)>.1),s&&(u.opacity=.1,o.opacity=1),i.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),u),h(t.$content),void i.fancybox.animate(t.$content,o,a,function(){l.complete()})):(l.updateSlide(t),e?(i.fancybox.stop(c),r="fancybox-animated fancybox-slide--"+(t.pos>=l.prevPos?"next":"previous")+" fancybox-fx-"+e,c.removeAttr("style").removeClass("fancybox-slide--current fancybox-slide--next fancybox-slide--previous").addClass(r),t.$content.removeClass("fancybox-is-hidden"),h(c),void i.fancybox.animate(c,"fancybox-slide--current",a,function(e){c.removeClass(r).removeAttr("style"),t.pos===l.currPos&&l.complete()},!0)):(h(c),t.$content.removeClass("fancybox-is-hidden"),void(t.pos===l.currPos&&l.complete())))},getThumbPos:function(n){var r,a=!1,s=n.opts.$thumb,o=s?s.offset():0;return o&&s[0].ownerDocument===e&&function(e){for(var n=e[0],r=n.getBoundingClientRect(),a=[];null!==n.parentElement;)"hidden"!==i(n.parentElement).css("overflow")&&"auto"!==i(n.parentElement).css("overflow")||a.push(n.parentElement.getBoundingClientRect()),n=n.parentElement;return a.every(function(t){var e=Math.min(r.right,t.right)-Math.max(r.left,t.left),i=Math.min(r.bottom,t.bottom)-Math.max(r.top,t.top);return e>0&&i>0})&&r.bottom>0&&r.right>0&&r.left<i(t).width()&&r.top<i(t).height()}(s)&&(r=this.$refs.stage.offset(),a={top:o.top-r.top+parseFloat(s.css("border-top-width")||0),left:o.left-r.left+parseFloat(s.css("border-left-width")||0),width:s.width(),height:s.height(),scaleX:1,scaleY:1}),a},complete:function(){var t=this,n=t.current,r={};n.isMoved||!n.isLoaded||n.isComplete||(n.isComplete=!0,n.$slide.siblings().trigger("onReset"),h(n.$slide),n.$slide.addClass("fancybox-slide--complete"),i.each(t.slides,function(e,n){n.pos>=t.currPos-1&&n.pos<=t.currPos+1?r[n.pos]=n:n&&(i.fancybox.stop(n.$slide),n.$slide.off().remove())}),t.slides=r,t.updateCursor(),t.trigger("afterShow"),(i(e.activeElement).is("[disabled]")||n.opts.autoFocus&&"image"!=n.type&&"iframe"!==n.type)&&t.focus())},preload:function(){var t,e,i=this;i.group.length<2||(t=i.slides[i.currPos+1],e=i.slides[i.currPos-1],t&&"image"===t.type&&i.loadSlide(t),e&&"image"===e.type&&i.loadSlide(e))},focus:function(){var t,e=this.current;this.isClosing||(e&&e.isComplete&&((t=e.$slide.find("input[autofocus]:enabled:visible:first")).length||(t=e.$slide.find("button,:input,[tabindex],a").filter(":enabled:visible:first"))),(t=t&&t.length?t:this.$refs.container).focus())},activate:function(){var t=this;i(".fancybox-container").each(function(){var e=i(this).data("FancyBox");e&&e.id!==t.id&&!e.isClosing&&(e.trigger("onDeactivate"),e.removeEvents(),e.isVisible=!1)}),t.isVisible=!0,(t.current||t.isIdle)&&(t.update(),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(t,e){var n,r,a,s,o,l,f=this,p=f.current,d=function(){f.cleanUp(t)};return!(f.isClosing||(f.isClosing=!0,!1===f.trigger("beforeClose",t)?(f.isClosing=!1,c(function(){f.update()}),1):(f.removeEvents(),p.timouts&&clearTimeout(p.timouts),a=p.$content,n=p.opts.animationEffect,r=i.isNumeric(e)?e:n?p.opts.animationDuration:0,p.$slide.off(u).removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),p.$slide.siblings().trigger("onReset").remove(),r&&f.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing"),f.hideLoading(p),f.hideControls(),f.updateCursor(),"zoom"!==n||!0!==t&&a&&r&&"image"===p.type&&!p.hasError&&(l=f.getThumbPos(p))||(n="fade"),"zoom"===n?(i.fancybox.stop(a),o=i.fancybox.getTranslate(a),o.width=o.width*o.scaleX,o.height=o.height*o.scaleY,s=p.opts.zoomOpacity,"auto"==s&&(s=Math.abs(p.width/p.height-l.width/l.height)>.1),s&&(l.opacity=0),o.scaleX=o.width/l.width,o.scaleY=o.height/l.height,o.width=l.width,o.height=l.height,i.fancybox.setTranslate(p.$content,o),h(p.$content),i.fancybox.animate(p.$content,l,r,d),0):(n&&r?!0===t?setTimeout(d,r):i.fancybox.animate(p.$slide.removeClass("fancybox-slide--current"),"fancybox-animated fancybox-slide--previous fancybox-fx-"+n,r,d):d(),0))))},cleanUp:function(t){var n,r,a=this,o=i("body");a.current.$slide.trigger("onReset"),a.$refs.container.empty().remove(),a.trigger("afterClose",t),a.$lastFocus&&a.current.opts.backFocus&&a.$lastFocus.focus(),a.current=null,(n=i.fancybox.getInstance())?n.activate():(s.scrollTop(a.scrollTop).scrollLeft(a.scrollLeft),o.removeClass("fancybox-active compensate-for-scrollbar"),o.hasClass("fancybox-iosfix")&&(r=parseInt(e.body.style.top,10),o.removeClass("fancybox-iosfix").css("top","").scrollTop(-1*r)),i("#fancybox-style-noscroll").remove())},trigger:function(t,e){var n,r=Array.prototype.slice.call(arguments,1),a=this,s=e&&e.opts?e:a.current;return s?r.unshift(s):s=a,r.unshift(a),i.isFunction(s.opts[t])&&(n=s.opts[t].apply(s,r)),!1===n?n:void("afterClose"!==t&&a.$refs?a.$refs.container.trigger(t+".fb",r):o.trigger(t+".fb",r))},updateControls:function(t){var e=this,i=e.current,n=i.index,r=i.opts.caption,a=e.$refs.container,s=e.$refs.caption;i.$slide.trigger("refresh"),e.$caption=r&&r.length?s.html(r):null,e.isHiddenControls||e.isIdle||e.showControls(),a.find("[data-fancybox-count]").html(e.group.length),a.find("[data-fancybox-index]").html(n+1),a.find("[data-fancybox-prev]").prop("disabled",!i.opts.loop&&n<=0),a.find("[data-fancybox-next]").prop("disabled",!i.opts.loop&&n>=e.group.length-1),"image"===i.type?a.find("[data-fancybox-download]").attr("href",i.opts.image.src||i.src).show():a.find("[data-fancybox-download],[data-fancybox-zoom]").hide()},hideControls:function(){this.isHiddenControls=!0,this.$refs.container.removeClass("fancybox-show-infobar fancybox-show-toolbar fancybox-show-caption fancybox-show-nav")},showControls:function(){var t=this,e=t.current?t.current.opts:t.opts,i=t.$refs.container;t.isHiddenControls=!1,t.idleSecondsCounter=0,i.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&t.group.length>1)).toggleClass("fancybox-show-nav",!!(e.arrows&&t.group.length>1)).toggleClass("fancybox-is-modal",!!e.modal),t.$caption?i.addClass("fancybox-show-caption "):i.removeClass("fancybox-show-caption")},toggleControls:function(){this.isHiddenControls?this.showControls():this.hideControls()}}),i.fancybox={version:"3.2.5",defaults:a,getInstance:function(t){var e=i('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),n=Array.prototype.slice.call(arguments,1);return e instanceof f&&("string"===i.type(t)?e[t].apply(e,n):"function"===i.type(t)&&t.apply(e,n),e)},open:function(t,e,i){return new f(t,e,i)},close:function(t){var e=this.getInstance();e&&(e.close(),!0===t&&this.close())},destroy:function(){this.close(!0),o.off("click.fb-start")},isMobile:e.createTouch!==n&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:function(){var i=e.createElement("div");return t.getComputedStyle&&t.getComputedStyle(i).getPropertyValue("transform")&&!(e.documentMode&&e.documentMode<11)}(),getTranslate:function(t){var e;if(!t||!t.length)return!1;if((e=t.eq(0).css("transform"))&&-1!==e.indexOf("matrix")?e=(e=(e=e.split("(")[1]).split(")")[0]).split(","):e=[],e.length)e=(e=e.length>10?[e[13],e[12],e[0],e[5]]:[e[5],e[4],e[0],e[3]]).map(parseFloat);else{e=[0,0,1,1];var i=/\.*translate\((.*)px,(.*)px\)/i.exec(t.eq(0).attr("style"));i&&(e[0]=parseFloat(i[2]),e[1]=parseFloat(i[1]))}return{top:e[0],left:e[1],scaleX:e[2],scaleY:e[3],opacity:parseFloat(t.css("opacity")),width:t.width(),height:t.height()}},setTranslate:function(t,e){var i="",r={};if(t&&e)return e.left===n&&e.top===n||(i=(e.left===n?t.position().left:e.left)+"px, "+(e.top===n?t.position().top:e.top)+"px",i=this.use3d?"translate3d("+i+", 0px)":"translate("+i+")"),e.scaleX!==n&&e.scaleY!==n&&(i=(i.length?i+" ":"")+"scale("+e.scaleX+", "+e.scaleY+")"),i.length&&(r.transform=i),e.opacity!==n&&(r.opacity=e.opacity),e.width!==n&&(r.width=e.width),e.height!==n&&(r.height=e.height),t.css(r)},animate:function(t,e,r,a,s){i.isFunction(r)&&(a=r,r=null),i.isPlainObject(e)||t.removeAttr("style"),t.on(u,function(r){(!r||!r.originalEvent||t.is(r.originalEvent.target)&&"z-index"!=r.originalEvent.propertyName)&&(i.fancybox.stop(t),i.isPlainObject(e)?e.scaleX!==n&&e.scaleY!==n&&(t.css("transition-duration",""),e.width=Math.round(t.width()*e.scaleX),e.height=Math.round(t.height()*e.scaleY),e.scaleX=1,e.scaleY=1,i.fancybox.setTranslate(t,e)):!0!==s&&t.removeClass(e),i.isFunction(a)&&a(r))}),i.isNumeric(r)&&t.css("transition-duration",r+"ms"),i.isPlainObject(e)?i.fancybox.setTranslate(t,e):t.addClass(e),e.scaleX&&t.hasClass("fancybox-image-wrap")&&t.parent().addClass("fancybox-is-scaling"),t.data("timer",setTimeout(function(){t.trigger("transitionend")},r+16))},stop:function(t){clearTimeout(t.data("timer")),t.off("transitionend").css("transition-duration",""),t.hasClass("fancybox-image-wrap")&&t.parent().removeClass("fancybox-is-scaling")}},i.fn.fancybox=function(t){var e;return(e=(t=t||{}).selector||!1)?i("body").off("click.fb-start",e).on("click.fb-start",e,{options:t},r):this.off("click.fb-start").on("click.fb-start",{items:this,options:t},r),this},o.on("click.fb-start","[data-fancybox]",r)}}(window,document,t||e),function(t){"use strict";var e=function(e,i,n){if(e)return n=n||"","object"===t.type(n)&&(n=t.param(n,!0)),t.each(i,function(t,i){e=e.replace("$"+t,i||"")}),n.length&&(e+=(e.indexOf("?")>0?"&":"?")+n),e},i={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"//www.youtube.com/embed/$4",thumb:"//img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1,api:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},metacafe:{matcher:/metacafe.com\/watch\/(\d+)\/(.*)?/,type:"iframe",url:"//www.metacafe.com/embed/$1/?ap=1"},dailymotion:{matcher:/dailymotion.com\/video\/(.*)\/?(.*)/,params:{additionalInfos:0,autoStart:1},type:"iframe",url:"//www.dailymotion.com/embed/video/$1"},vine:{matcher:/vine.co\/v\/([a-zA-Z0-9\?\=\-]+)/,type:"iframe",url:"//vine.co/v/$1/embed/simple"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/?ll="+(t[9]?t[9]+"&z="+Math.floor(t[10])+(t[12]?t[12].replace(/^\//,"&"):""):t[12])+"&output="+(t[12]&&t[12].indexOf("layer=c")>0?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/maps?q="+t[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}};t(document).on("objectNeedsType.fb",function(n,r,a){var s,o,l,c,u,h,f,p=a.src||"",d=!1;s=t.extend(!0,{},i,a.opts.media),t.each(s,function(i,n){if(l=p.match(n.matcher)){if(d=n.type,h={},n.paramPlace&&l[n.paramPlace]){"?"==(u=l[n.paramPlace])[0]&&(u=u.substring(1)),u=u.split("&");for(var r=0;r<u.length;++r){var s=u[r].split("=",2);2==s.length&&(h[s[0]]=decodeURIComponent(s[1].replace(/\+/g," ")))}}return c=t.extend(!0,{},n.params,a.opts[i],h),p="function"===t.type(n.url)?n.url.call(this,l,c,a):e(n.url,l,c),o="function"===t.type(n.thumb)?n.thumb.call(this,l,c,a):e(n.thumb,l),"vimeo"===i&&(p=p.replace("&%23","#")),!1}}),d?(a.src=p,a.type=d,a.opts.thumb||a.opts.$thumb&&a.opts.$thumb.length||(a.opts.thumb=o),"iframe"===d&&(t.extend(!0,a.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}}),a.contentProvider=f,a.opts.slideClass+=" fancybox-slide--video")):p&&(a.type=a.opts.defaultType)})}(t||e),function(t,e,i){"use strict";var n=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)},r=t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.mozCancelAnimationFrame||t.oCancelAnimationFrame||function(e){t.clearTimeout(e)},a=function(e){var i=[];for(var n in e=(e=e.originalEvent||e||t.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[n].pageX?i.push({x:e[n].pageX,y:e[n].pageY}):e[n].clientX&&i.push({x:e[n].clientX,y:e[n].clientY});return i},s=function(t,e,i){return e&&t?"x"===i?t.x-e.x:"y"===i?t.y-e.y:Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)):0},o=function(t){if(t.is('a,area,button,[role="button"],input,label,select,summary,textarea')||i.isFunction(t.get(0).onclick)||t.data("selectable"))return!0;for(var e=0,n=t[0].attributes,r=n.length;e<r;e++)if("data-fancybox-"===n[e].nodeName.substr(0,14))return!0;return!1},l=function(e){var i=t.getComputedStyle(e)["overflow-y"],n=t.getComputedStyle(e)["overflow-x"],r=("scroll"===i||"auto"===i)&&e.scrollHeight>e.clientHeight,a=("scroll"===n||"auto"===n)&&e.scrollWidth>e.clientWidth;return r||a},c=function(t){for(var e=!1;!(e=l(t.get(0)))&&((t=t.parent()).length&&!t.hasClass("fancybox-stage")&&!t.is("body")););return e},u=function(t){var e=this;e.instance=t,e.$bg=t.$refs.bg,e.$stage=t.$refs.stage,e.$container=t.$refs.container,e.destroy(),e.$container.on("touchstart.fb.touch mousedown.fb.touch",i.proxy(e,"ontouchstart"))};u.prototype.destroy=function(){this.$container.off(".fb.touch")},u.prototype.ontouchstart=function(n){var r=this,l=i(n.target),u=r.instance,h=u.current,f=h.$content,p="touchstart"==n.type;if(p&&r.$container.off("mousedown.fb.touch"),!h||r.instance.isAnimating||r.instance.isClosing)return n.stopPropagation(),void n.preventDefault();if((!n.originalEvent||2!=n.originalEvent.button)&&l.length&&!o(l)&&!o(l.parent())&&!(n.originalEvent.clientX>l[0].clientWidth+l.offset().left)&&(r.startPoints=a(n),r.startPoints&&!(r.startPoints.length>1&&u.isSliding))){if(r.$target=l,r.$content=f,r.canTap=!0,r.opts=h.opts.touch,i(e).off(".fb.touch"),i(e).on(p?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",i.proxy(r,"ontouchend")),i(e).on(p?"touchmove.fb.touch":"mousemove.fb.touch",i.proxy(r,"ontouchmove")),!r.opts&&!u.canPan()||!l.is(r.$stage)&&!r.$stage.find(l).length)return void(l.is("img")&&n.preventDefault());n.stopPropagation(),i.fancybox.isMobile&&(c(r.$target)||c(r.$target.parent()))||n.preventDefault(),r.canvasWidth=Math.round(h.$slide[0].clientWidth),r.canvasHeight=Math.round(h.$slide[0].clientHeight),r.startTime=(new Date).getTime(),r.distanceX=r.distanceY=r.distance=0,r.isPanning=!1,r.isSwiping=!1,r.isZooming=!1,r.sliderStartPos=r.sliderLastPos||{top:0,left:0},r.contentStartPos=i.fancybox.getTranslate(r.$content),r.contentLastPos=null,1!==r.startPoints.length||r.isZooming||(r.canTap=!u.isSliding,"image"===h.type&&(r.contentStartPos.width>r.canvasWidth+1||r.contentStartPos.height>r.canvasHeight+1)?(i.fancybox.stop(r.$content),r.$content.css("transition-duration","0ms"),r.isPanning=!0):r.isSwiping=!0,r.$container.addClass("fancybox-controls--isGrabbing")),2!==r.startPoints.length||u.isAnimating||h.hasError||"image"!==h.type||!h.isLoaded&&!h.$ghost||(r.isZooming=!0,r.isSwiping=!1,r.isPanning=!1,i.fancybox.stop(r.$content),r.$content.css("transition-duration","0ms"),r.centerPointStartX=.5*(r.startPoints[0].x+r.startPoints[1].x)-i(t).scrollLeft(),r.centerPointStartY=.5*(r.startPoints[0].y+r.startPoints[1].y)-i(t).scrollTop(),r.percentageOfImageAtPinchPointX=(r.centerPointStartX-r.contentStartPos.left)/r.contentStartPos.width,r.percentageOfImageAtPinchPointY=(r.centerPointStartY-r.contentStartPos.top)/r.contentStartPos.height,r.startDistanceBetweenFingers=s(r.startPoints[0],r.startPoints[1]))}},u.prototype.ontouchmove=function(t){var e=this;if(e.newPoints=a(t),i.fancybox.isMobile&&(c(e.$target)||c(e.$target.parent())))return t.stopPropagation(),void(e.canTap=!1);if((e.opts||e.instance.canPan())&&e.newPoints&&e.newPoints.length&&(e.distanceX=s(e.newPoints[0],e.startPoints[0],"x"),e.distanceY=s(e.newPoints[0],e.startPoints[0],"y"),e.distance=s(e.newPoints[0],e.startPoints[0]),e.distance>0)){if(!e.$target.is(e.$stage)&&!e.$stage.find(e.$target).length)return;t.stopPropagation(),t.preventDefault(),e.isSwiping?e.onSwipe():e.isPanning?e.onPan():e.isZooming&&e.onZoom()}},u.prototype.onSwipe=function(){var e,a=this,s=a.isSwiping,o=a.sliderStartPos.left||0;!0===s?Math.abs(a.distance)>10&&(a.canTap=!1,a.instance.group.length<2&&a.opts.vertical?a.isSwiping="y":a.instance.isSliding||!1===a.opts.vertical||"auto"===a.opts.vertical&&i(t).width()>800?a.isSwiping="x":(e=Math.abs(180*Math.atan2(a.distanceY,a.distanceX)/Math.PI),a.isSwiping=e>45&&e<135?"y":"x"),a.instance.isSliding=a.isSwiping,a.startPoints=a.newPoints,i.each(a.instance.slides,function(t,e){i.fancybox.stop(e.$slide),e.$slide.css("transition-duration","0ms"),e.inTransition=!1,e.pos===a.instance.current.pos&&(a.sliderStartPos.left=i.fancybox.getTranslate(e.$slide).left)}),a.instance.SlideShow&&a.instance.SlideShow.isActive&&a.instance.SlideShow.stop()):("x"==s&&(a.distanceX>0&&(a.instance.group.length<2||0===a.instance.current.index&&!a.instance.current.opts.loop)?o+=Math.pow(a.distanceX,.8):a.distanceX<0&&(a.instance.group.length<2||a.instance.current.index===a.instance.group.length-1&&!a.instance.current.opts.loop)?o-=Math.pow(-a.distanceX,.8):o+=a.distanceX),a.sliderLastPos={top:"x"==s?0:a.sliderStartPos.top+a.distanceY,left:o},a.requestId&&(r(a.requestId),a.requestId=null),a.requestId=n(function(){a.sliderLastPos&&(i.each(a.instance.slides,function(t,e){var n=e.pos-a.instance.currPos;i.fancybox.setTranslate(e.$slide,{top:a.sliderLastPos.top,left:a.sliderLastPos.left+n*a.canvasWidth+n*e.opts.gutter})}),a.$container.addClass("fancybox-is-sliding"))}))},u.prototype.onPan=function(){var t,e,a,s=this;s.canTap=!1,t=s.contentStartPos.width>s.canvasWidth?s.contentStartPos.left+s.distanceX:s.contentStartPos.left,e=s.contentStartPos.top+s.distanceY,(a=s.limitMovement(t,e,s.contentStartPos.width,s.contentStartPos.height)).scaleX=s.contentStartPos.scaleX,a.scaleY=s.contentStartPos.scaleY,s.contentLastPos=a,s.requestId&&(r(s.requestId),s.requestId=null),s.requestId=n(function(){i.fancybox.setTranslate(s.$content,s.contentLastPos)})},u.prototype.limitMovement=function(t,e,i,n){var r,a,s,o,l=this,c=l.canvasWidth,u=l.canvasHeight,h=l.contentStartPos.left,f=l.contentStartPos.top,p=l.distanceX,d=l.distanceY;return r=Math.max(0,.5*c-.5*i),a=Math.max(0,.5*u-.5*n),s=Math.min(c-i,.5*c-.5*i),o=Math.min(u-n,.5*u-.5*n),i>c&&(p>0&&t>r&&(t=r-1+Math.pow(-r+h+p,.8)||0),p<0&&t<s&&(t=s+1-Math.pow(s-h-p,.8)||0)),n>u&&(d>0&&e>a&&(e=a-1+Math.pow(-a+f+d,.8)||0),d<0&&e<o&&(e=o+1-Math.pow(o-f-d,.8)||0)),{top:e,left:t}},u.prototype.limitPosition=function(t,e,i,n){var r=this.canvasWidth,a=this.canvasHeight;return i>r?t=(t=t>0?0:t)<r-i?r-i:t:t=Math.max(0,r/2-i/2),n>a?e=(e=e>0?0:e)<a-n?a-n:e:e=Math.max(0,a/2-n/2),{top:e,left:t}},u.prototype.onZoom=function(){var e=this,a=e.contentStartPos.width,o=e.contentStartPos.height,l=e.contentStartPos.left,c=e.contentStartPos.top,u=s(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,h=Math.floor(a*u),f=Math.floor(o*u),p=(a-h)*e.percentageOfImageAtPinchPointX,d=(o-f)*e.percentageOfImageAtPinchPointY,m=(e.newPoints[0].x+e.newPoints[1].x)/2-i(t).scrollLeft(),g=(e.newPoints[0].y+e.newPoints[1].y)/2-i(t).scrollTop(),v=m-e.centerPointStartX,_={top:c+(d+(g-e.centerPointStartY)),left:l+(p+v),scaleX:e.contentStartPos.scaleX*u,scaleY:e.contentStartPos.scaleY*u};e.canTap=!1,e.newWidth=h,e.newHeight=f,e.contentLastPos=_,e.requestId&&(r(e.requestId),e.requestId=null),e.requestId=n(function(){i.fancybox.setTranslate(e.$content,e.contentLastPos)})},u.prototype.ontouchend=function(t){var n=this,s=Math.max((new Date).getTime()-n.startTime,1),o=n.isSwiping,l=n.isPanning,c=n.isZooming;return n.endPoints=a(t),n.$container.removeClass("fancybox-controls--isGrabbing"),i(e).off(".fb.touch"),n.requestId&&(r(n.requestId),n.requestId=null),n.isSwiping=!1,n.isPanning=!1,n.isZooming=!1,n.canTap?n.onTap(t):(n.speed=366,n.velocityX=n.distanceX/s*.5,n.velocityY=n.distanceY/s*.5,n.speedX=Math.max(.5*n.speed,Math.min(1.5*n.speed,1/Math.abs(n.velocityX)*n.speed)),void(l?n.endPanning():c?n.endZooming():n.endSwiping(o)))},u.prototype.endSwiping=function(t){var e=this,n=!1;e.instance.isSliding=!1,e.sliderLastPos=null,"y"==t&&Math.abs(e.distanceY)>50?(i.fancybox.animate(e.instance.current.$slide,{top:e.sliderStartPos.top+e.distanceY+150*e.velocityY,opacity:0},150),n=e.instance.close(!0,300)):"x"==t&&e.distanceX>50&&e.instance.group.length>1?n=e.instance.previous(e.speedX):"x"==t&&e.distanceX<-50&&e.instance.group.length>1&&(n=e.instance.next(e.speedX)),!1!==n||"x"!=t&&"y"!=t||e.instance.jumpTo(e.instance.current.index,150),e.$container.removeClass("fancybox-is-sliding")},u.prototype.endPanning=function(){var t,e,n,r=this;r.contentLastPos&&(!1===r.opts.momentum?(t=r.contentLastPos.left,e=r.contentLastPos.top):(t=r.contentLastPos.left+r.velocityX*r.speed,e=r.contentLastPos.top+r.velocityY*r.speed),(n=r.limitPosition(t,e,r.contentStartPos.width,r.contentStartPos.height)).width=r.contentStartPos.width,n.height=r.contentStartPos.height,i.fancybox.animate(r.$content,n,330))},u.prototype.endZooming=function(){var t,e,n,r,a=this,s=a.instance.current,o=a.newWidth,l=a.newHeight;a.contentLastPos&&(t=a.contentLastPos.left,r={top:e=a.contentLastPos.top,left:t,width:o,height:l,scaleX:1,scaleY:1},i.fancybox.setTranslate(a.$content,r),o<a.canvasWidth&&l<a.canvasHeight?a.instance.scaleToFit(150):o>s.width||l>s.height?a.instance.scaleToActual(a.centerPointStartX,a.centerPointStartY,150):(n=a.limitPosition(t,e,o,l),i.fancybox.setTranslate(a.content,i.fancybox.getTranslate(a.$content)),i.fancybox.animate(a.$content,n,150)))},u.prototype.onTap=function(t){var e,n=this,r=i(t.target),s=n.instance,o=s.current,l=t&&a(t)||n.startPoints,c=l[0]?l[0].x-n.$stage.offset().left:0,u=l[0]?l[0].y-n.$stage.offset().top:0,h=function(e){var r=o.opts[e];if(i.isFunction(r)&&(r=r.apply(s,[o,t])),r)switch(r){case"close":s.close(n.startEvent);break;case"toggleControls":s.toggleControls(!0);break;case"next":s.next();break;case"nextOrClose":s.group.length>1?s.next():s.close(n.startEvent);break;case"zoom":"image"==o.type&&(o.isLoaded||o.$ghost)&&(s.canPan()?s.scaleToFit():s.isScaledDown()?s.scaleToActual(c,u):s.group.length<2&&s.close(n.startEvent))}};if(!(t.originalEvent&&2==t.originalEvent.button||s.isSliding||c>r[0].clientWidth+r.offset().left)){if(r.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))e="Outside";else if(r.is(".fancybox-slide"))e="Slide";else{if(!s.current.$content||!s.current.$content.has(t.target).length)return;e="Content"}if(n.tapped){if(clearTimeout(n.tapped),n.tapped=null,Math.abs(c-n.tapX)>50||Math.abs(u-n.tapY)>50||s.isSliding)return this;h("dblclick"+e)}else n.tapX=c,n.tapY=u,o.opts["dblclick"+e]&&o.opts["dblclick"+e]!==o.opts["click"+e]?n.tapped=setTimeout(function(){n.tapped=null,h("click"+e)},300):h("click"+e);return this}},i(e).on("onActivate.fb",function(t,e){e&&!e.Guestures&&(e.Guestures=new u(e))}),i(e).on("beforeClose.fb",function(t,e){e&&e.Guestures&&e.Guestures.destroy()})}(window,document,t||e),function(t,e){"use strict";e.extend(!0,e.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg viewBox="0 0 40 40"><path d="M13,12 L27,20 L13,27 Z" /><path d="M15,10 v19 M23,10 v19" /></svg></button>'},slideShow:{autoStart:!1,speed:3e3}});var i=function(t){this.instance=t,this.init()};e.extend(i.prototype,{timer:null,isActive:!1,$button:null,init:function(){var t=this;t.$button=t.instance.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){t.toggle()}),(t.instance.group.length<2||!t.instance.group[t.instance.currIndex].opts.slideShow)&&t.$button.hide()},set:function(t){var e=this;e.instance&&e.instance.current&&(!0===t||e.instance.current.opts.loop||e.instance.currIndex<e.instance.group.length-1)?e.timer=setTimeout(function(){e.isActive&&e.instance.jumpTo((e.instance.currIndex+1)%e.instance.group.length)},e.instance.current.opts.slideShow.speed):(e.stop(),e.instance.idleSecondsCounter=0,e.instance.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null},start:function(){var t=this,e=t.instance.current;e&&(t.isActive=!0,t.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),t.set(!0))},stop:function(){var t=this,e=t.instance.current;t.clear(),t.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),t.isActive=!1},toggle:function(){var t=this;t.isActive?t.stop():t.start()}}),e(t).on({"onInit.fb":function(t,e){e&&!e.SlideShow&&(e.SlideShow=new i(e))},"beforeShow.fb":function(t,e,i,n){var r=e&&e.SlideShow;n?r&&i.opts.slideShow.autoStart&&r.start():r&&r.isActive&&r.clear()},"afterShow.fb":function(t,e,i){var n=e&&e.SlideShow;n&&n.isActive&&n.set()},"afterKeydown.fb":function(i,n,r,a,s){var o=n&&n.SlideShow;!o||!r.opts.slideShow||80!==s&&32!==s||e(t.activeElement).is("button,a,input")||(a.preventDefault(),o.toggle())},"beforeClose.fb onDeactivate.fb":function(t,e){var i=e&&e.SlideShow;i&&i.stop()}}),e(t).on("visibilitychange",function(){var i=e.fancybox.getInstance(),n=i&&i.SlideShow;n&&n.isActive&&(t.hidden?n.clear():n.set())})}(document,t||e),function(t,e){"use strict";var i=function(){var e,i,n,r=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],a={};for(i=0;i<r.length;i++)if((e=r[i])&&e[1]in t){for(n=0;n<e.length;n++)a[r[0][n]]=e[n];return a}return!1}();if(i){var n={request:function(e){(e=e||t.documentElement)[i.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){t[i.exitFullscreen]()},toggle:function(e){e=e||t.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(t[i.fullscreenElement])},enabled:function(){return Boolean(t[i.fullscreenEnabled])}};e.extend(!0,e.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fullscreen" title="{{FULL_SCREEN}}"><svg viewBox="0 0 40 40"><path d="M9,12 h22 v16 h-22 v-16 v16 h22 v-16 Z" /></svg></button>'},fullScreen:{autoStart:!1}}),e(t).on({"onInit.fb":function(t,e){var i;e&&e.group[e.currIndex].opts.fullScreen?((i=e.$refs.container).on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(t){t.stopPropagation(),t.preventDefault(),n.toggle(i[0])}),e.opts.fullScreen&&!0===e.opts.fullScreen.autoStart&&n.request(i[0]),e.FullScreen=n):e&&e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide()},"afterKeydown.fb":function(t,e,i,n,r){e&&e.FullScreen&&70===r&&(n.preventDefault(),e.FullScreen.toggle(e.$refs.container[0]))},"beforeClose.fb":function(t){t&&t.FullScreen&&n.exit()}}),e(t).on(i.fullscreenchange,function(){var t=n.isFullscreen(),i=e.fancybox.getInstance();i&&(i.current&&"image"===i.current.type&&i.isAnimating&&(i.current.$content.css("transition","none"),i.isAnimating=!1,i.update(!0,!0,0)),i.trigger("onFullscreenChange",t),i.$refs.container.toggleClass("fancybox-is-fullscreen",t))})}else e&&e.fancybox&&(e.fancybox.defaults.btnTpl.fullScreen=!1)}(document,t||e),function(t,e){"use strict";e.fancybox.defaults=e.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg viewBox="0 0 120 120"><path d="M30,30 h14 v14 h-14 Z M50,30 h14 v14 h-14 Z M70,30 h14 v14 h-14 Z M30,50 h14 v14 h-14 Z M50,50 h14 v14 h-14 Z M70,50 h14 v14 h-14 Z M30,70 h14 v14 h-14 Z M50,70 h14 v14 h-14 Z M70,70 h14 v14 h-14 Z" /></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},e.fancybox.defaults);var i=function(t){this.init(t)};e.extend(i.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(t){var e=this;e.instance=t,t.Thumbs=e;var i=t.group[0],n=t.group[1];e.opts=t.group[t.currIndex].opts.thumbs,e.$button=t.$refs.toolbar.find("[data-fancybox-thumbs]"),e.opts&&i&&n&&("image"==i.type||i.opts.thumb||i.opts.$thumb)&&("image"==n.type||n.opts.thumb||n.opts.$thumb)?(e.$button.show().on("click",function(){e.toggle()}),e.isActive=!0):e.$button.hide()},create:function(){var t,i,n=this,r=n.instance,a=n.opts.parentEl;n.$grid=e('<div class="fancybox-thumbs fancybox-thumbs-'+n.opts.axis+'"></div>').appendTo(r.$refs.container.find(a).addBack().filter(a)),t="<ul>",e.each(r.group,function(e,n){(i=n.opts.thumb||(n.opts.$thumb?n.opts.$thumb.attr("src"):null))||"image"!==n.type||(i=n.src),i&&i.length&&(t+='<li data-index="'+e+'"  tabindex="0" class="fancybox-thumbs-loading"><img data-src="'+i+'" /></li>')}),t+="</ul>",n.$list=e(t).appendTo(n.$grid).on("click","li",function(){r.jumpTo(e(this).data("index"))}),n.$list.find("img").hide().one("load",function(){var t,i,n,r,a=e(this).parent().removeClass("fancybox-thumbs-loading"),s=a.outerWidth(),o=a.outerHeight();t=this.naturalWidth||this.width,r=(i=this.naturalHeight||this.height)/o,(n=t/s)>=1&&r>=1&&(n>r?(t/=r,i=o):(t=s,i/=n)),e(this).css({width:Math.floor(t),height:Math.floor(i),"margin-top":i>o?Math.floor(.3*o-.3*i):Math.floor(.5*o-.5*i),"margin-left":Math.floor(.5*s-.5*t)}).show()}).each(function(){this.src=e(this).data("src")}),"x"===n.opts.axis&&n.$list.width(parseInt(n.$grid.css("padding-right"))+r.group.length*n.$list.children().eq(0).outerWidth(!0)+"px")},focus:function(t){var e,i,n=this,r=n.$list;n.instance.current&&(i=(e=r.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+n.instance.current.index+'"]').addClass("fancybox-thumbs-active")).position(),"y"===n.opts.axis&&(i.top<0||i.top>r.height()-e.outerHeight())?r.stop().animate({scrollTop:r.scrollTop()+i.top},t):"x"===n.opts.axis&&(i.left<r.parent().scrollLeft()||i.left>r.parent().scrollLeft()+(r.parent().width()-e.outerWidth()))&&r.parent().stop().animate({scrollLeft:i.left},t))},update:function(){this.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),this.isVisible?(this.$grid||this.create(),this.instance.trigger("onThumbsShow"),this.focus(0)):this.$grid&&this.instance.trigger("onThumbsHide"),this.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),e(t).on({"onInit.fb":function(t,e){var n;e&&!e.Thumbs&&((n=new i(e)).isActive&&!0===n.opts.autoStart&&n.show())},"beforeShow.fb":function(t,e,i,n){var r=e&&e.Thumbs;r&&r.isVisible&&r.focus(n?0:250)},"afterKeydown.fb":function(t,e,i,n,r){var a=e&&e.Thumbs;a&&a.isActive&&71===r&&(n.preventDefault(),a.toggle())},"beforeClose.fb":function(t,e){var i=e&&e.Thumbs;i&&i.isVisible&&!1!==i.opts.hideOnClose&&i.$grid.hide()}})}(document,t),function(t,e){"use strict";e.extend(!0,e.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg viewBox="0 0 40 40"><path d="M6,30 C8,18 19,16 23,16 L23,16 L23,10 L33,20 L23,29 L23,24 C19,24 8,27 6,30 Z"></svg></button>'},share:{tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a href="https://www.facebook.com/sharer/sharer.php?u={{src}}" target="_blank" class="fancybox-share_button"><svg version="1.1" viewBox="0 0 32 32" fill="#3b5998"><path d="M27.6 3h-23.2c-.8 0-1.4.6-1.4 1.4v23.1c0 .9.6 1.5 1.4 1.5h12.5v-10.1h-3.4v-3.9h3.4v-2.9c0-3.4 2.1-5.2 5-5.2 1.4 0 2.7.1 3 .2v3.5h-2.1c-1.6 0-1.9.8-1.9 1.9v2.5h3.9l-.5 3.9h-3.4v10.1h6.6c.8 0 1.4-.6 1.4-1.4v-23.2c.1-.8-.5-1.4-1.3-1.4z"></path></svg><span>Facebook</span></a><a href="https://www.pinterest.com/pin/create/button/?url={{src}}&amp;description={{descr}}" target="_blank" class="fancybox-share_button"><svg version="1.1" viewBox="0 0 32 32" fill="#c92228"><path d="M16 3c-7.2 0-13 5.8-13 13 0 5.5 3.4 10.2 8.3 12.1-.1-1-.2-2.6 0-3.7.2-1 1.5-6.5 1.5-6.5s-.4-.8-.4-1.9c0-1.8 1-3.2 2.4-3.2 1.1 0 1.6.8 1.6 1.8 0 1.1-.7 2.8-1.1 4.3-.3 1.3.6 2.3 1.9 2.3 2.3 0 4.1-2.4 4.1-6 0-3.1-2.2-5.3-5.4-5.3-3.7 0-5.9 2.8-5.9 5.6 0 1.1.4 2.3 1 3 .1.1.1.2.1.4-.1.4-.3 1.3-.4 1.5-.1.2-.2.3-.4.2-1.6-.8-2.6-3.1-2.6-5 0-4.1 3-7.9 8.6-7.9 4.5 0 8 3.2 8 7.5 0 4.5-2.8 8.1-6.7 8.1-1.3 0-2.6-.7-3-1.5 0 0-.7 2.5-.8 3.1-.3 1.1-1.1 2.5-1.6 3.4 1.2.4 2.5.6 3.8.6 7.2 0 13-5.8 13-13 0-7.1-5.8-12.9-13-12.9z"></path></svg><span>Pinterest</span></a><a href="https://twitter.com/intent/tweet?url={{src}}&amp;text={{descr}}" target="_blank" class="fancybox-share_button"><svg version="1.1" viewBox="0 0 32 32" fill="#1da1f2"><path d="M30 7.3c-1 .5-2.1.8-3.3.9 1.2-.7 2.1-1.8 2.5-3.2-1.1.7-2.3 1.1-3.6 1.4-1-1.1-2.5-1.8-4.2-1.8-3.2 0-5.7 2.6-5.7 5.7 0 .5.1.9.1 1.3-4.8-.2-9-2.5-11.8-6-.5.9-.8 1.9-.8 3 0 2 1 3.8 2.6 4.8-.9 0-1.8-.3-2.6-.7v.1c0 2.8 2 5.1 4.6 5.6-.5.1-1 .2-1.5.2-.4 0-.7 0-1.1-.1.7 2.3 2.9 3.9 5.4 4-2 1.5-4.4 2.5-7.1 2.5-.5 0-.9 0-1.4-.1 2.5 1.6 5.6 2.6 8.8 2.6 10.6 0 16.3-8.8 16.3-16.3v-.7c1.1-1 2-2 2.8-3.2z"></path></svg><span>Twitter</span></a></p><p><input type="text" value="{{src_raw}}" onfocus="this.select()" /></p></div>'}}),e(t).on("click","[data-fancybox-share]",function(){var t,i,n=e.fancybox.getInstance();n&&(t=!1===n.current.opts.hash?n.current.src:window.location,i=n.current.opts.share.tpl.replace(/\{\{src\}\}/g,encodeURIComponent(t)).replace(/\{\{src_raw\}\}/g,function(t){var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};return String(t).replace(/[&<>"'`=\/]/g,function(t){return e[t]})}(t)).replace(/\{\{descr\}\}/g,n.$caption?encodeURIComponent(n.$caption.text()):""),e.fancybox.open({src:n.translate(n,i),type:"html",opts:{animationEffect:"fade",animationDuration:250}}))})}(document,t||e),function(t,e,i){"use strict";function n(){var t=e.location.hash.substr(1),i=t.split("-"),n=i.length>1&&/^\+?\d+$/.test(i[i.length-1])&&parseInt(i.pop(-1),10)||1,r=i.join("-");return n<1&&(n=1),{hash:t,index:n,gallery:r}}function r(t){var e;""!==t.gallery&&((e=i("[data-fancybox='"+i.escapeSelector(t.gallery)+"']").eq(t.index-1)).length||(e=i("#"+i.escapeSelector(t.gallery))),e.length&&(s=!1,e.trigger("click")))}function a(t){var e;return!!t&&((e=t.current?t.current.opts:t.opts).hash||(e.$orig?e.$orig.data("fancybox"):""))}i.escapeSelector||(i.escapeSelector=function(t){return(t+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t})});var s=!0,o=null,l=null;i(function(){!1!==i.fancybox.defaults.hash&&(i(t).on({"onInit.fb":function(t,e){var i,r;!1!==e.group[e.currIndex].opts.hash&&(i=n(),(r=a(e))&&i.gallery&&r==i.gallery&&(e.currIndex=i.index-1))},"beforeShow.fb":function(i,n,r){var c;r&&!1!==r.opts.hash&&((c=a(n))&&""!==c&&(e.location.hash.indexOf(c)<0&&(n.opts.origHash=e.location.hash),o=c+(n.group.length>1?"-"+(r.index+1):""),"replaceState"in e.history?(l&&clearTimeout(l),l=setTimeout(function(){e.history[s?"pushState":"replaceState"]({},t.title,e.location.pathname+e.location.search+"#"+o),l=null,s=!1},300)):e.location.hash=o))},"beforeClose.fb":function(n,r,s){var c,u;l&&clearTimeout(l),!1!==s.opts.hash&&(c=a(r),u=r&&r.opts.origHash?r.opts.origHash:"",c&&""!==c&&("replaceState"in history?e.history.replaceState({},t.title,e.location.pathname+e.location.search+u):(e.location.hash=u,i(e).scrollTop(r.scrollTop).scrollLeft(r.scrollLeft))),o=null)}}),i(e).on("hashchange.fb",function(){var t=n();i.fancybox.getInstance()?!o||o===t.gallery+"-"+t.index||1===t.index&&o==t.gallery||(o=null,i.fancybox.close()):""!==t.gallery&&r(t)}),setTimeout(function(){r(n())},50))})}(document,window,t||e)}).call(this,i(0),i(0))},function(t,e,i){window.innerWidth>992&&Promise.resolve().then(function(){(function(t){var e=[i(1)];(function(e){console.log("scrollmagic");var i=new e.Controller,n=t(".line-1").add(t(".line-2")).add(t(".line-3")).add(t(".line-4")).add(t(".line-5")).add(t(".line-6"));t.each(n,function(){var n=t(this),r=t(n.attr("data-children"));!function(t){var e=t[0].getTotalLength();t.css("stroke-dasharray",e),t.css("stroke-dashoffset",e)}(r);var s=(new TimelineMax).add(TweenMax.to(r,1,{strokeDashoffset:0,strokeLinecap:"round",strokeLinejoin:"round",ease:Linear.easeNone}));new e.Scene({tweenChanges:!0,duration:function(t){var e=t.data("height");if(t[0].hasAttribute("data-duration")){var i=+t.attr("data-duration");return e-e/100*i}return e}(n),triggerElement:a(n)[0]}).setTween(s).triggerHook(.7).addTo(i)});var r=t(".bran-title, .oil-title, .seeds-title");function a(e){if(e.data("triggerelement")){var i=t(document.createElement("div"));return i.attr("class",e.attr("class")),i.css({position:"absolute",left:0,width:"100%",transform:"none",height:"100%",top:e.data("triggerelement")}),e.prepend(i),console.log("triggerIndocator"),i}return e}r.css({opacity:0,transform:"translateY(5%) scale(0.9)"}),t.each(r,function(){var n=t(this),r=(new TimelineMax).add(TweenMax.to(n,.4,{css:{opacity:1,transform:"none"},ease:Linear.easeNone}));new e.Scene({triggerElement:a(n)[0]}).setTween(r).triggerHook(.7).addTo(i)})}).apply(null,e)}).call(this,i(0))}).catch(i.oe)},function(t,e,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9qcXVlcnkvZGlzdC9qcXVlcnkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zY3JvbGxtYWdpYy9zY3JvbGxtYWdpYy9taW5pZmllZC9TY3JvbGxNYWdpYy5taW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2FtZC1vcHRpb25zLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvZ3NhcC9zcmMvbWluaWZpZWQvVHdlZW5NYXgubWluLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvZ3NhcC9zcmMvbWluaWZpZWQvVGltZWxpbmVNYXgubWluLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvZ3NhcC9zcmMvbWluaWZpZWQvVHdlZW5MaXRlLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9qcy9hcHAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zY3JvbGxtYWdpYy9zY3JvbGxtYWdpYy9taW5pZmllZC9wbHVnaW5zL2FuaW1hdGlvbi5nc2FwLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9qcy9qcXVlcnkuaW5wdXRtYXNrLmJ1bmRsZS5qcyIsIndlYnBhY2s6Ly8vLi9qcy9qcXVlcnkuZmFuY3lib3gubWluLmpzIiwid2VicGFjazovLy8uL2pzL2pzLW1hZ2ljLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18iLCJnbG9iYWwiLCJmYWN0b3J5IiwiZG9jdW1lbnQiLCJ3IiwiRXJyb3IiLCJ3aW5kb3ciLCJ0aGlzIiwibm9HbG9iYWwiLCJhcnIiLCJnZXRQcm90byIsImdldFByb3RvdHlwZU9mIiwic2xpY2UiLCJjb25jYXQiLCJwdXNoIiwiaW5kZXhPZiIsImNsYXNzMnR5cGUiLCJ0b1N0cmluZyIsImhhc093biIsImZuVG9TdHJpbmciLCJPYmplY3RGdW5jdGlvblN0cmluZyIsInN1cHBvcnQiLCJpc0Z1bmN0aW9uIiwib2JqIiwibm9kZVR5cGUiLCJpc1dpbmRvdyIsInByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMiLCJ0eXBlIiwic3JjIiwibm9Nb2R1bGUiLCJET01FdmFsIiwiY29kZSIsImRvYyIsIm5vZGUiLCJzY3JpcHQiLCJjcmVhdGVFbGVtZW50IiwidGV4dCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInRvVHlwZSIsImpRdWVyeSIsInNlbGVjdG9yIiwiY29udGV4dCIsImZuIiwiaW5pdCIsInJ0cmltIiwiaXNBcnJheUxpa2UiLCJsZW5ndGgiLCJqcXVlcnkiLCJjb25zdHJ1Y3RvciIsInRvQXJyYXkiLCJudW0iLCJwdXNoU3RhY2siLCJlbGVtcyIsInJldCIsIm1lcmdlIiwicHJldk9iamVjdCIsImVhY2giLCJjYWxsYmFjayIsIm1hcCIsImVsZW0iLCJhcHBseSIsImFyZ3VtZW50cyIsImZpcnN0IiwiZXEiLCJsYXN0IiwibGVuIiwiaiIsImVuZCIsInNvcnQiLCJzcGxpY2UiLCJleHRlbmQiLCJvcHRpb25zIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJ0YXJnZXQiLCJkZWVwIiwiaXNQbGFpbk9iamVjdCIsIkFycmF5IiwiaXNBcnJheSIsInVuZGVmaW5lZCIsImV4cGFuZG8iLCJNYXRoIiwicmFuZG9tIiwicmVwbGFjZSIsImlzUmVhZHkiLCJlcnJvciIsIm1zZyIsIm5vb3AiLCJwcm90byIsIkN0b3IiLCJpc0VtcHR5T2JqZWN0IiwiZ2xvYmFsRXZhbCIsInRyaW0iLCJtYWtlQXJyYXkiLCJyZXN1bHRzIiwiaW5BcnJheSIsInNlY29uZCIsImdyZXAiLCJpbnZlcnQiLCJtYXRjaGVzIiwiY2FsbGJhY2tFeHBlY3QiLCJhcmciLCJndWlkIiwiaXRlcmF0b3IiLCJzcGxpdCIsInRvTG93ZXJDYXNlIiwiU2l6emxlIiwiRXhwciIsImdldFRleHQiLCJpc1hNTCIsInRva2VuaXplIiwiY29tcGlsZSIsInNlbGVjdCIsIm91dGVybW9zdENvbnRleHQiLCJzb3J0SW5wdXQiLCJoYXNEdXBsaWNhdGUiLCJzZXREb2N1bWVudCIsImRvY0VsZW0iLCJkb2N1bWVudElzSFRNTCIsInJidWdneVFTQSIsInJidWdneU1hdGNoZXMiLCJjb250YWlucyIsIkRhdGUiLCJwcmVmZXJyZWREb2MiLCJkaXJydW5zIiwiZG9uZSIsImNsYXNzQ2FjaGUiLCJjcmVhdGVDYWNoZSIsInRva2VuQ2FjaGUiLCJjb21waWxlckNhY2hlIiwic29ydE9yZGVyIiwiYSIsImIiLCJwb3AiLCJwdXNoX25hdGl2ZSIsImxpc3QiLCJib29sZWFucyIsIndoaXRlc3BhY2UiLCJpZGVudGlmaWVyIiwiYXR0cmlidXRlcyIsInBzZXVkb3MiLCJyd2hpdGVzcGFjZSIsIlJlZ0V4cCIsInJjb21tYSIsInJjb21iaW5hdG9ycyIsInJhdHRyaWJ1dGVRdW90ZXMiLCJycHNldWRvIiwicmlkZW50aWZpZXIiLCJtYXRjaEV4cHIiLCJJRCIsIkNMQVNTIiwiVEFHIiwiQVRUUiIsIlBTRVVETyIsIkNISUxEIiwiYm9vbCIsIm5lZWRzQ29udGV4dCIsInJpbnB1dHMiLCJyaGVhZGVyIiwicm5hdGl2ZSIsInJxdWlja0V4cHIiLCJyc2libGluZyIsInJ1bmVzY2FwZSIsImZ1bmVzY2FwZSIsIl8iLCJlc2NhcGVkIiwiZXNjYXBlZFdoaXRlc3BhY2UiLCJoaWdoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwicmNzc2VzY2FwZSIsImZjc3Nlc2NhcGUiLCJjaCIsImFzQ29kZVBvaW50IiwiY2hhckNvZGVBdCIsInVubG9hZEhhbmRsZXIiLCJkaXNhYmxlZEFuY2VzdG9yIiwiYWRkQ29tYmluYXRvciIsImRpc2FibGVkIiwiZGlyIiwibmV4dCIsImNoaWxkTm9kZXMiLCJlIiwiZWxzIiwic2VlZCIsIm5pZCIsIm1hdGNoIiwiZ3JvdXBzIiwibmV3U2VsZWN0b3IiLCJuZXdDb250ZXh0Iiwib3duZXJEb2N1bWVudCIsImV4ZWMiLCJnZXRFbGVtZW50QnlJZCIsImlkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicXNhIiwidGVzdCIsIm5vZGVOYW1lIiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwidG9TZWxlY3RvciIsImpvaW4iLCJ0ZXN0Q29udGV4dCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJxc2FFcnJvciIsInJlbW92ZUF0dHJpYnV0ZSIsImtleXMiLCJjYWNoZSIsImNhY2hlTGVuZ3RoIiwic2hpZnQiLCJtYXJrRnVuY3Rpb24iLCJhc3NlcnQiLCJlbCIsImFkZEhhbmRsZSIsImF0dHJzIiwiaGFuZGxlciIsImF0dHJIYW5kbGUiLCJzaWJsaW5nQ2hlY2siLCJjdXIiLCJkaWZmIiwic291cmNlSW5kZXgiLCJuZXh0U2libGluZyIsImNyZWF0ZUlucHV0UHNldWRvIiwiY3JlYXRlQnV0dG9uUHNldWRvIiwiY3JlYXRlRGlzYWJsZWRQc2V1ZG8iLCJpc0Rpc2FibGVkIiwiY3JlYXRlUG9zaXRpb25hbFBzZXVkbyIsImFyZ3VtZW50IiwibWF0Y2hJbmRleGVzIiwiZG9jdW1lbnRFbGVtZW50IiwiaGFzQ29tcGFyZSIsInN1YldpbmRvdyIsImRlZmF1bHRWaWV3IiwidG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiY2xhc3NOYW1lIiwiY3JlYXRlQ29tbWVudCIsImdldEJ5SWQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImZpbHRlciIsImF0dHJJZCIsImZpbmQiLCJnZXRBdHRyaWJ1dGVOb2RlIiwidGFnIiwidG1wIiwiaW5uZXJIVE1MIiwiaW5wdXQiLCJtYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJvTWF0Y2hlc1NlbGVjdG9yIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJkaXNjb25uZWN0ZWRNYXRjaCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiYWRvd24iLCJidXAiLCJjb21wYXJlIiwic29ydERldGFjaGVkIiwiYXVwIiwiYXAiLCJicCIsInVuc2hpZnQiLCJleHByIiwiZWxlbWVudHMiLCJhdHRyIiwidmFsIiwic3BlY2lmaWVkIiwiZXNjYXBlIiwic2VsIiwidW5pcXVlU29ydCIsImR1cGxpY2F0ZXMiLCJkZXRlY3REdXBsaWNhdGVzIiwic29ydFN0YWJsZSIsInRleHRDb250ZW50IiwiZmlyc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInNlbGVjdG9ycyIsImNyZWF0ZVBzZXVkbyIsInJlbGF0aXZlIiwiPiIsIiAiLCIrIiwifiIsInByZUZpbHRlciIsImV4Y2VzcyIsInVucXVvdGVkIiwibm9kZU5hbWVTZWxlY3RvciIsInBhdHRlcm4iLCJvcGVyYXRvciIsImNoZWNrIiwicmVzdWx0Iiwid2hhdCIsInNpbXBsZSIsImZvcndhcmQiLCJvZlR5cGUiLCJ4bWwiLCJ1bmlxdWVDYWNoZSIsIm91dGVyQ2FjaGUiLCJub2RlSW5kZXgiLCJzdGFydCIsInBhcmVudCIsInVzZUNhY2hlIiwibGFzdENoaWxkIiwidW5pcXVlSUQiLCJwc2V1ZG8iLCJhcmdzIiwic2V0RmlsdGVycyIsImlkeCIsIm1hdGNoZWQiLCJub3QiLCJtYXRjaGVyIiwidW5tYXRjaGVkIiwiaGFzIiwiaW5uZXJUZXh0IiwibGFuZyIsImVsZW1MYW5nIiwiaGFzaCIsImxvY2F0aW9uIiwicm9vdCIsImZvY3VzIiwiYWN0aXZlRWxlbWVudCIsImhhc0ZvY3VzIiwiaHJlZiIsInRhYkluZGV4IiwiZW5hYmxlZCIsImNoZWNrZWQiLCJzZWxlY3RlZCIsInNlbGVjdGVkSW5kZXgiLCJlbXB0eSIsImhlYWRlciIsImJ1dHRvbiIsImV2ZW4iLCJvZGQiLCJsdCIsImd0IiwicmFkaW8iLCJjaGVja2JveCIsImZpbGUiLCJwYXNzd29yZCIsImltYWdlIiwic3VibWl0IiwicmVzZXQiLCJ0b2tlbnMiLCJjb21iaW5hdG9yIiwiYmFzZSIsInNraXAiLCJjaGVja05vbkVsZW1lbnRzIiwiZG9uZU5hbWUiLCJvbGRDYWNoZSIsIm5ld0NhY2hlIiwiZWxlbWVudE1hdGNoZXIiLCJtYXRjaGVycyIsImNvbmRlbnNlIiwibmV3VW5tYXRjaGVkIiwibWFwcGVkIiwic2V0TWF0Y2hlciIsInBvc3RGaWx0ZXIiLCJwb3N0RmluZGVyIiwicG9zdFNlbGVjdG9yIiwidGVtcCIsInByZU1hcCIsInBvc3RNYXAiLCJwcmVleGlzdGluZyIsImNvbnRleHRzIiwibXVsdGlwbGVDb250ZXh0cyIsIm1hdGNoZXJJbiIsIm1hdGNoZXJPdXQiLCJtYXRjaGVyRnJvbVRva2VucyIsImNoZWNrQ29udGV4dCIsImxlYWRpbmdSZWxhdGl2ZSIsImltcGxpY2l0UmVsYXRpdmUiLCJtYXRjaENvbnRleHQiLCJtYXRjaEFueUNvbnRleHQiLCJmaWx0ZXJzIiwicGFyc2VPbmx5Iiwic29GYXIiLCJwcmVGaWx0ZXJzIiwiY2FjaGVkIiwic2V0TWF0Y2hlcnMiLCJlbGVtZW50TWF0Y2hlcnMiLCJieVNldCIsImJ5RWxlbWVudCIsInN1cGVyTWF0Y2hlciIsIm91dGVybW9zdCIsIm1hdGNoZWRDb3VudCIsInNldE1hdGNoZWQiLCJjb250ZXh0QmFja3VwIiwiZGlycnVuc1VuaXF1ZSIsIm1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyIsInRva2VuIiwiY29tcGlsZWQiLCJkZWZhdWx0VmFsdWUiLCJ1bmlxdWUiLCJpc1hNTERvYyIsImVzY2FwZVNlbGVjdG9yIiwidW50aWwiLCJ0cnVuY2F0ZSIsImlzIiwic2libGluZ3MiLCJybmVlZHNDb250ZXh0IiwicnNpbmdsZVRhZyIsIndpbm5vdyIsInF1YWxpZmllciIsInNlbGYiLCJyb290alF1ZXJ5IiwicGFyc2VIVE1MIiwicmVhZHkiLCJycGFyZW50c3ByZXYiLCJndWFyYW50ZWVkVW5pcXVlIiwiY2hpbGRyZW4iLCJjb250ZW50cyIsInByZXYiLCJzaWJsaW5nIiwidGFyZ2V0cyIsImNsb3Nlc3QiLCJpbmRleCIsInByZXZBbGwiLCJhZGQiLCJhZGRCYWNrIiwicGFyZW50cyIsInBhcmVudHNVbnRpbCIsIm5leHRBbGwiLCJuZXh0VW50aWwiLCJwcmV2VW50aWwiLCJjb250ZW50RG9jdW1lbnQiLCJjb250ZW50IiwicmV2ZXJzZSIsInJub3RodG1sd2hpdGUiLCJJZGVudGl0eSIsInYiLCJUaHJvd2VyIiwiZXgiLCJhZG9wdFZhbHVlIiwicmVzb2x2ZSIsInJlamVjdCIsIm5vVmFsdWUiLCJtZXRob2QiLCJwcm9taXNlIiwiZmFpbCIsInRoZW4iLCJDYWxsYmFja3MiLCJmbGFnIiwiY3JlYXRlT3B0aW9ucyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJkaXNhYmxlIiwibG9jayIsImZpcmVXaXRoIiwiRGVmZXJyZWQiLCJmdW5jIiwidHVwbGVzIiwic3RhdGUiLCJhbHdheXMiLCJkZWZlcnJlZCIsImNhdGNoIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwidGhhdCIsIm1pZ2h0VGhyb3ciLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwicmVtYWluaW5nIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsIm1hc3RlciIsInVwZGF0ZUZ1bmMiLCJyZXJyb3JOYW1lcyIsInN0YWNrIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeUxpc3QiLCJjb21wbGV0ZWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVhZHlXYWl0Iiwid2FpdCIsInJlYWR5U3RhdGUiLCJkb1Njcm9sbCIsImFjY2VzcyIsImNoYWluYWJsZSIsImVtcHR5R2V0IiwicmF3IiwiYnVsayIsInJtc1ByZWZpeCIsInJkYXNoQWxwaGEiLCJmY2FtZWxDYXNlIiwiYWxsIiwibGV0dGVyIiwidG9VcHBlckNhc2UiLCJjYW1lbENhc2UiLCJzdHJpbmciLCJhY2NlcHREYXRhIiwib3duZXIiLCJEYXRhIiwidWlkIiwiY29uZmlndXJhYmxlIiwic2V0IiwiZGF0YSIsInByb3AiLCJoYXNEYXRhIiwiZGF0YVByaXYiLCJkYXRhVXNlciIsInJicmFjZSIsInJtdWx0aURhc2giLCJkYXRhQXR0ciIsIkpTT04iLCJwYXJzZSIsImdldERhdGEiLCJyZW1vdmVEYXRhIiwiX2RhdGEiLCJfcmVtb3ZlRGF0YSIsImRlcXVldWUiLCJzdGFydExlbmd0aCIsImhvb2tzIiwiX3F1ZXVlSG9va3MiLCJzdG9wIiwic2V0dGVyIiwiY2xlYXJRdWV1ZSIsImNvdW50IiwiZGVmZXIiLCJwbnVtIiwic291cmNlIiwicmNzc051bSIsImNzc0V4cGFuZCIsImlzSGlkZGVuV2l0aGluVHJlZSIsInN0eWxlIiwiZGlzcGxheSIsImNzcyIsInN3YXAiLCJvbGQiLCJhZGp1c3RDU1MiLCJ2YWx1ZVBhcnRzIiwidHdlZW4iLCJhZGp1c3RlZCIsInNjYWxlIiwibWF4SXRlcmF0aW9ucyIsImN1cnJlbnRWYWx1ZSIsImluaXRpYWwiLCJ1bml0IiwiY3NzTnVtYmVyIiwiaW5pdGlhbEluVW5pdCIsImRlZmF1bHREaXNwbGF5TWFwIiwiZ2V0RGVmYXVsdERpc3BsYXkiLCJib2R5Iiwic2hvd0hpZGUiLCJzaG93IiwidmFsdWVzIiwiaGlkZSIsInRvZ2dsZSIsInJjaGVja2FibGVUeXBlIiwicnRhZ05hbWUiLCJyc2NyaXB0VHlwZSIsIndyYXBNYXAiLCJvcHRpb24iLCJ0aGVhZCIsImNvbCIsInRyIiwidGQiLCJfZGVmYXVsdCIsImdldEFsbCIsInNldEdsb2JhbEV2YWwiLCJyZWZFbGVtZW50cyIsIm9wdGdyb3VwIiwidGJvZHkiLCJ0Zm9vdCIsImNvbGdyb3VwIiwiY2FwdGlvbiIsInRoIiwicmh0bWwiLCJidWlsZEZyYWdtZW50Iiwic2NyaXB0cyIsInNlbGVjdGlvbiIsImlnbm9yZWQiLCJ3cmFwIiwiZnJhZ21lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50Iiwibm9kZXMiLCJodG1sUHJlZmlsdGVyIiwiY3JlYXRlVGV4dE5vZGUiLCJkaXYiLCJjaGVja0Nsb25lIiwiY2xvbmVOb2RlIiwibm9DbG9uZUNoZWNrZWQiLCJya2V5RXZlbnQiLCJybW91c2VFdmVudCIsInJ0eXBlbmFtZXNwYWNlIiwicmV0dXJuVHJ1ZSIsInJldHVybkZhbHNlIiwic2FmZUFjdGl2ZUVsZW1lbnQiLCJlcnIiLCJvbiIsInR5cGVzIiwib25lIiwib3JpZ0ZuIiwiZXZlbnQiLCJvZmYiLCJoYW5kbGVPYmpJbiIsImV2ZW50SGFuZGxlIiwiZXZlbnRzIiwiaGFuZGxlT2JqIiwiaGFuZGxlcnMiLCJuYW1lc3BhY2VzIiwib3JpZ1R5cGUiLCJlbGVtRGF0YSIsImhhbmRsZSIsInRyaWdnZXJlZCIsImRpc3BhdGNoIiwiZGVsZWdhdGVUeXBlIiwiYmluZFR5cGUiLCJuYW1lc3BhY2UiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJtYXBwZWRUeXBlcyIsIm9yaWdDb3VudCIsInRlYXJkb3duIiwicmVtb3ZlRXZlbnQiLCJuYXRpdmVFdmVudCIsImhhbmRsZXJRdWV1ZSIsImZpeCIsImRlbGVnYXRlVGFyZ2V0IiwicHJlRGlzcGF0Y2giLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImN1cnJlbnRUYXJnZXQiLCJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsInJuYW1lc3BhY2UiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInBvc3REaXNwYXRjaCIsIm1hdGNoZWRIYW5kbGVycyIsIm1hdGNoZWRTZWxlY3RvcnMiLCJhZGRQcm9wIiwiaG9vayIsIkV2ZW50Iiwib3JpZ2luYWxFdmVudCIsIndyaXRhYmxlIiwibG9hZCIsIm5vQnViYmxlIiwidHJpZ2dlciIsImJsdXIiLCJjbGljayIsImJlZm9yZXVubG9hZCIsInJldHVyblZhbHVlIiwicHJvcHMiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmVsYXRlZFRhcmdldCIsInRpbWVTdGFtcCIsIm5vdyIsImlzU2ltdWxhdGVkIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwiYWx0S2V5IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjaGFuZ2VkVG91Y2hlcyIsImN0cmxLZXkiLCJkZXRhaWwiLCJldmVudFBoYXNlIiwibWV0YUtleSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsInZpZXciLCJjaGFyIiwiY2hhckNvZGUiLCJrZXlDb2RlIiwiYnV0dG9ucyIsImNsaWVudFgiLCJjbGllbnRZIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJwb2ludGVySWQiLCJwb2ludGVyVHlwZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwidGFyZ2V0VG91Y2hlcyIsInRvRWxlbWVudCIsInRvdWNoZXMiLCJ3aGljaCIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwicG9pbnRlcmVudGVyIiwicG9pbnRlcmxlYXZlIiwib3JpZyIsInJlbGF0ZWQiLCJyeGh0bWxUYWciLCJybm9Jbm5lcmh0bWwiLCJyY2hlY2tlZCIsInJjbGVhblNjcmlwdCIsIm1hbmlwdWxhdGlvblRhcmdldCIsImRpc2FibGVTY3JpcHQiLCJyZXN0b3JlU2NyaXB0IiwiY2xvbmVDb3B5RXZlbnQiLCJkZXN0IiwicGRhdGFPbGQiLCJwZGF0YUN1ciIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJmaXhJbnB1dCIsImRvbU1hbmlwIiwiY29sbGVjdGlvbiIsImhhc1NjcmlwdHMiLCJpTm9DbG9uZSIsInZhbHVlSXNGdW5jdGlvbiIsImh0bWwiLCJfZXZhbFVybCIsImtlZXBEYXRhIiwiY2xlYW5EYXRhIiwiZGF0YUFuZEV2ZW50cyIsImRlZXBEYXRhQW5kRXZlbnRzIiwic3JjRWxlbWVudHMiLCJkZXN0RWxlbWVudHMiLCJpblBhZ2UiLCJkZXRhY2giLCJhcHBlbmQiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsImFwcGVuZFRvIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwib3JpZ2luYWwiLCJpbnNlcnQiLCJybnVtbm9ucHgiLCJnZXRTdHlsZXMiLCJvcGVuZXIiLCJnZXRDb21wdXRlZFN0eWxlIiwicmJveFN0eWxlIiwiY3VyQ1NTIiwiY29tcHV0ZWQiLCJ3aWR0aCIsIm1pbldpZHRoIiwibWF4V2lkdGgiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicGl4ZWxCb3hTdHlsZXMiLCJhZGRHZXRIb29rSWYiLCJjb25kaXRpb25GbiIsImhvb2tGbiIsImNvbXB1dGVTdHlsZVRlc3RzIiwiY29udGFpbmVyIiwiY3NzVGV4dCIsImRpdlN0eWxlIiwicGl4ZWxQb3NpdGlvblZhbCIsInJlbGlhYmxlTWFyZ2luTGVmdFZhbCIsInJvdW5kUGl4ZWxNZWFzdXJlcyIsIm1hcmdpbkxlZnQiLCJyaWdodCIsInBpeGVsQm94U3R5bGVzVmFsIiwiYm94U2l6aW5nUmVsaWFibGVWYWwiLCJwb3NpdGlvbiIsInNjcm9sbGJveFNpemVWYWwiLCJvZmZzZXRXaWR0aCIsIm1lYXN1cmUiLCJyb3VuZCIsInBhcnNlRmxvYXQiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsImJveFNpemluZ1JlbGlhYmxlIiwicGl4ZWxQb3NpdGlvbiIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInNjcm9sbGJveFNpemUiLCJyZGlzcGxheXN3YXAiLCJyY3VzdG9tUHJvcCIsImNzc1Nob3ciLCJ2aXNpYmlsaXR5IiwiY3NzTm9ybWFsVHJhbnNmb3JtIiwibGV0dGVyU3BhY2luZyIsImZvbnRXZWlnaHQiLCJjc3NQcmVmaXhlcyIsImVtcHR5U3R5bGUiLCJmaW5hbFByb3BOYW1lIiwiY3NzUHJvcHMiLCJjYXBOYW1lIiwidmVuZG9yUHJvcE5hbWUiLCJzZXRQb3NpdGl2ZU51bWJlciIsInN1YnRyYWN0IiwibWF4IiwiYm94TW9kZWxBZGp1c3RtZW50IiwiZGltZW5zaW9uIiwiYm94IiwiaXNCb3JkZXJCb3giLCJzdHlsZXMiLCJjb21wdXRlZFZhbCIsImV4dHJhIiwiZGVsdGEiLCJjZWlsIiwiZ2V0V2lkdGhPckhlaWdodCIsInZhbHVlSXNCb3JkZXJCb3giLCJUd2VlbiIsImVhc2luZyIsImNzc0hvb2tzIiwib3BhY2l0eSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiY29sdW1uQ291bnQiLCJmaWxsT3BhY2l0eSIsImZsZXhHcm93IiwiZmxleFNocmluayIsImxpbmVIZWlnaHQiLCJvcmRlciIsIm9ycGhhbnMiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwib3JpZ05hbWUiLCJpc0N1c3RvbVByb3AiLCJzZXRQcm9wZXJ0eSIsImlzRmluaXRlIiwiZ2V0Q2xpZW50UmVjdHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsZWZ0IiwibWFyZ2luIiwicGFkZGluZyIsImJvcmRlciIsInByZWZpeCIsInN1ZmZpeCIsImV4cGFuZCIsImV4cGFuZGVkIiwicGFydHMiLCJwcm9wSG9va3MiLCJydW4iLCJwZXJjZW50IiwiZWFzZWQiLCJkdXJhdGlvbiIsInBvcyIsInN0ZXAiLCJmeCIsInNjcm9sbFRvcCIsInNjcm9sbExlZnQiLCJsaW5lYXIiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiaGVpZ2h0IiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsInByb3BlcnRpZXMiLCJzdG9wcGVkIiwicHJlZmlsdGVycyIsImN1cnJlbnRUaW1lIiwic3RhcnRUaW1lIiwidHdlZW5zIiwib3B0cyIsInNwZWNpYWxFYXNpbmciLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJnb3RvRW5kIiwicHJvcEZpbHRlciIsImNvbXBsZXRlIiwidGltZXIiLCJhbmltIiwiKiIsInR3ZWVuZXIiLCJvbGRmaXJlIiwicHJvcFR3ZWVuIiwicmVzdG9yZURpc3BsYXkiLCJpc0JveCIsImRhdGFTaG93IiwidW5xdWV1ZWQiLCJvdmVyZmxvdyIsIm92ZXJmbG93WCIsIm92ZXJmbG93WSIsInByZWZpbHRlciIsInNwZWVkIiwib3B0Iiwic3BlZWRzIiwiZmFkZVRvIiwidG8iLCJhbmltYXRlIiwib3B0YWxsIiwiZG9BbmltYXRpb24iLCJmaW5pc2giLCJzdG9wUXVldWUiLCJ0aW1lcnMiLCJjc3NGbiIsInNsaWRlRG93biIsInNsaWRlVXAiLCJzbGlkZVRvZ2dsZSIsImZhZGVJbiIsImZhZGVPdXQiLCJmYWRlVG9nZ2xlIiwic2xvdyIsImZhc3QiLCJkZWxheSIsInRpbWUiLCJ0aW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiY2hlY2tPbiIsIm9wdFNlbGVjdGVkIiwicmFkaW9WYWx1ZSIsImJvb2xIb29rIiwicmVtb3ZlQXR0ciIsIm5UeXBlIiwiYXR0ckhvb2tzIiwiYXR0ck5hbWVzIiwibG93ZXJjYXNlTmFtZSIsInJmb2N1c2FibGUiLCJyY2xpY2thYmxlIiwic3RyaXBBbmRDb2xsYXBzZSIsImdldENsYXNzIiwiY2xhc3Nlc1RvQXJyYXkiLCJyZW1vdmVQcm9wIiwicHJvcEZpeCIsInRhYmluZGV4IiwicGFyc2VJbnQiLCJmb3IiLCJjbGFzcyIsImFkZENsYXNzIiwiY2xhc3NlcyIsImN1clZhbHVlIiwiY2xhenoiLCJmaW5hbFZhbHVlIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsInN0YXRlVmFsIiwiaXNWYWxpZFZhbHVlIiwiY2xhc3NOYW1lcyIsImhhc0NsYXNzIiwicnJldHVybiIsInZhbEhvb2tzIiwib3B0aW9uU2V0IiwiZm9jdXNpbiIsInJmb2N1c01vcnBoIiwic3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2siLCJvbmx5SGFuZGxlcnMiLCJidWJibGVUeXBlIiwib250eXBlIiwibGFzdEVsZW1lbnQiLCJldmVudFBhdGgiLCJpc1RyaWdnZXIiLCJwYXJlbnRXaW5kb3ciLCJzaW11bGF0ZSIsInRyaWdnZXJIYW5kbGVyIiwiYXR0YWNoZXMiLCJub25jZSIsInJxdWVyeSIsInBhcnNlWE1MIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwicmJyYWNrZXQiLCJyQ1JMRiIsInJzdWJtaXR0ZXJUeXBlcyIsInJzdWJtaXR0YWJsZSIsImJ1aWxkUGFyYW1zIiwidHJhZGl0aW9uYWwiLCJwYXJhbSIsInZhbHVlT3JGdW5jdGlvbiIsImVuY29kZVVSSUNvbXBvbmVudCIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZUFycmF5IiwicjIwIiwicmhhc2giLCJyYW50aUNhY2hlIiwicmhlYWRlcnMiLCJybm9Db250ZW50IiwicnByb3RvY29sIiwidHJhbnNwb3J0cyIsImFsbFR5cGVzIiwib3JpZ2luQW5jaG9yIiwiYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwic3RydWN0dXJlIiwiZGF0YVR5cGVFeHByZXNzaW9uIiwiZGF0YVR5cGUiLCJkYXRhVHlwZXMiLCJpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyIsImpxWEhSIiwiaW5zcGVjdGVkIiwic2Vla2luZ1RyYW5zcG9ydCIsImluc3BlY3QiLCJwcmVmaWx0ZXJPckZhY3RvcnkiLCJkYXRhVHlwZU9yVHJhbnNwb3J0IiwiYWpheEV4dGVuZCIsImZsYXRPcHRpb25zIiwiYWpheFNldHRpbmdzIiwiYWN0aXZlIiwibGFzdE1vZGlmaWVkIiwiZXRhZyIsInVybCIsImlzTG9jYWwiLCJwcm90b2NvbCIsInByb2Nlc3NEYXRhIiwiYXN5bmMiLCJjb250ZW50VHlwZSIsImFjY2VwdHMiLCJqc29uIiwicmVzcG9uc2VGaWVsZHMiLCJjb252ZXJ0ZXJzIiwiKiB0ZXh0IiwidGV4dCBodG1sIiwidGV4dCBqc29uIiwidGV4dCB4bWwiLCJhamF4U2V0dXAiLCJzZXR0aW5ncyIsImFqYXhQcmVmaWx0ZXIiLCJhamF4VHJhbnNwb3J0IiwiYWpheCIsInRyYW5zcG9ydCIsImNhY2hlVVJMIiwicmVzcG9uc2VIZWFkZXJzU3RyaW5nIiwicmVzcG9uc2VIZWFkZXJzIiwidGltZW91dFRpbWVyIiwidXJsQW5jaG9yIiwiZmlyZUdsb2JhbHMiLCJ1bmNhY2hlZCIsImNhbGxiYWNrQ29udGV4dCIsImdsb2JhbEV2ZW50Q29udGV4dCIsImNvbXBsZXRlRGVmZXJyZWQiLCJzdGF0dXNDb2RlIiwicmVxdWVzdEhlYWRlcnMiLCJyZXF1ZXN0SGVhZGVyc05hbWVzIiwic3RyQWJvcnQiLCJnZXRSZXNwb25zZUhlYWRlciIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsInNldFJlcXVlc3RIZWFkZXIiLCJvdmVycmlkZU1pbWVUeXBlIiwibWltZVR5cGUiLCJzdGF0dXMiLCJhYm9ydCIsInN0YXR1c1RleHQiLCJmaW5hbFRleHQiLCJjcm9zc0RvbWFpbiIsImhvc3QiLCJoYXNDb250ZW50IiwiaWZNb2RpZmllZCIsImhlYWRlcnMiLCJiZWZvcmVTZW5kIiwic3VjY2VzcyIsInNlbmQiLCJuYXRpdmVTdGF0dXNUZXh0IiwicmVzcG9uc2VzIiwiaXNTdWNjZXNzIiwicmVzcG9uc2UiLCJtb2RpZmllZCIsImN0IiwiZmluYWxEYXRhVHlwZSIsImZpcnN0RGF0YVR5cGUiLCJhamF4SGFuZGxlUmVzcG9uc2VzIiwiY29udjIiLCJjdXJyZW50IiwiY29udiIsImRhdGFGaWx0ZXIiLCJ0aHJvd3MiLCJhamF4Q29udmVydCIsImdldEpTT04iLCJnZXRTY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJvZmZzZXRIZWlnaHQiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCIwIiwiMTIyMyIsInhoclN1cHBvcnRlZCIsImNvcnMiLCJlcnJvckNhbGxiYWNrIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJ0ZXh0IHNjcmlwdCIsImNoYXJzZXQiLCJzY3JpcHRDaGFyc2V0IiwiZXZ0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJwYXJhbXMiLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsImN1clBvc2l0aW9uIiwiY3VyTGVmdCIsImN1ckNTU1RvcCIsImN1clRvcCIsImN1ck9mZnNldCIsImN1ckNTU0xlZnQiLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCIiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJ1bmJpbmQiLCJkZWxlZ2F0ZSIsInVuZGVsZWdhdGUiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsIl9qUXVlcnkiLCJfJCIsIiQiLCJub0NvbmZsaWN0IiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fIiwidmVyc2lvbiIsIkNvbnRyb2xsZXIiLCJ1IiwiZiIsImRlZmF1bHRzIiwiaCIsImciLCJ5IiwiUyIsIkUiLCJyZWZyZXNoSW50ZXJ2YWwiLCJBIiwieCIsInZlcnRpY2FsIiwieiIsIkMiLCJfc2V0U2Nyb2xsUG9zIiwiRiIsInNjcm9sbFBvcyIsImZvckVhY2giLCJ1cGRhdGUiLCJMIiwickFGIiwiVCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsInJlZnJlc2giLCJfb3B0aW9ucyIsIk8iLCJzY3JvbGxPZmZzZXQiLCJhZGRTY2VuZSIsIlNjZW5lIiwiY29udHJvbGxlciIsImFkZFRvIiwiZ2xvYmFsU2NlbmVPcHRpb25zIiwicmVtb3ZlU2NlbmUiLCJ1cGRhdGVTY2VuZSIsIk51bWJlciIsIkZ1bmN0aW9uIiwiaGFzQXR0cmlidXRlIiwiaW5mbyIsInNpemUiLCJzY3JvbGxEaXJlY3Rpb24iLCJpc0RvY3VtZW50IiwibG9nbGV2ZWwiLCJkZXN0cm95IiwiY0FGIiwiYWRkT3B0aW9uIiwiJHN1cGVyIiwic3RhcnRQb3MiLCJlbmRQb3MiLCJ0cmlnZ2VyRWxlbWVudCIsInRyaWdnZXJIb29rIiwibmV3dmFsIiwicmVhc29uIiwidmFsaWRhdGUiLCJzaGlmdHMiLCJ0cmlnZ2VyUG9zaXRpb24iLCJyZW1vdmVQaW4iLCJzcGFjZXIiLCJpbkZsb3ciLCJwdXNoRm9sbG93ZXJzIiwiaXNNYXJnaW5Db2xsYXBzZVR5cGUiLCJyZWxTaXplIiwiYXV0b0Z1bGxXaWR0aCIsIk4iLCJQIiwiRCIsIndoZWVsRGVsdGEiLCJzZXRQaW4iLCJzcGFjZXJDbGFzcyIsImJveFNpemluZyIsIm1vekJveFNpemluZyIsIndlYmtpdEJveFNpemluZyIsIl9fX29yaWdTdHlsZSIsImJvdHRvbSIsIm1hcmdpbnMiLCJSIiwiayIsInJlbW92ZUNsYXNzVG9nZ2xlIiwic2V0Q2xhc3NUb2dnbGUiLCJvbkNlbnRlciIsIm9uRW50ZXIiLCJvbkxlYXZlIiwibWluIiwidGltZXN0YW1wIiwiX3V0aWwiLCJjdXJyZW50U3R5bGUiLCJEb21FbGVtZW50IiwiY2hhckF0Iiwic3Vic3RyIiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwibWFyZ2luUmlnaHQiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsImdldFRpbWUiLCJIVE1MRWxlbWVudCIsImNsYXNzTGlzdCIsImV2YWwiLCJfX3dlYnBhY2tfYW1kX29wdGlvbnNfXyIsIl9nc1Njb3BlIiwiX2dzUXVldWUiLCJfZ3NEZWZpbmUiLCJjeWNsZSIsIl9jeWNsZSIsIl95b3lvIiwidmFycyIsInlveW8iLCJ5b3lvRWFzZSIsIl9yZXBlYXQiLCJyZXBlYXQiLCJfcmVwZWF0RGVsYXkiLCJyZXBlYXREZWxheSIsIl91bmNhY2hlIiwicmVuZGVyIiwiX2ludGVybmFscyIsImlzU2VsZWN0b3IiLCJraWxsIiwiX2djIiwia2lsbFR3ZWVuc09mIiwia2lsbERlbGF5ZWRDYWxsc1RvIiwiZ2V0VHdlZW5zT2YiLCJsYWdTbW9vdGhpbmciLCJ0aWNrZXIiLCJpbnZhbGlkYXRlIiwiX3lveW9FYXNlIiwidXBkYXRlVG8iLCJyYXRpbyIsImltbWVkaWF0ZVJlbmRlciIsIl9zdGFydFRpbWUiLCJfdGltZWxpbmUiLCJfdGltZSIsIl9lbmFibGVkIiwiX2RlbGF5IiwiX2luaXR0ZWQiLCJfbm90aWZ5UGx1Z2luc09mRW5hYmxlZCIsIl9maXJzdFBUIiwiX29uUGx1Z2luRXZlbnQiLCJfZHVyYXRpb24iLCJfdG90YWxUaW1lIiwiX2luaXQiLCJfbmV4dCIsIl9kaXJ0eSIsInRvdGFsRHVyYXRpb24iLCJfdG90YWxEdXJhdGlvbiIsInEiLCJfcmF3UHJldlRpbWUiLCJfZWFzZSIsIl9jYWxjRW5kIiwiZ2V0UmF0aW8iLCJfcmV2ZXJzZWQiLCJhdXRvUmVtb3ZlQ2hpbGRyZW4iLCJsYXp5IiwiX2FjdGl2ZSIsIkVhc2UiLCJlYXNlIiwiZWFzZVBhcmFtcyIsImRlZmF1bHRFYXNlIiwiX2Vhc2VUeXBlIiwiX2Vhc2VQb3dlciIsImxhenlUd2VlbnMiLCJfbGF6eSIsIl9wYXVzZWQiLCJfc3RhcnRBdCIsIm9uU3RhcnQiLCJfY2FsbGJhY2siLCJfb25VcGRhdGUiLCJvblJlcGVhdCIsImZyb20iLCJydW5CYWNrd2FyZHMiLCJmcm9tVG8iLCJzdGFydEF0Iiwic3RhZ2dlclRvIiwiYWxsVG8iLCJvbkNvbXBsZXRlIiwib25Db21wbGV0ZVNjb3BlIiwiY2FsbGJhY2tTY29wZSIsInN0YWdnZXJGcm9tIiwiYWxsRnJvbSIsInN0YWdnZXJGcm9tVG8iLCJhbGxGcm9tVG8iLCJkZWxheWVkQ2FsbCIsIm9uQ29tcGxldGVQYXJhbXMiLCJvblJldmVyc2VDb21wbGV0ZSIsIm9uUmV2ZXJzZUNvbXBsZXRlUGFyYW1zIiwidXNlRnJhbWVzIiwib3ZlcndyaXRlIiwiaXNUd2VlbmluZyIsIl9maXJzdCIsImdldEFsbFR3ZWVucyIsIl9yb290VGltZWxpbmUiLCJfcm9vdEZyYW1lc1RpbWVsaW5lIiwia2lsbEFsbCIsInRvdGFsVGltZSIsImtpbGxDaGlsZFR3ZWVuc09mIiwidHdlZW5Mb29rdXAiLCJwYXVzZWQiLCJwYXVzZUFsbCIsInJlc3VtZUFsbCIsImdsb2JhbFRpbWVTY2FsZSIsIl90aW1lU2NhbGUiLCJmcmFtZSIsInRvdGFsUHJvZ3Jlc3MiLCJfbGFiZWxzIiwic21vb3RoQ2hpbGRUaW1pbmciLCJfc29ydENoaWxkcmVuIiwib25VcGRhdGUiLCJfc3dhcFNlbGZJblBhcmFtcyIsImFsaWduIiwic3RhZ2dlciIsImxhenlSZW5kZXIiLCJnbG9iYWxzIiwicGF1c2VDYWxsYmFjayIsIl9mb3JjaW5nUGxheWhlYWQiLCJfaGFzUGF1c2UiLCJUd2Vlbk1heCIsIl9wYXJzZVRpbWVPckxhYmVsIiwiZXhwb3J0Um9vdCIsIl9yZW1vdmUiLCJhZGRMYWJlbCIsInJhd1RpbWUiLCJfcGF1c2VUaW1lIiwicmVtb3ZlTGFiZWwiLCJfbGFzdCIsImluc2VydE11bHRpcGxlIiwiYXBwZW5kTXVsdGlwbGUiLCJhZGRQYXVzZSIsImdldExhYmVsVGltZSIsInRpbWVsaW5lIiwicmVjZW50IiwiZW5kVGltZSIsInNlZWsiLCJnb3RvQW5kUGxheSIsInBsYXkiLCJnb3RvQW5kU3RvcCIsInBhdXNlIiwiX2hhc1BhdXNlZENoaWxkIiwiX3ByZXYiLCJnZXRDaGlsZHJlbiIsIl9jb250YWlucyIsIl9yZWNlbnQiLCJzaGlmdENoaWxkcmVuIiwiX2tpbGwiLCJjbGVhciIsInRpbWVTY2FsZSIsIl9jYWxjdWxhdGluZ0R1cmF0aW9uIiwidXNlc0ZyYW1lcyIsImFkZENhbGxiYWNrIiwicmVtb3ZlQ2FsbGJhY2siLCJyZW1vdmVQYXVzZSIsInR3ZWVuVG8iLCJhYnMiLCJpc0Zyb21UbyIsIm9uU3RhcnRTY29wZSIsIm9uU3RhcnRQYXJhbXMiLCJ0d2VlbkZyb21UbyIsIl9sb2NrZWQiLCJCIiwiZ2V0QWN0aXZlIiwiaXNBY3RpdmUiLCJnZXRMYWJlbEFmdGVyIiwiZ2V0TGFiZWxzQXJyYXkiLCJnZXRMYWJlbEJlZm9yZSIsImN1cnJlbnRMYWJlbCIsImRhIiwiY2EiLCJiYSIsInNxcnQiLCJsZW5ndGhzIiwic2VnbWVudHMiLCJwbHVnaW4iLCJwcm9wTmFtZSIsInByaW9yaXR5IiwiQVBJIiwiX3RhcmdldCIsIl9mdW5jIiwiX21vZCIsIl9wcm9wcyIsIl90aW1lUmVzIiwidGltZVJlc29sdXRpb24iLCJhdXRvUm90YXRlIiwib3JpZW50VG9CZXppZXIiLCJfYXV0b1JvdGF0ZSIsIl9vdmVyd3JpdGVQcm9wcyIsIl9iZXppZXJzIiwiY3VydmluZXNzIiwiY29ycmVsYXRlIiwiX3NlZ0NvdW50IiwiX2xlbmd0aCIsIl9sZW5ndGhzIiwiX3NlZ21lbnRzIiwiX2wxIiwiX2xpIiwiX3MxIiwiX3NpIiwiX2wyIiwiX2N1clNlZyIsIl9zMiIsIl9wcmVjIiwiX2luaXRpYWxSb3RhdGlvbnMiLCJfc3RhcnRSYXRpbyIsImF0YW4yIiwiYmV6aWVyVGhyb3VnaCIsImN1YmljVG9RdWFkcmF0aWMiLCJfYXV0b0NTUyIsInF1YWRyYXRpY1RvQ3ViaWMiLCJfY3NzUmVnaXN0ZXIiLCJDU1NQbHVnaW4iLCJfcGFyc2VUb1Byb3h5IiwiX3NldFBsdWdpblJhdGlvIiwiQ1NTUHJvcFR3ZWVuIiwiX3JlZ2lzdGVyQ29tcGxleFNwZWNpYWxQcm9wIiwicGFyc2VyIiwicHQiLCJzZXRSYXRpbyIsIl90cmFuc2Zvcm0iLCJfZW5hYmxlVHJhbnNmb3JtcyIsIl9nc1RyYW5zZm9ybSIsInJvdGF0aW9uIiwiX29uSW5pdFR3ZWVuIiwiX3R3ZWVuIiwiX3N1cGVyIiwiZGVmYXVsdFRyYW5zZm9ybVBlcnNwZWN0aXZlIiwiZGVmYXVsdFNrZXdUeXBlIiwiZGVmYXVsdFNtb290aE9yaWdpbiIsInN1ZmZpeE1hcCIsImZvbnRTaXplIiwicGVyc3BlY3RpdmUiLCJHIiwiSCIsIkkiLCJKIiwiSyIsIk0iLCJjcmVhdGVFbGVtZW50TlMiLCJRIiwiX3NwZWNpYWxQcm9wcyIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIlUiLCIkMSIsIlYiLCJXIiwibG9nIiwiWCIsIlkiLCJaIiwiZ2V0U3R5bGUiLCJhYSIsImNvbnZlcnRUb1BpeGVscyIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiX2dzQ2FjaGUiLCJjYWNoZVdpZHRocyIsImNhbGN1bGF0ZU9mZnNldCIsIkRhIiwiQ2EiLCJSYSIsInNrZXdYIiwic2NhbGVYIiwic2NhbGVZIiwiRmEiLCJyb3RhdGlvblgiLCJyb3RhdGlvblkiLCJzY2FsZVoiLCJzYSIsImRpZnMiLCJmaXJzdE1QVCIsImVhIiwiZmEiLCJnYSIsImdldENUTSIsIk9hIiwiZ2V0QkJveCIsImhhIiwib3hwIiwib3lwIiwib3hyIiwib3lyIiwib3giLCJveSIsImlhIiwiamEiLCJrYSIsImxhIiwiYXF1YSIsImxpbWUiLCJzaWx2ZXIiLCJibGFjayIsIm1hcm9vbiIsInRlYWwiLCJibHVlIiwibmF2eSIsIndoaXRlIiwiZnVjaHNpYSIsIm9saXZlIiwieWVsbG93Iiwib3JhbmdlIiwiZ3JheSIsInB1cnBsZSIsImdyZWVuIiwicmVkIiwicGluayIsImN5YW4iLCJ0cmFuc3BhcmVudCIsIm1hIiwibmEiLCJwYXJzZUNvbG9yIiwib2EiLCJwYSIsImNvbG9yU3RyaW5nRmlsdGVyIiwibGFzdEluZGV4IiwiZGVmYXVsdFN0cmluZ0ZpbHRlciIsInFhIiwicmEiLCJtb2QiLCJ4czAiLCJ4czEiLCJ0YSIsInJ4cCIsInByIiwidWEiLCJ2YSIsInBhcnNlQ29tcGxleCIsImFwcGVuZFh0cmEiLCJ4Zmlyc3QiLCJ3YSIsInhhIiwiZm9ybWF0IiwiZm9ybWF0dGVyIiwiY29sb3IiLCJjb2xsYXBzaWJsZSIsIm11bHRpIiwiY2xycyIsImtleXdvcmQiLCJkZmx0IiwieWEiLCJ6YSIsIl9yZWdpc3RlclBsdWdpblByb3AiLCJjb20iLCJncmVlbnNvY2siLCJwbHVnaW5zIiwicmVnaXN0ZXJTcGVjaWFsUHJvcCIsInVzZVNWR1RyYW5zZm9ybUF0dHIiLCJBYSIsIkJhIiwiRWEiLCJHYSIsIlRyYW5zZm9ybSIsImZvcmNlM0QiLCJkZWZhdWx0Rm9yY2UzRCIsIkhhIiwiU1ZHRWxlbWVudCIsIklhIiwic2V0QXR0cmlidXRlTlMiLCJKYSIsIkthIiwiY2hyb21lIiwiTGEiLCJRYSIsInhPcmlnaW4iLCJ5T3JpZ2luIiwiUGEiLCJ4T2Zmc2V0IiwieU9mZnNldCIsIk1hIiwib3duZXJTVkdFbGVtZW50IiwiX29yaWdpbmFsR2V0QkJveCIsIk5hIiwiVmEiLCJzdmciLCJ0cmFuc2Zvcm0iLCJiYXNlVmFsIiwiY29uc29saWRhdGUiLCJtYXRyaXgiLCJnZXRUcmFuc2Zvcm0iLCJ6T3JpZ2luIiwic2luIiwic2tld1R5cGUiLCJTYSIsInhQZXJjZW50IiwieVBlcmNlbnQiLCJpZU9mZnNldFgiLCJpZU9mZnNldFkiLCJUYSIsInNldDNEVHJhbnNmb3JtUmF0aW8iLCJzZXRUcmFuc2Zvcm1SYXRpbyIsInNrZXdZIiwidGFuIiwiX2xhc3RQYXJzZWRUcmFuc2Zvcm0iLCJwYXJzZVRyYW5zZm9ybSIsInRyYW5zZm9ybU9yaWdpbiIsInN2Z09yaWdpbiIsInNtb290aE9yaWdpbiIsInRyYW5zZm9ybVBlcnNwZWN0aXZlIiwiZGlyZWN0aW9uYWxSb3RhdGlvbiIsInNob3J0Um90YXRpb24iLCJyb3RhdGlvbloiLCJzaG9ydFJvdGF0aW9uWCIsInNob3J0Um90YXRpb25ZIiwiX3RyYW5zZm9ybVR5cGUiLCJiYWNrZ3JvdW5kUG9zaXRpb25YIiwiYmFja2dyb3VuZFBvc2l0aW9uWSIsImNsaXBUb3AiLCJjbGlwUmlnaHQiLCJjbGlwQm90dG9tIiwiY2xpcExlZnQiLCJVYSIsInhuMSIsInJlbW92ZVByb3BlcnR5IiwiV2EiLCJfZ3NDbGFzc1BUIiwiX2NsYXNzTmFtZVBUIiwiWGEiLCJfdmFycyIsImF1dG9Sb3VuZCIsIl9hZGRMYXp5U2V0IiwiV2Via2l0QmFja2ZhY2VWaXNpYmlsaXR5IiwiX2xpbmtDU1NQIiwiX3Byb3BMb29rdXAiLCJfYWRkVHdlZW4iLCJzdHJpY3RVbml0cyIsInhzMiIsInhuMiIsInhzMyIsInhuMyIsInhzNCIsInhuNCIsInhzNSIsIllhIiwiYXV0b0FscGhhIiwiYWxwaGEiLCJaYSIsImNhc2NhZGVUbyIsInJlc2VydmVkUHJvcHMiLCJfdGFyZ2V0cyIsImFjdGl2YXRlIiwicG93IiwiYmxvYiIsIl9vbkluaXRBbGxQcm9wcyIsInJvdW5kUHJvcHMiLCJwZyIsIl9hZGQiLCJmaW5hbHMiLCJ1c2VSYWRpYW5zIiwiR3JlZW5Tb2NrR2xvYmFscyIsIl9jbGFzcyIsInJlZ2lzdGVyIiwiZWFzZU91dCIsImVhc2VJbiIsImVhc2VJbk91dCIsImdhcCIsIl9wMSIsIl9wMiIsImNvbmZpZyIsIl9wIiwiX3AzIiwiZXhwIiwidGFwZXIiLCJwb2ludHMiLCJyYW5kb21pemUiLCJjbGFtcCIsInRlbXBsYXRlIiwic3RyZW5ndGgiLCJhc2luIiwiU2xvd01vIiwic2MiLCJnc0NsYXNzIiwiX3R5cGUiLCJfcG93ZXIiLCJfcGFyYW1zIiwiTGluZWFyIiwiUXVhZCIsIl9saXN0ZW5lcnMiLCJfZXZlbnRUYXJnZXQiLCJ3YWtlIiwidXAiLCJzbGVlcCIsImZwcyIsInVzZVJBRiIsInZpc2liaWxpdHlTdGF0ZSIsIlRpY2tlciIsIkV2ZW50RGlzcGF0Y2hlciIsInJldmVyc2VkIiwidW5yZWYiLCJyZXN1bWUiLCJyZXN0YXJ0IiwiZXZlbnRDYWxsYmFjayIsIl9vdmVyd3JpdGUiLCJkZWZhdWx0T3ZlcndyaXRlIiwiX3NpYmxpbmdzIiwiX292ZXJ3cml0dGVuUHJvcHMiLCJhdXRvU2xlZXAiLCJmcCIsIl9hcHBseVBUIiwiYmxvYkRpZiIsIl9wbHVnaW5zIiwib25VcGRhdGVQYXJhbXMiLCJvblVwZGF0ZVNjb3BlIiwib25SZXZlcnNlQ29tcGxldGVTY29wZSIsIm9uUmVwZWF0UGFyYW1zIiwib25SZXBlYXRTY29wZSIsImF1dG9DU1MiLCJvbk92ZXJ3cml0ZSIsInN0cmluZ0ZpbHRlciIsIm5vbmUiLCJhdXRvIiwiY29uY3VycmVudCIsImFsbE9uU3RhcnQiLCJ0cnVlIiwiZmFsc2UiLCJfdXBkYXRlUm9vdCIsIl9nc1R3ZWVuSUQiLCJfaW5pdFByb3BzIiwiX3ByaW9yaXR5IiwiX29uRGlzYWJsZSIsIl9vbkVuYWJsZSIsIl90ZW1wS2lsbCIsIl9wcm9wTmFtZSIsIl9yb3VuZFByb3BzIiwib3ZlcndyaXRlUHJvcHMiLCJpbml0QWxsIiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyIsIndpbmRvd1dpZHRoIiwiaW5uZXJXaWR0aCIsImNsb3NlTmF2TWVudSIsInJlc2l6ZSIsIm5hdiIsImJ1eUVsZW1lbnRzIiwiYmxvZ0VsZW1lbnRzIiwiYnV5SXRlbXMiLCJibG9nSXRlbXMiLCJtYXBzSWQiLCJsYXQiLCJsbmciLCJ1bHVydSIsImdvb2dsZSIsIm1hcHMiLCJNYXAiLCJjZW50ZXIiLCJkaXNhYmxlRGVmYXVsdFVJIiwiTWFya2VyIiwiaW5pdE1hcCIsIml0ZW1zIiwicGxhY2Vob2xkZXIiLCJpbnB1dG1hc2siLCJtYXNrIiwic2hvd01hc2tPbkhvdmVyIiwid3BjZjdFbG0iLCJxdWVyeVNlbGVjdG9yIiwiZmFuY3lib3giLCJjbG9zZSIsInJlbW92ZVR3ZWVuIiwidHdlZW5DaGFuZ2VzIiwic2V0VHdlZW4iLCJkZWZhdWx0IiwiX3R5cGVvZiIsIklucHV0bWFzayIsImFsaWFzIiwiaW50ZXJuYWwiLCJtYXNrc2V0IiwicmVmcmVzaFZhbHVlIiwibm9NYXNrc0NhY2hlIiwiZGVmaW5pdGlvbnMiLCJ1c2VyT3B0aW9ucyIsImlzUlRMIiwibnVtZXJpY0lucHV0IiwicmVzb2x2ZUFsaWFzIiwiYWxpYXNTdHIiLCJhbGlhc0RlZmluaXRpb24iLCJhbGlhc2VzIiwiZ2VuZXJhdGVNYXNrU2V0Iiwibm9jYWNoZSIsImdlbmVyYXRlTWFzayIsIm1ldGFkYXRhIiwicmVnZXhNYXNrIiwicmVnZXgiLCJncmVlZHkiLCJyZXBlYXRTdGFydCIsImdyb3VwbWFya2VyIiwicXVhbnRpZmllcm1hcmtlciIsIm1hc2tzZXREZWZpbml0aW9uIiwibWFza2RlZktleSIsIm1hc2tzQ2FjaGUiLCJtYXNrVG9rZW4iLCJhbmFseXNlTWFzayIsInZhbGlkUG9zaXRpb25zIiwiX2J1ZmZlciIsImJ1ZmZlciIsInRlc3RzIiwibWFza0xlbmd0aCIsImtlZXBTdGF0aWMiLCJhbHRNYXNrIiwibmR4IiwibXNrIiwiYWx0ZXJuYXRvcm1hcmtlciIsIm1hc2tTY29wZSIsImFjdGlvbk9iaiIsImdldE1hc2tUZW1wbGF0ZSIsImJhc2VPbklucHV0IiwibWluaW1hbFBvcyIsImluY2x1ZGVNb2RlIiwibmR4SW50bHpyIiwidGVzdFBvcyIsIm1hc2tUZW1wbGF0ZSIsImx2cCIsImdldExhc3RWYWxpZFBvc2l0aW9uIiwiZ2V0TWFza1NldCIsImxvY2F0b3IiLCJuYXRpdmVEZWYiLCJnZXRQbGFjZWhvbGRlciIsImdldFRlc3RUZW1wbGF0ZSIsImppdE1hc2tpbmciLCJtYXhMZW5ndGgiLCJkZWYiLCJyZXNldE1hc2tTZXQiLCJzb2Z0IiwiY2xvc2VzdFRvIiwic3RyaWN0IiwidmFsaWRzIiwicG9zTmR4IiwicHNOZHgiLCJnZW5lcmF0ZWRJbnB1dCIsInN0cmlwVmFsaWRQb3NpdGlvbnMiLCJub2NoZWNrIiwicG9zaXRpb25zQ2xvbmUiLCJuZWVkc1ZhbGlkYXRpb24iLCJvcHRpb25hbGl0eSIsInBvc01hdGNoIiwicHJldk1hdGNoIiwibmV4dE1hdGNoIiwiY2FuQ2xlYXJQb3NpdGlvbiIsImlzTWFzayIsInBvc2l0aW9uQ2FuTWF0Y2hEZWZpbml0aW9uIiwiaXNWYWxpZCIsImRldGVybWluZVRlc3RUZW1wbGF0ZSIsImd1ZXNzTmV4dEJlc3QiLCJ0ZXN0UG9zaXRpb25zIiwibHZUZXN0IiwiZ2V0VGVzdHMiLCJsdlRlc3RBbHRBcnIiLCJhbHRlcm5hdGlvbiIsIm9wdGlvbmFsUXVhbnRpZmllciIsIm5ld0Jsb2NrTWFya2VyIiwiY2hlY2tBbHRlcm5hdGlvbk1hdGNoIiwidHN0UHMiLCJnZXRUZXN0IiwidmFsaWQiLCJ0bmR4IiwicmVzb2x2ZVRlc3RGcm9tVG9rZW4iLCJuZHhJbml0aWFsaXplciIsImxvb3BOZHgiLCJxdWFudGlmaWVyUmVjdXJzZSIsImhhbmRsZU1hdGNoIiwiaXNGaXJzdE1hdGNoIiwibGF0ZXN0TWF0Y2giLCJ0b2tlbkdyb3VwIiwiZmlyc3RNYXRjaCIsImlzUXVhbnRpZmllciIsInJlc29sdmVOZHhJbml0aWFsaXplciIsImFsdGVybmF0ZU5keCIsInRhcmdldEFsdGVybmF0aW9uIiwiYmVzdE1hdGNoIiwiaW5kZXhQb3MiLCJ2cEFsdGVybmF0aW9uIiwidHBBbHRlcm5hdGlvbiIsImxtbnQiLCJuZHhQb3MiLCJjZCIsImNhY2hlRGVwZW5kZW5jeSIsImlzR3JvdXAiLCJpc09wdGlvbmFsIiwib3B0aW9uYWxUb2tlbiIsImluc2VydFN0b3AiLCJpc0FsdGVybmF0b3IiLCJtYWx0TWF0Y2hlcyIsImFsdGVybmF0ZVRva2VuIiwibWFsdGVybmF0ZU1hdGNoZXMiLCJjdXJyZW50TWF0Y2hlcyIsImxvb3BOZHhDbnQiLCJhbHRJbmRleCIsImFtbmR4IiwiY3VycmVudFBvcyIsIm5keEluaXRpYWxpemVyQ2xvbmUiLCJhbHRJbmRleEFyciIsIm50bmR4IiwibmR4MSIsImFsdE1hdGNoIiwiZHJvcE1hdGNoIiwibmR4MiIsImFsdE1hdGNoMiIsImFsdExvY0FyciIsImFsbmR4IiwicXQiLCJxbmR4IiwicXVhbnRpZmllciIsImZpbHRlclRlc3RzIiwibWFza1Rva2VucyIsInByZXZpb3VzUG9zIiwidHN0IiwibXRuZHgiLCJjYXJkaW5hbGl0eSIsImNhc2luZyIsImdldEJ1ZmZlclRlbXBsYXRlIiwiZ2V0QnVmZmVyIiwibm9DYWNoZSIsInJlZnJlc2hGcm9tQnVmZmVyIiwic2tpcE9wdGlvbmFsUGFydENoYXJhY3RlciIsInZhbFJlc3VsdCIsImNhcmV0IiwiYWx0QXJyMSIsImFsdEFycjIiLCJuYU5keCIsImFsdEFyckMiLCJpc01hdGNoIiwibmFBcnIiLCJmcm9tU2V0VmFsaWQiLCJmcm9tQWx0ZXJuYXRlIiwidmFsaWRhdGVPbmx5IiwiaXNTZWxlY3Rpb24iLCJwb3NPYmoiLCJiZWdpbiIsIl9pc1ZhbGlkIiwicnNsdCIsImxvb3BlbmQiLCJjaHJzIiwiZ2V0QnVmZmVyRWxlbWVudCIsInZhbGlkYXRlZFBvcyIsInBvc3NpYmxlTW9kaWZpZWRCdWZmZXIiLCJzZXRWYWxpZFBvc2l0aW9uIiwicG9zQmVmb3JlIiwiU1BBQ0UiLCJ2YWxpZFRlc3QiLCJpbnNlcnRNb2RlIiwidnBzIiwiaW5pdGlhbExlbmd0aCIsImZpbGxNaXNzaW5nTm9uTWFzayIsIm1hc2tQb3MiLCJwbmR4IiwidGVzdFRlbXBsYXRlIiwidGVzdHNGcm9tUG9zIiwicmFkaXhQb2ludERlZmluaXRpb25TeW1ib2wiLCJyYWRpeFBvaW50IiwicHJlVmFsaWRhdGlvbiIsImhhbmRsZVJlbW92ZSIsIkRFTEVURSIsImN1cnJlbnRQb3NWYWxpZCIsInNlZWtOZXh0IiwiblBvcyIsInNuUG9zIiwib3JpZ2luYWxQb3MiLCJuZXdQb3MiLCJ2cCIsInRhcmdldExvY2F0b3IiLCJ0bGwiLCJwcyIsImVxdWFsaXR5IiwidGFyZ2V0QUkiLCJiZXN0TWF0Y2hBSSIsInRzdEFJIiwibGFzdEFsdCIsImFsdFBvcyIsInByZXZBbHRQb3MiLCJ2YWxpZFBvcyIsImFsdE5keHMiLCJkZWNpc2lvblBvcyIsInZhbGlkUHNDbG9uZSIsImlzVmFsaWRSc2x0IiwibEFsdFBvcyIsImRlY2lzaW9uVGFrZXIiLCJwb3NzaWJpbGl0eVBvcyIsInByZXZQb3MiLCJtbmR4IiwidmFsaWRJbnB1dHMiLCJzdGF0aWNJbnB1dHNCZWZvcmVQb3MiLCJzdGF0aWNJbnB1dHNCZWZvcmVQb3NBbHRlcm5hdGUiLCJ2ZXJpZnlWYWxpZElucHV0IiwicG9zc2liaWxpdGllcyIsInRhcmdldEx2cCIsInBvc3RWYWxpZGF0aW9uIiwicG9zdFJlc3VsdCIsIm5ld0Jsb2NrIiwibWFza0wiLCJzZWVrUHJldmlvdXMiLCJ3cml0ZUJ1ZmZlciIsImNhcmV0UG9zIiwidHJpZ2dlcklucHV0RXZlbnQiLCJvbkJlZm9yZVdyaXRlIiwiX3ZhbHVlU2V0IiwicmVuZGVyQ29sb3JNYXNrIiwiYW5kcm9pZCIsInNraXBJbnB1dEV2ZW50IiwicmV0dXJuUEwiLCJwcmV2VGVzdCIsInN0YXRpY0FsdGVybmF0aW9ucyIsImNoZWNrVmFsIiwid3JpdGVPdXQiLCJucHR2bCIsImluaXRpYXRpbmdFdmVudCIsImlucHV0VmFsdWUiLCJjaGFyQ29kZXMiLCJpbml0aWFsTmR4IiwiYXV0b1VubWFzayIsInN0YXRpY0lucHV0IiwiZXNjYXBlUmVnZXgiLCJrZXlwcmVzcyIsIm5leHRUZXN0IiwiaXNUZW1wbGF0ZU1hdGNoIiwiRXZlbnRIYW5kbGVycyIsImtleXByZXNzRXZlbnQiLCJvcmlnUmVzdWx0IiwiZm9yd2FyZFBvc2l0aW9uIiwidW5tYXNrZWR2YWx1ZSIsInNldFZhbHVlRXZlbnQiLCJ1bVZhbHVlIiwidW5tYXNrZWRWYWx1ZSIsIm9uVW5NYXNrIiwiYnVmZmVyVmFsdWUiLCJub3RyYW5zbGF0ZSIsInRyYW5zbGF0ZVBvc2l0aW9uIiwicmFuZ2UiLCJzZXRTZWxlY3Rpb25SYW5nZSIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiZ2V0U2VsZWN0aW9uIiwiZ2V0UmFuZ2VBdCIsImNvbW1vbkFuY2VzdG9yQ29udGFpbmVyIiwic3RhcnRPZmZzZXQiLCJlbmRPZmZzZXQiLCJjcmVhdGVSYW5nZSIsImR1cGxpY2F0ZSIsIm1vdmVTdGFydCIsIl92YWx1ZUdldCIsInNjcm9sbENhbGMiLCJzY3JvbGxXaWR0aCIsIm1vYmlsZSIsInRleHROb2RlIiwic2V0U3RhcnQiLCJzZXRFbmQiLCJjb2xsYXBzZSIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwiY3JlYXRlVGV4dFJhbmdlIiwibW92ZUVuZCIsImRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uIiwicmV0dXJuRGVmaW5pdGlvbiIsImJsIiwicG9zaXRpb25zIiwibHZUZXN0QWx0IiwiY2xlYXJPcHRpb25hbFRhaWwiLCJybCIsImx2IiwiaXNDb21wbGV0ZSIsImxycCIsImFtbCIsImZyb21Jc1ZhbGlkIiwiQkFDS1NQQUNFIiwicGVuZCIsImdyb3VwU2VwYXJhdG9yIiwiaW5pdGlhbGl6ZUNvbG9yTWFzayIsImNvbXB1dGVkU3R5bGUiLCJ0ZXh0QWxpZ24iLCJjb2xvck1hc2siLCJvZmZzZXRMZWZ0IiwiY2xpZW50eCIsInRleHRUcmFuc2Zvcm0iLCJ3aGl0ZVNwYWNlIiwiaXRsIiwiaW5wdXRUZXh0IiwicHJldmlvdXNXaWR0aCIsIm9mZnNldDEiLCJvZmZzZXQyIiwiZmluZENhcmV0UG9zIiwiY2xpY2tFdmVudCIsImhhbmRsZVN0YXRpYyIsImlzU3RhdGljIiwiaGFuZGxlQ2FyZXQiLCJmb3JjZSIsInBvc2l0aW9uQ29sb3JNYXNrIiwidW5kb1ZhbHVlIiwiJGVsIiwidmFsdWVCdWZmZXIiLCJza2lwS2V5UHJlc3NFdmVudCIsImlnbm9yYWJsZSIsIm1vdXNlRW50ZXIiLCJFdmVudFJ1bGVyIiwiZXZlbnROYW1lIiwiZXZlbnRIYW5kbGVyIiwiZXYiLCJpbU9wdHMiLCJyZWFkT25seSIsInRhYlRocm91Z2giLCJUQUIiLCJpZW1vYmlsZSIsImlwaG9uZSIsInJldHVyblZhbCIsImZvcm0iLCJldkFyciIsImtleWRvd25FdmVudCIsIiRpbnB1dCIsIkJBQ0tTUEFDRV9TQUZBUkkiLCJpc1N1cHBvcnRlZCIsIkVORCIsIlBBR0VfRE9XTiIsIkhPTUUiLCJQQUdFX1VQIiwidW5kb09uRXNjYXBlIiwiRVNDQVBFIiwiSU5TRVJUIiwiUklHSFQiLCJMRUZUIiwib25LZXlEb3duIiwiaWdub3JhYmxlcyIsImNoZWNrdmFsIiwiRU5URVIiLCJ3cml0ZU91dEJ1ZmZlciIsIm9uS2V5VmFsaWRhdGlvbiIsInBhc3RlRXZlbnQiLCJ0ZW1wVmFsdWUiLCJ2YWx1ZUJlZm9yZUNhcmV0IiwidmFsdWVBZnRlckNhcmV0IiwiY2xpcGJvYXJkRGF0YSIsInBhc3RlVmFsdWUiLCJvbkJlZm9yZVBhc3RlIiwiaW5wdXRGYWxsQmFja0V2ZW50IiwiaW5wdXRDaGFyIiwiZnJvbnRQYXJ0IiwiYmFja1BhcnQiLCJmcm9udEJ1ZmZlclBhcnQiLCJiYWNrQnVmZmVyUGFydCIsImVudHJpZXMiLCJpc0VudHJ5IiwiZnBsIiwiZW50cnkiLCJvbkJlZm9yZU1hc2siLCJjbGVhck1hc2tPbkxvc3RGb2N1cyIsImNsZWFySW5jb21wbGV0ZSIsImZvY3VzRXZlbnQiLCJucHRWYWx1ZSIsInNob3dNYXNrT25Gb2N1cyIsInBvc2l0aW9uQ2FyZXRPblRhYiIsIm1vdXNlbGVhdmVFdmVudCIsInRhYmJlZCIsInNlbGVjdGVkQ2FyZXQiLCJwb3NpdGlvbkNhcmV0T25DbGljayIsImNsaWNrUG9zIiwicmFkaXhQb3MiLCJkb1JhZGl4Rm9jdXMiLCJjbGlja1Bvc2l0aW9uIiwibHZjbGlja1Bvc2l0aW9uIiwibGFzdFBvc2l0aW9uIiwidHQiLCJkYmxjbGlja0V2ZW50IiwiY3V0RXZlbnQiLCJjbGlwRGF0YSIsInNldERhdGEiLCJleGVjQ29tbWFuZCIsImJsdXJFdmVudCIsIm1vdXNlZW50ZXJFdmVudCIsInN1Ym1pdEV2ZW50IiwicmVtb3ZlTWFza09uU3VibWl0IiwicmVzZXRFdmVudCIsImFjdGlvbiIsImVsZW1lbnRUeXBlIiwidGFnTmFtZSIsInN1cHBvcnRzSW5wdXRUeXBlIiwiaXNDb250ZW50RWRpdGFibGUiLCJucHQiLCJudWxsYWJsZSIsInZhbHVlR2V0IiwidmFsdWVTZXQiLCJfX3ZhbHVlR2V0Iiwibm9WYWx1ZVBhdGNoaW5nIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19wcm90b19fIiwidmFsdWVQcm9wZXJ0eSIsIl9fbG9va3VwR2V0dGVyX18iLCJfX2xvb2t1cFNldHRlcl9fIiwiX19kZWZpbmVHZXR0ZXJfXyIsIl9fZGVmaW5lU2V0dGVyX18iLCJfX3ZhbHVlU2V0Iiwib3ZlcnJ1bGVSVEwiLCJpbnB1dG1hc2twYXRjaCIsInZhbGhvb2tHZXQiLCJ2YWxob29rU2V0IiwiJGVsZW0iLCJpbnB1dG1vZGUiLCJhbmRyb2lkSGFjayIsIm9uY29tcGxldGUiLCJvbmluY29tcGxldGUiLCJvbmNsZWFyZWQiLCJpbnB1dEV2ZW50T25seSIsImluaXRpYWxWYWx1ZSIsImxtaWIiLCJtYXNrVGFyZ2V0IiwibXRkdCIsImRhdGFBdHRyaWJ1dGUiLCJvcHRpb25hbG1hcmtlciIsImVzY2FwZUNoYXIiLCJwYXN0ZWRWYWx1ZSIsInJpZ2h0QWxpZ24iLCJzdGF0aWNEZWZpbml0aW9uU3ltYm9sIiwiaW1wb3J0RGF0YUF0dHJpYnV0ZXMiLCI5IiwidmFsaWRhdG9yIiwiZGVmaW5pdGlvblN5bWJvbCIsInNjb3BlZE9wdHMiLCJkYXRhb3B0aW9ucyIsIm9wdGlvbkRhdGEiLCJpbXBvcnRPcHRpb24iLCJhdHRyT3B0aW9ucyIsImltcG9ydEF0dHJpYnV0ZU9wdGlvbnMiLCJub3JlbWFzayIsImdldGVtcHR5bWFzayIsImhhc01hc2tlZFZhbHVlIiwiZ2V0bWV0YWRhdGEiLCJNYXNrVG9rZW4iLCJvcGVuR3JvdXAiLCJhbHRlcm5hdG9yR3JvdXAiLCJpbnNlcnRUZXN0RGVmaW5pdGlvbiIsIm10b2tlbiIsImVsZW1lbnQiLCJtYXNrZGVmIiwicHJldmFsaWRhdG9ycyIsInByZXZhbGlkYXRvciIsInByZXZhbGlkYXRvcnNMIiwiZGVmYXVsdENhc2UiLCJvcGVuZW5pbmdzIiwiY3VycmVudE9wZW5pbmdUb2tlbiIsImFsdGVybmF0b3IiLCJjdXJyZW50VG9rZW4iLCJvcGVuaW5nVG9rZW4iLCJsYXN0TWF0Y2giLCJncm91cFRva2VuIiwidG9rZW5pemVyIiwicmVnZXhUb2tlbml6ZXIiLCJtcSIsIm1xMCIsIm1xMSIsInN1YlRva2VuIiwidmVyaWZ5R3JvdXBNYXJrZXIiLCJuZXh0VG9rZW4iLCJyZXZlcnNlVG9rZW5zIiwiaW50TWF0Y2giLCJzdCIsImV4dGVuZERlZmF1bHRzIiwiZXh0ZW5kRGVmaW5pdGlvbnMiLCJkZWZpbml0aW9uIiwiZXh0ZW5kQWxpYXNlcyIsInVubWFzayIsInN0ciIsIkFMVCIsIkNBUFNfTE9DSyIsIkNPTU1BIiwiQ09NTUFORCIsIkNPTU1BTkRfTEVGVCIsIkNPTU1BTkRfUklHSFQiLCJDT05UUk9MIiwiRE9XTiIsIk1FTlUiLCJOVU1QQURfQUREIiwiTlVNUEFEX0RFQ0lNQUwiLCJOVU1QQURfRElWSURFIiwiTlVNUEFEX0VOVEVSIiwiTlVNUEFEX01VTFRJUExZIiwiTlVNUEFEX1NVQlRSQUNUIiwiUEVSSU9EIiwiU0hJRlQiLCJVUCIsIldJTkRPV1MiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2lucHV0bWFzazIiLCJfaW5wdXRtYXNrNCIsIl9qcXVlcnkyIiwiaG1yIiwibG9jYWxzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIml0ZW0iLCJ1c2VTb3VyY2VNYXAiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsInN0cmluZ2lmeSIsInRvQ29tbWVudCIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiYWRkU3R5bGVzVG9Eb20iLCJkb21TdHlsZSIsInN0eWxlc0luRG9tIiwicmVmcyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwicGFydCIsIm1lZGlhIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwiZ2V0RWxlbWVudCIsImluc2VydEludG8iLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsInJlbW92ZVN0eWxlRWxlbWVudCIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImFkZEF0dHJzIiwic2luZ2xldG9uIiwic3R5bGVJbmRleCIsInNpbmdsZXRvbkNvdW50ZXIiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiZml4VXJscyIsIm9sZFNyYyIsInN0eWxlU2hlZXQiLCJuZXdPYmoiLCJyZXBsYWNlVGV4dCIsImNzc05vZGUiLCJpc09sZElFIiwibWVtbyIsImF0b2IiLCJzdHlsZVRhcmdldCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZW1lbnQiLCJCb29sZWFuIiwiYmFzZVVybCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCJkZC9tbS95eXl5IiwidmFsMXByZSIsInZhbDEiLCJ2YWwycHJlIiwic2VwYXJhdG9yIiwiZXNjYXBlZFNlcGFyYXRvciIsInZhbDIiLCJsZWFwZGF5IiwieWVhcnJhbmdlIiwibWlueWVhciIsIm1heHllYXIiLCJpc0luWWVhclJhbmdlIiwiZW50ZXJlZHllYXIiLCJlbnRlcmVkeWVhcjIiLCJkZXRlcm1pbmViYXNleWVhciIsImhpbnQiLCJjdXJyZW50eWVhciIsImdldEZ1bGxZZWFyIiwibWF4WWVhclByZWZpeCIsIm1heFllYXJQb3N0Zml4IiwibWF4eFllYXIiLCJjdXJyZW50WWVhclByZWZpeCIsImN1cnJlbnRZZWFyQW5kSGludCIsInRvZGF5IiwiZ2V0RGF0ZSIsImdldE1vbnRoIiwiZ2V0RnJvbnRWYWx1ZSIsImN1cnJlbnRSZXN1bHQiLCJkYXlNb250aFZhbHVlIiwieWVhciIsImJ1ZmZlclN0ciIsInN1YnN0cmluZyIsImlzTGVhcFllYXIiLCIxIiwicGNocnMiLCIyIiwiZnJvbnRWYWx1ZSIsInllYXJQcmVmaXgiLCJtbS9kZC95eXl5IiwieXl5eS9tbS9kZCIsImRkLm1tLnl5eXkiLCJkZC1tbS15eXl5IiwibW0uZGQueXl5eSIsIm1tLWRkLXl5eXkiLCJ5eXl5Lm1tLmRkIiwieXl5eS1tbS1kZCIsImRhdGV0aW1lIiwiaHJzcHJlIiwiaHJzMjQiLCJocnMiLCJhbXBtIiwibXNwcmUiLCJtcyIsInRpbWVzZXBhcmF0b3IiLCJob3VyRm9ybWF0IiwiZGF0ZXRpbWUxMiIsIm1tL2RkL3l5eXkgaGg6bW0geG0iLCJoaDptbSB0IiwiaDpzIHQiLCJoaDptbTpzcyIsImhoOm1tIiwiZGF0ZSIsIm1tL3l5eXkiLCJzaGFtc2kiLCJ5eXl5LW1tLWRkIGhoOm1tOnNzIiwiJiIsIiMiLCJpcCIsIm1hc2tlZFZhbHVlIiwiZW1haWwiLCItIiwibWFjIiwidmluIiwiYXV0b0VzY2FwZSIsInR4dCIsImVzY2FwZWRUeHQiLCJudW1lcmljIiwiaW50ZWdlckRpZ2l0cyIsImF1dG9Hcm91cCIsImdyb3VwU2l6ZSIsInNlcHMiLCJmbG9vciIsImludGVnZXJPcHRpb25hbCIsImRpZ2l0c09wdGlvbmFsIiwiZGlnaXRzIiwiZGVjaW1hbFByb3RlY3QiLCJkcSIsImVuZm9yY2VEaWdpdHNPbkJsdXIiLCJhbGxvd01pbnVzIiwibmVnYXRpb25TeW1ib2wiLCJmcm9udCIsImJhY2siLCJ1bm1hc2tBc051bWJlciIsImlzTmVnYXRpdmUiLCJkb3Bvc3QiLCJjaGFyQXRQb3MiLCJwcm9jZXNzVmFsdWUiLCJyYWRpeFBvc2l0aW9uIiwicnBiIiwiYWRkUmFkaXgiLCJwb3N0TWFzayIsInJhZGl4U3BsaXQiLCJuZXdDYXJldFBvcyIsInVubWFza2VkIiwicGFyc2VNaW5NYXhPcHRpb25zIiwiTmFOIiwiTUlOX1ZBTFVFIiwiTUFYX1ZBTFVFIiwiaW50ZWdlclBhcnQiLCJlbXB0eUNoZWNrIiwiaW50ZWdlck5QYXJ0IiwicHZSYWRpeFNwbGl0IiwiYnVmZmVyVGVtcGxhdGUiLCI6IiwicmFkaXgiLCJ2cyIsImtvbW1hTWF0Y2hlcyIsImRvdE1hdGNoZXMiLCJkZWNQYXJ0IiwiZGlnaXRzRmFjdG9yIiwiY2FuQ2xlYXIiLCJjdXJyZW5jeSIsImRlY2ltYWwiLCJpbnRlZ2VyIiwicGVyY2VudGFnZSIsIm1hc2tTb3J0IiwibWFza2EiLCJtYXNrYiIsIm1hc2thcyIsIm1hc2ticyIsImxvY2FsZUNvbXBhcmUiLCJhbmFseXNlTWFza0Jhc2UiLCJtYXNrR3JvdXBzIiwicGhvbmVDb2RlcyIsInJlZHVjZVZhcmlhdGlvbnMiLCJtYXNrcyIsInByZXZpb3VzVmFyaWF0aW9uIiwicHJldmlvdXNtYXNrR3JvdXAiLCJ2YXJpYXRpb24iLCJtYXNrR3JvdXAiLCJyZWJ1aWxkIiwic3VibWFza3MiLCJhYnN0cmFjdHBob25lIiwiY291bnRyeWNvZGUiLCJwcm9jZXNzZWRWYWx1ZSIsIlJlZ2V4IiwicmVnZXhUb2tlbnMiLCJxdWFudGlmaWVyRmlsdGVyIiwiUmVnZXhUb2tlbiIsInJlcGVhdGVyUGFydCIsInZhbGlkYXRlUmVnZXhUb2tlbiIsImZyb21Hcm91cCIsImlzdmFsaWQiLCJyZWdleFBhcnQiLCJvcGVuR3JvdXBDb3VudCIsIm1hdGNoVG9rZW4iLCJjcnJudG5keCIsIm1hdGNoR3JvdXAiLCJyZWdleFBhcnRCYWsiLCJxbSIsInRlc3RFeHAiLCJ0bCIsImNidWZmZXIiLCJvcGVuZ3JvdXBzIiwicXVhbnRpZmllclRva2VuIiwicmVnZXhUb2tlbiIsIm5wdG1hc2siLCJfX3dlYnBhY2tfcHJvdmlkZWRfd2luZG93X2RvdF9qUXVlcnkiLCJsb29wIiwiZ3V0dGVyIiwia2V5Ym9hcmQiLCJhcnJvd3MiLCJpbmZvYmFyIiwidG9vbGJhciIsImlkbGVUaW1lIiwic21hbGxCdG4iLCJwcm90ZWN0IiwibW9kYWwiLCJwcmVsb2FkIiwiaWZyYW1lIiwidHBsIiwic2Nyb2xsaW5nIiwiZGVmYXVsdFR5cGUiLCJhbmltYXRpb25FZmZlY3QiLCJhbmltYXRpb25EdXJhdGlvbiIsInpvb21PcGFjaXR5IiwidHJhbnNpdGlvbkVmZmVjdCIsInRyYW5zaXRpb25EdXJhdGlvbiIsInNsaWRlQ2xhc3MiLCJiYXNlQ2xhc3MiLCJiYXNlVHBsIiwic3Bpbm5lclRwbCIsImVycm9yVHBsIiwiYnRuVHBsIiwiZG93bmxvYWQiLCJhcnJvd0xlZnQiLCJhcnJvd1JpZ2h0IiwicGFyZW50RWwiLCJhdXRvRm9jdXMiLCJiYWNrRm9jdXMiLCJ0cmFwRm9jdXMiLCJmdWxsU2NyZWVuIiwiYXV0b1N0YXJ0IiwidG91Y2giLCJtb21lbnR1bSIsInNsaWRlU2hvdyIsInRodW1icyIsImhpZGVPbkNsb3NlIiwiYXhpcyIsIm9uSW5pdCIsImJlZm9yZUxvYWQiLCJhZnRlckxvYWQiLCJiZWZvcmVTaG93IiwiYWZ0ZXJTaG93IiwiYmVmb3JlQ2xvc2UiLCJhZnRlckNsb3NlIiwib25BY3RpdmF0ZSIsIm9uRGVhY3RpdmF0ZSIsImNsaWNrQ29udGVudCIsImNsaWNrU2xpZGUiLCJjbGlja091dHNpZGUiLCJkYmxjbGlja0NvbnRlbnQiLCJkYmxjbGlja1NsaWRlIiwiZGJsY2xpY2tPdXRzaWRlIiwiaTE4biIsImVuIiwiQ0xPU0UiLCJORVhUIiwiUFJFViIsIkVSUk9SIiwiUExBWV9TVEFSVCIsIlBMQVlfU1RPUCIsIkZVTExfU0NSRUVOIiwiVEhVTUJTIiwiRE9XTkxPQUQiLCJTSEFSRSIsIlpPT00iLCJkZSIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ0cmFuc2l0aW9uIiwiT1RyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwiV2Via2l0VHJhbnNpdGlvbiIsImlzTW9iaWxlIiwiZ3JvdXAiLCJjdXJySW5kZXgiLCJwcmV2SW5kZXgiLCJjdXJyUG9zIiwiZmlyc3RSdW4iLCJjcmVhdGVHcm91cCIsIiRsYXN0Rm9jdXMiLCJzbGlkZXMiLCJzY3JvbGxiYXJXaWR0aCIsImdldEluc3RhbmNlIiwiTVNTdHJlYW0iLCJzY3JvbGxIZWlnaHQiLCJpbm5lckhlaWdodCIsInRyYW5zbGF0ZSIsIiRyZWZzIiwianVtcFRvIiwiJG9yaWciLCIkdGh1bWIiLCJhZGRFdmVudHMiLCJyZW1vdmVFdmVudHMiLCJwcmV2aW91cyIsImlzU2NhbGVkRG93biIsInN0YWdlIiwiaXNDbG9zaW5nIiwiaWRsZVNlY29uZHNDb3VudGVyIiwiaXNJZGxlIiwic2hvd0NvbnRyb2xzIiwiaWRsZUludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJoaWRlQ29udHJvbHMiLCJjbGVhckludGVydmFsIiwiaXNTbGlkaW5nIiwiaXNBbmltYXRpbmciLCJjcmVhdGVTbGlkZSIsInVwZGF0ZUNvbnRyb2xzIiwiZ2V0VHJhbnNsYXRlIiwiJHNsaWRlIiwiaXNNb3ZlZCIsImZvcmNlZER1cmF0aW9uIiwibG9hZFNsaWRlIiwiaXNMb2FkZWQiLCJyZXZlYWxDb250ZW50IiwidXBkYXRlU2xpZGUiLCJzY2FsZVRvQWN0dWFsIiwiJGNvbnRlbnQiLCJoYXNFcnJvciIsInVwZGF0ZUN1cnNvciIsIlNsaWRlU2hvdyIsInNjYWxlVG9GaXQiLCJnZXRGaXRQb3MiLCJzZXRUcmFuc2xhdGUiLCJpc1pvb21hYmxlIiwiY2FuUGFuIiwiaXNMb2FkaW5nIiwic2V0SW1hZ2UiLCJzZXRJZnJhbWUiLCJzZXRDb250ZW50Iiwic2V0RXJyb3IiLCJzaG93TG9hZGluZyIsInNyY3NldCIsImRldmljZVBpeGVsUmF0aW8iLCJwb3N0Zml4IiwidGh1bWIiLCIkZ2hvc3QiLCJzZXRCaWdJbWFnZSIsIiRpbWFnZSIsInRpbW91dHMiLCJuYXR1cmFsV2lkdGgiLCJuYXR1cmFsSGVpZ2h0IiwiaGlkZUxvYWRpbmciLCJjb250ZW50V2luZG93Iiwib3V0ZXJXaWR0aCIsIm91dGVySGVpZ2h0IiwiJHBsYWNlaG9sZGVyIiwiJHNtYWxsQnRuIiwiJHNwaW5uZXIiLCJnZXRUaHVtYlBvcyIsInBhcmVudEVsZW1lbnQiLCJldmVyeSIsImlzVmlzaWJsZSIsImNsZWFuVXAiLCIkY2FwdGlvbiIsImlzSGlkZGVuQ29udHJvbHMiLCJ0b2dnbGVDb250cm9scyIsImNyZWF0ZVRvdWNoIiwidXNlM2QiLCJkb2N1bWVudE1vZGUiLCJwcm9wZXJ0eU5hbWUiLCJ5b3V0dWJlIiwiYXV0b3BsYXkiLCJhdXRvaGlkZSIsImZzIiwiaGQiLCJ3bW9kZSIsImVuYWJsZWpzYXBpIiwiaHRtbDUiLCJwYXJhbVBsYWNlIiwidmltZW8iLCJzaG93X3RpdGxlIiwic2hvd19ieWxpbmUiLCJzaG93X3BvcnRyYWl0IiwiZnVsbHNjcmVlbiIsImFwaSIsIm1ldGFjYWZlIiwiZGFpbHltb3Rpb24iLCJhZGRpdGlvbmFsSW5mb3MiLCJ2aW5lIiwiaW5zdGFncmFtIiwiZ21hcF9wbGFjZSIsImdtYXBfc2VhcmNoIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiY29udGVudFByb3ZpZGVyIiwid2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb3pDYW5jZWxBbmltYXRpb25GcmFtZSIsIm9DYW5jZWxBbmltYXRpb25GcmFtZSIsIm9uY2xpY2siLCJpbnN0YW5jZSIsIiRiZyIsImJnIiwiJHN0YWdlIiwiJGNvbnRhaW5lciIsIm9udG91Y2hzdGFydCIsInN0YXJ0UG9pbnRzIiwiJHRhcmdldCIsImNhblRhcCIsImNhbnZhc1dpZHRoIiwiY2FudmFzSGVpZ2h0IiwiZGlzdGFuY2VYIiwiZGlzdGFuY2VZIiwiZGlzdGFuY2UiLCJpc1Bhbm5pbmciLCJpc1N3aXBpbmciLCJpc1pvb21pbmciLCJzbGlkZXJTdGFydFBvcyIsInNsaWRlckxhc3RQb3MiLCJjb250ZW50U3RhcnRQb3MiLCJjb250ZW50TGFzdFBvcyIsImNlbnRlclBvaW50U3RhcnRYIiwiY2VudGVyUG9pbnRTdGFydFkiLCJwZXJjZW50YWdlT2ZJbWFnZUF0UGluY2hQb2ludFgiLCJwZXJjZW50YWdlT2ZJbWFnZUF0UGluY2hQb2ludFkiLCJzdGFydERpc3RhbmNlQmV0d2VlbkZpbmdlcnMiLCJvbnRvdWNobW92ZSIsIm5ld1BvaW50cyIsIm9uU3dpcGUiLCJvblBhbiIsIm9uWm9vbSIsImluVHJhbnNpdGlvbiIsInJlcXVlc3RJZCIsImxpbWl0TW92ZW1lbnQiLCJsaW1pdFBvc2l0aW9uIiwibmV3V2lkdGgiLCJuZXdIZWlnaHQiLCJvbnRvdWNoZW5kIiwiZW5kUG9pbnRzIiwib25UYXAiLCJ2ZWxvY2l0eVgiLCJ2ZWxvY2l0eVkiLCJzcGVlZFgiLCJlbmRQYW5uaW5nIiwiZW5kWm9vbWluZyIsImVuZFN3aXBpbmciLCJzdGFydEV2ZW50IiwidGFwcGVkIiwidGFwWCIsInRhcFkiLCJHdWVzdHVyZXMiLCIkYnV0dG9uIiwib25Jbml0LmZiIiwiYmVmb3JlU2hvdy5mYiIsImFmdGVyU2hvdy5mYiIsImFmdGVyS2V5ZG93bi5mYiIsImJlZm9yZUNsb3NlLmZiIG9uRGVhY3RpdmF0ZS5mYiIsInJlcXVlc3QiLCJyZXF1ZXN0RnVsbHNjcmVlbiIsIkFMTE9XX0tFWUJPQVJEX0lOUFVUIiwiZXhpdCIsImV4aXRGdWxsc2NyZWVuIiwiaXNGdWxsc2NyZWVuIiwiZnVsbHNjcmVlbkVsZW1lbnQiLCJmdWxsc2NyZWVuRW5hYmxlZCIsIkZ1bGxTY3JlZW4iLCJiZWZvcmVDbG9zZS5mYiIsImZ1bGxzY3JlZW5jaGFuZ2UiLCIkZ3JpZCIsIiRsaXN0IiwiVGh1bWJzIiwibWFyZ2luLXRvcCIsIm1hcmdpbi1sZWZ0Iiwic2hhcmUiLCI8IiwiXCIiLCInIiwiLyIsImAiLCI9IiwiZ2FsbGVyeSIsIm9yaWdIYXNoIiwiaGlzdG9yeSIsInRpdGxlIiwic2VhcmNoIiwicmVwbGFjZVN0YXRlIiwiUHJvbWlzZSIsIl9fV0VCUEFDS19BTURfUkVRVUlSRV9BUlJBWV9fIiwiU2Nyb2xsTWFnaWMiLCIkbGluZXMiLCJwYXRoIiwibGluZUxlbmd0aCIsImdldFRvdGFsTGVuZ3RoIiwicGF0aFByZXBhcmUiLCJUaW1lbGluZU1heCIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJlYXNlTm9uZSIsImNoYW5lRHVyYXRpb24iLCJjaGFuZ2VUcmlnZ2VyIiwiJGltZyIsInRyaWdnZXJJbmRvY2F0b3IiLCJvZSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEdBQTBDSyxZQUFBLEVBQUFDLElBQUFMLEtBSzFDWixFQUFBa0IsRUFBQSxTQUFBaEIsR0FDQSxvQkFBQWlCLGVBQUFDLGFB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bkIsZUFBQXluRCxFQUFBL3VFLEdBQUEsS0FHQWl0QyxTQUFBcHZDLEdBQ0EwcEIsWUFBQSxJQUNBbkIsTUFBQUQsS0FHQSxJQUFBNm9ELEVBQUFqckQsRUFBQSx5Q0FnQkEsU0FBQWdyRCxFQUFBL3VFLEdBQ0EsR0FBQUEsRUFBQXRFLEtBQUEsbUJBQ0EsSUFBQXV6RSxFQUFBbHJELEVBQUF2cEMsU0FBQWdDLGNBQUEsUUFZQSxPQVhBeXlGLEVBQUE5akYsS0FBQSxRQUFBNlUsRUFBQTdVLEtBQUEsVUFDQThqRixFQUFBenhFLEtBQ0FpTyxTQUFBLFdBQ0E0RCxLQUFBLEVBQ0EvRSxNQUFBLE9BQ0FvM0IsVUFBQSxPQUNBbHdCLE9BQUEsT0FDQXJvQixJQUFBNlcsRUFBQXRFLEtBQUEsb0JBRUFzRSxFQUFBbUosUUFBQThsRSxHQUNBcjFFLFFBQUE4L0IsSUFBQSxvQkFDQXUxQyxFQUVBLE9BQUFqdkUsRUE5QkFndkUsRUFBQXh4RSxLQUNBMlEsUUFBQSxFQUNBdXpCLFVBQUEsOEJBZ0NBM2QsRUFBQS9sQyxLQUFBZ3hGLEVBQUEsV0FDQSxJQUFBaHZFLEVBQUErakIsRUFBQW5wQyxNQUNBaWpCLEdBQUEsSUFBQTR3RSxhQUNBNzVFLElBQ0E4OEIsU0FBQTlkLEdBQ0E1VCxFQUNBLElBRUF4QyxLQUNBMlEsUUFBQSxFQUNBdXpCLFVBQUEsUUFFQTVULEtBQUFnYSxPQUFBK21DLFlBS0EsSUFBQVYsRUFBQWpvRCxPQUVBb0IsZUFBQXluRCxFQUFBL3VFLEdBQUEsS0FFQWl0QyxTQUFBcHZDLEdBQ0EwcEIsWUFBQSxJQUNBbkIsTUFBQUQseUNBRUsxdUIsTUFBQXhmLEVBQUFpM0YiLCJmaWxlIjoianMvYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIuLi9cIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDcpO1xuIiwiLyohXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjMuMVxuICogaHR0cHM6Ly9qcXVlcnkuY29tL1xuICpcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMTgtMDEtMjBUMTc6MjRaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7XG5cbnZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcblxudmFyIHNsaWNlID0gYXJyLnNsaWNlO1xuXG52YXIgY29uY2F0ID0gYXJyLmNvbmNhdDtcblxudmFyIHB1c2ggPSBhcnIucHVzaDtcblxudmFyIGluZGV4T2YgPSBhcnIuaW5kZXhPZjtcblxudmFyIGNsYXNzMnR5cGUgPSB7fTtcblxudmFyIHRvU3RyaW5nID0gY2xhc3MydHlwZS50b1N0cmluZztcblxudmFyIGhhc093biA9IGNsYXNzMnR5cGUuaGFzT3duUHJvcGVydHk7XG5cbnZhciBmblRvU3RyaW5nID0gaGFzT3duLnRvU3RyaW5nO1xuXG52YXIgT2JqZWN0RnVuY3Rpb25TdHJpbmcgPSBmblRvU3RyaW5nLmNhbGwoIE9iamVjdCApO1xuXG52YXIgc3VwcG9ydCA9IHt9O1xuXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIGlzRnVuY3Rpb24oIG9iaiApIHtcblxuICAgICAgLy8gU3VwcG9ydDogQ2hyb21lIDw9NTcsIEZpcmVmb3ggPD01MlxuICAgICAgLy8gSW4gc29tZSBicm93c2VycywgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIDxvYmplY3Q+IGVsZW1lbnRzXG4gICAgICAvLyAoaS5lLiwgYHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9iamVjdFwiICkgPT09IFwiZnVuY3Rpb25cImApLlxuICAgICAgLy8gV2UgZG9uJ3Qgd2FudCB0byBjbGFzc2lmeSAqYW55KiBET00gbm9kZSBhcyBhIGZ1bmN0aW9uLlxuICAgICAgcmV0dXJuIHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2Ygb2JqLm5vZGVUeXBlICE9PSBcIm51bWJlclwiO1xuICB9O1xuXG5cbnZhciBpc1dpbmRvdyA9IGZ1bmN0aW9uIGlzV2luZG93KCBvYmogKSB7XG5cdFx0cmV0dXJuIG9iaiAhPSBudWxsICYmIG9iaiA9PT0gb2JqLndpbmRvdztcblx0fTtcblxuXG5cblxuXHR2YXIgcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyA9IHtcblx0XHR0eXBlOiB0cnVlLFxuXHRcdHNyYzogdHJ1ZSxcblx0XHRub01vZHVsZTogdHJ1ZVxuXHR9O1xuXG5cdGZ1bmN0aW9uIERPTUV2YWwoIGNvZGUsIGRvYywgbm9kZSApIHtcblx0XHRkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG5cblx0XHR2YXIgaSxcblx0XHRcdHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XG5cblx0XHRzY3JpcHQudGV4dCA9IGNvZGU7XG5cdFx0aWYgKCBub2RlICkge1xuXHRcdFx0Zm9yICggaSBpbiBwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzICkge1xuXHRcdFx0XHRpZiAoIG5vZGVbIGkgXSApIHtcblx0XHRcdFx0XHRzY3JpcHRbIGkgXSA9IG5vZGVbIGkgXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRkb2MuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdH1cblxuXG5mdW5jdGlvbiB0b1R5cGUoIG9iaiApIHtcblx0aWYgKCBvYmogPT0gbnVsbCApIHtcblx0XHRyZXR1cm4gb2JqICsgXCJcIjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKVxuXHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgP1xuXHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XG5cdFx0dHlwZW9mIG9iajtcbn1cbi8qIGdsb2JhbCBTeW1ib2wgKi9cbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5lc2xpbnRyYy5qc29uIHdvdWxkIGNyZWF0ZSBhIGRhbmdlciBvZiB1c2luZyB0aGUgZ2xvYmFsXG4vLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8gZGVmaW5lIGdsb2JhbCBvbmx5IGZvciB0aGlzIG1vZHVsZVxuXG5cblxudmFyXG5cdHZlcnNpb24gPSBcIjMuMy4xXCIsXG5cblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seVxuXHQvLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1Bcblx0cnRyaW0gPSAvXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2c7XG5cbmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7XG5cblx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBqUXVlcnkgYmVpbmcgdXNlZFxuXHRqcXVlcnk6IHZlcnNpb24sXG5cblx0Y29uc3RydWN0b3I6IGpRdWVyeSxcblxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcblx0bGVuZ3RoOiAwLFxuXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gR2V0IHRoZSBOdGggZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldCBPUlxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XG5cblx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XG5cdFx0aWYgKCBudW0gPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxuXHRcdHJldHVybiBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdO1xuXHR9LFxuXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXG5cdHB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkge1xuXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcblx0XHR2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVsZW1zICk7XG5cblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxuXHRcdHJldC5wcmV2T2JqZWN0ID0gdGhpcztcblxuXHRcdC8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHQvLyBFeGVjdXRlIGEgY2FsbGJhY2sgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgc2V0LlxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdG1hcDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5Lm1hcCggdGhpcywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdHNsaWNlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNsaWNlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSApO1xuXHR9LFxuXG5cdGZpcnN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xuXHR9LFxuXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAtMSApO1xuXHR9LFxuXG5cdGVxOiBmdW5jdGlvbiggaSApIHtcblx0XHR2YXIgbGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggaiA+PSAwICYmIGogPCBsZW4gPyBbIHRoaXNbIGogXSBdIDogW10gKTtcblx0fSxcblxuXHRlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcigpO1xuXHR9LFxuXG5cdC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXG5cdHB1c2g6IHB1c2gsXG5cdHNvcnQ6IGFyci5zb3J0LFxuXHRzcGxpY2U6IGFyci5zcGxpY2Vcbn07XG5cbmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rpb24oKSB7XG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZSxcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSxcblx0XHRpID0gMSxcblx0XHRsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuXHRcdGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICggdHlwZW9mIHRhcmdldCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0ZGVlcCA9IHRhcmdldDtcblxuXHRcdC8vIFNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIGkgXSB8fCB7fTtcblx0XHRpKys7XG5cdH1cblxuXHQvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdldCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSlcblx0aWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSBcIm9iamVjdFwiICYmICFpc0Z1bmN0aW9uKCB0YXJnZXQgKSApIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdC8vIEV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxuXHRpZiAoIGkgPT09IGxlbmd0aCApIHtcblx0XHR0YXJnZXQgPSB0aGlzO1xuXHRcdGktLTtcblx0fVxuXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXG5cdFx0Ly8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xuXG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRcdHNyYyA9IHRhcmdldFsgbmFtZSBdO1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1sgbmFtZSBdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3Bcblx0XHRcdFx0aWYgKCB0YXJnZXQgPT09IGNvcHkgKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0aWYgKCBkZWVwICYmIGNvcHkgJiYgKCBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29weSApIHx8XG5cdFx0XHRcdFx0KCBjb3B5SXNBcnJheSA9IEFycmF5LmlzQXJyYXkoIGNvcHkgKSApICkgKSB7XG5cblx0XHRcdFx0XHRpZiAoIGNvcHlJc0FycmF5ICkge1xuXHRcdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIEFycmF5LmlzQXJyYXkoIHNyYyApID8gc3JjIDogW107XG5cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApID8gc3JjIDoge307XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5kKCBkZWVwLCBjbG9uZSwgY29weSApO1xuXG5cdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcblx0XHRcdFx0fSBlbHNlIGlmICggY29weSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0gY29weTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0XG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdlXG5cdGV4cGFuZG86IFwialF1ZXJ5XCIgKyAoIHZlcnNpb24gKyBNYXRoLnJhbmRvbSgpICkucmVwbGFjZSggL1xcRC9nLCBcIlwiICksXG5cblx0Ly8gQXNzdW1lIGpRdWVyeSBpcyByZWFkeSB3aXRob3V0IHRoZSByZWFkeSBtb2R1bGVcblx0aXNSZWFkeTogdHJ1ZSxcblxuXHRlcnJvcjogZnVuY3Rpb24oIG1zZyApIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoIG1zZyApO1xuXHR9LFxuXG5cdG5vb3A6IGZ1bmN0aW9uKCkge30sXG5cblx0aXNQbGFpbk9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIgcHJvdG8sIEN0b3I7XG5cblx0XHQvLyBEZXRlY3Qgb2J2aW91cyBuZWdhdGl2ZXNcblx0XHQvLyBVc2UgdG9TdHJpbmcgaW5zdGVhZCBvZiBqUXVlcnkudHlwZSB0byBjYXRjaCBob3N0IG9iamVjdHNcblx0XHRpZiAoICFvYmogfHwgdG9TdHJpbmcuY2FsbCggb2JqICkgIT09IFwiW29iamVjdCBPYmplY3RdXCIgKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cHJvdG8gPSBnZXRQcm90byggb2JqICk7XG5cblx0XHQvLyBPYmplY3RzIHdpdGggbm8gcHJvdG90eXBlIChlLmcuLCBgT2JqZWN0LmNyZWF0ZSggbnVsbCApYCkgYXJlIHBsYWluXG5cdFx0aWYgKCAhcHJvdG8gKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBPYmplY3RzIHdpdGggcHJvdG90eXBlIGFyZSBwbGFpbiBpZmYgdGhleSB3ZXJlIGNvbnN0cnVjdGVkIGJ5IGEgZ2xvYmFsIE9iamVjdCBmdW5jdGlvblxuXHRcdEN0b3IgPSBoYXNPd24uY2FsbCggcHJvdG8sIFwiY29uc3RydWN0b3JcIiApICYmIHByb3RvLmNvbnN0cnVjdG9yO1xuXHRcdHJldHVybiB0eXBlb2YgQ3RvciA9PT0gXCJmdW5jdGlvblwiICYmIGZuVG9TdHJpbmcuY2FsbCggQ3RvciApID09PSBPYmplY3RGdW5jdGlvblN0cmluZztcblx0fSxcblxuXHRpc0VtcHR5T2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXG5cdFx0LyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cblx0XHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC9lc2xpbnQvaXNzdWVzLzYxMjVcblx0XHR2YXIgbmFtZTtcblxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHQvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBnbG9iYWwgY29udGV4dFxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSApIHtcblx0XHRET01FdmFsKCBjb2RlICk7XG5cdH0sXG5cblx0ZWFjaDogZnVuY3Rpb24oIG9iaiwgY2FsbGJhY2sgKSB7XG5cdFx0dmFyIGxlbmd0aCwgaSA9IDA7XG5cblx0XHRpZiAoIGlzQXJyYXlMaWtlKCBvYmogKSApIHtcblx0XHRcdGxlbmd0aCA9IG9iai5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICggaSBpbiBvYmogKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG9iajtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHlcblx0dHJpbTogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XG5cdFx0XHRcIlwiIDpcblx0XHRcdCggdGV4dCArIFwiXCIgKS5yZXBsYWNlKCBydHJpbSwgXCJcIiApO1xuXHR9LFxuXG5cdC8vIHJlc3VsdHMgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xuXHRcdHZhciByZXQgPSByZXN1bHRzIHx8IFtdO1xuXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcblx0XHRcdGlmICggaXNBcnJheUxpa2UoIE9iamVjdCggYXJyICkgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0WyBhcnIgXSA6IGFyclxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5jYWxsKCByZXQsIGFyciApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0aW5BcnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHtcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcblx0XHRcdGogPSAwLFxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXTtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCB0cmFuc2xhdGluZyBlYWNoIG9mIHRoZSBpdGVtcyB0byB0aGVpciBuZXcgdmFsdWVzXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gY29uY2F0LmFwcGx5KCBbXSwgcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVzZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyXG5cdC8vIHByb3BlcnRpZXMgdG8gaXQgc28gaXQgbmVlZHMgdG8gZXhpc3QuXG5cdHN1cHBvcnQ6IHN1cHBvcnRcbn0gKTtcblxuaWYgKCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdGpRdWVyeS5mblsgU3ltYm9sLml0ZXJhdG9yIF0gPSBhcnJbIFN5bWJvbC5pdGVyYXRvciBdO1xufVxuXG4vLyBQb3B1bGF0ZSB0aGUgY2xhc3MydHlwZSBtYXBcbmpRdWVyeS5lYWNoKCBcIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3QgRXJyb3IgU3ltYm9sXCIuc3BsaXQoIFwiIFwiICksXG5mdW5jdGlvbiggaSwgbmFtZSApIHtcblx0Y2xhc3MydHlwZVsgXCJbb2JqZWN0IFwiICsgbmFtZSArIFwiXVwiIF0gPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG59ICk7XG5cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKCBvYmogKSB7XG5cblx0Ly8gU3VwcG9ydDogcmVhbCBpT1MgOC4yIG9ubHkgKG5vdCByZXByb2R1Y2libGUgaW4gc2ltdWxhdG9yKVxuXHQvLyBgaW5gIGNoZWNrIHVzZWQgdG8gcHJldmVudCBKSVQgZXJyb3IgKGdoLTIxNDUpXG5cdC8vIGhhc093biBpc24ndCB1c2VkIGhlcmUgZHVlIHRvIGZhbHNlIG5lZ2F0aXZlc1xuXHQvLyByZWdhcmRpbmcgTm9kZWxpc3QgbGVuZ3RoIGluIElFXG5cdHZhciBsZW5ndGggPSAhIW9iaiAmJiBcImxlbmd0aFwiIGluIG9iaiAmJiBvYmoubGVuZ3RoLFxuXHRcdHR5cGUgPSB0b1R5cGUoIG9iaiApO1xuXG5cdGlmICggaXNGdW5jdGlvbiggb2JqICkgfHwgaXNXaW5kb3coIG9iaiApICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHJldHVybiB0eXBlID09PSBcImFycmF5XCIgfHwgbGVuZ3RoID09PSAwIHx8XG5cdFx0dHlwZW9mIGxlbmd0aCA9PT0gXCJudW1iZXJcIiAmJiBsZW5ndGggPiAwICYmICggbGVuZ3RoIC0gMSApIGluIG9iajtcbn1cbnZhciBTaXp6bGUgPVxuLyohXG4gKiBTaXp6bGUgQ1NTIFNlbGVjdG9yIEVuZ2luZSB2Mi4zLjNcbiAqIGh0dHBzOi8vc2l6emxlanMuY29tL1xuICpcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAqXG4gKiBEYXRlOiAyMDE2LTA4LTA4XG4gKi9cbihmdW5jdGlvbiggd2luZG93ICkge1xuXG52YXIgaSxcblx0c3VwcG9ydCxcblx0RXhwcixcblx0Z2V0VGV4dCxcblx0aXNYTUwsXG5cdHRva2VuaXplLFxuXHRjb21waWxlLFxuXHRzZWxlY3QsXG5cdG91dGVybW9zdENvbnRleHQsXG5cdHNvcnRJbnB1dCxcblx0aGFzRHVwbGljYXRlLFxuXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcblx0c2V0RG9jdW1lbnQsXG5cdGRvY3VtZW50LFxuXHRkb2NFbGVtLFxuXHRkb2N1bWVudElzSFRNTCxcblx0cmJ1Z2d5UVNBLFxuXHRyYnVnZ3lNYXRjaGVzLFxuXHRtYXRjaGVzLFxuXHRjb250YWlucyxcblxuXHQvLyBJbnN0YW5jZS1zcGVjaWZpYyBkYXRhXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcblx0ZGlycnVucyA9IDAsXG5cdGRvbmUgPSAwLFxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0dG9rZW5DYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHtcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gMDtcblx0fSxcblxuXHQvLyBJbnN0YW5jZSBtZXRob2RzXG5cdGhhc093biA9ICh7fSkuaGFzT3duUHJvcGVydHksXG5cdGFyciA9IFtdLFxuXHRwb3AgPSBhcnIucG9wLFxuXHRwdXNoX25hdGl2ZSA9IGFyci5wdXNoLFxuXHRwdXNoID0gYXJyLnB1c2gsXG5cdHNsaWNlID0gYXJyLnNsaWNlLFxuXHQvLyBVc2UgYSBzdHJpcHBlZC1kb3duIGluZGV4T2YgYXMgaXQncyBmYXN0ZXIgdGhhbiBuYXRpdmVcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL3Rob3ItaW5kZXhvZi12cy1mb3IvNVxuXHRpbmRleE9mID0gZnVuY3Rpb24oIGxpc3QsIGVsZW0gKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0bGVuID0gbGlzdC5sZW5ndGg7XG5cdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRpZiAoIGxpc3RbaV0gPT09IGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gLTE7XG5cdH0sXG5cblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXG5cblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtc2VsZWN0b3JzLyN3aGl0ZXNwYWNlXG5cdHdoaXRlc3BhY2UgPSBcIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsXG5cblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI3ZhbHVlLWRlZi1pZGVudGlmaWVyXG5cdGlkZW50aWZpZXIgPSBcIig/OlxcXFxcXFxcLnxbXFxcXHctXXxbXlxcMC1cXFxceGEwXSkrXCIsXG5cblx0Ly8gQXR0cmlidXRlIHNlbGVjdG9yczogaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNhdHRyaWJ1dGUtc2VsZWN0b3JzXG5cdGF0dHJpYnV0ZXMgPSBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFwiICsgaWRlbnRpZmllciArIFwiKSg/OlwiICsgd2hpdGVzcGFjZSArXG5cdFx0Ly8gT3BlcmF0b3IgKGNhcHR1cmUgMilcblx0XHRcIiooWypeJHwhfl0/PSlcIiArIHdoaXRlc3BhY2UgK1xuXHRcdC8vIFwiQXR0cmlidXRlIHZhbHVlcyBtdXN0IGJlIENTUyBpZGVudGlmaWVycyBbY2FwdHVyZSA1XSBvciBzdHJpbmdzIFtjYXB0dXJlIDMgb3IgY2FwdHVyZSA0XVwiXG5cdFx0XCIqKD86JygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwifChcIiArIGlkZW50aWZpZXIgKyBcIikpfClcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFwiKlxcXFxdXCIsXG5cblx0cHNldWRvcyA9IFwiOihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcXFxcKChcIiArXG5cdFx0Ly8gVG8gcmVkdWNlIHRoZSBudW1iZXIgb2Ygc2VsZWN0b3JzIG5lZWRpbmcgdG9rZW5pemUgaW4gdGhlIHByZUZpbHRlciwgcHJlZmVyIGFyZ3VtZW50czpcblx0XHQvLyAxLiBxdW90ZWQgKGNhcHR1cmUgMzsgY2FwdHVyZSA0IG9yIGNhcHR1cmUgNSlcblx0XHRcIignKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfFwiICtcblx0XHQvLyAyLiBzaW1wbGUgKGNhcHR1cmUgNilcblx0XHRcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpW1xcXFxdXXxcIiArIGF0dHJpYnV0ZXMgKyBcIikqKXxcIiArXG5cdFx0Ly8gMy4gYW55dGhpbmcgZWxzZSAoY2FwdHVyZSAyKVxuXHRcdFwiLipcIiArXG5cdFx0XCIpXFxcXCl8KVwiLFxuXG5cdC8vIExlYWRpbmcgYW5kIG5vbi1lc2NhcGVkIHRyYWlsaW5nIHdoaXRlc3BhY2UsIGNhcHR1cmluZyBzb21lIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlcnMgcHJlY2VkaW5nIHRoZSBsYXR0ZXJcblx0cndoaXRlc3BhY2UgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgXCIrXCIsIFwiZ1wiICksXG5cdHJ0cmltID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiICsgd2hpdGVzcGFjZSArIFwiKyRcIiwgXCJnXCIgKSxcblxuXHRyY29tbWEgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiosXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblx0cmNvbWJpbmF0b3JzID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFs+K35dfFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXG5cblx0cmF0dHJpYnV0ZVF1b3RlcyA9IG5ldyBSZWdFeHAoIFwiPVwiICsgd2hpdGVzcGFjZSArIFwiKihbXlxcXFxdJ1xcXCJdKj8pXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXF1cIiwgXCJnXCIgKSxcblxuXHRycHNldWRvID0gbmV3IFJlZ0V4cCggcHNldWRvcyApLFxuXHRyaWRlbnRpZmllciA9IG5ldyBSZWdFeHAoIFwiXlwiICsgaWRlbnRpZmllciArIFwiJFwiICksXG5cblx0bWF0Y2hFeHByID0ge1xuXHRcdFwiSURcIjogbmV3IFJlZ0V4cCggXCJeIyhcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiQ0xBU1NcIjogbmV3IFJlZ0V4cCggXCJeXFxcXC4oXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcblx0XHRcIlRBR1wiOiBuZXcgUmVnRXhwKCBcIl4oXCIgKyBpZGVudGlmaWVyICsgXCJ8WypdKVwiICksXG5cdFx0XCJBVFRSXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgYXR0cmlidXRlcyApLFxuXHRcdFwiUFNFVURPXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgcHNldWRvcyApLFxuXHRcdFwiQ0hJTERcIjogbmV3IFJlZ0V4cCggXCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXFxcKFwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooZXZlbnxvZGR8KChbKy1dfCkoXFxcXGQqKW58KVwiICsgd2hpdGVzcGFjZSArIFwiKig/OihbKy1dfClcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqKFxcXFxkKyl8KSlcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpXCIsIFwiaVwiICksXG5cdFx0XCJib29sXCI6IG5ldyBSZWdFeHAoIFwiXig/OlwiICsgYm9vbGVhbnMgKyBcIikkXCIsIFwiaVwiICksXG5cdFx0Ly8gRm9yIHVzZSBpbiBsaWJyYXJpZXMgaW1wbGVtZW50aW5nIC5pcygpXG5cdFx0Ly8gV2UgdXNlIHRoaXMgZm9yIFBPUyBtYXRjaGluZyBpbiBgc2VsZWN0YFxuXHRcdFwibmVlZHNDb250ZXh0XCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFxcXChcIiArXG5cdFx0XHR3aGl0ZXNwYWNlICsgXCIqKCg/Oi1cXFxcZCk/XFxcXGQqKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfCkoPz1bXi1dfCQpXCIsIFwiaVwiIClcblx0fSxcblxuXHRyaW5wdXRzID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmhlYWRlciA9IC9eaFxcZCQvaSxcblxuXHRybmF0aXZlID0gL15bXntdK1xce1xccypcXFtuYXRpdmUgXFx3LyxcblxuXHQvLyBFYXNpbHktcGFyc2VhYmxlL3JldHJpZXZhYmxlIElEIG9yIFRBRyBvciBDTEFTUyBzZWxlY3RvcnNcblx0cnF1aWNrRXhwciA9IC9eKD86IyhbXFx3LV0rKXwoXFx3Kyl8XFwuKFtcXHctXSspKSQvLFxuXG5cdHJzaWJsaW5nID0gL1srfl0vLFxuXG5cdC8vIENTUyBlc2NhcGVzXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCNlc2NhcGVkLWNoYXJhY3RlcnNcblx0cnVuZXNjYXBlID0gbmV3IFJlZ0V4cCggXCJcXFxcXFxcXChbXFxcXGRhLWZdezEsNn1cIiArIHdoaXRlc3BhY2UgKyBcIj98KFwiICsgd2hpdGVzcGFjZSArIFwiKXwuKVwiLCBcImlnXCIgKSxcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIF8sIGVzY2FwZWQsIGVzY2FwZWRXaGl0ZXNwYWNlICkge1xuXHRcdHZhciBoaWdoID0gXCIweFwiICsgZXNjYXBlZCAtIDB4MTAwMDA7XG5cdFx0Ly8gTmFOIG1lYW5zIG5vbi1jb2RlcG9pbnRcblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI0XG5cdFx0Ly8gV29ya2Fyb3VuZCBlcnJvbmVvdXMgbnVtZXJpYyBpbnRlcnByZXRhdGlvbiBvZiArXCIweFwiXG5cdFx0cmV0dXJuIGhpZ2ggIT09IGhpZ2ggfHwgZXNjYXBlZFdoaXRlc3BhY2UgP1xuXHRcdFx0ZXNjYXBlZCA6XG5cdFx0XHRoaWdoIDwgMCA/XG5cdFx0XHRcdC8vIEJNUCBjb2RlcG9pbnRcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XG5cdFx0XHRcdC8vIFN1cHBsZW1lbnRhbCBQbGFuZSBjb2RlcG9pbnQgKHN1cnJvZ2F0ZSBwYWlyKVxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoID4+IDEwIHwgMHhEODAwLCBoaWdoICYgMHgzRkYgfCAweERDMDAgKTtcblx0fSxcblxuXHQvLyBDU1Mgc3RyaW5nL2lkZW50aWZpZXIgc2VyaWFsaXphdGlvblxuXHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI2NvbW1vbi1zZXJpYWxpemluZy1pZGlvbXNcblx0cmNzc2VzY2FwZSA9IC8oW1xcMC1cXHgxZlxceDdmXXxeLT9cXGQpfF4tJHxbXlxcMC1cXHgxZlxceDdmLVxcdUZGRkZcXHctXS9nLFxuXHRmY3NzZXNjYXBlID0gZnVuY3Rpb24oIGNoLCBhc0NvZGVQb2ludCApIHtcblx0XHRpZiAoIGFzQ29kZVBvaW50ICkge1xuXG5cdFx0XHQvLyBVKzAwMDAgTlVMTCBiZWNvbWVzIFUrRkZGRCBSRVBMQUNFTUVOVCBDSEFSQUNURVJcblx0XHRcdGlmICggY2ggPT09IFwiXFwwXCIgKSB7XG5cdFx0XHRcdHJldHVybiBcIlxcdUZGRkRcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udHJvbCBjaGFyYWN0ZXJzIGFuZCAoZGVwZW5kZW50IHVwb24gcG9zaXRpb24pIG51bWJlcnMgZ2V0IGVzY2FwZWQgYXMgY29kZSBwb2ludHNcblx0XHRcdHJldHVybiBjaC5zbGljZSggMCwgLTEgKSArIFwiXFxcXFwiICsgY2guY2hhckNvZGVBdCggY2gubGVuZ3RoIC0gMSApLnRvU3RyaW5nKCAxNiApICsgXCIgXCI7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXIgcG90ZW50aWFsbHktc3BlY2lhbCBBU0NJSSBjaGFyYWN0ZXJzIGdldCBiYWNrc2xhc2gtZXNjYXBlZFxuXHRcdHJldHVybiBcIlxcXFxcIiArIGNoO1xuXHR9LFxuXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcblx0Ly8gU2VlIHNldERvY3VtZW50KClcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXG5cdC8vIGVycm9yIGluIElFXG5cdHVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRzZXREb2N1bWVudCgpO1xuXHR9LFxuXG5cdGRpc2FibGVkQW5jZXN0b3IgPSBhZGRDb21iaW5hdG9yKFxuXHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWUgJiYgKFwiZm9ybVwiIGluIGVsZW0gfHwgXCJsYWJlbFwiIGluIGVsZW0pO1xuXHRcdH0sXG5cdFx0eyBkaXI6IFwicGFyZW50Tm9kZVwiLCBuZXh0OiBcImxlZ2VuZFwiIH1cblx0KTtcblxuLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0IClcbnRyeSB7XG5cdHB1c2guYXBwbHkoXG5cdFx0KGFyciA9IHNsaWNlLmNhbGwoIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzICkpLFxuXHRcdHByZWZlcnJlZERvYy5jaGlsZE5vZGVzXG5cdCk7XG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wXG5cdC8vIERldGVjdCBzaWxlbnRseSBmYWlsaW5nIHB1c2guYXBwbHlcblx0YXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rlcy5sZW5ndGggXS5ub2RlVHlwZTtcbn0gY2F0Y2ggKCBlICkge1xuXHRwdXNoID0geyBhcHBseTogYXJyLmxlbmd0aCA/XG5cblx0XHQvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHB1c2hfbmF0aXZlLmFwcGx5KCB0YXJnZXQsIHNsaWNlLmNhbGwoZWxzKSApO1xuXHRcdH0gOlxuXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxuXHRcdC8vIE90aGVyd2lzZSBhcHBlbmQgZGlyZWN0bHlcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHR2YXIgaiA9IHRhcmdldC5sZW5ndGgsXG5cdFx0XHRcdGkgPSAwO1xuXHRcdFx0Ly8gQ2FuJ3QgdHJ1c3QgTm9kZUxpc3QubGVuZ3RoXG5cdFx0XHR3aGlsZSAoICh0YXJnZXRbaisrXSA9IGVsc1tpKytdKSApIHt9XG5cdFx0XHR0YXJnZXQubGVuZ3RoID0gaiAtIDE7XG5cdFx0fVxuXHR9O1xufVxuXG5mdW5jdGlvbiBTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgbSwgaSwgZWxlbSwgbmlkLCBtYXRjaCwgZ3JvdXBzLCBuZXdTZWxlY3Rvcixcblx0XHRuZXdDb250ZXh0ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQsXG5cblx0XHQvLyBub2RlVHlwZSBkZWZhdWx0cyB0byA5LCBzaW5jZSBjb250ZXh0IGRlZmF1bHRzIHRvIGRvY3VtZW50XG5cdFx0bm9kZVR5cGUgPSBjb250ZXh0ID8gY29udGV4dC5ub2RlVHlwZSA6IDk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGZyb20gY2FsbHMgd2l0aCBpbnZhbGlkIHNlbGVjdG9yIG9yIGNvbnRleHRcblx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgfHwgIXNlbGVjdG9yIHx8XG5cdFx0bm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkge1xuXG5cdFx0cmV0dXJuIHJlc3VsdHM7XG5cdH1cblxuXHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzXG5cdGlmICggIXNlZWQgKSB7XG5cblx0XHRpZiAoICggY29udGV4dCA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogcHJlZmVycmVkRG9jICkgIT09IGRvY3VtZW50ICkge1xuXHRcdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0XHR9XG5cdFx0Y29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7XG5cblx0XHRpZiAoIGRvY3VtZW50SXNIVE1MICkge1xuXG5cdFx0XHQvLyBJZiB0aGUgc2VsZWN0b3IgaXMgc3VmZmljaWVudGx5IHNpbXBsZSwgdHJ5IHVzaW5nIGEgXCJnZXQqQnkqXCIgRE9NIG1ldGhvZFxuXHRcdFx0Ly8gKGV4Y2VwdGluZyBEb2N1bWVudEZyYWdtZW50IGNvbnRleHQsIHdoZXJlIHRoZSBtZXRob2RzIGRvbid0IGV4aXN0KVxuXHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMTEgJiYgKG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApKSApIHtcblxuXHRcdFx0XHQvLyBJRCBzZWxlY3RvclxuXHRcdFx0XHRpZiAoIChtID0gbWF0Y2hbMV0pICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9jdW1lbnQgY29udGV4dFxuXHRcdFx0XHRcdGlmICggbm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApKSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xuXHRcdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCA9PT0gbSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBFbGVtZW50IGNvbnRleHRcblx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAmJiAoZWxlbSA9IG5ld0NvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSkgJiZcblx0XHRcdFx0XHRcdFx0Y29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJlxuXHRcdFx0XHRcdFx0XHRlbGVtLmlkID09PSBtICkge1xuXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHlwZSBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsyXSApIHtcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBzZWxlY3RvciApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdFx0Ly8gQ2xhc3Mgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggKG0gPSBtYXRjaFszXSkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmXG5cdFx0XHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBtICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsXG5cdFx0XHRpZiAoIHN1cHBvcnQucXNhICYmXG5cdFx0XHRcdCFjb21waWxlckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF0gJiZcblx0XHRcdFx0KCFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApKSApIHtcblxuXHRcdFx0XHRpZiAoIG5vZGVUeXBlICE9PSAxICkge1xuXHRcdFx0XHRcdG5ld0NvbnRleHQgPSBjb250ZXh0O1xuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gc2VsZWN0b3I7XG5cblx0XHRcdFx0Ly8gcVNBIGxvb2tzIG91dHNpZGUgRWxlbWVudCBjb250ZXh0LCB3aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50XG5cdFx0XHRcdC8vIFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGlzIHdvcmthcm91bmQgdGVjaG5pcXVlXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OFxuXHRcdFx0XHQvLyBFeGNsdWRlIG9iamVjdCBlbGVtZW50c1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb250ZXh0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdFx0XHQvLyBDYXB0dXJlIHRoZSBjb250ZXh0IElELCBzZXR0aW5nIGl0IGZpcnN0IGlmIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdGlmICggKG5pZCA9IGNvbnRleHQuZ2V0QXR0cmlidXRlKCBcImlkXCIgKSkgKSB7XG5cdFx0XHRcdFx0XHRuaWQgPSBuaWQucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjb250ZXh0LnNldEF0dHJpYnV0ZSggXCJpZFwiLCAobmlkID0gZXhwYW5kbykgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmVmaXggZXZlcnkgc2VsZWN0b3IgaW4gdGhlIGxpc3Rcblx0XHRcdFx0XHRncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblx0XHRcdFx0XHRpID0gZ3JvdXBzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGdyb3Vwc1tpXSA9IFwiI1wiICsgbmlkICsgXCIgXCIgKyB0b1NlbGVjdG9yKCBncm91cHNbaV0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bmV3U2VsZWN0b3IgPSBncm91cHMuam9pbiggXCIsXCIgKTtcblxuXHRcdFx0XHRcdC8vIEV4cGFuZCBjb250ZXh0IGZvciBzaWJsaW5nIHNlbGVjdG9yc1xuXHRcdFx0XHRcdG5ld0NvbnRleHQgPSByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fFxuXHRcdFx0XHRcdFx0Y29udGV4dDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICggbmV3U2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsXG5cdFx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcblx0XHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdFx0aWYgKCBuaWQgPT09IGV4cGFuZG8gKSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBbGwgb3RoZXJzXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xufVxuXG4vKipcbiAqIENyZWF0ZSBrZXktdmFsdWUgY2FjaGVzIG9mIGxpbWl0ZWQgc2l6ZVxuICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KX0gUmV0dXJucyB0aGUgT2JqZWN0IGRhdGEgYWZ0ZXIgc3RvcmluZyBpdCBvbiBpdHNlbGYgd2l0aFxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXG4gKlx0ZGVsZXRpbmcgdGhlIG9sZGVzdCBlbnRyeVxuICovXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcblx0dmFyIGtleXMgPSBbXTtcblxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcblx0XHQvLyBVc2UgKGtleSArIFwiIFwiKSB0byBhdm9pZCBjb2xsaXNpb24gd2l0aCBuYXRpdmUgcHJvdG90eXBlIHByb3BlcnRpZXMgKHNlZSBJc3N1ZSAjMTU3KVxuXHRcdGlmICgga2V5cy5wdXNoKCBrZXkgKyBcIiBcIiApID4gRXhwci5jYWNoZUxlbmd0aCApIHtcblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xuXHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlzLnNoaWZ0KCkgXTtcblx0XHR9XG5cdFx0cmV0dXJuIChjYWNoZVsga2V5ICsgXCIgXCIgXSA9IHZhbHVlKTtcblx0fVxuXHRyZXR1cm4gY2FjaGU7XG59XG5cbi8qKlxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBtYXJrXG4gKi9cbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XG5cdGZuWyBleHBhbmRvIF0gPSB0cnVlO1xuXHRyZXR1cm4gZm47XG59XG5cbi8qKlxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFBhc3NlZCB0aGUgY3JlYXRlZCBlbGVtZW50IGFuZCByZXR1cm5zIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xuXG5cdHRyeSB7XG5cdFx0cmV0dXJuICEhZm4oIGVsICk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBlbC5wYXJlbnROb2RlICkge1xuXHRcdFx0ZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZWwgKTtcblx0XHR9XG5cdFx0Ly8gcmVsZWFzZSBtZW1vcnkgaW4gSUVcblx0XHRlbCA9IG51bGw7XG5cdH1cbn1cblxuLyoqXG4gKiBBZGRzIHRoZSBzYW1lIGhhbmRsZXIgZm9yIGFsbCBvZiB0aGUgc3BlY2lmaWVkIGF0dHJzXG4gKiBAcGFyYW0ge1N0cmluZ30gYXR0cnMgUGlwZS1zZXBhcmF0ZWQgbGlzdCBvZiBhdHRyaWJ1dGVzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIFRoZSBtZXRob2QgdGhhdCB3aWxsIGJlIGFwcGxpZWRcbiAqL1xuZnVuY3Rpb24gYWRkSGFuZGxlKCBhdHRycywgaGFuZGxlciApIHtcblx0dmFyIGFyciA9IGF0dHJzLnNwbGl0KFwifFwiKSxcblx0XHRpID0gYXJyLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFycltpXSBdID0gaGFuZGxlcjtcblx0fVxufVxuXG4vKipcbiAqIENoZWNrcyBkb2N1bWVudCBvcmRlciBvZiB0d28gc2libGluZ3NcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxuICogQHBhcmFtIHtFbGVtZW50fSBiXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBSZXR1cm5zIGxlc3MgdGhhbiAwIGlmIGEgcHJlY2VkZXMgYiwgZ3JlYXRlciB0aGFuIDAgaWYgYSBmb2xsb3dzIGJcbiAqL1xuZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkge1xuXHR2YXIgY3VyID0gYiAmJiBhLFxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDtcblxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcblx0aWYgKCBkaWZmICkge1xuXHRcdHJldHVybiBkaWZmO1xuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgYiBmb2xsb3dzIGFcblx0aWYgKCBjdXIgKSB7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLm5leHRTaWJsaW5nKSApIHtcblx0XHRcdGlmICggY3VyID09PSBiICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGEgPyAxIDogLTE7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBpbnB1dCB0eXBlc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5wdXRQc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGJ1dHRvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJ1dHRvblBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiAobmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCIpICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIDplbmFibGVkLzpkaXNhYmxlZFxuICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlZCB0cnVlIGZvciA6ZGlzYWJsZWQ7IGZhbHNlIGZvciA6ZW5hYmxlZFxuICovXG5mdW5jdGlvbiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZGlzYWJsZWQgKSB7XG5cblx0Ly8gS25vd24gOmRpc2FibGVkIGZhbHNlIHBvc2l0aXZlczogZmllbGRzZXRbZGlzYWJsZWRdID4gbGVnZW5kOm50aC1vZi10eXBlKG4rMikgOmNhbi1kaXNhYmxlXG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE9ubHkgY2VydGFpbiBlbGVtZW50cyBjYW4gbWF0Y2ggOmVuYWJsZWQgb3IgOmRpc2FibGVkXG5cdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZW5hYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWRpc2FibGVkXG5cdFx0aWYgKCBcImZvcm1cIiBpbiBlbGVtICkge1xuXG5cdFx0XHQvLyBDaGVjayBmb3IgaW5oZXJpdGVkIGRpc2FibGVkbmVzcyBvbiByZWxldmFudCBub24tZGlzYWJsZWQgZWxlbWVudHM6XG5cdFx0XHQvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NhdGVnb3J5LWxpc3RlZFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtZmUtZGlzYWJsZWRcblx0XHRcdC8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LW9wdGlvbi1kaXNhYmxlZFxuXHRcdFx0Ly8gQWxsIHN1Y2ggZWxlbWVudHMgaGF2ZSBhIFwiZm9ybVwiIHByb3BlcnR5LlxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0Ly8gT3B0aW9uIGVsZW1lbnRzIGRlZmVyIHRvIGEgcGFyZW50IG9wdGdyb3VwIGlmIHByZXNlbnRcblx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdFx0XHRpZiAoIFwibGFiZWxcIiBpbiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5wYXJlbnROb2RlLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDYgLSAxMVxuXHRcdFx0XHQvLyBVc2UgdGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZpZWxkc2V0IGFuY2VzdG9yc1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pc0Rpc2FibGVkID09PSBkaXNhYmxlZCB8fFxuXG5cdFx0XHRcdFx0Ly8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHlcblx0XHRcdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdFx0XHRlbGVtLmlzRGlzYWJsZWQgIT09ICFkaXNhYmxlZCAmJlxuXHRcdFx0XHRcdFx0ZGlzYWJsZWRBbmNlc3RvciggZWxlbSApID09PSBkaXNhYmxlZDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXG5cdFx0Ly8gVHJ5IHRvIHdpbm5vdyBvdXQgZWxlbWVudHMgdGhhdCBjYW4ndCBiZSBkaXNhYmxlZCBiZWZvcmUgdHJ1c3RpbmcgdGhlIGRpc2FibGVkIHByb3BlcnR5LlxuXHRcdC8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndFxuXHRcdC8vIGV2ZW4gZXhpc3Qgb24gdGhlbSwgbGV0IGFsb25lIGhhdmUgYSBib29sZWFuIHZhbHVlLlxuXHRcdH0gZWxzZSBpZiAoIFwibGFiZWxcIiBpbiBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdH1cblxuXHRcdC8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBub3IgOmRpc2FibGVkXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBhcmd1bWVudCApIHtcblx0XHRhcmd1bWVudCA9ICthcmd1bWVudDtcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbIChqID0gbWF0Y2hJbmRleGVzW2ldKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbal0gPSAhKG1hdGNoZXNbal0gPSBzZWVkW2pdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgYSBub2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0PX0gY29udGV4dFxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHRlc3RDb250ZXh0KCBjb250ZXh0ICkge1xuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xufVxuXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxuc3VwcG9ydCA9IFNpenpsZS5zdXBwb3J0ID0ge307XG5cbi8qKlxuICogRGV0ZWN0cyBYTUwgbm9kZXNcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IGVsZW0gQW4gZWxlbWVudCBvciBhIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXG4gKi9cbmlzWE1MID0gU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdC8vIGRvY3VtZW50RWxlbWVudCBpcyB2ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3Rcblx0Ly8gKHN1Y2ggYXMgbG9hZGluZyBpZnJhbWVzIGluIElFIC0gIzQ4MzMpXG5cdHZhciBkb2N1bWVudEVsZW1lbnQgPSBlbGVtICYmIChlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSkuZG9jdW1lbnRFbGVtZW50O1xuXHRyZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSBcIkhUTUxcIiA6IGZhbHNlO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdGlmICggZG9jID09PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDktMTEsIEVkZ2Vcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHRpZiAoIHByZWZlcnJlZERvYyAhPT0gZG9jdW1lbnQgJiZcblx0XHQoc3ViV2luZG93ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcpICYmIHN1YldpbmRvdy50b3AgIT09IHN1YldpbmRvdyApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDExLCBFZGdlXG5cdFx0aWYgKCBzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmNsYXNzTmFtZSA9IFwiaVwiO1xuXHRcdHJldHVybiAhZWwuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xuXHR9KTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KFwiXCIpICk7XG5cdFx0cmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBTdXBwb3J0OiBJRTw5XG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDEwXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRCeUlkIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZVxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtbWF0aWNhbGx5LXNldCBuYW1lcyxcblx0Ly8gc28gdXNlIGEgcm91bmRhYm91dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0XG5cdHN1cHBvcnQuZ2V0QnlJZCA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XG5cdH0pO1xuXG5cdC8vIElEIGZpbHRlciBhbmQgZmluZFxuXHRpZiAoIHN1cHBvcnQuZ2V0QnlJZCApIHtcblx0XHRFeHByLmZpbHRlcltcIklEXCJdID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZShcImlkXCIpID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0RXhwci5maW5kW1wiSURcIl0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cdFx0XHRcdHJldHVybiBlbGVtID8gWyBlbGVtIF0gOiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSAgZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gNyBvbmx5XG5cdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgaXMgbm90IHJlbGlhYmxlIGFzIGEgZmluZCBzaG9ydGN1dFxuXHRcdEV4cHIuZmluZFtcIklEXCJdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIG5vZGUsIGksIGVsZW1zLFxuXHRcdFx0XHRcdGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXG5cdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdC8vIFZlcmlmeSB0aGUgaWQgYXR0cmlidXRlXG5cdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBGYWxsIGJhY2sgb24gZ2V0RWxlbWVudHNCeU5hbWVcblx0XHRcdFx0XHRlbGVtcyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUoIGlkICk7XG5cdFx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1zW2krK10pICkge1xuXHRcdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kW1wiVEFHXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/XG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRG9jdW1lbnRGcmFnbWVudCBub2RlcyBkb24ndCBoYXZlIGdFQlROXG5cdFx0XHR9IGVsc2UgaWYgKCBzdXBwb3J0LnFzYSApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnICk7XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdHRtcCA9IFtdLFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0dG1wLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdG1wO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0fTtcblxuXHQvLyBDbGFzc1xuXHRFeHByLmZpbmRbXCJDTEFTU1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkge1xuXHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApO1xuXHRcdH1cblx0fTtcblxuXHQvKiBRU0EvbWF0Y2hlc1NlbGVjdG9yXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBRU0EgYW5kIG1hdGNoZXNTZWxlY3RvciBzdXBwb3J0XG5cblx0Ly8gbWF0Y2hlc1NlbGVjdG9yKDphY3RpdmUpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChJRTkvT3BlcmEgMTEuNSlcblx0cmJ1Z2d5TWF0Y2hlcyA9IFtdO1xuXG5cdC8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpXG5cdC8vIFdlIGFsbG93IHRoaXMgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBJRTgvOSB0aGF0IHRocm93cyBhbiBlcnJvclxuXHQvLyB3aGVuZXZlciBgZG9jdW1lbnQuYWN0aXZlRWxlbWVudGAgaXMgYWNjZXNzZWQgb24gYW4gaWZyYW1lXG5cdC8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yXG5cdC8vIFNlZSBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSkgKSB7XG5cdFx0Ly8gQnVpbGQgUVNBIHJlZ2V4XG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlXG5cdFx0XHQvLyBUaGlzIGlzIHRvIHRlc3QgSUUncyB0cmVhdG1lbnQgb2Ygbm90IGV4cGxpY2l0bHlcblx0XHRcdC8vIHNldHRpbmcgYSBib29sZWFuIGNvbnRlbnQgYXR0cmlidXRlLFxuXHRcdFx0Ly8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2hcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pbm5lckhUTUwgPSBcIjxhIGlkPSdcIiArIGV4cGFuZG8gKyBcIic+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGlkPSdcIiArIGV4cGFuZG8gKyBcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz5cIiArXG5cdFx0XHRcdFwiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNlxuXHRcdFx0Ly8gTm90aGluZyBzaG91bGQgYmUgc2VsZWN0ZWQgd2hlbiBlbXB0eSBzdHJpbmdzIGZvbGxvdyBePSBvciAkPSBvciAqPVxuXHRcdFx0Ly8gVGhlIHRlc3QgYXR0cmlidXRlIG11c3QgYmUgdW5rbm93biBpbiBPcGVyYSBidXQgXCJzYWZlXCIgZm9yIFdpblJUXG5cdFx0XHQvLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIlttc2FsbG93Y2FwdHVyZV49JyddXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiWypeJF09XCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86dmFsdWV8XCIgKyBib29sZWFucyArIFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZTwyOSwgQW5kcm9pZDw0LjQsIFNhZmFyaTw3LjArLCBpT1M8Ny4wKywgUGhhbnRvbUpTPDEuOS44K1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbaWR+PVwiICsgZXhwYW5kbyArIFwiLV1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCJ+PVwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCI6Y2hlY2tlZFwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCtcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiYSNcIiArIGV4cGFuZG8gKyBcIisqXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiLiMuK1srfl1cIik7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcImhpZGRlblwiICk7XG5cdFx0XHRlbC5hcHBlbmRDaGlsZCggaW5wdXQgKS5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcIkRcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEVuZm9yY2UgY2FzZS1zZW5zaXRpdml0eSBvZiBuYW1lIGF0dHJpYnV0ZVxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiOmVuYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0c1xuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZGlzYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9wZXJhIDEwLTExIGRvZXMgbm90IHRocm93IG9uIHBvc3QtY29tbWEgaW52YWxpZCBwc2V1ZG9zXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKFwiLC4qOlwiKTtcblx0XHR9KTtcblx0fVxuXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3Jcblx0XHRcdC8vIG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgKElFIDkpXG5cdFx0XHRzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoID0gbWF0Y2hlcy5jYWxsKCBlbCwgXCIqXCIgKTtcblxuXHRcdFx0Ly8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvblxuXHRcdFx0Ly8gR2Vja28gZG9lcyBub3QgZXJyb3IsIHJldHVybnMgZmFsc2UgaW5zdGVhZFxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBlbCwgXCJbcyE9JyddOnhcIiApO1xuXHRcdFx0cmJ1Z2d5TWF0Y2hlcy5wdXNoKCBcIiE9XCIsIHBzZXVkb3MgKTtcblx0XHR9KTtcblx0fVxuXG5cdHJidWdneVFTQSA9IHJidWdneVFTQS5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5UVNBLmpvaW4oXCJ8XCIpICk7XG5cdHJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oXCJ8XCIpICk7XG5cblx0LyogQ29udGFpbnNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XG5cblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSA/IGEuZG9jdW1lbnRFbGVtZW50IDogYSxcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0YWRvd24uY29udGFpbnMgP1xuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XG5cdFx0XHQpKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoYiA9IGIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHQvKiBTb3J0aW5nXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cblx0XHR2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247XG5cdFx0aWYgKCBjb21wYXJlICkge1xuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxuXHRcdGNvbXBhcmUgPSAoIGEub3duZXJEb2N1bWVudCB8fCBhICkgPT09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoIXN1cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0gY29tcGFyZSkgKSB7XG5cblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxuXHRcdFx0aWYgKCBhID09PSBkb2N1bWVudCB8fCBhLm93bmVyRG9jdW1lbnQgPT09IHByZWZlcnJlZERvYyAmJiBjb250YWlucyhwcmVmZXJyZWREb2MsIGEpICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGIgPT09IGRvY3VtZW50IHx8IGIub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYikgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY29tcGFyZSAmIDQgPyAtMSA6IDE7XG5cdH0gOlxuXHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHQvLyBFeGl0IGVhcmx5IGlmIHRoZSBub2RlcyBhcmUgaWRlbnRpY2FsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHZhciBjdXIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF1cCA9IGEucGFyZW50Tm9kZSxcblx0XHRcdGJ1cCA9IGIucGFyZW50Tm9kZSxcblx0XHRcdGFwID0gWyBhIF0sXG5cdFx0XHRicCA9IFsgYiBdO1xuXG5cdFx0Ly8gUGFyZW50bGVzcyBub2RlcyBhcmUgZWl0aGVyIGRvY3VtZW50cyBvciBkaXNjb25uZWN0ZWRcblx0XHRpZiAoICFhdXAgfHwgIWJ1cCApIHtcblx0XHRcdHJldHVybiBhID09PSBkb2N1bWVudCA/IC0xIDpcblx0XHRcdFx0YiA9PT0gZG9jdW1lbnQgPyAxIDpcblx0XHRcdFx0YXVwID8gLTEgOlxuXHRcdFx0XHRidXAgPyAxIDpcblx0XHRcdFx0c29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXG5cdFx0Ly8gSWYgdGhlIG5vZGVzIGFyZSBzaWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2tcblx0XHR9IGVsc2UgaWYgKCBhdXAgPT09IGJ1cCApIHtcblx0XHRcdHJldHVybiBzaWJsaW5nQ2hlY2soIGEsIGIgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvblxuXHRcdGN1ciA9IGE7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YXAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXHRcdGN1ciA9IGI7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcblx0XHR3aGlsZSAoIGFwW2ldID09PSBicFtpXSApIHtcblx0XHRcdGkrKztcblx0XHR9XG5cblx0XHRyZXR1cm4gaSA/XG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3Jcblx0XHRcdHNpYmxpbmdDaGVjayggYXBbaV0sIGJwW2ldICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugbm9kZXMgaW4gb3VyIGRvY3VtZW50IHNvcnQgZmlyc3Rcblx0XHRcdGFwW2ldID09PSBwcmVmZXJyZWREb2MgPyAtMSA6XG5cdFx0XHRicFtpXSA9PT0gcHJlZmVycmVkRG9jID8gMSA6XG5cdFx0XHQwO1xuXHR9O1xuXG5cdHJldHVybiBkb2N1bWVudDtcbn07XG5cblNpenpsZS5tYXRjaGVzID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1lbnRzICkge1xuXHRyZXR1cm4gU2l6emxlKCBleHByLCBudWxsLCBudWxsLCBlbGVtZW50cyApO1xufTtcblxuU2l6emxlLm1hdGNoZXNTZWxlY3RvciA9IGZ1bmN0aW9uKCBlbGVtLCBleHByICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHQvLyBNYWtlIHN1cmUgdGhhdCBhdHRyaWJ1dGUgc2VsZWN0b3JzIGFyZSBxdW90ZWRcblx0ZXhwciA9IGV4cHIucmVwbGFjZSggcmF0dHJpYnV0ZVF1b3RlcywgXCI9JyQxJ11cIiApO1xuXG5cdGlmICggc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgJiYgZG9jdW1lbnRJc0hUTUwgJiZcblx0XHQhY29tcGlsZXJDYWNoZVsgZXhwciArIFwiIFwiIF0gJiZcblx0XHQoICFyYnVnZ3lNYXRjaGVzIHx8ICFyYnVnZ3lNYXRjaGVzLnRlc3QoIGV4cHIgKSApICYmXG5cdFx0KCAhcmJ1Z2d5UVNBICAgICB8fCAhcmJ1Z2d5UVNBLnRlc3QoIGV4cHIgKSApICkge1xuXG5cdFx0dHJ5IHtcblx0XHRcdHZhciByZXQgPSBtYXRjaGVzLmNhbGwoIGVsZW0sIGV4cHIgKTtcblxuXHRcdFx0Ly8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdFx0aWYgKCByZXQgfHwgc3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCB8fFxuXHRcdFx0XHRcdC8vIEFzIHdlbGwsIGRpc2Nvbm5lY3RlZCBub2RlcyBhcmUgc2FpZCB0byBiZSBpbiBhIGRvY3VtZW50XG5cdFx0XHRcdFx0Ly8gZnJhZ21lbnQgaW4gSUUgOVxuXHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZSkge31cblx0fVxuXG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIGRvY3VtZW50LCBudWxsLCBbIGVsZW0gXSApLmxlbmd0aCA+IDA7XG59O1xuXG5TaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggY29udGV4dCwgZWxlbSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHR9XG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xufTtcblxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHR9XG5cblx0dmFyIGZuID0gRXhwci5hdHRySGFuZGxlWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSxcblx0XHQvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNylcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxuXHRcdFx0dW5kZWZpbmVkO1xuXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XG5cdFx0dmFsIDpcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxuXHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShuYW1lKSkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG59O1xuXG5TaXp6bGUuZXNjYXBlID0gZnVuY3Rpb24oIHNlbCApIHtcblx0cmV0dXJuIChzZWwgKyBcIlwiKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG59O1xuXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcbn07XG5cbi8qKlxuICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlc1xuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcbiAqL1xuU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHtcblx0dmFyIGVsZW0sXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxuXHRcdGogPSAwLFxuXHRcdGkgPSAwO1xuXG5cdC8vIFVubGVzcyB3ZSAqa25vdyogd2UgY2FuIGRldGVjdCBkdXBsaWNhdGVzLCBhc3N1bWUgdGhlaXIgcHJlc2VuY2Vcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XG5cdHJlc3VsdHMuc29ydCggc29ydE9yZGVyICk7XG5cblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XG5cdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRpZiAoIGVsZW0gPT09IHJlc3VsdHNbIGkgXSApIHtcblx0XHRcdFx0aiA9IGR1cGxpY2F0ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdHJlc3VsdHMuc3BsaWNlKCBkdXBsaWNhdGVzWyBqIF0sIDEgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDbGVhciBpbnB1dCBhZnRlciBzb3J0aW5nIHRvIHJlbGVhc2Ugb2JqZWN0c1xuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9zaXp6bGUvcHVsbC8yMjVcblx0c29ydElucHV0ID0gbnVsbDtcblxuXHRyZXR1cm4gcmVzdWx0cztcbn07XG5cbi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmV0cmlldmluZyB0aGUgdGV4dCB2YWx1ZSBvZiBhbiBhcnJheSBvZiBET00gbm9kZXNcbiAqIEBwYXJhbSB7QXJyYXl8RWxlbWVudH0gZWxlbVxuICovXG5nZXRUZXh0ID0gU2l6emxlLmdldFRleHQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5vZGUsXG5cdFx0cmV0ID0gXCJcIixcblx0XHRpID0gMCxcblx0XHRub2RlVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0aWYgKCAhbm9kZVR5cGUgKSB7XG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcblx0XHR3aGlsZSAoIChub2RlID0gZWxlbVtpKytdKSApIHtcblx0XHRcdC8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkge1xuXHRcdC8vIFVzZSB0ZXh0Q29udGVudCBmb3IgZWxlbWVudHNcblx0XHQvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kgb2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKVxuXHRcdGlmICggdHlwZW9mIGVsZW0udGV4dENvbnRlbnQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS50ZXh0Q29udGVudDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gVHJhdmVyc2UgaXRzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0cmV0ICs9IGdldFRleHQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAzIHx8IG5vZGVUeXBlID09PSA0ICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVWYWx1ZTtcblx0fVxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcblxuXHRyZXR1cm4gcmV0O1xufTtcblxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XG5cblx0Ly8gQ2FuIGJlIGFkanVzdGVkIGJ5IHRoZSB1c2VyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcblxuXHRjcmVhdGVQc2V1ZG86IG1hcmtGdW5jdGlvbixcblxuXHRtYXRjaDogbWF0Y2hFeHByLFxuXG5cdGF0dHJIYW5kbGU6IHt9LFxuXG5cdGZpbmQ6IHt9LFxuXG5cdHJlbGF0aXZlOiB7XG5cdFx0XCI+XCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiflwiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiB9XG5cdH0sXG5cblx0cHJlRmlsdGVyOiB7XG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0Ly8gTW92ZSB0aGUgZ2l2ZW4gdmFsdWUgdG8gbWF0Y2hbM10gd2hldGhlciBxdW90ZWQgb3IgdW5xdW90ZWRcblx0XHRcdG1hdGNoWzNdID0gKCBtYXRjaFszXSB8fCBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsyXSA9PT0gXCJ+PVwiICkge1xuXHRcdFx0XHRtYXRjaFszXSA9IFwiIFwiICsgbWF0Y2hbM10gKyBcIiBcIjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0LyogbWF0Y2hlcyBmcm9tIG1hdGNoRXhwcltcIkNISUxEXCJdXG5cdFx0XHRcdDEgdHlwZSAob25seXxudGh8Li4uKVxuXHRcdFx0XHQyIHdoYXQgKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdDMgYXJndW1lbnQgKGV2ZW58b2RkfFxcZCp8XFxkKm4oWystXVxcZCspP3wuLi4pXG5cdFx0XHRcdDQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQgKFsrLV0/XFxkKm58KVxuXHRcdFx0XHQ1IHNpZ24gb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDYgeCBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NyBzaWduIG9mIHktY29tcG9uZW50XG5cdFx0XHRcdDggeSBvZiB5LWNvbXBvbmVudFxuXHRcdFx0Ki9cblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsxXS5zbGljZSggMCwgMyApID09PSBcIm50aFwiICkge1xuXHRcdFx0XHQvLyBudGgtKiByZXF1aXJlcyBhcmd1bWVudFxuXHRcdFx0XHRpZiAoICFtYXRjaFszXSApIHtcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWzBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBudW1lcmljIHggYW5kIHkgcGFyYW1ldGVycyBmb3IgRXhwci5maWx0ZXIuQ0hJTERcblx0XHRcdFx0Ly8gcmVtZW1iZXIgdGhhdCBmYWxzZS90cnVlIGNhc3QgcmVzcGVjdGl2ZWx5IHRvIDAvMVxuXHRcdFx0XHRtYXRjaFs0XSA9ICsoIG1hdGNoWzRdID8gbWF0Y2hbNV0gKyAobWF0Y2hbNl0gfHwgMSkgOiAyICogKCBtYXRjaFszXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKSApO1xuXHRcdFx0XHRtYXRjaFs1XSA9ICsoICggbWF0Y2hbN10gKyBtYXRjaFs4XSApIHx8IG1hdGNoWzNdID09PSBcIm9kZFwiICk7XG5cblx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoO1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHR2YXIgZXhjZXNzLFxuXHRcdFx0XHR1bnF1b3RlZCA9ICFtYXRjaFs2XSAmJiBtYXRjaFsyXTtcblxuXHRcdFx0aWYgKCBtYXRjaEV4cHJbXCJDSElMRFwiXS50ZXN0KCBtYXRjaFswXSApICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWNjZXB0IHF1b3RlZCBhcmd1bWVudHMgYXMtaXNcblx0XHRcdGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdG1hdGNoWzJdID0gbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgXCJcIjtcblxuXHRcdFx0Ly8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHVucXVvdGVkICYmIHJwc2V1ZG8udGVzdCggdW5xdW90ZWQgKSAmJlxuXHRcdFx0XHQvLyBHZXQgZXhjZXNzIGZyb20gdG9rZW5pemUgKHJlY3Vyc2l2ZWx5KVxuXHRcdFx0XHQoZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkpICYmXG5cdFx0XHRcdC8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpc1xuXHRcdFx0XHQoZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggXCIpXCIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoKSApIHtcblxuXHRcdFx0XHQvLyBleGNlc3MgaXMgYSBuZWdhdGl2ZSBpbmRleFxuXHRcdFx0XHRtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdFx0bWF0Y2hbMl0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZpbHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KVxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCAzICk7XG5cdFx0fVxuXHR9LFxuXG5cdGZpbHRlcjoge1xuXG5cdFx0XCJUQUdcIjogZnVuY3Rpb24oIG5vZGVOYW1lU2VsZWN0b3IgKSB7XG5cdFx0XHR2YXIgbm9kZU5hbWUgPSBub2RlTmFtZVNlbGVjdG9yLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICkudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBub2RlTmFtZVNlbGVjdG9yID09PSBcIipcIiA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcblx0XHRcdHZhciBwYXR0ZXJuID0gY2xhc3NDYWNoZVsgY2xhc3NOYW1lICsgXCIgXCIgXTtcblxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcblx0XHRcdFx0KHBhdHRlcm4gPSBuZXcgUmVnRXhwKCBcIihefFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgY2xhc3NOYW1lICsgXCIoXCIgKyB3aGl0ZXNwYWNlICsgXCJ8JClcIiApKSAmJlxuXHRcdFx0XHRjbGFzc0NhY2hlKCBjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoIHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBlbGVtLmNsYXNzTmFtZSB8fCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgIT09IFwidW5kZWZpbmVkXCIgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiICk7XG5cdFx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG5hbWUsIG9wZXJhdG9yLCBjaGVjayApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHJlc3VsdCA9IFNpenpsZS5hdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHRcdFx0aWYgKCByZXN1bHQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiIT1cIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoICFvcGVyYXRvciApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJlc3VsdCArPSBcIlwiO1xuXG5cdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCI9XCIgPyByZXN1bHQgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIhPVwiID8gcmVzdWx0ICE9PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiXj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID09PSAwIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIqPVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiJD1cIiA/IGNoZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifj1cIiA/ICggXCIgXCIgKyByZXN1bHQucmVwbGFjZSggcndoaXRlc3BhY2UsIFwiIFwiICkgKyBcIiBcIiApLmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifD1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgXCItXCIgOlxuXHRcdFx0XHRcdGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggdHlwZSwgd2hhdCwgYXJndW1lbnQsIGZpcnN0LCBsYXN0ICkge1xuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxuXHRcdFx0XHRvZlR5cGUgPSB3aGF0ID09PSBcIm9mLXR5cGVcIjtcblxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xuXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuICEhZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0XHR9IDpcblxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3RhcnQsXG5cdFx0XHRcdFx0XHRkaXIgPSBzaW1wbGUgIT09IGZvcndhcmQgPyBcIm5leHRTaWJsaW5nXCIgOiBcInByZXZpb3VzU2libGluZ1wiLFxuXHRcdFx0XHRcdFx0cGFyZW50ID0gZWxlbS5wYXJlbnROb2RlLFxuXHRcdFx0XHRcdFx0bmFtZSA9IG9mVHlwZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXG5cdFx0XHRcdFx0XHR1c2VDYWNoZSA9ICF4bWwgJiYgIW9mVHlwZSxcblx0XHRcdFx0XHRcdGRpZmYgPSBmYWxzZTtcblxuXHRcdFx0XHRcdGlmICggcGFyZW50ICkge1xuXG5cdFx0XHRcdFx0XHQvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdFx0XHRpZiAoIHNpbXBsZSApIHtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCBkaXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9IG5vZGVbIGRpciBdKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdC8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKVxuXHRcdFx0XHRcdFx0XHRcdHN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gXCJvbmx5XCIgJiYgIXN0YXJ0ICYmIFwibmV4dFNpYmxpbmdcIjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c3RhcnQgPSBbIGZvcndhcmQgPyBwYXJlbnQuZmlyc3RDaGlsZCA6IHBhcmVudC5sYXN0Q2hpbGQgXTtcblxuXHRcdFx0XHRcdFx0Ly8gbm9uLXhtbCA6bnRoLWNoaWxkKC4uLikgc3RvcmVzIGNhY2hlIGRhdGEgb24gYHBhcmVudGBcblx0XHRcdFx0XHRcdGlmICggZm9yd2FyZCAmJiB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTZWVrIGBlbGVtYCBmcm9tIGEgcHJldmlvdXNseS1jYWNoZWQgaW5kZXhcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBwYXJlbnQ7XG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XG5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEZhbGxiYWNrIHRvIHNlZWtpbmcgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0KGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBXaGVuIGZvdW5kLCBjYWNoZSBpbmRleGVzIG9uIGBwYXJlbnRgIGFuZCBicmVha1xuXHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiArK2RpZmYgJiYgbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIG5vZGVJbmRleCwgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8IChub2RlWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXg7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBVc2UgdGhlIHNhbWUgbG9vcCBhcyBhYm92ZSB0byBzZWVrIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxuXHRcdFx0XHRcdFx0ZGlmZiAtPSBsYXN0O1xuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHtcblx0XHRcdC8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZVxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNwc2V1ZG8tY2xhc3Nlc1xuXHRcdFx0Ly8gUHJpb3JpdGl6ZSBieSBjYXNlIHNlbnNpdGl2aXR5IGluIGNhc2UgY3VzdG9tIHBzZXVkb3MgYXJlIGFkZGVkIHdpdGggdXBwZXJjYXNlIGxldHRlcnNcblx0XHRcdC8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3Ncblx0XHRcdHZhciBhcmdzLFxuXHRcdFx0XHRmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1ZG8udG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIgKyBwc2V1ZG8gKTtcblxuXHRcdFx0Ly8gVGhlIHVzZXIgbWF5IHVzZSBjcmVhdGVQc2V1ZG8gdG8gaW5kaWNhdGUgdGhhdFxuXHRcdFx0Ly8gYXJndW1lbnRzIGFyZSBuZWVkZWQgdG8gY3JlYXRlIHRoZSBmaWx0ZXIgZnVuY3Rpb25cblx0XHRcdC8vIGp1c3QgYXMgU2l6emxlIGRvZXNcblx0XHRcdGlmICggZm5bIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0cmV0dXJuIGZuKCBhcmd1bWVudCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXNcblx0XHRcdGlmICggZm4ubGVuZ3RoID4gMSApIHtcblx0XHRcdFx0YXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sIFwiXCIsIGFyZ3VtZW50IF07XG5cdFx0XHRcdHJldHVybiBFeHByLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoIHBzZXVkby50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdFx0XHRcdHZhciBpZHgsXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdFx0c2VlZFsgaWR4IF0gPSAhKCBtYXRjaGVzWyBpZHggXSA9IG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KSA6XG5cdFx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZm4oIGVsZW0sIDAsIGFyZ3MgKTtcblx0XHRcdFx0XHR9O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZm47XG5cdFx0fVxuXHR9LFxuXG5cdHBzZXVkb3M6IHtcblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLFxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xuXG5cdFx0XHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgdW5tYXRjaGVkIGJ5IGBtYXRjaGVyYFxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbaV0gPSAhKG1hdGNoZXNbaV0gPSBlbGVtKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pIDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHRpbnB1dFswXSA9IGVsZW07XG5cdFx0XHRcdFx0bWF0Y2hlciggaW5wdXQsIG51bGwsIHhtbCwgcmVzdWx0cyApO1xuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbMF0gPSBudWxsO1xuXHRcdFx0XHRcdHJldHVybiAhcmVzdWx0cy5wb3AoKTtcblx0XHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBTaXp6bGUoIHNlbGVjdG9yLCBlbGVtICkubGVuZ3RoID4gMDtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZWxlbS5pbm5lclRleHQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gXCJXaGV0aGVyIGFuIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgYnkgYSA6bGFuZygpIHNlbGVjdG9yXG5cdFx0Ly8gaXMgYmFzZWQgc29sZWx5IG9uIHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWVcblx0XHQvLyBiZWluZyBlcXVhbCB0byB0aGUgaWRlbnRpZmllciBDLFxuXHRcdC8vIG9yIGJlZ2lubmluZyB3aXRoIHRoZSBpZGVudGlmaWVyIEMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCItXCIuXG5cdFx0Ly8gVGhlIG1hdGNoaW5nIG9mIEMgYWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWluc2Vuc2l0aXZlbHkuXG5cdFx0Ly8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS5cIlxuXHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jbGFuZy1wc2V1ZG9cblx0XHRcImxhbmdcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHtcblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QobGFuZyB8fCBcIlwiKSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIGxhbmc6IFwiICsgbGFuZyApO1xuXHRcdFx0fVxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRpZiAoIChlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZShcInhtbDpsYW5nXCIpIHx8IGVsZW0uZ2V0QXR0cmlidXRlKFwibGFuZ1wiKSkgKSB7XG5cblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gTWlzY2VsbGFuZW91c1xuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdFx0XHRyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7XG5cdFx0fSxcblxuXHRcdFwicm9vdFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xuXHRcdH0sXG5cblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgKCFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpKSAmJiAhIShlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4KTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCBmYWxzZSApLFxuXHRcdFwiZGlzYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIHRydWUgKSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEluIENTUzMsIDpjaGVja2VkIHNob3VsZCByZXR1cm4gYm90aCBjaGVja2VkIGFuZCBzZWxlY3RlZCBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdHZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiAobm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCkgfHwgKG5vZGVOYW1lID09PSBcIm9wdGlvblwiICYmICEhZWxlbS5zZWxlY3RlZCk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XG5cdFx0XHQvLyBvcHRpb25zIGluIFNhZmFyaSB3b3JrIHByb3Blcmx5XG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBDb250ZW50c1xuXHRcdFwiZW1wdHlcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbXCJlbXB0eVwiXSggZWxlbSApO1xuXHRcdH0sXG5cblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXG5cdFx0XCJoZWFkZXJcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmhlYWRlci50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiaW5wdXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gXCJidXR0b25cIiB8fCBuYW1lID09PSBcImJ1dHRvblwiO1xuXHRcdH0sXG5cblx0XHRcInRleHRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgYXR0cjtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiAmJlxuXHRcdFx0XHRlbGVtLnR5cGUgPT09IFwidGV4dFwiICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKSA9PSBudWxsIHx8IGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBbIDAgXTtcblx0XHR9KSxcblxuXHRcdFwibGFzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcblx0XHR9KSxcblxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0cmV0dXJuIFsgYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJldmVuXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDE7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgLS1pID49IDA7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwiZ3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KVxuXHR9XG59O1xuXG5FeHByLnBzZXVkb3NbXCJudGhcIl0gPSBFeHByLnBzZXVkb3NbXCJlcVwiXTtcblxuLy8gQWRkIGJ1dHRvbi9pbnB1dCB0eXBlIHBzZXVkb3NcbmZvciAoIGkgaW4geyByYWRpbzogdHJ1ZSwgY2hlY2tib3g6IHRydWUsIGZpbGU6IHRydWUsIHBhc3N3b3JkOiB0cnVlLCBpbWFnZTogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XG59XG5mb3IgKCBpIGluIHsgc3VibWl0OiB0cnVlLCByZXNldDogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xufVxuXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcbmZ1bmN0aW9uIHNldEZpbHRlcnMoKSB7fVxuc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMgPSBFeHByLnBzZXVkb3M7XG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xuXG50b2tlbml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkge1xuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcblx0XHRzb0ZhciwgZ3JvdXBzLCBwcmVGaWx0ZXJzLFxuXHRcdGNhY2hlZCA9IHRva2VuQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoIGNhY2hlZCApIHtcblx0XHRyZXR1cm4gcGFyc2VPbmx5ID8gMCA6IGNhY2hlZC5zbGljZSggMCApO1xuXHR9XG5cblx0c29GYXIgPSBzZWxlY3Rvcjtcblx0Z3JvdXBzID0gW107XG5cdHByZUZpbHRlcnMgPSBFeHByLnByZUZpbHRlcjtcblxuXHR3aGlsZSAoIHNvRmFyICkge1xuXG5cdFx0Ly8gQ29tbWEgYW5kIGZpcnN0IHJ1blxuXHRcdGlmICggIW1hdGNoZWQgfHwgKG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkpICkge1xuXHRcdFx0aWYgKCBtYXRjaCApIHtcblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbMF0ubGVuZ3RoICkgfHwgc29GYXI7XG5cdFx0XHR9XG5cdFx0XHRncm91cHMucHVzaCggKHRva2VucyA9IFtdKSApO1xuXHRcdH1cblxuXHRcdG1hdGNoZWQgPSBmYWxzZTtcblxuXHRcdC8vIENvbWJpbmF0b3JzXG5cdFx0aWYgKCAobWF0Y2ggPSByY29tYmluYXRvcnMuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFswXS5yZXBsYWNlKCBydHJpbSwgXCIgXCIgKVxuXHRcdFx0fSk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAobWF0Y2ggPSBtYXRjaEV4cHJbIHR5cGUgXS5leGVjKCBzb0ZhciApKSAmJiAoIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQobWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRcdG1hdGNoZXM6IG1hdGNoXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggIW1hdGNoZWQgKSB7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGxlbmd0aCBvZiB0aGUgaW52YWxpZCBleGNlc3Ncblx0Ly8gaWYgd2UncmUganVzdCBwYXJzaW5nXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xuXHRyZXR1cm4gcGFyc2VPbmx5ID9cblx0XHRzb0Zhci5sZW5ndGggOlxuXHRcdHNvRmFyID9cblx0XHRcdFNpenpsZS5lcnJvciggc2VsZWN0b3IgKSA6XG5cdFx0XHQvLyBDYWNoZSB0aGUgdG9rZW5zXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcbn07XG5cbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRzZWxlY3RvciArPSB0b2tlbnNbaV0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcblx0XHRrZXkgPSBza2lwIHx8IGRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8IChlbGVtWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0ZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCAob2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsga2V5IF0pICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkge1xuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBpID0gbWF0Y2hlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggIW1hdGNoZXJzW2ldKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWzBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzW2ldLCByZXN1bHRzICk7XG5cdH1cblx0cmV0dXJuIHJlc3VsdHM7XG59XG5cbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XG5cdHZhciBlbGVtLFxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGxlbiA9IHVubWF0Y2hlZC5sZW5ndGgsXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8IFwiKlwiLCBjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LCBbXSApLFxuXG5cdFx0XHQvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb25cblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdGVsZW1zLFxuXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoZWxlbSA9IHRlbXBbaV0pICkge1xuXHRcdFx0XHRcdG1hdGNoZXJPdXRbIHBvc3RNYXBbaV0gXSA9ICEobWF0Y2hlckluWyBwb3N0TWFwW2ldIF0gPSBlbGVtKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggc2VlZCApIHtcblx0XHRcdGlmICggcG9zdEZpbmRlciB8fCBwcmVGaWx0ZXIgKSB7XG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goIChtYXRjaGVySW5baV0gPSBlbGVtKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAobWF0Y2hlck91dCA9IFtdKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSAmJlxuXHRcdFx0XHRcdFx0KHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwW2ldKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkW3RlbXBdID0gIShyZXN1bHRzW3RlbXBdID0gZWxlbSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVtcIiBcIl0sXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxuXG5cdFx0Ly8gVGhlIGZvdW5kYXRpb25hbCBtYXRjaGVyIGVuc3VyZXMgdGhhdCBlbGVtZW50cyBhcmUgcmVhY2hhYmxlIGZyb20gdG9wLWxldmVsIGNvbnRleHQocylcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXG5cdFx0XHRcdChjaGVja0NvbnRleHQgPSBjb250ZXh0KS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAobWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1tpXS50eXBlIF0pICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIpIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zW2ldLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zW2ldLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxuXHRcdFx0XHRcdGkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLFxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXG5cdFx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxuXHRcdFx0XHRcdFx0dG9rZW5zLnNsaWNlKCAwLCBpIC0gMSApLmNvbmNhdCh7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gXCIgXCIgPyBcIipcIiA6IFwiXCIgfSlcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSB7XG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0c3VwZXJNYXRjaGVyID0gZnVuY3Rpb24oIHNlZWQsIGNvbnRleHQsIHhtbCwgcmVzdWx0cywgb3V0ZXJtb3N0ICkge1xuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXG5cdFx0XHRcdGkgPSBcIjBcIixcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxuXHRcdFx0XHRjb250ZXh0QmFja3VwID0gb3V0ZXJtb3N0Q29udGV4dCxcblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFtcIlRBR1wiXSggXCIqXCIsIG91dGVybW9zdCApLFxuXHRcdFx0XHQvLyBVc2UgaW50ZWdlciBkaXJydW5zIGlmZiB0aGlzIGlzIHRoZSBvdXRlcm1vc3QgbWF0Y2hlclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwpICkge1xuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xuXHRcdFx0XHRpZiAoIGJ5U2V0ICkge1xuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IHNldE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEodW5tYXRjaGVkW2ldIHx8IHNldE1hdGNoZWRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbaV0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApO1xuXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xuXHRcdFx0XHRpZiAoIG91dGVybW9zdCAmJiAhc2VlZCAmJiBzZXRNYXRjaGVkLmxlbmd0aCA+IDAgJiZcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcblxuXHRcdFx0XHRcdFNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xuXHRcdH07XG5cblx0cmV0dXJuIGJ5U2V0ID9cblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcblx0XHRzdXBlck1hdGNoZXI7XG59XG5cbmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdHZhciBpLFxuXHRcdHNldE1hdGNoZXJzID0gW10sXG5cdFx0ZWxlbWVudE1hdGNoZXJzID0gW10sXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggIWNhY2hlZCApIHtcblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbaV0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoc2VsZWN0b3IgPSBjb21waWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvcikgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAodG9rZW4gPSB0b2tlbnNbMF0pLnR5cGUgPT09IFwiSURcIiAmJlxuXHRcdFx0XHRjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sxXS50eXBlIF0gKSB7XG5cblx0XHRcdGNvbnRleHQgPSAoIEV4cHIuZmluZFtcIklEXCJdKCB0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UocnVuZXNjYXBlLCBmdW5lc2NhcGUpLCBjb250ZXh0ICkgfHwgW10gKVswXTtcblx0XHRcdGlmICggIWNvbnRleHQgKSB7XG5cdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHQvLyBQcmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1cCBhIGxldmVsXG5cdFx0XHR9IGVsc2UgaWYgKCBjb21waWxlZCApIHtcblx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQucGFyZW50Tm9kZTtcblx0XHRcdH1cblxuXHRcdFx0c2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5zLnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmV0Y2ggYSBzZWVkIHNldCBmb3IgcmlnaHQtdG8tbGVmdCBtYXRjaGluZ1xuXHRcdGkgPSBtYXRjaEV4cHJbXCJuZWVkc0NvbnRleHRcIl0udGVzdCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG9rZW4gPSB0b2tlbnNbaV07XG5cblx0XHRcdC8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3Jcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKHR5cGUgPSB0b2tlbi50eXBlKSBdICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggKGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSkgKSB7XG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xuXHRcdFx0XHRpZiAoIChzZWVkID0gZmluZChcblx0XHRcdFx0XHR0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWzBdLnR5cGUgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxuXHRcdFx0XHQpKSApIHtcblxuXHRcdFx0XHRcdC8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseVxuXHRcdFx0XHRcdHRva2Vucy5zcGxpY2UoIGksIDEgKTtcblx0XHRcdFx0XHRzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApO1xuXHRcdFx0XHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2VlZCApO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDb21waWxlIGFuZCBleGVjdXRlIGEgZmlsdGVyaW5nIGZ1bmN0aW9uIGlmIG9uZSBpcyBub3QgcHJvdmlkZWRcblx0Ly8gUHJvdmlkZSBgbWF0Y2hgIHRvIGF2b2lkIHJldG9rZW5pemF0aW9uIGlmIHdlIG1vZGlmaWVkIHRoZSBzZWxlY3RvciBhYm92ZVxuXHQoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICkoXG5cdFx0c2VlZCxcblx0XHRjb250ZXh0LFxuXHRcdCFkb2N1bWVudElzSFRNTCxcblx0XHRyZXN1bHRzLFxuXHRcdCFjb250ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0KTtcblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vLyBPbmUtdGltZSBhc3NpZ25tZW50c1xuXG4vLyBTb3J0IHN0YWJpbGl0eVxuc3VwcG9ydC5zb3J0U3RhYmxlID0gZXhwYW5kby5zcGxpdChcIlwiKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKFwiXCIpID09PSBleHBhbmRvO1xuXG4vLyBTdXBwb3J0OiBDaHJvbWUgMTQtMzUrXG4vLyBBbHdheXMgYXNzdW1lIGR1cGxpY2F0ZXMgaWYgdGhleSBhcmVuJ3QgcGFzc2VkIHRvIHRoZSBjb21wYXJpc29uIGZ1bmN0aW9uXG5zdXBwb3J0LmRldGVjdER1cGxpY2F0ZXMgPSAhIWhhc0R1cGxpY2F0ZTtcblxuLy8gSW5pdGlhbGl6ZSBhZ2FpbnN0IHRoZSBkZWZhdWx0IGRvY3VtZW50XG5zZXREb2N1bWVudCgpO1xuXG4vLyBTdXBwb3J0OiBXZWJraXQ8NTM3LjMyIC0gU2FmYXJpIDYuMC4zL0Nocm9tZSAyNSAoZml4ZWQgaW4gQ2hyb21lIDI3KVxuLy8gRGV0YWNoZWQgbm9kZXMgY29uZm91bmRpbmdseSBmb2xsb3cgKmVhY2ggb3RoZXIqXG5zdXBwb3J0LnNvcnREZXRhY2hlZCA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxuXHRyZXR1cm4gZWwuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKSApICYgMTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBJRTw4XG4vLyBQcmV2ZW50IGF0dHJpYnV0ZS9wcm9wZXJ0eSBcImludGVycG9sYXRpb25cIlxuLy8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNjQyOSUyOFZTLjg1JTI5LmFzcHhcbmlmICggIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nIyc+PC9hPlwiO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpID09PSBcIiNcIiA7XG59KSApIHtcblx0YWRkSGFuZGxlKCBcInR5cGV8aHJlZnxoZWlnaHR8d2lkdGhcIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwidHlwZVwiID8gMSA6IDIgKTtcblx0XHR9XG5cdH0pO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZGVmYXVsdFZhbHVlIGluIHBsYWNlIG9mIGdldEF0dHJpYnV0ZShcInZhbHVlXCIpXG5pZiAoICFzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGlucHV0Lz5cIjtcblx0ZWwuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiwgXCJcIiApO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBcIlwiO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ2YWx1ZVwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0cmV0dXJuIGVsLmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpID09IG51bGw7XG59KSApIHtcblx0YWRkSGFuZGxlKCBib29sZWFucywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciB2YWw7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdID09PSB0cnVlID8gbmFtZS50b0xvd2VyQ2FzZSgpIDpcblx0XHRcdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkpICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG5cdFx0fVxuXHR9KTtcbn1cblxucmV0dXJuIFNpenpsZTtcblxufSkoIHdpbmRvdyApO1xuXG5cblxualF1ZXJ5LmZpbmQgPSBTaXp6bGU7XG5qUXVlcnkuZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7XG5cbi8vIERlcHJlY2F0ZWRcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcbmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7XG5cblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cblxuXG5mdW5jdGlvbiBub2RlTmFtZSggZWxlbSwgbmFtZSApIHtcblxuICByZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblxufTtcbnZhciByc2luZ2xlVGFnID0gKCAvXjwoW2Etel1bXlxcL1xcMD46XFx4MjBcXHRcXHJcXG5cXGZdKilbXFx4MjBcXHRcXHJcXG5cXGZdKlxcLz8+KD86PFxcL1xcMT58KSQvaSApO1xuXG5cblxuLy8gSW1wbGVtZW50IHRoZSBpZGVudGljYWwgZnVuY3Rpb25hbGl0eSBmb3IgZmlsdGVyIGFuZCBub3RcbmZ1bmN0aW9uIHdpbm5vdyggZWxlbWVudHMsIHF1YWxpZmllciwgbm90ICkge1xuXHRpZiAoIGlzRnVuY3Rpb24oIHF1YWxpZmllciApICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuICEhcXVhbGlmaWVyLmNhbGwoIGVsZW0sIGksIGVsZW0gKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIFNpbmdsZSBlbGVtZW50XG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBBcnJheWxpa2Ugb2YgZWxlbWVudHMgKGpRdWVyeSwgYXJndW1lbnRzLCBBcnJheSlcblx0aWYgKCB0eXBlb2YgcXVhbGlmaWVyICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggaW5kZXhPZi5jYWxsKCBxdWFsaWZpZXIsIGVsZW0gKSA+IC0xICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBGaWx0ZXJlZCBkaXJlY3RseSBmb3IgYm90aCBzaW1wbGUgYW5kIGNvbXBsZXggc2VsZWN0b3JzXG5cdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcbn1cblxualF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkge1xuXHR2YXIgZWxlbSA9IGVsZW1zWyAwIF07XG5cblx0aWYgKCBub3QgKSB7XG5cdFx0ZXhwciA9IFwiOm5vdChcIiArIGV4cHIgKyBcIilcIjtcblx0fVxuXG5cdGlmICggZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzKCBleHByLCBqUXVlcnkuZ3JlcCggZWxlbXMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHR9ICkgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmluZDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBpLCByZXQsXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdHNlbGYgPSB0aGlzO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdGlmICggalF1ZXJ5LmNvbnRhaW5zKCBzZWxmWyBpIF0sIHRoaXMgKSApIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSApICk7XG5cdFx0fVxuXG5cdFx0cmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7XG5cblx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQoIHNlbGVjdG9yLCBzZWxmWyBpIF0sIHJldCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApIDogcmV0O1xuXHR9LFxuXHRmaWx0ZXI6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlICkgKTtcblx0fSxcblx0bm90OiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCB0cnVlICkgKTtcblx0fSxcblx0aXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gISF3aW5ub3coXG5cdFx0XHR0aGlzLFxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXG5cdFx0XHR0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgJiYgcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXG5cdFx0XHRmYWxzZVxuXHRcdCkubGVuZ3RoO1xuXHR9XG59ICk7XG5cblxuLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3RcblxuXG4vLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudClcbnZhciByb290alF1ZXJ5LFxuXG5cdC8vIEEgc2ltcGxlIHdheSB0byBjaGVjayBmb3IgSFRNTCBzdHJpbmdzXG5cdC8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSlcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKCMxMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpXG5cdC8vIFNob3J0Y3V0IHNpbXBsZSAjaWQgY2FzZSBmb3Igc3BlZWRcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSspKSQvLFxuXG5cdGluaXQgPSBqUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcm9vdCApIHtcblx0XHR2YXIgbWF0Y2gsIGVsZW07XG5cblx0XHQvLyBIQU5ETEU6ICQoXCJcIiksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcblx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdC8vIE1ldGhvZCBpbml0KCkgYWNjZXB0cyBhbiBhbHRlcm5hdGUgcm9vdGpRdWVyeVxuXHRcdC8vIHNvIG1pZ3JhdGUgY2FuIHN1cHBvcnQgalF1ZXJ5LnN1YiAoZ2gtMjEwMSlcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xuXG5cdFx0Ly8gSGFuZGxlIEhUTUwgc3RyaW5nc1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0aWYgKCBzZWxlY3RvclsgMCBdID09PSBcIjxcIiAmJlxuXHRcdFx0XHRzZWxlY3Rvclsgc2VsZWN0b3IubGVuZ3RoIC0gMSBdID09PSBcIj5cIiAmJlxuXHRcdFx0XHRzZWxlY3Rvci5sZW5ndGggPj0gMyApIHtcblxuXHRcdFx0XHQvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVja1xuXHRcdFx0XHRtYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRleHQgaXMgc3BlY2lmaWVkIGZvciAjaWRcblx0XHRcdGlmICggbWF0Y2ggJiYgKCBtYXRjaFsgMSBdIHx8ICFjb250ZXh0ICkgKSB7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwpIC0+ICQoYXJyYXkpXG5cdFx0XHRcdGlmICggbWF0Y2hbIDEgXSApIHtcblx0XHRcdFx0XHRjb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSA/IGNvbnRleHRbIDAgXSA6IGNvbnRleHQ7XG5cblx0XHRcdFx0XHQvLyBPcHRpb24gdG8gcnVuIHNjcmlwdHMgaXMgdHJ1ZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0XHQvLyBJbnRlbnRpb25hbGx5IGxldCB0aGUgZXJyb3IgYmUgdGhyb3duIGlmIHBhcnNlSFRNTCBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcblx0XHRcdFx0XHRcdG1hdGNoWyAxIF0sXG5cdFx0XHRcdFx0XHRjb250ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50LFxuXHRcdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHRcdCkgKTtcblxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcblx0XHRcdFx0XHRpZiAoIHJzaW5nbGVUYWcudGVzdCggbWF0Y2hbIDEgXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCBtYXRjaCBpbiBjb250ZXh0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFByb3BlcnRpZXMgb2YgY29udGV4dCBhcmUgY2FsbGVkIGFzIG1ldGhvZHMgaWYgcG9zc2libGVcblx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGlzWyBtYXRjaCBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBvdGhlcndpc2Ugc2V0IGFzIGF0dHJpYnV0ZXNcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoI2lkKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbIDIgXSApO1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xuXHRcdFx0XHRyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxlY3RvciApO1xuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcblx0XHRcdC8vICh3aGljaCBpcyBqdXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXG5cdFx0fSBlbHNlIGlmICggc2VsZWN0b3Iubm9kZVR5cGUgKSB7XG5cdFx0XHR0aGlzWyAwIF0gPSBzZWxlY3Rvcjtcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxuXHRcdC8vIFNob3J0Y3V0IGZvciBkb2N1bWVudCByZWFkeVxuXHRcdH0gZWxzZSBpZiAoIGlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7XG5cdFx0XHRyZXR1cm4gcm9vdC5yZWFkeSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0cm9vdC5yZWFkeSggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRzZWxlY3RvciggalF1ZXJ5ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tYWtlQXJyYXkoIHNlbGVjdG9yLCB0aGlzICk7XG5cdH07XG5cbi8vIEdpdmUgdGhlIGluaXQgZnVuY3Rpb24gdGhlIGpRdWVyeSBwcm90b3R5cGUgZm9yIGxhdGVyIGluc3RhbnRpYXRpb25cbmluaXQucHJvdG90eXBlID0galF1ZXJ5LmZuO1xuXG4vLyBJbml0aWFsaXplIGNlbnRyYWwgcmVmZXJlbmNlXG5yb290alF1ZXJ5ID0galF1ZXJ5KCBkb2N1bWVudCApO1xuXG5cbnZhciBycGFyZW50c3ByZXYgPSAvXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxcblxuXHQvLyBNZXRob2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFydGluZyBmcm9tIGEgdW5pcXVlIHNldFxuXHRndWFyYW50ZWVkVW5pcXVlID0ge1xuXHRcdGNoaWxkcmVuOiB0cnVlLFxuXHRcdGNvbnRlbnRzOiB0cnVlLFxuXHRcdG5leHQ6IHRydWUsXG5cdFx0cHJldjogdHJ1ZVxuXHR9O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGhhczogZnVuY3Rpb24oIHRhcmdldCApIHtcblx0XHR2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksXG5cdFx0XHRsID0gdGFyZ2V0cy5sZW5ndGg7XG5cblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Y2xvc2VzdDogZnVuY3Rpb24oIHNlbGVjdG9ycywgY29udGV4dCApIHtcblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRtYXRjaGVkID0gW10sXG5cdFx0XHR0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gXCJzdHJpbmdcIiAmJiBqUXVlcnkoIHNlbGVjdG9ycyApO1xuXG5cdFx0Ly8gUG9zaXRpb25hbCBzZWxlY3RvcnMgbmV2ZXIgbWF0Y2gsIHNpbmNlIHRoZXJlJ3Mgbm8gX3NlbGVjdGlvbl8gY29udGV4dFxuXHRcdGlmICggIXJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZvciAoIGN1ciA9IHRoaXNbIGkgXTsgY3VyICYmIGN1ciAhPT0gY29udGV4dDsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cblx0XHRcdFx0XHQvLyBBbHdheXMgc2tpcCBkb2N1bWVudCBmcmFnbWVudHNcblx0XHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA8IDExICYmICggdGFyZ2V0cyA/XG5cdFx0XHRcdFx0XHR0YXJnZXRzLmluZGV4KCBjdXIgKSA+IC0xIDpcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcGFzcyBub24tZWxlbWVudHMgdG8gU2l6emxlXG5cdFx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBjdXIsIHNlbGVjdG9ycyApICkgKSB7XG5cblx0XHRcdFx0XHRcdG1hdGNoZWQucHVzaCggY3VyICk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQubGVuZ3RoID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICkgOiBtYXRjaGVkICk7XG5cdH0sXG5cblx0Ly8gRGV0ZXJtaW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpbiB0aGUgc2V0XG5cdGluZGV4OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50XG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybiAoIHRoaXNbIDAgXSAmJiB0aGlzWyAwIF0ucGFyZW50Tm9kZSApID8gdGhpcy5maXJzdCgpLnByZXZBbGwoKS5sZW5ndGggOiAtMTtcblx0XHR9XG5cblx0XHQvLyBJbmRleCBpbiBzZWxlY3RvclxuXHRcdGlmICggdHlwZW9mIGVsZW0gPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZi5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdGhpc1sgMCBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gTG9jYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgZGVzaXJlZCBlbGVtZW50XG5cdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggdGhpcyxcblxuXHRcdFx0Ly8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkXG5cdFx0XHRlbGVtLmpxdWVyeSA/IGVsZW1bIDAgXSA6IGVsZW1cblx0XHQpO1xuXHR9LFxuXG5cdGFkZDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayhcblx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID9cblx0XHRcdHRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoIHNlbGVjdG9yIClcblx0XHQpO1xuXHR9XG59ICk7XG5cbmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkge1xuXHR3aGlsZSAoICggY3VyID0gY3VyWyBkaXIgXSApICYmIGN1ci5ub2RlVHlwZSAhPT0gMSApIHt9XG5cdHJldHVybiBjdXI7XG59XG5cbmpRdWVyeS5lYWNoKCB7XG5cdHBhcmVudDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBudWxsO1xuXHR9LFxuXHRwYXJlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiApO1xuXHR9LFxuXHRwYXJlbnRzVW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiwgdW50aWwgKTtcblx0fSxcblx0bmV4dDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xuXHR9LFxuXHRuZXh0QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldkFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xuXHR9LFxuXHRuZXh0VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZ3MoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxlbSApO1xuXHR9LFxuXHRjaGlsZHJlbjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCBlbGVtLmZpcnN0Q2hpbGQgKTtcblx0fSxcblx0Y29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xuICAgICAgICBpZiAoIG5vZGVOYW1lKCBlbGVtLCBcImlmcmFtZVwiICkgKSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seSwgaU9TIDcgb25seSwgQW5kcm9pZCBCcm93c2VyIDw9NC4zIG9ubHlcbiAgICAgICAgLy8gVHJlYXQgdGhlIHRlbXBsYXRlIGVsZW1lbnQgYXMgYSByZWd1bGFyIG9uZSBpbiBicm93c2VycyB0aGF0XG4gICAgICAgIC8vIGRvbid0IHN1cHBvcnQgaXQuXG4gICAgICAgIGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGVtcGxhdGVcIiApICkge1xuICAgICAgICAgICAgZWxlbSA9IGVsZW0uY29udGVudCB8fCBlbGVtO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIGVsZW0uY2hpbGROb2RlcyApO1xuXHR9XG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0bWF0Y2hlZCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBtYXRjaGVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQucmV2ZXJzZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZCApO1xuXHR9O1xufSApO1xudmFyIHJub3RodG1sd2hpdGUgPSAoIC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyApO1xuXG5cblxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XG5cdHZhciBvYmplY3QgPSB7fTtcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgdGhlbmFibGVzXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxuXHRcdFx0Ly8gKiBmYWxzZTogWyB2YWx1ZSBdLnNsaWNlKCAwICkgPT4gcmVzb2x2ZSggdmFsdWUgKVxuXHRcdFx0Ly8gKiB0cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKClcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdICk7XG5cdH1cbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsXG5cdFx0XHRcdC8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQgaW5kZXgsIFtmaW5hbCBzdGF0ZV1cblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksIDIgXSxcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDEsIFwicmVqZWN0ZWRcIiBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdFwiY2F0Y2hcIjogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBNYXAgdHVwbGVzIChwcm9ncmVzcywgZG9uZSwgZmFpbCkgdG8gYXJndW1lbnRzIChkb25lLCBmYWlsLCBwcm9ncmVzcylcblx0XHRcdFx0XHRcdFx0dmFyIGZuID0gaXNGdW5jdGlvbiggZm5zWyB0dXBsZVsgNCBdIF0gKSAmJiBmbnNbIHR1cGxlWyA0IF0gXTtcblxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5wcm9ncmVzcyhmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5ub3RpZnkgfSlcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQuZG9uZShmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZXNvbHZlIH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmZhaWwoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVqZWN0IH0pXG5cdFx0XHRcdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMSBdIF0oIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkICYmIGlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZuID8gWyByZXR1cm5lZCBdIDogYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIG9uUHJvZ3Jlc3MgKSB7XG5cdFx0XHRcdFx0dmFyIG1heERlcHRoID0gMDtcblx0XHRcdFx0XHRmdW5jdGlvbiByZXNvbHZlKCBkZXB0aCwgZGVmZXJyZWQsIGhhbmRsZXIsIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdFx0XHRcdFx0XHRhcmdzID0gYXJndW1lbnRzLFxuXHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCwgdGhlbjtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjNcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgZG91YmxlLXJlc29sdXRpb24gYXR0ZW1wdHNcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggPCBtYXhEZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCA9IGhhbmRsZXIuYXBwbHkoIHRoYXQsIGFyZ3MgKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNDhcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgPT09IGRlZmVycmVkLnByb21pc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvciggXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIiApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU0XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC03NVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZVxuXHRcdFx0XHRcdFx0XHRcdFx0dGhlbiA9IHJldHVybmVkICYmXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuNFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IGNoZWNrIG9iamVjdHMgYW5kIGZ1bmN0aW9ucyBmb3IgdGhlbmFiaWxpdHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCB0eXBlb2YgcmV0dXJuZWQgPT09IFwib2JqZWN0XCIgfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgcmV0dXJuZWQgPT09IFwiZnVuY3Rpb25cIiApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhIHJldHVybmVkIHRoZW5hYmxlXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHRoZW4gKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTcGVjaWFsIHByb2Nlc3NvcnMgKG5vdGlmeSkganVzdCB3YWl0IGZvciByZXNvbHV0aW9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVuLmNhbGwoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBOb3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgYWxzbyBob29rIGludG8gcHJvZ3Jlc3Ncblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBkaXNyZWdhcmQgb2xkZXIgcmVzb2x1dGlvbiB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtYXhEZXB0aCsrO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGggKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGFsbCBvdGhlciByZXR1cm5lZCB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBoYW5kbGVyICE9PSBJZGVudGl0eSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIHJldHVybmVkIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBQcm9jZXNzIHRoZSB2YWx1ZShzKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZhdWx0IHByb2Nlc3MgaXMgcmVzb2x2ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQoIHNwZWNpYWwgfHwgZGVmZXJyZWQucmVzb2x2ZVdpdGggKSggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IG5vcm1hbCBwcm9jZXNzb3JzIChyZXNvbHZlKSBjYXRjaCBhbmQgcmVqZWN0IGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzID0gc3BlY2lhbCA/XG5cdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93IDpcblx0XHRcdFx0XHRcdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3coKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2soIGUsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHByb2Nlc3Muc3RhY2tUcmFjZSApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy40LjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02MVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIElnbm9yZSBwb3N0LXJlc29sdXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKyAxID49IG1heERlcHRoICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IHN1YnN0aXR1dGUgaGFuZGxlcnMgcGFzcyBvbiBjb250ZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gVGhyb3dlciApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0YXJncyA9IFsgZSBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCB0aGF0LCBhcmdzICk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4xXG5cdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU3XG5cdFx0XHRcdFx0XHRcdC8vIFJlLXJlc29sdmUgcHJvbWlzZXMgaW1tZWRpYXRlbHkgdG8gZG9kZ2UgZmFsc2UgcmVqZWN0aW9uIGZyb21cblx0XHRcdFx0XHRcdFx0Ly8gc3Vic2VxdWVudCBlcnJvcnNcblx0XHRcdFx0XHRcdFx0aWYgKCBkZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzKCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDYWxsIGFuIG9wdGlvbmFsIGhvb2sgdG8gcmVjb3JkIHRoZSBzdGFjaywgaW4gY2FzZSBvZiBleGNlcHRpb25cblx0XHRcdFx0XHRcdFx0XHQvLyBzaW5jZSBpdCdzIG90aGVyd2lzZSBsb3N0IHdoZW4gZXhlY3V0aW9uIGdvZXMgYXN5bmNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgPSBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBwcm9jZXNzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXG5cdFx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUHJvZ3Jlc3MgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblByb2dyZXNzIDpcblx0XHRcdFx0XHRcdFx0XHRcdElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLm5vdGlmeVdpdGhcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmFkZCggLi4uIClcblx0XHRcdFx0XHRcdHR1cGxlc1sgMSBdWyAzIF0uYWRkKFxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxuXHRcdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25GdWxmaWxsZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvbkZ1bGZpbGxlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDIgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUmVqZWN0ZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblJlamVjdGVkIDpcblx0XHRcdFx0XHRcdFx0XHRcdFRocm93ZXJcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWRcblx0XHRcdFx0Ly8gSWYgb2JqIGlzIHByb3ZpZGVkLCB0aGUgcHJvbWlzZSBhc3BlY3QgaXMgYWRkZWQgdG8gdGhlIG9iamVjdFxuXHRcdFx0XHRwcm9taXNlOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdFx0XHRcdHJldHVybiBvYmogIT0gbnVsbCA/IGpRdWVyeS5leHRlbmQoIG9iaiwgcHJvbWlzZSApIDogcHJvbWlzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlZmVycmVkID0ge307XG5cblx0XHQvLyBBZGQgbGlzdC1zcGVjaWZpYyBtZXRob2RzXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0dmFyIGxpc3QgPSB0dXBsZVsgMiBdLFxuXHRcdFx0XHRzdGF0ZVN0cmluZyA9IHR1cGxlWyA1IF07XG5cblx0XHRcdC8vIHByb21pc2UucHJvZ3Jlc3MgPSBsaXN0LmFkZFxuXHRcdFx0Ly8gcHJvbWlzZS5kb25lID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZmFpbCA9IGxpc3QuYWRkXG5cdFx0XHRwcm9taXNlWyB0dXBsZVsgMSBdIF0gPSBsaXN0LmFkZDtcblxuXHRcdFx0Ly8gSGFuZGxlIHN0YXRlXG5cdFx0XHRpZiAoIHN0YXRlU3RyaW5nICkge1xuXHRcdFx0XHRsaXN0LmFkZChcblx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gc3RhdGUgPSBcInJlc29sdmVkXCIgKGkuZS4sIGZ1bGZpbGxlZClcblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZWplY3RlZFwiXG5cdFx0XHRcdFx0XHRzdGF0ZSA9IHN0YXRlU3RyaW5nO1xuXHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMiBdLmRpc2FibGUsXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDMgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfY2FsbGJhY2tzLmxvY2tcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMiBdLmxvY2ssXG5cblx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5sb2NrXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIHByb2dyZXNzX2hhbmRsZXJzLmZpcmVcblx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5maXJlXG5cdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5maXJlXG5cdFx0XHRsaXN0LmFkZCggdHVwbGVbIDMgXS5maXJlICk7XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5ub3RpZnlXaXRoKC4uLikgfVxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZXNvbHZlV2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdCA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZWplY3RXaXRoKC4uLikgfVxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gdW5kZWZpbmVkIDogdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmVXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0Ly8gZGVmZXJyZWQucmVqZWN0V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSA9IGxpc3QuZmlyZVdpdGg7XG5cdFx0fSApO1xuXG5cdFx0Ly8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlXG5cdFx0cHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApO1xuXG5cdFx0Ly8gQ2FsbCBnaXZlbiBmdW5jIGlmIGFueVxuXHRcdGlmICggZnVuYyApIHtcblx0XHRcdGZ1bmMuY2FsbCggZGVmZXJyZWQsIGRlZmVycmVkICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsIGRvbmUhXG5cdFx0cmV0dXJuIGRlZmVycmVkO1xuXHR9LFxuXG5cdC8vIERlZmVycmVkIGhlbHBlclxuXHR3aGVuOiBmdW5jdGlvbiggc2luZ2xlVmFsdWUgKSB7XG5cdFx0dmFyXG5cblx0XHRcdC8vIGNvdW50IG9mIHVuY29tcGxldGVkIHN1Ym9yZGluYXRlc1xuXHRcdFx0cmVtYWluaW5nID0gYXJndW1lbnRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gY291bnQgb2YgdW5wcm9jZXNzZWQgYXJndW1lbnRzXG5cdFx0XHRpID0gcmVtYWluaW5nLFxuXG5cdFx0XHQvLyBzdWJvcmRpbmF0ZSBmdWxmaWxsbWVudCBkYXRhXG5cdFx0XHRyZXNvbHZlQ29udGV4dHMgPSBBcnJheSggaSApLFxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxuXG5cdFx0XHQvLyB0aGUgbWFzdGVyIERlZmVycmVkXG5cdFx0XHRtYXN0ZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0bWFzdGVyLnJlc29sdmVXaXRoKCByZXNvbHZlQ29udGV4dHMsIHJlc29sdmVWYWx1ZXMgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXG5cdFx0Ly8gU2luZ2xlLSBhbmQgZW1wdHkgYXJndW1lbnRzIGFyZSBhZG9wdGVkIGxpa2UgUHJvbWlzZS5yZXNvbHZlXG5cdFx0aWYgKCByZW1haW5pbmcgPD0gMSApIHtcblx0XHRcdGFkb3B0VmFsdWUoIHNpbmdsZVZhbHVlLCBtYXN0ZXIuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgbWFzdGVyLnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIG1hc3Rlci5zdGF0ZSgpID09PSBcInBlbmRpbmdcIiB8fFxuXHRcdFx0XHRpc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgcmVzb2x2ZVZhbHVlc1sgaSBdLnRoZW4gKSApIHtcblxuXHRcdFx0XHRyZXR1cm4gbWFzdGVyLnRoZW4oKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBNdWx0aXBsZSBhcmd1bWVudHMgYXJlIGFnZ3JlZ2F0ZWQgbGlrZSBQcm9taXNlLmFsbCBhcnJheSBlbGVtZW50c1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggcmVzb2x2ZVZhbHVlc1sgaSBdLCB1cGRhdGVGdW5jKCBpICksIG1hc3Rlci5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbWFzdGVyLnByb21pc2UoKTtcblx0fVxufSApO1xuXG5cbi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUgYSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LFxuLy8gd2FybiBhYm91dCB0aGVtIEFTQVAgcmF0aGVyIHRoYW4gc3dhbGxvd2luZyB0aGVtIGJ5IGRlZmF1bHQuXG52YXIgcmVycm9yTmFtZXMgPSAvXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztcblxualF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgPSBmdW5jdGlvbiggZXJyb3IsIHN0YWNrICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHlcblx0Ly8gQ29uc29sZSBleGlzdHMgd2hlbiBkZXYgdG9vbHMgYXJlIG9wZW4sIHdoaWNoIGNhbiBoYXBwZW4gYXQgYW55IHRpbWVcblx0aWYgKCB3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS53YXJuICYmIGVycm9yICYmIHJlcnJvck5hbWVzLnRlc3QoIGVycm9yLm5hbWUgKSApIHtcblx0XHR3aW5kb3cuY29uc29sZS53YXJuKCBcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7XG5cdH1cbn07XG5cblxuXG5cbmpRdWVyeS5yZWFkeUV4Y2VwdGlvbiA9IGZ1bmN0aW9uKCBlcnJvciApIHtcblx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdHRocm93IGVycm9yO1xuXHR9ICk7XG59O1xuXG5cblxuXG4vLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHlcbnZhciByZWFkeUxpc3QgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxualF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkge1xuXG5cdHJlYWR5TGlzdFxuXHRcdC50aGVuKCBmbiApXG5cblx0XHQvLyBXcmFwIGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGxvb2t1cFxuXHRcdC8vIGhhcHBlbnMgYXQgdGhlIHRpbWUgb2YgZXJyb3IgaGFuZGxpbmcgaW5zdGVhZCBvZiBjYWxsYmFja1xuXHRcdC8vIHJlZ2lzdHJhdGlvbi5cblx0XHQuY2F0Y2goIGZ1bmN0aW9uKCBlcnJvciApIHtcblx0XHRcdGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiggZXJyb3IgKTtcblx0XHR9ICk7XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cblx0aXNSZWFkeTogZmFsc2UsXG5cblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxuXHQvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSAjNjc4MVxuXHRyZWFkeVdhaXQ6IDEsXG5cblx0Ly8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XG5cblx0XHQvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBob2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5XG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XG5cdFx0alF1ZXJ5LmlzUmVhZHkgPSB0cnVlO1xuXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcblx0XHRpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5yZWFkeS50aGVuID0gcmVhZHlMaXN0LnRoZW47XG5cbi8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblx0alF1ZXJ5LnJlYWR5KCk7XG59XG5cbi8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXG4vLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxyZWFkeSBvY2N1cnJlZC5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDEwIG9ubHlcbi8vIE9sZGVyIElFIHNvbWV0aW1lcyBzaWduYWxzIFwiaW50ZXJhY3RpdmVcIiB0b28gc29vblxuaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcblx0KCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XG5cblx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxufSBlbHNlIHtcblxuXHQvLyBVc2UgdGhlIGhhbmR5IGV2ZW50IGNhbGxiYWNrXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblxuXHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xufVxuXG5cblxuXG4vLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb25cbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGVsZW1zLmxlbmd0aCxcblx0XHRidWxrID0ga2V5ID09IG51bGw7XG5cblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xuXHRpZiAoIHRvVHlwZSgga2V5ICkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblx0XHRmb3IgKCBpIGluIGtleSApIHtcblx0XHRcdGFjY2VzcyggZWxlbXMsIGZuLCBpLCBrZXlbIGkgXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApO1xuXHRcdH1cblxuXHQvLyBTZXRzIG9uZSB2YWx1ZVxuXHR9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cblx0XHRpZiAoICFpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmF3ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGJ1bGsgKSB7XG5cblx0XHRcdC8vIEJ1bGsgb3BlcmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldFxuXHRcdFx0aWYgKCByYXcgKSB7XG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xuXHRcdFx0XHRmbiA9IG51bGw7XG5cblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1bGsgPSBmbjtcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gYnVsay5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdGZuKFxuXHRcdFx0XHRcdGVsZW1zWyBpIF0sIGtleSwgcmF3ID9cblx0XHRcdFx0XHR2YWx1ZSA6XG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIGNoYWluYWJsZSApIHtcblx0XHRyZXR1cm4gZWxlbXM7XG5cdH1cblxuXHQvLyBHZXRzXG5cdGlmICggYnVsayApIHtcblx0XHRyZXR1cm4gZm4uY2FsbCggZWxlbXMgKTtcblx0fVxuXG5cdHJldHVybiBsZW4gPyBmbiggZWxlbXNbIDAgXSwga2V5ICkgOiBlbXB0eUdldDtcbn07XG5cblxuLy8gTWF0Y2hlcyBkYXNoZWQgc3RyaW5nIGZvciBjYW1lbGl6aW5nXG52YXIgcm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFthLXpdKS9nO1xuXG4vLyBVc2VkIGJ5IGNhbWVsQ2FzZSBhcyBjYWxsYmFjayB0byByZXBsYWNlKClcbmZ1bmN0aW9uIGZjYW1lbENhc2UoIGFsbCwgbGV0dGVyICkge1xuXHRyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8vIENvbnZlcnQgZGFzaGVkIHRvIGNhbWVsQ2FzZTsgdXNlZCBieSB0aGUgY3NzIGFuZCBkYXRhIG1vZHVsZXNcbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTVcbi8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3MilcbmZ1bmN0aW9uIGNhbWVsQ2FzZSggc3RyaW5nICkge1xuXHRyZXR1cm4gc3RyaW5nLnJlcGxhY2UoIHJtc1ByZWZpeCwgXCJtcy1cIiApLnJlcGxhY2UoIHJkYXNoQWxwaGEsIGZjYW1lbENhc2UgKTtcbn1cbnZhciBhY2NlcHREYXRhID0gZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdC8vIEFjY2VwdHMgb25seTpcblx0Ly8gIC0gTm9kZVxuXHQvLyAgICAtIE5vZGUuRUxFTUVOVF9OT0RFXG5cdC8vICAgIC0gTm9kZS5ET0NVTUVOVF9OT0RFXG5cdC8vICAtIE9iamVjdFxuXHQvLyAgICAtIEFueVxuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBEYXRhKCkge1xuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcblxuRGF0YS5wcm90b3R5cGUgPSB7XG5cblx0Y2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHRcdC8vIENoZWNrIGlmIHRoZSBvd25lciBvYmplY3QgYWxyZWFkeSBoYXMgYSBjYWNoZVxuXHRcdHZhciB2YWx1ZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdC8vIElmIG5vdCwgY3JlYXRlIG9uZVxuXHRcdGlmICggIXZhbHVlICkge1xuXHRcdFx0dmFsdWUgPSB7fTtcblxuXHRcdFx0Ly8gV2UgY2FuIGFjY2VwdCBkYXRhIGZvciBub24tZWxlbWVudCBub2RlcyBpbiBtb2Rlcm4gYnJvd3NlcnMsXG5cdFx0XHQvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlICM4MzM1LlxuXHRcdFx0Ly8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuXG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIG93bmVyICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgaXQgaXMgYSBub2RlIHVubGlrZWx5IHRvIGJlIHN0cmluZ2lmeS1lZCBvciBsb29wZWQgb3ZlclxuXHRcdFx0XHQvLyB1c2UgcGxhaW4gYXNzaWdubWVudFxuXHRcdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHZhbHVlO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBzZWN1cmUgaXQgaW4gYSBub24tZW51bWVyYWJsZSBwcm9wZXJ0eVxuXHRcdFx0XHQvLyBjb25maWd1cmFibGUgbXVzdCBiZSB0cnVlIHRvIGFsbG93IHRoZSBwcm9wZXJ0eSB0byBiZVxuXHRcdFx0XHQvLyBkZWxldGVkIHdoZW4gZGF0YSBpcyByZW1vdmVkXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBvd25lciwgdGhpcy5leHBhbmRvLCB7XG5cdFx0XHRcdFx0XHR2YWx1ZTogdmFsdWUsXG5cdFx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWVcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsdWU7XG5cdH0sXG5cdHNldDogZnVuY3Rpb24oIG93bmVyLCBkYXRhLCB2YWx1ZSApIHtcblx0XHR2YXIgcHJvcCxcblx0XHRcdGNhY2hlID0gdGhpcy5jYWNoZSggb3duZXIgKTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwga2V5LCB2YWx1ZSBdIGFyZ3Ncblx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIGRhdGEgKSBdID0gdmFsdWU7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIHsgcHJvcGVydGllcyB9IF0gYXJnc1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIENvcHkgdGhlIHByb3BlcnRpZXMgb25lLWJ5LW9uZSB0byB0aGUgY2FjaGUgb2JqZWN0XG5cdFx0XHRmb3IgKCBwcm9wIGluIGRhdGEgKSB7XG5cdFx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIHByb3AgKSBdID0gZGF0YVsgcHJvcCBdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gY2FjaGU7XG5cdH0sXG5cdGdldDogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0cmV0dXJuIGtleSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMuY2FjaGUoIG93bmVyICkgOlxuXG5cdFx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gJiYgb3duZXJbIHRoaXMuZXhwYW5kbyBdWyBjYW1lbENhc2UoIGtleSApIF07XG5cdH0sXG5cdGFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBObyBrZXkgd2FzIHNwZWNpZmllZFxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxuXHRcdC8vXG5cdFx0Ly8gVGFrZSB0aGUgXCJyZWFkXCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdFxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcblx0XHQvL1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0KCAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSBcInN0cmluZ1wiICkgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApICkge1xuXG5cdFx0XHRyZXR1cm4gdGhpcy5nZXQoIG93bmVyLCBrZXkgKTtcblx0XHR9XG5cblx0XHQvLyBXaGVuIHRoZSBrZXkgaXMgbm90IGEgc3RyaW5nLCBvciBib3RoIGEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vIGFyZSBzcGVjaWZpZWQsIHNldCBvciBleHRlbmQgKGV4aXN0aW5nIG9iamVjdHMpIHdpdGggZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBBbiBvYmplY3Qgb2YgcHJvcGVydGllc1xuXHRcdC8vICAgMi4gQSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly9cblx0XHR0aGlzLnNldCggb3duZXIsIGtleSwgdmFsdWUgKTtcblxuXHRcdC8vIFNpbmNlIHRoZSBcInNldFwiIHBhdGggY2FuIGhhdmUgdHdvIHBvc3NpYmxlIGVudHJ5IHBvaW50c1xuXHRcdC8vIHJldHVybiB0aGUgZXhwZWN0ZWQgZGF0YSBiYXNlZCBvbiB3aGljaCBwYXRoIHdhcyB0YWtlblsqXVxuXHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiBrZXk7XG5cdH0sXG5cdHJlbW92ZTogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0dmFyIGksXG5cdFx0XHRjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdGlmICggY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIGtleSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgb2Yga2V5c1xuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCBrZXkgKSApIHtcblxuXHRcdFx0XHQvLyBJZiBrZXkgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLlxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc2V0IGNhbWVsQ2FzZSBrZXlzLCBzbyByZW1vdmUgdGhhdC5cblx0XHRcdFx0a2V5ID0ga2V5Lm1hcCggY2FtZWxDYXNlICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRrZXkgPSBjYW1lbENhc2UoIGtleSApO1xuXG5cdFx0XHRcdC8vIElmIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHMsIHVzZSBpdC5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBjcmVhdGUgYW4gYXJyYXkgYnkgbWF0Y2hpbmcgbm9uLXdoaXRlc3BhY2Vcblx0XHRcdFx0a2V5ID0ga2V5IGluIGNhY2hlID9cblx0XHRcdFx0XHRbIGtleSBdIDpcblx0XHRcdFx0XHQoIGtleS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdICk7XG5cdFx0XHR9XG5cblx0XHRcdGkgPSBrZXkubGVuZ3RoO1xuXG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlbIGkgXSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSB0aGUgZXhwYW5kbyBpZiB0aGVyZSdzIG5vIG1vcmUgZGF0YVxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICkgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDVcblx0XHRcdC8vIFdlYmtpdCAmIEJsaW5rIHBlcmZvcm1hbmNlIHN1ZmZlcnMgd2hlbiBkZWxldGluZyBwcm9wZXJ0aWVzXG5cdFx0XHQvLyBmcm9tIERPTSBub2Rlcywgc28gc2V0IHRvIHVuZGVmaW5lZCBpbnN0ZWFkXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zNzg2MDcgKGJ1ZyByZXN0cmljdGVkKVxuXHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVsZXRlIG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBvd25lciApIHtcblx0XHR2YXIgY2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0cmV0dXJuIGNhY2hlICE9PSB1bmRlZmluZWQgJiYgIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApO1xuXHR9XG59O1xudmFyIGRhdGFQcml2ID0gbmV3IERhdGEoKTtcblxudmFyIGRhdGFVc2VyID0gbmV3IERhdGEoKTtcblxuXG5cbi8vXHRJbXBsZW1lbnRhdGlvbiBTdW1tYXJ5XG4vL1xuLy9cdDEuIEVuZm9yY2UgQVBJIHN1cmZhY2UgYW5kIHNlbWFudGljIGNvbXBhdGliaWxpdHkgd2l0aCAxLjkueCBicmFuY2hcbi8vXHQyLiBJbXByb3ZlIHRoZSBtb2R1bGUncyBtYWludGFpbmFiaWxpdHkgYnkgcmVkdWNpbmcgdGhlIHN0b3JhZ2Vcbi8vXHRcdHBhdGhzIHRvIGEgc2luZ2xlIG1lY2hhbmlzbS5cbi8vXHQzLiBVc2UgdGhlIHNhbWUgc2luZ2xlIG1lY2hhbmlzbSB0byBzdXBwb3J0IFwicHJpdmF0ZVwiIGFuZCBcInVzZXJcIiBkYXRhLlxuLy9cdDQuIF9OZXZlcl8gZXhwb3NlIFwicHJpdmF0ZVwiIGRhdGEgdG8gdXNlciBjb2RlIChUT0RPOiBEcm9wIF9kYXRhLCBfcmVtb3ZlRGF0YSlcbi8vXHQ1LiBBdm9pZCBleHBvc2luZyBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzIG9uIHVzZXIgb2JqZWN0cyAoZWcuIGV4cGFuZG8gcHJvcGVydGllcylcbi8vXHQ2LiBQcm92aWRlIGEgY2xlYXIgcGF0aCBmb3IgaW1wbGVtZW50YXRpb24gdXBncmFkZSB0byBXZWFrTWFwIGluIDIwMTRcblxudmFyIHJicmFjZSA9IC9eKD86XFx7W1xcd1xcV10qXFx9fFxcW1tcXHdcXFddKlxcXSkkLyxcblx0cm11bHRpRGFzaCA9IC9bQS1aXS9nO1xuXG5mdW5jdGlvbiBnZXREYXRhKCBkYXRhICkge1xuXHRpZiAoIGRhdGEgPT09IFwidHJ1ZVwiICkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcImZhbHNlXCIgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcIm51bGxcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIE9ubHkgY29udmVydCB0byBhIG51bWJlciBpZiBpdCBkb2Vzbid0IGNoYW5nZSB0aGUgc3RyaW5nXG5cdGlmICggZGF0YSA9PT0gK2RhdGEgKyBcIlwiICkge1xuXHRcdHJldHVybiArZGF0YTtcblx0fVxuXG5cdGlmICggcmJyYWNlLnRlc3QoIGRhdGEgKSApIHtcblx0XHRyZXR1cm4gSlNPTi5wYXJzZSggZGF0YSApO1xuXHR9XG5cblx0cmV0dXJuIGRhdGE7XG59XG5cbmZ1bmN0aW9uIGRhdGFBdHRyKCBlbGVtLCBrZXksIGRhdGEgKSB7XG5cdHZhciBuYW1lO1xuXG5cdC8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGludGVybmFsbHksIHRyeSB0byBmZXRjaCBhbnlcblx0Ly8gZGF0YSBmcm9tIHRoZSBIVE1MNSBkYXRhLSogYXR0cmlidXRlXG5cdGlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0bmFtZSA9IFwiZGF0YS1cIiArIGtleS5yZXBsYWNlKCBybXVsdGlEYXNoLCBcIi0kJlwiICkudG9Mb3dlckNhc2UoKTtcblx0XHRkYXRhID0gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKTtcblxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRkYXRhID0gZ2V0RGF0YSggZGF0YSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgd2Ugc2V0IHRoZSBkYXRhIHNvIGl0IGlzbid0IGNoYW5nZWQgbGF0ZXJcblx0XHRcdGRhdGFVc2VyLnNldCggZWxlbSwga2V5LCBkYXRhICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBkYXRhO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5oYXNEYXRhKCBlbGVtICkgfHwgZGF0YVByaXYuaGFzRGF0YSggZWxlbSApO1xuXHR9LFxuXG5cdGRhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhVXNlci5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fSxcblxuXHQvLyBUT0RPOiBOb3cgdGhhdCBhbGwgY2FsbHMgdG8gX2RhdGEgYW5kIF9yZW1vdmVEYXRhIGhhdmUgYmVlbiByZXBsYWNlZFxuXHQvLyB3aXRoIGRpcmVjdCBjYWxscyB0byBkYXRhUHJpdiBtZXRob2RzLCB0aGVzZSBjYW4gYmUgZGVwcmVjYXRlZC5cblx0X2RhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRfcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHR2YXIgaSwgbmFtZSwgZGF0YSxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRhdHRycyA9IGVsZW0gJiYgZWxlbS5hdHRyaWJ1dGVzO1xuXG5cdFx0Ly8gR2V0cyBhbGwgdmFsdWVzXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdGhpcy5sZW5ndGggKSB7XG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0gKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgIWRhdGFQcml2LmdldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiApICkge1xuXHRcdFx0XHRcdGkgPSBhdHRycy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdFx0XHRcdC8vIFRoZSBhdHRycyBlbGVtZW50cyBjYW4gYmUgbnVsbCAoIzE0ODk0KVxuXHRcdFx0XHRcdFx0aWYgKCBhdHRyc1sgaSBdICkge1xuXHRcdFx0XHRcdFx0XHRuYW1lID0gYXR0cnNbIGkgXS5uYW1lO1xuXHRcdFx0XHRcdFx0XHRpZiAoIG5hbWUuaW5kZXhPZiggXCJkYXRhLVwiICkgPT09IDAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZSA9IGNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7XG5cdFx0XHRcdFx0XHRcdFx0ZGF0YUF0dHIoIGVsZW0sIG5hbWUsIGRhdGFbIG5hbWUgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5ICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGRhdGE7XG5cblx0XHRcdC8vIFRoZSBjYWxsaW5nIGpRdWVyeSBvYmplY3QgKGVsZW1lbnQgbWF0Y2hlcykgaXMgbm90IGVtcHR5XG5cdFx0XHQvLyAoYW5kIHRoZXJlZm9yZSBoYXMgYW4gZWxlbWVudCBhcHBlYXJzIGF0IHRoaXNbIDAgXSkgYW5kIHRoZVxuXHRcdFx0Ly8gYHZhbHVlYCBwYXJhbWV0ZXIgd2FzIG5vdCB1bmRlZmluZWQuIEFuIGVtcHR5IGpRdWVyeSBvYmplY3Rcblx0XHRcdC8vIHdpbGwgcmVzdWx0IGluIGB1bmRlZmluZWRgIGZvciBlbGVtID0gdGhpc1sgMCBdIHdoaWNoIHdpbGxcblx0XHRcdC8vIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhbiBhdHRlbXB0IHRvIHJlYWQgYSBkYXRhIGNhY2hlIGlzIG1hZGUuXG5cdFx0XHRpZiAoIGVsZW0gJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIGdldCBkYXRhIGZyb20gdGhlIGNhY2hlXG5cdFx0XHRcdC8vIFRoZSBrZXkgd2lsbCBhbHdheXMgYmUgY2FtZWxDYXNlZCBpbiBEYXRhXG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gXCJkaXNjb3ZlclwiIHRoZSBkYXRhIGluXG5cdFx0XHRcdC8vIEhUTUw1IGN1c3RvbSBkYXRhLSogYXR0cnNcblx0XHRcdFx0ZGF0YSA9IGRhdGFBdHRyKCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBXZSB0cmllZCByZWFsbHkgaGFyZCwgYnV0IHRoZSBkYXRhIGRvZXNuJ3QgZXhpc3QuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IHRoZSBkYXRhLi4uXG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzdG9yZSB0aGUgY2FtZWxDYXNlZCBrZXlcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXksIHZhbHVlICk7XG5cdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxLCBudWxsLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRhdGFVc2VyLnJlbW92ZSggdGhpcywga2V5ICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHF1ZXVlO1xuXG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcblx0XHRcdHF1ZXVlID0gZGF0YVByaXYuZ2V0KCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcblx0XHRcdGlmICggZGF0YSApIHtcblx0XHRcdFx0aWYgKCAhcXVldWUgfHwgQXJyYXkuaXNBcnJheSggZGF0YSApICkge1xuXHRcdFx0XHRcdHF1ZXVlID0gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCB0eXBlLCBqUXVlcnkubWFrZUFycmF5KCBkYXRhICkgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBkYXRhICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBxdWV1ZSB8fCBbXTtcblx0XHR9XG5cdH0sXG5cblx0ZGVxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCBlbGVtLCB0eXBlICksXG5cdFx0XHRzdGFydExlbmd0aCA9IHF1ZXVlLmxlbmd0aCxcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKSxcblx0XHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCB0eXBlICksXG5cdFx0XHRuZXh0ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCBlbGVtLCB0eXBlICk7XG5cdFx0XHR9O1xuXG5cdFx0Ly8gSWYgdGhlIGZ4IHF1ZXVlIGlzIGRlcXVldWVkLCBhbHdheXMgcmVtb3ZlIHRoZSBwcm9ncmVzcyBzZW50aW5lbFxuXHRcdGlmICggZm4gPT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpO1xuXHRcdFx0c3RhcnRMZW5ndGgtLTtcblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXG5cdFx0XHQvLyBBZGQgYSBwcm9ncmVzcyBzZW50aW5lbCB0byBwcmV2ZW50IHRoZSBmeCBxdWV1ZSBmcm9tIGJlaW5nXG5cdFx0XHQvLyBhdXRvbWF0aWNhbGx5IGRlcXVldWVkXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiApIHtcblx0XHRcdFx0cXVldWUudW5zaGlmdCggXCJpbnByb2dyZXNzXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2xlYXIgdXAgdGhlIGxhc3QgcXVldWUgc3RvcCBmdW5jdGlvblxuXHRcdFx0ZGVsZXRlIGhvb2tzLnN0b3A7XG5cdFx0XHRmbi5jYWxsKCBlbGVtLCBuZXh0LCBob29rcyApO1xuXHRcdH1cblxuXHRcdGlmICggIXN0YXJ0TGVuZ3RoICYmIGhvb2tzICkge1xuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdH1cblx0fSxcblxuXHQvLyBOb3QgcHVibGljIC0gZ2VuZXJhdGUgYSBxdWV1ZUhvb2tzIG9iamVjdCwgb3IgcmV0dXJuIHRoZSBjdXJyZW50IG9uZVxuXHRfcXVldWVIb29rczogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dmFyIGtleSA9IHR5cGUgKyBcInF1ZXVlSG9va3NcIjtcblx0XHRyZXR1cm4gZGF0YVByaXYuZ2V0KCBlbGVtLCBrZXkgKSB8fCBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIGtleSwge1xuXHRcdFx0ZW1wdHk6IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLmFkZCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgWyB0eXBlICsgXCJxdWV1ZVwiLCBrZXkgXSApO1xuXHRcdFx0fSApXG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBzZXR0ZXIgPSAyO1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGRhdGEgPSB0eXBlO1xuXHRcdFx0dHlwZSA9IFwiZnhcIjtcblx0XHRcdHNldHRlci0tO1xuXHRcdH1cblxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucXVldWUoIHRoaXNbIDAgXSwgdHlwZSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBkYXRhID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcyA6XG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTtcblxuXHRcdFx0XHQvLyBFbnN1cmUgYSBob29rcyBmb3IgdGhpcyBxdWV1ZVxuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiAmJiBxdWV1ZVsgMCBdICE9PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdH0sXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHR9ICk7XG5cdH0sXG5cdGNsZWFyUXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0fSxcblxuXHQvLyBHZXQgYSBwcm9taXNlIHJlc29sdmVkIHdoZW4gcXVldWVzIG9mIGEgY2VydGFpbiB0eXBlXG5cdC8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBkZWZhdWx0KVxuXHRwcm9taXNlOiBmdW5jdGlvbiggdHlwZSwgb2JqICkge1xuXHRcdHZhciB0bXAsXG5cdFx0XHRjb3VudCA9IDEsXG5cdFx0XHRkZWZlciA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXHRcdFx0ZWxlbWVudHMgPSB0aGlzLFxuXHRcdFx0aSA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0cmVzb2x2ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoICEoIC0tY291bnQgKSApIHtcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxlbWVudHMgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdG9iaiA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRtcCA9IGRhdGFQcml2LmdldCggZWxlbWVudHNbIGkgXSwgdHlwZSArIFwicXVldWVIb29rc1wiICk7XG5cdFx0XHRpZiAoIHRtcCAmJiB0bXAuZW1wdHkgKSB7XG5cdFx0XHRcdGNvdW50Kys7XG5cdFx0XHRcdHRtcC5lbXB0eS5hZGQoIHJlc29sdmUgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmVzb2x2ZSgpO1xuXHRcdHJldHVybiBkZWZlci5wcm9taXNlKCBvYmogKTtcblx0fVxufSApO1xudmFyIHBudW0gPSAoIC9bKy1dPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdWystXT9cXGQrfCkvICkuc291cmNlO1xuXG52YXIgcmNzc051bSA9IG5ldyBSZWdFeHAoIFwiXig/OihbKy1dKT18KShcIiArIHBudW0gKyBcIikoW2EteiVdKikkXCIsIFwiaVwiICk7XG5cblxudmFyIGNzc0V4cGFuZCA9IFsgXCJUb3BcIiwgXCJSaWdodFwiLCBcIkJvdHRvbVwiLCBcIkxlZnRcIiBdO1xuXG52YXIgaXNIaWRkZW5XaXRoaW5UcmVlID0gZnVuY3Rpb24oIGVsZW0sIGVsICkge1xuXG5cdFx0Ly8gaXNIaWRkZW5XaXRoaW5UcmVlIG1pZ2h0IGJlIGNhbGxlZCBmcm9tIGpRdWVyeSNmaWx0ZXIgZnVuY3Rpb247XG5cdFx0Ly8gaW4gdGhhdCBjYXNlLCBlbGVtZW50IHdpbGwgYmUgc2Vjb25kIGFyZ3VtZW50XG5cdFx0ZWxlbSA9IGVsIHx8IGVsZW07XG5cblx0XHQvLyBJbmxpbmUgc3R5bGUgdHJ1bXBzIGFsbFxuXHRcdHJldHVybiBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiIHx8XG5cdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiZcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlLCBjaGVjayBjb21wdXRlZCBzdHlsZVxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQzIC0gNDVcblx0XHRcdC8vIERpc2Nvbm5lY3RlZCBlbGVtZW50cyBjYW4gaGF2ZSBjb21wdXRlZCBkaXNwbGF5OiBub25lLCBzbyBmaXJzdCBjb25maXJtIHRoYXQgZWxlbSBpc1xuXHRcdFx0Ly8gaW4gdGhlIGRvY3VtZW50LlxuXHRcdFx0alF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSAmJlxuXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApID09PSBcIm5vbmVcIjtcblx0fTtcblxudmFyIHN3YXAgPSBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2ssIGFyZ3MgKSB7XG5cdHZhciByZXQsIG5hbWUsXG5cdFx0b2xkID0ge307XG5cblx0Ly8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRvbGRbIG5hbWUgXSA9IGVsZW0uc3R5bGVbIG5hbWUgXTtcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvcHRpb25zWyBuYW1lIF07XG5cdH1cblxuXHRyZXQgPSBjYWxsYmFjay5hcHBseSggZWxlbSwgYXJncyB8fCBbXSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG5cblxuZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHtcblx0dmFyIGFkanVzdGVkLCBzY2FsZSxcblx0XHRtYXhJdGVyYXRpb25zID0gMjAsXG5cdFx0Y3VycmVudFZhbHVlID0gdHdlZW4gP1xuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiB0d2Vlbi5jdXIoKTtcblx0XHRcdH0gOlxuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wLCBcIlwiICk7XG5cdFx0XHR9LFxuXHRcdGluaXRpYWwgPSBjdXJyZW50VmFsdWUoKSxcblx0XHR1bml0ID0gdmFsdWVQYXJ0cyAmJiB2YWx1ZVBhcnRzWyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICksXG5cblx0XHQvLyBTdGFydGluZyB2YWx1ZSBjb21wdXRhdGlvbiBpcyByZXF1aXJlZCBmb3IgcG90ZW50aWFsIHVuaXQgbWlzbWF0Y2hlc1xuXHRcdGluaXRpYWxJblVuaXQgPSAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSB8fCB1bml0ICE9PSBcInB4XCIgJiYgK2luaXRpYWwgKSAmJlxuXHRcdFx0cmNzc051bS5leGVjKCBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wICkgKTtcblxuXHRpZiAoIGluaXRpYWxJblVuaXQgJiYgaW5pdGlhbEluVW5pdFsgMyBdICE9PSB1bml0ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdFx0Ly8gSGFsdmUgdGhlIGl0ZXJhdGlvbiB0YXJnZXQgdmFsdWUgdG8gcHJldmVudCBpbnRlcmZlcmVuY2UgZnJvbSBDU1MgdXBwZXIgYm91bmRzIChnaC0yMTQ0KVxuXHRcdGluaXRpYWwgPSBpbml0aWFsIC8gMjtcblxuXHRcdC8vIFRydXN0IHVuaXRzIHJlcG9ydGVkIGJ5IGpRdWVyeS5jc3Ncblx0XHR1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07XG5cblx0XHQvLyBJdGVyYXRpdmVseSBhcHByb3hpbWF0ZSBmcm9tIGEgbm9uemVybyBzdGFydGluZyBwb2ludFxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxO1xuXG5cdFx0d2hpbGUgKCBtYXhJdGVyYXRpb25zLS0gKSB7XG5cblx0XHRcdC8vIEV2YWx1YXRlIGFuZCB1cGRhdGUgb3VyIGJlc3QgZ3Vlc3MgKGRvdWJsaW5nIGd1ZXNzZXMgdGhhdCB6ZXJvIG91dCkuXG5cdFx0XHQvLyBGaW5pc2ggaWYgdGhlIHNjYWxlIGVxdWFscyBvciBjcm9zc2VzIDEgKG1ha2luZyB0aGUgb2xkKm5ldyBwcm9kdWN0IG5vbi1wb3NpdGl2ZSkuXG5cdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XG5cdFx0XHRpZiAoICggMSAtIHNjYWxlICkgKiAoIDEgLSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsIHx8IDAuNSApICkgPD0gMCApIHtcblx0XHRcdFx0bWF4SXRlcmF0aW9ucyA9IDA7XG5cdFx0XHR9XG5cdFx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAvIHNjYWxlO1xuXG5cdFx0fVxuXG5cdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgKiAyO1xuXHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB3ZSB1cGRhdGUgdGhlIHR3ZWVuIHByb3BlcnRpZXMgbGF0ZXIgb25cblx0XHR2YWx1ZVBhcnRzID0gdmFsdWVQYXJ0cyB8fCBbXTtcblx0fVxuXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWxJblVuaXQgfHwgK2luaXRpYWwgfHwgMDtcblxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxuXHRcdGFkanVzdGVkID0gdmFsdWVQYXJ0c1sgMSBdID9cblx0XHRcdGluaXRpYWxJblVuaXQgKyAoIHZhbHVlUGFydHNbIDEgXSArIDEgKSAqIHZhbHVlUGFydHNbIDIgXSA6XG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xuXHRcdGlmICggdHdlZW4gKSB7XG5cdFx0XHR0d2Vlbi51bml0ID0gdW5pdDtcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcblx0XHRcdHR3ZWVuLmVuZCA9IGFkanVzdGVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gYWRqdXN0ZWQ7XG59XG5cblxudmFyIGRlZmF1bHREaXNwbGF5TWFwID0ge307XG5cbmZ1bmN0aW9uIGdldERlZmF1bHREaXNwbGF5KCBlbGVtICkge1xuXHR2YXIgdGVtcCxcblx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQsXG5cdFx0bm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLFxuXHRcdGRpc3BsYXkgPSBkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXTtcblxuXHRpZiAoIGRpc3BsYXkgKSB7XG5cdFx0cmV0dXJuIGRpc3BsYXk7XG5cdH1cblxuXHR0ZW1wID0gZG9jLmJvZHkuYXBwZW5kQ2hpbGQoIGRvYy5jcmVhdGVFbGVtZW50KCBub2RlTmFtZSApICk7XG5cdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCB0ZW1wLCBcImRpc3BsYXlcIiApO1xuXG5cdHRlbXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggdGVtcCApO1xuXG5cdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0ZGlzcGxheSA9IFwiYmxvY2tcIjtcblx0fVxuXHRkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7XG5cblx0cmV0dXJuIGRpc3BsYXk7XG59XG5cbmZ1bmN0aW9uIHNob3dIaWRlKCBlbGVtZW50cywgc2hvdyApIHtcblx0dmFyIGRpc3BsYXksIGVsZW0sXG5cdFx0dmFsdWVzID0gW10sXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDtcblxuXHQvLyBEZXRlcm1pbmUgbmV3IGRpc3BsYXkgdmFsdWUgZm9yIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBjaGFuZ2Vcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRlbGVtID0gZWxlbWVudHNbIGluZGV4IF07XG5cdFx0aWYgKCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7XG5cdFx0aWYgKCBzaG93ICkge1xuXG5cdFx0XHQvLyBTaW5jZSB3ZSBmb3JjZSB2aXNpYmlsaXR5IHVwb24gY2FzY2FkZS1oaWRkZW4gZWxlbWVudHMsIGFuIGltbWVkaWF0ZSAoYW5kIHNsb3cpXG5cdFx0XHQvLyBjaGVjayBpcyByZXF1aXJlZCBpbiB0aGlzIGZpcnN0IGxvb3AgdW5sZXNzIHdlIGhhdmUgYSBub25lbXB0eSBkaXNwbGF5IHZhbHVlIChlaXRoZXJcblx0XHRcdC8vIGlubGluZSBvciBhYm91dC10by1iZS1yZXN0b3JlZClcblx0XHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKSB8fCBudWxsO1xuXHRcdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gKSB7XG5cdFx0XHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICkgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGdldERlZmF1bHREaXNwbGF5KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICggZGlzcGxheSAhPT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IFwibm9uZVwiO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHdoYXQgd2UncmUgb3ZlcndyaXRpbmdcblx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImRpc3BsYXlcIiwgZGlzcGxheSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcCB0byBhdm9pZCBjb25zdGFudCByZWZsb3dcblx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRpZiAoIHZhbHVlc1sgaW5kZXggXSAhPSBudWxsICkge1xuXHRcdFx0ZWxlbWVudHNbIGluZGV4IF0uc3R5bGUuZGlzcGxheSA9IHZhbHVlc1sgaW5kZXggXTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudHM7XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzLCB0cnVlICk7XG5cdH0sXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcyApO1xuXHR9LFxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcblx0XHRpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBpc0hpZGRlbldpdGhpblRyZWUoIHRoaXMgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuc2hvdygpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xudmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNoZWNrYm94fHJhZGlvKSQvaSApO1xuXG52YXIgcnRhZ05hbWUgPSAoIC88KFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKykvaSApO1xuXG52YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxebW9kdWxlJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kgKTtcblxuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRvcHRpb246IFsgMSwgXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsIFwiPC9zZWxlY3Q+XCIgXSxcblxuXHQvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZVxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXG5cdC8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBlbGVtZW50cy5cblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHRfZGVmYXVsdDogWyAwLCBcIlwiLCBcIlwiIF1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG53cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb247XG5cbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XG53cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcblxuXG5mdW5jdGlvbiBnZXRBbGwoIGNvbnRleHQsIHRhZyApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFVzZSB0eXBlb2YgdG8gYXZvaWQgemVyby1hcmd1bWVudCBtZXRob2QgaW52b2NhdGlvbiBvbiBob3N0IG9iamVjdHMgKCMxNTE1MSlcblx0dmFyIHJldDtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSBpZiAoIHR5cGVvZiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2Uge1xuXHRcdHJldCA9IFtdO1xuXHR9XG5cblx0aWYgKCB0YWcgPT09IHVuZGVmaW5lZCB8fCB0YWcgJiYgbm9kZU5hbWUoIGNvbnRleHQsIHRhZyApICkge1xuXHRcdHJldHVybiBqUXVlcnkubWVyZ2UoIFsgY29udGV4dCBdLCByZXQgKTtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59XG5cblxuLy8gTWFyayBzY3JpcHRzIGFzIGhhdmluZyBhbHJlYWR5IGJlZW4gZXZhbHVhdGVkXG5mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKCBlbGVtcywgcmVmRWxlbWVudHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRkYXRhUHJpdi5zZXQoXG5cdFx0XHRlbGVtc1sgaSBdLFxuXHRcdFx0XCJnbG9iYWxFdmFsXCIsXG5cdFx0XHQhcmVmRWxlbWVudHMgfHwgZGF0YVByaXYuZ2V0KCByZWZFbGVtZW50c1sgaSBdLCBcImdsb2JhbEV2YWxcIiApXG5cdFx0KTtcblx0fVxufVxuXG5cbnZhciByaHRtbCA9IC88fCYjP1xcdys7LztcblxuZnVuY3Rpb24gYnVpbGRGcmFnbWVudCggZWxlbXMsIGNvbnRleHQsIHNjcmlwdHMsIHNlbGVjdGlvbiwgaWdub3JlZCApIHtcblx0dmFyIGVsZW0sIHRtcCwgdGFnLCB3cmFwLCBjb250YWlucywgaixcblx0XHRmcmFnbWVudCA9IGNvbnRleHQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdG5vZGVzID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1zWyBpIF07XG5cblx0XHRpZiAoIGVsZW0gfHwgZWxlbSA9PT0gMCApIHtcblxuXHRcdFx0Ly8gQWRkIG5vZGVzIGRpcmVjdGx5XG5cdFx0XHRpZiAoIHRvVHlwZSggZWxlbSApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0gXSA6IGVsZW0gKTtcblxuXHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXG5cdFx0XHR9IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkge1xuXHRcdFx0XHRub2Rlcy5wdXNoKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVtICkgKTtcblxuXHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0bXAgPSB0bXAgfHwgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxuXHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XG5cdFx0XHRcdHRtcC5pbm5lckhUTUwgPSB3cmFwWyAxIF0gKyBqUXVlcnkuaHRtbFByZWZpbHRlciggZWxlbSApICsgd3JhcFsgMiBdO1xuXG5cdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxuXHRcdFx0XHRqID0gd3JhcFsgMCBdO1xuXHRcdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgdG1wLmNoaWxkTm9kZXMgKTtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgdG9wLWxldmVsIGNvbnRhaW5lclxuXHRcdFx0XHR0bXAgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKCMxMjM5Milcblx0XHRcdFx0dG1wLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZW1vdmUgd3JhcHBlciBmcm9tIGZyYWdtZW50XG5cdGZyYWdtZW50LnRleHRDb250ZW50ID0gXCJcIjtcblxuXHRpID0gMDtcblx0d2hpbGUgKCAoIGVsZW0gPSBub2Rlc1sgaSsrIF0gKSApIHtcblxuXHRcdC8vIFNraXAgZWxlbWVudHMgYWxyZWFkeSBpbiB0aGUgY29udGV4dCBjb2xsZWN0aW9uICh0cmFjLTQwODcpXG5cdFx0aWYgKCBzZWxlY3Rpb24gJiYgalF1ZXJ5LmluQXJyYXkoIGVsZW0sIHNlbGVjdGlvbiApID4gLTEgKSB7XG5cdFx0XHRpZiAoIGlnbm9yZWQgKSB7XG5cdFx0XHRcdGlnbm9yZWQucHVzaCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Y29udGFpbnMgPSBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xuXG5cdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50XG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBjb250YWlucyApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZnJhZ21lbnQ7XG59XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0Ly8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKCMxMTIxNylcblx0Ly8gU3VwcG9ydDogV2luZG93cyBXZWIgQXBwcyAoV1dBKVxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJyYWRpb1wiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJjaGVja2VkXCIsIFwiY2hlY2tlZFwiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwidFwiICk7XG5cblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgb25seVxuXHQvLyBPbGRlciBXZWJLaXQgZG9lc24ndCBjbG9uZSBjaGVja2VkIHN0YXRlIGNvcnJlY3RseSBpbiBmcmFnbWVudHNcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVsdFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZFxuXHRkaXYuaW5uZXJIVE1MID0gXCI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+XCI7XG5cdHN1cHBvcnQubm9DbG9uZUNoZWNrZWQgPSAhIWRpdi5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlO1xufSApKCk7XG52YXIgZG9jdW1lbnRFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cblxudmFyXG5cdHJrZXlFdmVudCA9IC9ea2V5Lyxcblx0cm1vdXNlRXZlbnQgPSAvXig/Om1vdXNlfHBvaW50ZXJ8Y29udGV4dG1lbnV8ZHJhZ3xkcm9wKXxjbGljay8sXG5cdHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpLztcblxuZnVuY3Rpb24gcmV0dXJuVHJ1ZSgpIHtcblx0cmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHJldHVybkZhbHNlKCkge1xuXHRyZXR1cm4gZmFsc2U7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBTZWUgIzEzMzkzIGZvciBtb3JlIGluZm9cbmZ1bmN0aW9uIHNhZmVBY3RpdmVFbGVtZW50KCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXHR9IGNhdGNoICggZXJyICkgeyB9XG59XG5cbmZ1bmN0aW9uIG9uKCBlbGVtLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCBvbmUgKSB7XG5cdHZhciBvcmlnRm4sIHR5cGU7XG5cblx0Ly8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzXG5cdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gKCB0eXBlcy1PYmplY3QsIHNlbGVjdG9yLCBkYXRhIClcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1PYmplY3QsIGRhdGEgKVxuXHRcdFx0ZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdG9uKCBlbGVtLCB0eXBlLCBzZWxlY3RvciwgZGF0YSwgdHlwZXNbIHR5cGUgXSwgb25lICk7XG5cdFx0fVxuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBkYXRhID09IG51bGwgJiYgZm4gPT0gbnVsbCApIHtcblxuXHRcdC8vICggdHlwZXMsIGZuIClcblx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdGRhdGEgPSBzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0fSBlbHNlIGlmICggZm4gPT0gbnVsbCApIHtcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgc2VsZWN0b3IsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgZGF0YSwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdH0gZWxzZSBpZiAoICFmbiApIHtcblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggb25lID09PSAxICkge1xuXHRcdG9yaWdGbiA9IGZuO1xuXHRcdGZuID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHQvLyBDYW4gdXNlIGFuIGVtcHR5IHNldCwgc2luY2UgZXZlbnQgY29udGFpbnMgdGhlIGluZm9cblx0XHRcdGpRdWVyeSgpLm9mZiggZXZlbnQgKTtcblx0XHRcdHJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH07XG5cblx0XHQvLyBVc2Ugc2FtZSBndWlkIHNvIGNhbGxlciBjYW4gcmVtb3ZlIHVzaW5nIG9yaWdGblxuXHRcdGZuLmd1aWQgPSBvcmlnRm4uZ3VpZCB8fCAoIG9yaWdGbi5ndWlkID0galF1ZXJ5Lmd1aWQrKyApO1xuXHR9XG5cdHJldHVybiBlbGVtLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTtcblx0fSApO1xufVxuXG4vKlxuICogSGVscGVyIGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZXZlbnRzIC0tIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgaW50ZXJmYWNlLlxuICogUHJvcHMgdG8gRGVhbiBFZHdhcmRzJyBhZGRFdmVudCBsaWJyYXJ5IGZvciBtYW55IG9mIHRoZSBpZGVhcy5cbiAqL1xualF1ZXJ5LmV2ZW50ID0ge1xuXG5cdGdsb2JhbDoge30sXG5cblx0YWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkge1xuXG5cdFx0dmFyIGhhbmRsZU9iakluLCBldmVudEhhbmRsZSwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0Ly8gRG9uJ3QgYXR0YWNoIGV2ZW50cyB0byBub0RhdGEgb3IgdGV4dC9jb21tZW50IG5vZGVzIChidXQgYWxsb3cgcGxhaW4gb2JqZWN0cylcblx0XHRpZiAoICFlbGVtRGF0YSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXJcblx0XHRpZiAoIGhhbmRsZXIuaGFuZGxlciApIHtcblx0XHRcdGhhbmRsZU9iakluID0gaGFuZGxlcjtcblx0XHRcdGhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyO1xuXHRcdFx0c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3Rvcjtcblx0XHR9XG5cblx0XHQvLyBFbnN1cmUgdGhhdCBpbnZhbGlkIHNlbGVjdG9ycyB0aHJvdyBleGNlcHRpb25zIGF0IGF0dGFjaCB0aW1lXG5cdFx0Ly8gRXZhbHVhdGUgYWdhaW5zdCBkb2N1bWVudEVsZW1lbnQgaW4gY2FzZSBlbGVtIGlzIGEgbm9uLWVsZW1lbnQgbm9kZSAoZS5nLiwgZG9jdW1lbnQpXG5cdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZG9jdW1lbnRFbGVtZW50LCBzZWxlY3RvciApO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxuXHRcdGlmICggIWhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdGhhbmRsZXIuZ3VpZCA9IGpRdWVyeS5ndWlkKys7XG5cdFx0fVxuXG5cdFx0Ly8gSW5pdCB0aGUgZWxlbWVudCdzIGV2ZW50IHN0cnVjdHVyZSBhbmQgbWFpbiBoYW5kbGVyLCBpZiB0aGlzIGlzIHRoZSBmaXJzdFxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSB7fTtcblx0XHR9XG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xuXHRcdFx0ZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxuXHRcdFx0XHQvLyB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCBhZnRlciBhIHBhZ2UgaGFzIHVubG9hZGVkXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Ly8gSGFuZGxlIG11bHRpcGxlIGV2ZW50cyBzZXBhcmF0ZWQgYnkgYSBzcGFjZVxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggc3BlY2lhbC5hZGQgKSB7XG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXG5cdFx0XHRcdGlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udFxuXHRcdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUgZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb25cblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XG5cdFx0fVxuXG5cdH0sXG5cblx0Ly8gRGV0YWNoIGFuIGV2ZW50IG9yIHNldCBvZiBldmVudHMgZnJvbSBhbiBlbGVtZW50XG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XG5cblx0XHR2YXIgaiwgb3JpZ0NvdW50LCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuaGFzRGF0YSggZWxlbSApICYmIGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gT25jZSBmb3IgZWFjaCB0eXBlLm5hbWVzcGFjZSBpbiB0eXBlczsgdHlwZSBtYXkgYmUgb21pdHRlZFxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnRcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107XG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxuXHRcdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xuXHRcdFx0b3JpZ0NvdW50ID0gaiA9IGhhbmRsZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xuXG5cdFx0XHRcdGlmICggKCBtYXBwZWRUeXBlcyB8fCBvcmlnVHlwZSA9PT0gaGFuZGxlT2JqLm9yaWdUeXBlICkgJiZcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxuXHRcdFx0XHRcdCggIXRtcCB8fCB0bXAudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgJiZcblx0XHRcdFx0XHQoICFzZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gaGFuZGxlT2JqLnNlbGVjdG9yIHx8XG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xuXHRcdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaiwgMSApO1xuXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LS07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XG5cdFx0XHRcdFx0XHRzcGVjaWFsLnJlbW92ZS5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxuXHRcdFx0Ly8gKGF2b2lkcyBwb3RlbnRpYWwgZm9yIGVuZGxlc3MgcmVjdXJzaW9uIGR1cmluZyByZW1vdmFsIG9mIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMpXG5cdFx0XHRpZiAoIG9yaWdDb3VudCAmJiAhaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBuYW1lc3BhY2VzLCBlbGVtRGF0YS5oYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSBkYXRhIGFuZCB0aGUgZXhwYW5kbyBpZiBpdCdzIG5vIGxvbmdlciB1c2VkXG5cdFx0aWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdGRpc3BhdGNoOiBmdW5jdGlvbiggbmF0aXZlRXZlbnQgKSB7XG5cblx0XHQvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3Rcblx0XHR2YXIgZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBuYXRpdmVFdmVudCApO1xuXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLCBoYW5kbGVyUXVldWUsXG5cdFx0XHRhcmdzID0gbmV3IEFycmF5KCBhcmd1bWVudHMubGVuZ3RoICksXG5cdFx0XHRoYW5kbGVycyA9ICggZGF0YVByaXYuZ2V0KCB0aGlzLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8IFtdLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XG5cblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xuXG5cdFx0Zm9yICggaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTtcblx0XHR9XG5cblx0XHRldmVudC5kZWxlZ2F0ZVRhcmdldCA9IHRoaXM7XG5cblx0XHQvLyBDYWxsIHRoZSBwcmVEaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUsIGFuZCBsZXQgaXQgYmFpbCBpZiBkZXNpcmVkXG5cdFx0aWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGhhbmRsZXJzXG5cdFx0aGFuZGxlclF1ZXVlID0galF1ZXJ5LmV2ZW50LmhhbmRsZXJzLmNhbGwoIHRoaXMsIGV2ZW50LCBoYW5kbGVycyApO1xuXG5cdFx0Ly8gUnVuIGRlbGVnYXRlcyBmaXJzdDsgdGhleSBtYXkgd2FudCB0byBzdG9wIHByb3BhZ2F0aW9uIGJlbmVhdGggdXNcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggbWF0Y2hlZCA9IGhhbmRsZXJRdWV1ZVsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGV2ZW50LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07XG5cblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoIGhhbmRsZU9iaiA9IG1hdGNoZWQuaGFuZGxlcnNbIGorKyBdICkgJiZcblx0XHRcdFx0IWV2ZW50LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cblx0XHRcdFx0Ly8gVHJpZ2dlcmVkIGV2ZW50IG11c3QgZWl0aGVyIDEpIGhhdmUgbm8gbmFtZXNwYWNlLCBvciAyKSBoYXZlIG5hbWVzcGFjZShzKVxuXHRcdFx0XHQvLyBhIHN1YnNldCBvciBlcXVhbCB0byB0aG9zZSBpbiB0aGUgYm91bmQgZXZlbnQgKGJvdGggY2FuIGhhdmUgbm8gbmFtZXNwYWNlKS5cblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBldmVudC5ybmFtZXNwYWNlLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApIHtcblxuXHRcdFx0XHRcdGV2ZW50LmhhbmRsZU9iaiA9IGhhbmRsZU9iajtcblx0XHRcdFx0XHRldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7XG5cblx0XHRcdFx0XHRyZXQgPSAoICggalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGhhbmRsZU9iai5vcmlnVHlwZSBdIHx8IHt9ICkuaGFuZGxlIHx8XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlciApLmFwcGx5KCBtYXRjaGVkLmVsZW0sIGFyZ3MgKTtcblxuXHRcdFx0XHRcdGlmICggcmV0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZXZlbnQucmVzdWx0ID0gcmV0ICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDYWxsIHRoZSBwb3N0RGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlXG5cdFx0aWYgKCBzcGVjaWFsLnBvc3REaXNwYXRjaCApIHtcblx0XHRcdHNwZWNpYWwucG9zdERpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LnJlc3VsdDtcblx0fSxcblxuXHRoYW5kbGVyczogZnVuY3Rpb24oIGV2ZW50LCBoYW5kbGVycyApIHtcblx0XHR2YXIgaSwgaGFuZGxlT2JqLCBzZWwsIG1hdGNoZWRIYW5kbGVycywgbWF0Y2hlZFNlbGVjdG9ycyxcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxuXHRcdFx0ZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQsXG5cdFx0XHRjdXIgPSBldmVudC50YXJnZXQ7XG5cblx0XHQvLyBGaW5kIGRlbGVnYXRlIGhhbmRsZXJzXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50ICYmXG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OVxuXHRcdFx0Ly8gQmxhY2staG9sZSBTVkcgPHVzZT4gaW5zdGFuY2UgdHJlZXMgKHRyYWMtMTMxODApXG5cdFx0XHRjdXIubm9kZVR5cGUgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQyXG5cdFx0XHQvLyBTdXBwcmVzcyBzcGVjLXZpb2xhdGluZyBjbGlja3MgaW5kaWNhdGluZyBhIG5vbi1wcmltYXJ5IHBvaW50ZXIgYnV0dG9uICh0cmFjLTM4NjEpXG5cdFx0XHQvLyBodHRwczovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudC10eXBlLWNsaWNrXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XG5cdFx0XHQvLyAuLi5idXQgbm90IGFycm93IGtleSBcImNsaWNrc1wiIG9mIHJhZGlvIGlucHV0cywgd2hpY2ggY2FuIGhhdmUgYGJ1dHRvbmAgLTEgKGdoLTIzNDMpXG5cdFx0XHQhKCBldmVudC50eXBlID09PSBcImNsaWNrXCIgJiYgZXZlbnQuYnV0dG9uID49IDEgKSApIHtcblxuXHRcdFx0Zm9yICggOyBjdXIgIT09IHRoaXM7IGN1ciA9IGN1ci5wYXJlbnROb2RlIHx8IHRoaXMgKSB7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgY2hlY2sgbm9uLWVsZW1lbnRzICgjMTMyMDgpXG5cdFx0XHRcdC8vIERvbid0IHByb2Nlc3MgY2xpY2tzIG9uIGRpc2FibGVkIGVsZW1lbnRzICgjNjkxMSwgIzgxNjUsICMxMTM4MiwgIzExNzY0KVxuXHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA9PT0gMSAmJiAhKCBldmVudC50eXBlID09PSBcImNsaWNrXCIgJiYgY3VyLmRpc2FibGVkID09PSB0cnVlICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9ycyA9IHt9O1xuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTtcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKCMxMzIwMylcblx0XHRcdFx0XHRcdHNlbCA9IGhhbmRsZU9iai5zZWxlY3RvciArIFwiIFwiO1xuXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID0gaGFuZGxlT2JqLm5lZWRzQ29udGV4dCA/XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5KCBzZWwsIHRoaXMgKS5pbmRleCggY3VyICkgPiAtMSA6XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQoIHNlbCwgdGhpcywgbnVsbCwgWyBjdXIgXSApLmxlbmd0aDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZWRIYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVkSGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogbWF0Y2hlZEhhbmRsZXJzIH0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBZGQgdGhlIHJlbWFpbmluZyAoZGlyZWN0bHktYm91bmQpIGhhbmRsZXJzXG5cdFx0Y3VyID0gdGhpcztcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgPCBoYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBoYW5kbGVycy5zbGljZSggZGVsZWdhdGVDb3VudCApIH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaGFuZGxlclF1ZXVlO1xuXHR9LFxuXG5cdGFkZFByb3A6IGZ1bmN0aW9uKCBuYW1lLCBob29rICkge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSwgbmFtZSwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblxuXHRcdFx0Z2V0OiBpc0Z1bmN0aW9uKCBob29rICkgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGhvb2soIHRoaXMub3JpZ2luYWxFdmVudCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdGhpcy5vcmlnaW5hbEV2ZW50WyBuYW1lIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCB0aGlzLCBuYW1lLCB7XG5cdFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRcdFx0d3JpdGFibGU6IHRydWUsXG5cdFx0XHRcdFx0dmFsdWU6IHZhbHVlXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Zml4OiBmdW5jdGlvbiggb3JpZ2luYWxFdmVudCApIHtcblx0XHRyZXR1cm4gb3JpZ2luYWxFdmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRvcmlnaW5hbEV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIG9yaWdpbmFsRXZlbnQgKTtcblx0fSxcblxuXHRzcGVjaWFsOiB7XG5cdFx0bG9hZDoge1xuXG5cdFx0XHQvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkXG5cdFx0XHRub0J1YmJsZTogdHJ1ZVxuXHRcdH0sXG5cdFx0Zm9jdXM6IHtcblxuXHRcdFx0Ly8gRmlyZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzICE9PSBzYWZlQWN0aXZlRWxlbWVudCgpICYmIHRoaXMuZm9jdXMgKSB7XG5cdFx0XHRcdFx0dGhpcy5mb2N1cygpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c2luXCJcblx0XHR9LFxuXHRcdGJsdXI6IHtcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIHRoaXMgPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgJiYgdGhpcy5ibHVyICkge1xuXHRcdFx0XHRcdHRoaXMuYmx1cigpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c291dFwiXG5cdFx0fSxcblx0XHRjbGljazoge1xuXG5cdFx0XHQvLyBGb3IgY2hlY2tib3gsIGZpcmUgbmF0aXZlIGV2ZW50IHNvIGNoZWNrZWQgc3RhdGUgd2lsbCBiZSByaWdodFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggdGhpcy50eXBlID09PSBcImNoZWNrYm94XCIgJiYgdGhpcy5jbGljayAmJiBub2RlTmFtZSggdGhpcywgXCJpbnB1dFwiICkgKSB7XG5cdFx0XHRcdFx0dGhpcy5jbGljaygpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRm9yIGNyb3NzLWJyb3dzZXIgY29uc2lzdGVuY3ksIGRvbid0IGZpcmUgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHRfZGVmYXVsdDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRyZXR1cm4gbm9kZU5hbWUoIGV2ZW50LnRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0Mylcblx0XHR0aGlzLnRhcmdldCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgP1xuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcblx0XHRcdHNyYy50YXJnZXQ7XG5cblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcblx0XHR0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRhcmdldDtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpO1xuXG5cdC8vIE1hcmsgaXQgYXMgZml4ZWRcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XG59O1xuXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcbmpRdWVyeS5lYWNoKCB7XG5cdGFsdEtleTogdHJ1ZSxcblx0YnViYmxlczogdHJ1ZSxcblx0Y2FuY2VsYWJsZTogdHJ1ZSxcblx0Y2hhbmdlZFRvdWNoZXM6IHRydWUsXG5cdGN0cmxLZXk6IHRydWUsXG5cdGRldGFpbDogdHJ1ZSxcblx0ZXZlbnRQaGFzZTogdHJ1ZSxcblx0bWV0YUtleTogdHJ1ZSxcblx0cGFnZVg6IHRydWUsXG5cdHBhZ2VZOiB0cnVlLFxuXHRzaGlmdEtleTogdHJ1ZSxcblx0dmlldzogdHJ1ZSxcblx0XCJjaGFyXCI6IHRydWUsXG5cdGNoYXJDb2RlOiB0cnVlLFxuXHRrZXk6IHRydWUsXG5cdGtleUNvZGU6IHRydWUsXG5cdGJ1dHRvbjogdHJ1ZSxcblx0YnV0dG9uczogdHJ1ZSxcblx0Y2xpZW50WDogdHJ1ZSxcblx0Y2xpZW50WTogdHJ1ZSxcblx0b2Zmc2V0WDogdHJ1ZSxcblx0b2Zmc2V0WTogdHJ1ZSxcblx0cG9pbnRlcklkOiB0cnVlLFxuXHRwb2ludGVyVHlwZTogdHJ1ZSxcblx0c2NyZWVuWDogdHJ1ZSxcblx0c2NyZWVuWTogdHJ1ZSxcblx0dGFyZ2V0VG91Y2hlczogdHJ1ZSxcblx0dG9FbGVtZW50OiB0cnVlLFxuXHR0b3VjaGVzOiB0cnVlLFxuXG5cdHdoaWNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0dmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcblxuXHRcdC8vIEFkZCB3aGljaCBmb3Iga2V5IGV2ZW50c1xuXHRcdGlmICggZXZlbnQud2hpY2ggPT0gbnVsbCAmJiBya2V5RXZlbnQudGVzdCggZXZlbnQudHlwZSApICkge1xuXHRcdFx0cmV0dXJuIGV2ZW50LmNoYXJDb2RlICE9IG51bGwgPyBldmVudC5jaGFyQ29kZSA6IGV2ZW50LmtleUNvZGU7XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHdoaWNoIGZvciBjbGljazogMSA9PT0gbGVmdDsgMiA9PT0gbWlkZGxlOyAzID09PSByaWdodFxuXHRcdGlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICYmIHJtb3VzZUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdGlmICggYnV0dG9uICYgMSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgMiApIHtcblx0XHRcdFx0cmV0dXJuIDM7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgNCApIHtcblx0XHRcdFx0cmV0dXJuIDI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC53aGljaDtcblx0fVxufSwgalF1ZXJ5LmV2ZW50LmFkZFByb3AgKTtcblxuLy8gQ3JlYXRlIG1vdXNlZW50ZXIvbGVhdmUgZXZlbnRzIHVzaW5nIG1vdXNlb3Zlci9vdXQgYW5kIGV2ZW50LXRpbWUgY2hlY2tzXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcbi8vXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ3MDI1OFxuLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVkIGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS5cbmpRdWVyeS5lYWNoKCB7XG5cdG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG5cdG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIixcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXG5cdHBvaW50ZXJsZWF2ZTogXCJwb2ludGVyb3V0XCJcbn0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XG5cdFx0ZGVsZWdhdGVUeXBlOiBmaXgsXG5cdFx0YmluZFR5cGU6IGZpeCxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIHJldCxcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcblx0XHRcdFx0cmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsXG5cdFx0XHRcdGhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajtcblxuXHRcdFx0Ly8gRm9yIG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7XG5cdFx0XHRcdHJldCA9IGhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApO1xuXHR9LFxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xuXHRcdHZhciBoYW5kbGVPYmosIHR5cGU7XG5cdFx0aWYgKCB0eXBlcyAmJiB0eXBlcy5wcmV2ZW50RGVmYXVsdCAmJiB0eXBlcy5oYW5kbGVPYmogKSB7XG5cblx0XHRcdC8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnRcblx0XHRcdGhhbmRsZU9iaiA9IHR5cGVzLmhhbmRsZU9iajtcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXG5cdFx0XHRcdGhhbmRsZU9iai5uYW1lc3BhY2UgP1xuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxuXHRcdFx0XHRoYW5kbGVPYmouc2VsZWN0b3IsXG5cdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKVxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdFx0dGhpcy5vZmYoIHR5cGUsIHNlbGVjdG9yLCB0eXBlc1sgdHlwZSBdICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG52YXJcblxuXHQvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5cblx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQvZXNsaW50L2lzc3Vlcy8zMjI5XG5cdHJ4aHRtbFRhZyA9IC88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKilbXj5dKilcXC8+L2dpLFxuXG5cdC8qIGVzbGludC1lbmFibGUgKi9cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEsIEVkZ2UgMTIgLSAxMyBvbmx5XG5cdC8vIEluIElFL0VkZ2UgdXNpbmcgcmVnZXggZ3JvdXBzIGhlcmUgY2F1c2VzIHNldmVyZSBzbG93ZG93bnMuXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxuXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZztcblxuLy8gUHJlZmVyIGEgdGJvZHkgb3ZlciBpdHMgcGFyZW50IHRhYmxlIGZvciBjb250YWluaW5nIG5ldyByb3dzXG5mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoIGVsZW0sIGNvbnRlbnQgKSB7XG5cdGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGFibGVcIiApICYmXG5cdFx0bm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgKSB7XG5cblx0XHRyZXR1cm4galF1ZXJ5KCBlbGVtICkuY2hpbGRyZW4oIFwidGJvZHlcIiApWyAwIF0gfHwgZWxlbTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG4vLyBSZXBsYWNlL3Jlc3RvcmUgdGhlIHR5cGUgYXR0cmlidXRlIG9mIHNjcmlwdCBlbGVtZW50cyBmb3Igc2FmZSBET00gbWFuaXB1bGF0aW9uXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xuXHRlbGVtLnR5cGUgPSAoIGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICE9PSBudWxsICkgKyBcIi9cIiArIGVsZW0udHlwZTtcblx0cmV0dXJuIGVsZW07XG59XG5mdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkge1xuXHRpZiAoICggZWxlbS50eXBlIHx8IFwiXCIgKS5zbGljZSggMCwgNSApID09PSBcInRydWUvXCIgKSB7XG5cdFx0ZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7XG5cdH0gZWxzZSB7XG5cdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIFwidHlwZVwiICk7XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQoIHNyYywgZGVzdCApIHtcblx0dmFyIGksIGwsIHR5cGUsIHBkYXRhT2xkLCBwZGF0YUN1ciwgdWRhdGFPbGQsIHVkYXRhQ3VyLCBldmVudHM7XG5cblx0aWYgKCBkZXN0Lm5vZGVUeXBlICE9PSAxICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIDEuIENvcHkgcHJpdmF0ZSBkYXRhOiBldmVudHMsIGhhbmRsZXJzLCBldGMuXG5cdGlmICggZGF0YVByaXYuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0cGRhdGFPbGQgPSBkYXRhUHJpdi5hY2Nlc3MoIHNyYyApO1xuXHRcdHBkYXRhQ3VyID0gZGF0YVByaXYuc2V0KCBkZXN0LCBwZGF0YU9sZCApO1xuXHRcdGV2ZW50cyA9IHBkYXRhT2xkLmV2ZW50cztcblxuXHRcdGlmICggZXZlbnRzICkge1xuXHRcdFx0ZGVsZXRlIHBkYXRhQ3VyLmhhbmRsZTtcblx0XHRcdHBkYXRhQ3VyLmV2ZW50cyA9IHt9O1xuXG5cdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBldmVudHNbIHR5cGUgXS5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwgZXZlbnRzWyB0eXBlIF1bIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gMi4gQ29weSB1c2VyIGRhdGFcblx0aWYgKCBkYXRhVXNlci5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHR1ZGF0YU9sZCA9IGRhdGFVc2VyLmFjY2Vzcyggc3JjICk7XG5cdFx0dWRhdGFDdXIgPSBqUXVlcnkuZXh0ZW5kKCB7fSwgdWRhdGFPbGQgKTtcblxuXHRcdGRhdGFVc2VyLnNldCggZGVzdCwgdWRhdGFDdXIgKTtcblx0fVxufVxuXG4vLyBGaXggSUUgYnVncywgc2VlIHN1cHBvcnQgdGVzdHNcbmZ1bmN0aW9uIGZpeElucHV0KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBub2RlTmFtZSA9IGRlc3Qubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblxuXHQvLyBGYWlscyB0byBwZXJzaXN0IHRoZSBjaGVja2VkIHN0YXRlIG9mIGEgY2xvbmVkIGNoZWNrYm94IG9yIHJhZGlvIGJ1dHRvbi5cblx0aWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmIHJjaGVja2FibGVUeXBlLnRlc3QoIHNyYy50eXBlICkgKSB7XG5cdFx0ZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7XG5cblx0Ly8gRmFpbHMgdG8gcmV0dXJuIHRoZSBzZWxlY3RlZCBvcHRpb24gdG8gdGhlIGRlZmF1bHQgc2VsZWN0ZWQgc3RhdGUgd2hlbiBjbG9uaW5nIG9wdGlvbnNcblx0fSBlbHNlIGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiB8fCBub2RlTmFtZSA9PT0gXCJ0ZXh0YXJlYVwiICkge1xuXHRcdGRlc3QuZGVmYXVsdFZhbHVlID0gc3JjLmRlZmF1bHRWYWx1ZTtcblx0fVxufVxuXG5mdW5jdGlvbiBkb21NYW5pcCggY29sbGVjdGlvbiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKSB7XG5cblx0Ly8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5c1xuXHRhcmdzID0gY29uY2F0LmFwcGx5KCBbXSwgYXJncyApO1xuXG5cdHZhciBmcmFnbWVudCwgZmlyc3QsIHNjcmlwdHMsIGhhc1NjcmlwdHMsIG5vZGUsIGRvYyxcblx0XHRpID0gMCxcblx0XHRsID0gY29sbGVjdGlvbi5sZW5ndGgsXG5cdFx0aU5vQ2xvbmUgPSBsIC0gMSxcblx0XHR2YWx1ZSA9IGFyZ3NbIDAgXSxcblx0XHR2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxuXHRpZiAoIHZhbHVlSXNGdW5jdGlvbiB8fFxuXHRcdFx0KCBsID4gMSAmJiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0IXN1cHBvcnQuY2hlY2tDbG9uZSAmJiByY2hlY2tlZC50ZXN0KCB2YWx1ZSApICkgKSB7XG5cdFx0cmV0dXJuIGNvbGxlY3Rpb24uZWFjaCggZnVuY3Rpb24oIGluZGV4ICkge1xuXHRcdFx0dmFyIHNlbGYgPSBjb2xsZWN0aW9uLmVxKCBpbmRleCApO1xuXHRcdFx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7XG5cdFx0XHRcdGFyZ3NbIDAgXSA9IHZhbHVlLmNhbGwoIHRoaXMsIGluZGV4LCBzZWxmLmh0bWwoKSApO1xuXHRcdFx0fVxuXHRcdFx0ZG9tTWFuaXAoIHNlbGYsIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICk7XG5cdFx0fSApO1xuXHR9XG5cblx0aWYgKCBsICkge1xuXHRcdGZyYWdtZW50ID0gYnVpbGRGcmFnbWVudCggYXJncywgY29sbGVjdGlvblsgMCBdLm93bmVyRG9jdW1lbnQsIGZhbHNlLCBjb2xsZWN0aW9uLCBpZ25vcmVkICk7XG5cdFx0Zmlyc3QgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0aWYgKCBmcmFnbWVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSApIHtcblx0XHRcdGZyYWdtZW50ID0gZmlyc3Q7XG5cdFx0fVxuXG5cdFx0Ly8gUmVxdWlyZSBlaXRoZXIgbmV3IGNvbnRlbnQgb3IgYW4gaW50ZXJlc3QgaW4gaWdub3JlZCBlbGVtZW50cyB0byBpbnZva2UgdGhlIGNhbGxiYWNrXG5cdFx0aWYgKCBmaXJzdCB8fCBpZ25vcmVkICkge1xuXHRcdFx0c2NyaXB0cyA9IGpRdWVyeS5tYXAoIGdldEFsbCggZnJhZ21lbnQsIFwic2NyaXB0XCIgKSwgZGlzYWJsZVNjcmlwdCApO1xuXHRcdFx0aGFzU2NyaXB0cyA9IHNjcmlwdHMubGVuZ3RoO1xuXG5cdFx0XHQvLyBVc2UgdGhlIG9yaWdpbmFsIGZyYWdtZW50IGZvciB0aGUgbGFzdCBpdGVtXG5cdFx0XHQvLyBpbnN0ZWFkIG9mIHRoZSBmaXJzdCBiZWNhdXNlIGl0IGNhbiBlbmQgdXBcblx0XHRcdC8vIGJlaW5nIGVtcHRpZWQgaW5jb3JyZWN0bHkgaW4gY2VydGFpbiBzaXR1YXRpb25zICgjODA3MCkuXG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdG5vZGUgPSBmcmFnbWVudDtcblxuXHRcdFx0XHRpZiAoIGkgIT09IGlOb0Nsb25lICkge1xuXHRcdFx0XHRcdG5vZGUgPSBqUXVlcnkuY2xvbmUoIG5vZGUsIHRydWUsIHRydWUgKTtcblxuXHRcdFx0XHRcdC8vIEtlZXAgcmVmZXJlbmNlcyB0byBjbG9uZWQgc2NyaXB0cyBmb3IgbGF0ZXIgcmVzdG9yYXRpb25cblx0XHRcdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBzY3JpcHRzLCBnZXRBbGwoIG5vZGUsIFwic2NyaXB0XCIgKSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNhbGxiYWNrLmNhbGwoIGNvbGxlY3Rpb25bIGkgXSwgbm9kZSwgaSApO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XG5cdFx0XHRcdGRvYyA9IHNjcmlwdHNbIHNjcmlwdHMubGVuZ3RoIC0gMSBdLm93bmVyRG9jdW1lbnQ7XG5cblx0XHRcdFx0Ly8gUmVlbmFibGUgc2NyaXB0c1xuXHRcdFx0XHRqUXVlcnkubWFwKCBzY3JpcHRzLCByZXN0b3JlU2NyaXB0ICk7XG5cblx0XHRcdFx0Ly8gRXZhbHVhdGUgZXhlY3V0YWJsZSBzY3JpcHRzIG9uIGZpcnN0IGRvY3VtZW50IGluc2VydGlvblxuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGhhc1NjcmlwdHM7IGkrKyApIHtcblx0XHRcdFx0XHRub2RlID0gc2NyaXB0c1sgaSBdO1xuXHRcdFx0XHRcdGlmICggcnNjcmlwdFR5cGUudGVzdCggbm9kZS50eXBlIHx8IFwiXCIgKSAmJlxuXHRcdFx0XHRcdFx0IWRhdGFQcml2LmFjY2Vzcyggbm9kZSwgXCJnbG9iYWxFdmFsXCIgKSAmJlxuXHRcdFx0XHRcdFx0alF1ZXJ5LmNvbnRhaW5zKCBkb2MsIG5vZGUgKSApIHtcblxuXHRcdFx0XHRcdFx0aWYgKCBub2RlLnNyYyAmJiAoIG5vZGUudHlwZSB8fCBcIlwiICkudG9Mb3dlckNhc2UoKSAgIT09IFwibW9kdWxlXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gT3B0aW9uYWwgQUpBWCBkZXBlbmRlbmN5LCBidXQgd29uJ3QgcnVuIHNjcmlwdHMgaWYgbm90IHByZXNlbnRcblx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuX2V2YWxVcmwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5Ll9ldmFsVXJsKCBub2RlLnNyYyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRET01FdmFsKCBub2RlLnRleHRDb250ZW50LnJlcGxhY2UoIHJjbGVhblNjcmlwdCwgXCJcIiApLCBkb2MsIG5vZGUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY29sbGVjdGlvbjtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKCBlbGVtLCBzZWxlY3Rvciwga2VlcERhdGEgKSB7XG5cdHZhciBub2RlLFxuXHRcdG5vZGVzID0gc2VsZWN0b3IgPyBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgZWxlbSApIDogZWxlbSxcblx0XHRpID0gMDtcblxuXHRmb3IgKCA7ICggbm9kZSA9IG5vZGVzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0aWYgKCAha2VlcERhdGEgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGpRdWVyeS5jb250YWlucyggbm9kZS5vd25lckRvY3VtZW50LCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbC5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKTtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblxuXHRcdC8vIEZpeCBJRSBjbG9uaW5nIGlzc3Vlc1xuXHRcdGlmICggIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgJiYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGVsZW0ubm9kZVR5cGUgPT09IDExICkgJiZcblx0XHRcdFx0IWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBXZSBlc2NoZXcgU2l6emxlIGhlcmUgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnM6IGh0dHBzOi8vanNwZXJmLmNvbS9nZXRhbGwtdnMtc2l6emxlLzJcblx0XHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUgKTtcblx0XHRcdHNyY0VsZW1lbnRzID0gZ2V0QWxsKCBlbGVtICk7XG5cblx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmaXhJbnB1dCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDb3B5IHRoZSBldmVudHMgZnJvbSB0aGUgb3JpZ2luYWwgdG8gdGhlIGNsb25lXG5cdFx0aWYgKCBkYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0aWYgKCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdFx0c3JjRWxlbWVudHMgPSBzcmNFbGVtZW50cyB8fCBnZXRBbGwoIGVsZW0gKTtcblx0XHRcdFx0ZGVzdEVsZW1lbnRzID0gZGVzdEVsZW1lbnRzIHx8IGdldEFsbCggY2xvbmUgKTtcblxuXHRcdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRjbG9uZUNvcHlFdmVudCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIGVsZW0sIGNsb25lICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUsIFwic2NyaXB0XCIgKTtcblx0XHRpZiAoIGRlc3RFbGVtZW50cy5sZW5ndGggPiAwICkge1xuXHRcdFx0c2V0R2xvYmFsRXZhbCggZGVzdEVsZW1lbnRzLCAhaW5QYWdlICYmIGdldEFsbCggZWxlbSwgXCJzY3JpcHRcIiApICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHRoZSBjbG9uZWQgc2V0XG5cdFx0cmV0dXJuIGNsb25lO1xuXHR9LFxuXG5cdGNsZWFuRGF0YTogZnVuY3Rpb24oIGVsZW1zICkge1xuXHRcdHZhciBkYXRhLCBlbGVtLCB0eXBlLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7ICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPT0gdW5kZWZpbmVkOyBpKysgKSB7XG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblx0XHRcdFx0aWYgKCAoIGRhdGEgPSBlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0Zm9yICggdHlwZSBpbiBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCBzcGVjaWFsWyB0eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFRoaXMgaXMgYSBzaG9ydGN1dCB0byBhdm9pZCBqUXVlcnkuZXZlbnQucmVtb3ZlJ3Mgb3ZlcmhlYWRcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGRhdGEuaGFuZGxlICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xuXHRcdFx0XHRcdC8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZVxuXHRcdFx0XHRcdGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSApIHtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGV0YWNoOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciApO1xuXHR9LFxuXG5cdHRleHQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS50ZXh0KCB0aGlzICkgOlxuXHRcdFx0XHR0aGlzLmVtcHR5KCkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRhcHBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0YXJnZXQuZmlyc3RDaGlsZCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRiZWZvcmU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGFmdGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcy5uZXh0U2libGluZyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRlbXB0eTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gdGhpc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXG5cdFx0XHRcdC8vIFJlbW92ZSBhbnkgcmVtYWluaW5nIG5vZGVzXG5cdFx0XHRcdGVsZW0udGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdGNsb25lOiBmdW5jdGlvbiggZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0ZGF0YUFuZEV2ZW50cyA9IGRhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGZhbHNlIDogZGF0YUFuZEV2ZW50cztcblx0XHRkZWVwRGF0YUFuZEV2ZW50cyA9IGRlZXBEYXRhQW5kRXZlbnRzID09IG51bGwgPyBkYXRhQW5kRXZlbnRzIDogZGVlcERhdGFBbmRFdmVudHM7XG5cblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0aHRtbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBlbGVtID0gdGhpc1sgMCBdIHx8IHt9LFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uaW5uZXJIVE1MO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZWUgaWYgd2UgY2FuIHRha2UgYSBzaG9ydGN1dCBhbmQganVzdCB1c2UgaW5uZXJIVE1MXG5cdFx0XHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiAhcm5vSW5uZXJodG1sLnRlc3QoIHZhbHVlICkgJiZcblx0XHRcdFx0IXdyYXBNYXBbICggcnRhZ05hbWUuZXhlYyggdmFsdWUgKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKSBdICkge1xuXG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIHZhbHVlICk7XG5cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0XHRlbGVtID0gdGhpc1sgaSBdIHx8IHt9O1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBhbmQgcHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cdFx0XHRcdFx0XHRcdGVsZW0uaW5uZXJIVE1MID0gdmFsdWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbSA9IDA7XG5cblx0XHRcdFx0Ly8gSWYgdXNpbmcgaW5uZXJIVE1MIHRocm93cyBhbiBleGNlcHRpb24sIHVzZSB0aGUgZmFsbGJhY2sgbWV0aG9kXG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge31cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHR0aGlzLmVtcHR5KCkuYXBwZW5kKCB2YWx1ZSApO1xuXHRcdFx0fVxuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0cmVwbGFjZVdpdGg6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBpZ25vcmVkID0gW107XG5cblx0XHQvLyBNYWtlIHRoZSBjaGFuZ2VzLCByZXBsYWNpbmcgZWFjaCBub24taWdub3JlZCBjb250ZXh0IGVsZW1lbnQgd2l0aCB0aGUgbmV3IGNvbnRlbnRcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuXG5cdFx0XHRpZiAoIGpRdWVyeS5pbkFycmF5KCB0aGlzLCBpZ25vcmVkICkgPCAwICkge1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIHRoaXMgKSApO1xuXHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0XHRwYXJlbnQucmVwbGFjZUNoaWxkKCBlbGVtLCB0aGlzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEZvcmNlIGNhbGxiYWNrIGludm9jYXRpb25cblx0XHR9LCBpZ25vcmVkICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIHtcblx0YXBwZW5kVG86IFwiYXBwZW5kXCIsXG5cdHByZXBlbmRUbzogXCJwcmVwZW5kXCIsXG5cdGluc2VydEJlZm9yZTogXCJiZWZvcmVcIixcblx0aW5zZXJ0QWZ0ZXI6IFwiYWZ0ZXJcIixcblx0cmVwbGFjZUFsbDogXCJyZXBsYWNlV2l0aFwiXG59LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2luYWwgKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBlbGVtcyxcblx0XHRcdHJldCA9IFtdLFxuXHRcdFx0aW5zZXJ0ID0galF1ZXJ5KCBzZWxlY3RvciApLFxuXHRcdFx0bGFzdCA9IGluc2VydC5sZW5ndGggLSAxLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7IGkgPD0gbGFzdDsgaSsrICkge1xuXHRcdFx0ZWxlbXMgPSBpID09PSBsYXN0ID8gdGhpcyA6IHRoaXMuY2xvbmUoIHRydWUgKTtcblx0XHRcdGpRdWVyeSggaW5zZXJ0WyBpIF0gKVsgb3JpZ2luYWwgXSggZWxlbXMgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHQvLyAuZ2V0KCkgYmVjYXVzZSBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRwdXNoLmFwcGx5KCByZXQsIGVsZW1zLmdldCgpICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCByZXQgKTtcblx0fTtcbn0gKTtcbnZhciBybnVtbm9ucHggPSBuZXcgUmVnRXhwKCBcIl4oXCIgKyBwbnVtICsgXCIpKD8hcHgpW2EteiVdKyRcIiwgXCJpXCIgKTtcblxudmFyIGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5LCBGaXJlZm94IDw9MzAgKCMxNTA5OCwgIzE0MTUwKVxuXHRcdC8vIElFIHRocm93cyBvbiBlbGVtZW50cyBjcmVhdGVkIGluIHBvcHVwc1xuXHRcdC8vIEZGIG1lYW53aGlsZSB0aHJvd3Mgb24gZnJhbWUgZWxlbWVudHMgdGhyb3VnaCBcImRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGVcIlxuXHRcdHZhciB2aWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXG5cdFx0aWYgKCAhdmlldyB8fCAhdmlldy5vcGVuZXIgKSB7XG5cdFx0XHR2aWV3ID0gd2luZG93O1xuXHRcdH1cblxuXHRcdHJldHVybiB2aWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTtcblx0fTtcblxudmFyIHJib3hTdHlsZSA9IG5ldyBSZWdFeHAoIGNzc0V4cGFuZC5qb2luKCBcInxcIiApLCBcImlcIiApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblxuXHQvLyBFeGVjdXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWlyZSBvbmx5IG9uZSBsYXlvdXRcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cblx0ZnVuY3Rpb24gY29tcHV0ZVN0eWxlVGVzdHMoKSB7XG5cblx0XHQvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlXG5cdFx0aWYgKCAhZGl2ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7XCIgK1xuXHRcdFx0XCJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjBcIjtcblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94O292ZXJmbG93OnNjcm9sbDtcIiArXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xuXHRcdFx0XCJ3aWR0aDo2MCU7dG9wOjElXCI7XG5cdFx0ZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKS5hcHBlbmRDaGlsZCggZGl2ICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSA0NFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUubWFyZ2luTGVmdCApID09PSAxMjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIFNhZmFyaSA8PTkuMSAtIDEwLjEsIGlPUyA8PTcuMCAtIDkuM1xuXHRcdC8vIFNvbWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0aGV5IHNob3VsZG4ndFxuXHRcdGRpdi5zdHlsZS5yaWdodCA9IFwiNjAlXCI7XG5cdFx0cGl4ZWxCb3hTdHlsZXNWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLnJpZ2h0ICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0XHQvLyBEZXRlY3QgbWlzcmVwb3J0aW5nIG9mIGNvbnRlbnQgZGltZW5zaW9ucyBmb3IgYm94LXNpemluZzpib3JkZXItYm94IGVsZW1lbnRzXG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLndpZHRoICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0Ly8gRGV0ZWN0IG92ZXJmbG93OnNjcm9sbCBzY3Jld2luZXNzIChnaC0zNjk5KVxuXHRcdGRpdi5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcblx0XHRzY3JvbGxib3hTaXplVmFsID0gZGl2Lm9mZnNldFdpZHRoID09PSAzNiB8fCBcImFic29sdXRlXCI7XG5cblx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXG5cdFx0Ly8gTnVsbGlmeSB0aGUgZGl2IHNvIGl0IHdvdWxkbid0IGJlIHN0b3JlZCBpbiB0aGUgbWVtb3J5IGFuZFxuXHRcdC8vIGl0IHdpbGwgYWxzbyBiZSBhIHNpZ24gdGhhdCBjaGVja3MgYWxyZWFkeSBwZXJmb3JtZWRcblx0XHRkaXYgPSBudWxsO1xuXHR9XG5cblx0ZnVuY3Rpb24gcm91bmRQaXhlbE1lYXN1cmVzKCBtZWFzdXJlICkge1xuXHRcdHJldHVybiBNYXRoLnJvdW5kKCBwYXJzZUZsb2F0KCBtZWFzdXJlICkgKTtcblx0fVxuXG5cdHZhciBwaXhlbFBvc2l0aW9uVmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCwgc2Nyb2xsYm94U2l6ZVZhbCwgcGl4ZWxCb3hTdHlsZXNWYWwsXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsLFxuXHRcdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcblx0XHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0Ly8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHNcblx0aWYgKCAhZGl2LnN0eWxlICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3VyY2UgZWxlbWVudCBjbG9uZWQgKCM4OTA4KVxuXHRkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcImNvbnRlbnQtYm94XCI7XG5cdGRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiXCI7XG5cdHN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSBcImNvbnRlbnQtYm94XCI7XG5cblx0alF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwge1xuXHRcdGJveFNpemluZ1JlbGlhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblx0XHRwaXhlbEJveFN0eWxlczogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsQm94U3R5bGVzVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XG5cdFx0fSxcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiByZWxpYWJsZU1hcmdpbkxlZnRWYWw7XG5cdFx0fSxcblx0XHRzY3JvbGxib3hTaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gc2Nyb2xsYm94U2l6ZVZhbDtcblx0XHR9XG5cdH0gKTtcbn0gKSgpO1xuXG5cbmZ1bmN0aW9uIGN1ckNTUyggZWxlbSwgbmFtZSwgY29tcHV0ZWQgKSB7XG5cdHZhciB3aWR0aCwgbWluV2lkdGgsIG1heFdpZHRoLCByZXQsXG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDUxK1xuXHRcdC8vIFJldHJpZXZpbmcgc3R5bGUgYmVmb3JlIGNvbXB1dGVkIHNvbWVob3dcblx0XHQvLyBmaXhlcyBhbiBpc3N1ZSB3aXRoIGdldHRpbmcgd3JvbmcgdmFsdWVzXG5cdFx0Ly8gb24gZGV0YWNoZWQgZWxlbWVudHNcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0Y29tcHV0ZWQgPSBjb21wdXRlZCB8fCBnZXRTdHlsZXMoIGVsZW0gKTtcblxuXHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG5lZWRlZCBmb3I6XG5cdC8vICAgLmNzcygnZmlsdGVyJykgKElFIDkgb25seSwgIzEyNTM3KVxuXHQvLyAgIC5jc3MoJy0tY3VzdG9tUHJvcGVydHkpICgjMzE0NClcblx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRyZXQgPSBjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCBuYW1lICkgfHwgY29tcHV0ZWRbIG5hbWUgXTtcblxuXHRcdGlmICggcmV0ID09PSBcIlwiICYmICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbEJveFN0eWxlcygpICYmIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiByYm94U3R5bGUudGVzdCggbmFtZSApICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xuXHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XG5cblx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xuXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0c3R5bGUubWluV2lkdGggPSBtaW5XaWR0aDtcblx0XHRcdHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldCArIFwiXCIgOlxuXHRcdHJldDtcbn1cblxuXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XG5cblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cblx0cmV0dXJuIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xuXG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0fTtcbn1cblxuXG52YXJcblxuXHQvLyBTd2FwcGFibGUgaWYgZGlzcGxheSBpcyBub25lIG9yIHN0YXJ0cyB3aXRoIHRhYmxlXG5cdC8vIGV4Y2VwdCBcInRhYmxlXCIsIFwidGFibGUtY2VsbFwiLCBvciBcInRhYmxlLWNhcHRpb25cIlxuXHQvLyBTZWUgaGVyZSBmb3IgZGlzcGxheSB2YWx1ZXM6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvQ1NTL2Rpc3BsYXlcblx0cmRpc3BsYXlzd2FwID0gL14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLFxuXHRyY3VzdG9tUHJvcCA9IC9eLS0vLFxuXHRjc3NTaG93ID0geyBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLCB2aXNpYmlsaXR5OiBcImhpZGRlblwiLCBkaXNwbGF5OiBcImJsb2NrXCIgfSxcblx0Y3NzTm9ybWFsVHJhbnNmb3JtID0ge1xuXHRcdGxldHRlclNwYWNpbmc6IFwiMFwiLFxuXHRcdGZvbnRXZWlnaHQ6IFwiNDAwXCJcblx0fSxcblxuXHRjc3NQcmVmaXhlcyA9IFsgXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiIF0sXG5cdGVtcHR5U3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkuc3R5bGU7XG5cbi8vIFJldHVybiBhIGNzcyBwcm9wZXJ0eSBtYXBwZWQgdG8gYSBwb3RlbnRpYWxseSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIHZlbmRvclByb3BOYW1lKCBuYW1lICkge1xuXG5cdC8vIFNob3J0Y3V0IGZvciBuYW1lcyB0aGF0IGFyZSBub3QgdmVuZG9yIHByZWZpeGVkXG5cdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdHJldHVybiBuYW1lO1xuXHR9XG5cblx0Ly8gQ2hlY2sgZm9yIHZlbmRvciBwcmVmaXhlZCBuYW1lc1xuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbi8vIFJldHVybiBhIHByb3BlcnR5IG1hcHBlZCBhbG9uZyB3aGF0IGpRdWVyeS5jc3NQcm9wcyBzdWdnZXN0cyBvciB0b1xuLy8gYSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHkuXG5mdW5jdGlvbiBmaW5hbFByb3BOYW1lKCBuYW1lICkge1xuXHR2YXIgcmV0ID0galF1ZXJ5LmNzc1Byb3BzWyBuYW1lIF07XG5cdGlmICggIXJldCApIHtcblx0XHRyZXQgPSBqUXVlcnkuY3NzUHJvcHNbIG5hbWUgXSA9IHZlbmRvclByb3BOYW1lKCBuYW1lICkgfHwgbmFtZTtcblx0fVxuXHRyZXR1cm4gcmV0O1xufVxuXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xuXG5cdC8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBhbHJlYWR5IGJlZW5cblx0Ly8gbm9ybWFsaXplZCBhdCB0aGlzIHBvaW50XG5cdHZhciBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApO1xuXHRyZXR1cm4gbWF0Y2hlcyA/XG5cblx0XHQvLyBHdWFyZCBhZ2FpbnN0IHVuZGVmaW5lZCBcInN1YnRyYWN0XCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rc1xuXHRcdE1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgOlxuXHRcdHZhbHVlO1xufVxuXG5mdW5jdGlvbiBib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgYm94LCBpc0JvcmRlckJveCwgc3R5bGVzLCBjb21wdXRlZFZhbCApIHtcblx0dmFyIGkgPSBkaW1lbnNpb24gPT09IFwid2lkdGhcIiA/IDEgOiAwLFxuXHRcdGV4dHJhID0gMCxcblx0XHRkZWx0YSA9IDA7XG5cblx0Ly8gQWRqdXN0bWVudCBtYXkgbm90IGJlIG5lY2Vzc2FyeVxuXHRpZiAoIGJveCA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApICkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgNDsgaSArPSAyICkge1xuXG5cdFx0Ly8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luXG5cdFx0aWYgKCBib3ggPT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBib3ggKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGNvbnRlbnQtYm94LCB3ZSdyZSBzZWVraW5nIFwicGFkZGluZ1wiIG9yIFwiYm9yZGVyXCIgb3IgXCJtYXJnaW5cIlxuXHRcdGlmICggIWlzQm9yZGVyQm94ICkge1xuXG5cdFx0XHQvLyBBZGQgcGFkZGluZ1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEZvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCIsIGFkZCBib3JkZXJcblx0XHRcdGlmICggYm94ICE9PSBcInBhZGRpbmdcIiApIHtcblx0XHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gQnV0IHN0aWxsIGtlZXAgdHJhY2sgb2YgaXQgb3RoZXJ3aXNlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRleHRyYSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGJvcmRlci1ib3ggKGNvbnRlbnQgKyBwYWRkaW5nICsgYm9yZGVyKSwgd2UncmUgc2Vla2luZyBcImNvbnRlbnRcIiBvclxuXHRcdC8vIFwicGFkZGluZ1wiIG9yIFwibWFyZ2luXCJcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIsIHN1YnRyYWN0IHBhZGRpbmdcblx0XHRcdGlmICggYm94ID09PSBcImNvbnRlbnRcIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvciBcImNvbnRlbnRcIiBvciBcInBhZGRpbmdcIiwgc3VidHJhY3QgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBY2NvdW50IGZvciBwb3NpdGl2ZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyIHdoZW4gcmVxdWVzdGVkIGJ5IHByb3ZpZGluZyBjb21wdXRlZFZhbFxuXHRpZiAoICFpc0JvcmRlckJveCAmJiBjb21wdXRlZFZhbCA+PSAwICkge1xuXG5cdFx0Ly8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIGEgcm91bmRlZCBzdW0gb2YgY29udGVudCwgcGFkZGluZywgc2Nyb2xsIGd1dHRlciwgYW5kIGJvcmRlclxuXHRcdC8vIEFzc3VtaW5nIGludGVnZXIgc2Nyb2xsIGd1dHRlciwgc3VidHJhY3QgdGhlIHJlc3QgYW5kIHJvdW5kIGRvd25cblx0XHRkZWx0YSArPSBNYXRoLm1heCggMCwgTWF0aC5jZWlsKFxuXHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdGNvbXB1dGVkVmFsIC1cblx0XHRcdGRlbHRhIC1cblx0XHRcdGV4dHJhIC1cblx0XHRcdDAuNVxuXHRcdCkgKTtcblx0fVxuXG5cdHJldHVybiBkZWx0YTtcbn1cblxuZnVuY3Rpb24gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApIHtcblxuXHQvLyBTdGFydCB3aXRoIGNvbXB1dGVkIHN0eWxlXG5cdHZhciBzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIGRpbWVuc2lvbiwgc3R5bGVzICksXG5cdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveDtcblxuXHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0Ly8gUmV0dXJuIGEgY29uZm91bmRpbmcgbm9uLXBpeGVsIHZhbHVlIG9yIGZlaWduIGlnbm9yYW5jZSwgYXMgYXBwcm9wcmlhdGUuXG5cdGlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkge1xuXHRcdGlmICggIWV4dHJhICkge1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9XG5cdFx0dmFsID0gXCJhdXRvXCI7XG5cdH1cblxuXHQvLyBDaGVjayBmb3Igc3R5bGUgaW4gY2FzZSBhIGJyb3dzZXIgd2hpY2ggcmV0dXJucyB1bnJlbGlhYmxlIHZhbHVlc1xuXHQvLyBmb3IgZ2V0Q29tcHV0ZWRTdHlsZSBzaWxlbnRseSBmYWxscyBiYWNrIHRvIHRoZSByZWxpYWJsZSBlbGVtLnN0eWxlXG5cdHZhbHVlSXNCb3JkZXJCb3ggPSB2YWx1ZUlzQm9yZGVyQm94ICYmXG5cdFx0KCBzdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlKCkgfHwgdmFsID09PSBlbGVtLnN0eWxlWyBkaW1lbnNpb24gXSApO1xuXG5cdC8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgd2hlbiB2YWx1ZSBpcyBcImF1dG9cIlxuXHQvLyBUaGlzIGhhcHBlbnMgZm9yIGlubGluZSBlbGVtZW50cyB3aXRoIG5vIGV4cGxpY2l0IHNldHRpbmcgKGdoLTM1NzEpXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgLSA0LjMgb25seVxuXHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIG1pc3JlcG9ydGVkIGlubGluZSBkaW1lbnNpb25zIChnaC0zNjAyKVxuXHRpZiAoIHZhbCA9PT0gXCJhdXRvXCIgfHxcblx0XHQhcGFyc2VGbG9hdCggdmFsICkgJiYgalF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJpbmxpbmVcIiApIHtcblxuXHRcdHZhbCA9IGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXTtcblxuXHRcdC8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBwcm92aWRlIGJvcmRlci1ib3ggdmFsdWVzXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IHRydWU7XG5cdH1cblxuXHQvLyBOb3JtYWxpemUgXCJcIiBhbmQgYXV0b1xuXHR2YWwgPSBwYXJzZUZsb2F0KCB2YWwgKSB8fCAwO1xuXG5cdC8vIEFkanVzdCBmb3IgdGhlIGVsZW1lbnQncyBib3ggbW9kZWxcblx0cmV0dXJuICggdmFsICtcblx0XHRib3hNb2RlbEFkanVzdG1lbnQoXG5cdFx0XHRlbGVtLFxuXHRcdFx0ZGltZW5zaW9uLFxuXHRcdFx0ZXh0cmEgfHwgKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApLFxuXHRcdFx0dmFsdWVJc0JvcmRlckJveCxcblx0XHRcdHN0eWxlcyxcblxuXHRcdFx0Ly8gUHJvdmlkZSB0aGUgY3VycmVudCBjb21wdXRlZCBzaXplIHRvIHJlcXVlc3Qgc2Nyb2xsIGd1dHRlciBjYWxjdWxhdGlvbiAoZ2gtMzU4OSlcblx0XHRcdHZhbFxuXHRcdClcblx0KSArIFwicHhcIjtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdFxuXHQvLyBiZWhhdmlvciBvZiBnZXR0aW5nIGFuZCBzZXR0aW5nIGEgc3R5bGUgcHJvcGVydHlcblx0Y3NzSG9va3M6IHtcblx0XHRvcGFjaXR5OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHRcdC8vIFdlIHNob3VsZCBhbHdheXMgZ2V0IGEgbnVtYmVyIGJhY2sgZnJvbSBvcGFjaXR5XG5cdFx0XHRcdFx0dmFyIHJldCA9IGN1ckNTUyggZWxlbSwgXCJvcGFjaXR5XCIgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmV0ID09PSBcIlwiID8gXCIxXCIgOiByZXQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0Ly8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgXCJweFwiIHRvIHRoZXNlIHBvc3NpYmx5LXVuaXRsZXNzIHByb3BlcnRpZXNcblx0Y3NzTnVtYmVyOiB7XG5cdFx0XCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiB0cnVlLFxuXHRcdFwiY29sdW1uQ291bnRcIjogdHJ1ZSxcblx0XHRcImZpbGxPcGFjaXR5XCI6IHRydWUsXG5cdFx0XCJmbGV4R3Jvd1wiOiB0cnVlLFxuXHRcdFwiZmxleFNocmlua1wiOiB0cnVlLFxuXHRcdFwiZm9udFdlaWdodFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHt9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLFxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdFx0Ly8gQ29udmVydCBcIis9XCIgb3IgXCItPVwiIHRvIHJlbGF0aXZlIG51bWJlcnMgKCM3MzQ1KVxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICYmICggcmV0ID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7XG5cdFx0XHRcdHZhbHVlID0gYWRqdXN0Q1NTKCBlbGVtLCBuYW1lLCByZXQgKTtcblxuXHRcdFx0XHQvLyBGaXhlcyBidWcgIzkyMzdcblx0XHRcdFx0dHlwZSA9IFwibnVtYmVyXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG51bGwgYW5kIE5hTiB2YWx1ZXMgYXJlbid0IHNldCAoIzcxMTYpXG5cdFx0XHRpZiAoIHZhbHVlID09IG51bGwgfHwgdmFsdWUgIT09IHZhbHVlICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgbnVtYmVyIHdhcyBwYXNzZWQgaW4sIGFkZCB0aGUgdW5pdCAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKVxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWx1ZSArPSByZXQgJiYgcmV0WyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBvcmlnTmFtZSBdID8gXCJcIiA6IFwicHhcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBiYWNrZ3JvdW5kLSogcHJvcHMgYWZmZWN0IG9yaWdpbmFsIGNsb25lJ3MgdmFsdWVzXG5cdFx0XHRpZiAoICFzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSAmJiB2YWx1ZSA9PT0gXCJcIiAmJiBuYW1lLmluZGV4T2YoIFwiYmFja2dyb3VuZFwiICkgPT09IDAgKSB7XG5cdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSBcImluaGVyaXRcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCwgdXNlIHRoYXQgdmFsdWUsIG90aGVyd2lzZSBqdXN0IHNldCB0aGUgc3BlY2lmaWVkIHZhbHVlXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHxcblx0XHRcdFx0KCB2YWx1ZSA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdGlmICggaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0XHRcdHN0eWxlLnNldFByb3BlcnR5KCBuYW1lLCB2YWx1ZSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIG5vbi1jb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdFxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXHR9LFxuXG5cdGNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhLCBzdHlsZXMgKSB7XG5cdFx0dmFyIHZhbCwgbnVtLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0gY2FtZWxDYXNlKCBuYW1lICksXG5cdFx0XHRpc0N1c3RvbVByb3AgPSByY3VzdG9tUHJvcC50ZXN0KCBuYW1lICk7XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWUuIFdlIGRvbid0XG5cdFx0Ly8gd2FudCB0byBtb2RpZnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBUcnkgcHJlZml4ZWQgbmFtZSBmb2xsb3dlZCBieSB0aGUgdW5wcmVmaXhlZCBuYW1lXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbCA9IGhvb2tzLmdldCggZWxlbSwgdHJ1ZSwgZXh0cmEgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2UsIGlmIGEgd2F5IHRvIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZXhpc3RzLCB1c2UgdGhhdFxuXHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgXCJub3JtYWxcIiB0byBjb21wdXRlZCB2YWx1ZVxuXHRcdGlmICggdmFsID09PSBcIm5vcm1hbFwiICYmIG5hbWUgaW4gY3NzTm9ybWFsVHJhbnNmb3JtICkge1xuXHRcdFx0dmFsID0gY3NzTm9ybWFsVHJhbnNmb3JtWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBudW1lcmljIGlmIGZvcmNlZCBvciBhIHF1YWxpZmllciB3YXMgcHJvdmlkZWQgYW5kIHZhbCBsb29rcyBudW1lcmljXG5cdFx0aWYgKCBleHRyYSA9PT0gXCJcIiB8fCBleHRyYSApIHtcblx0XHRcdG51bSA9IHBhcnNlRmxvYXQoIHZhbCApO1xuXHRcdFx0cmV0dXJuIGV4dHJhID09PSB0cnVlIHx8IGlzRmluaXRlKCBudW0gKSA/IG51bSB8fCAwIDogdmFsO1xuXHRcdH1cblxuXHRcdHJldHVybiB2YWw7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJoZWlnaHRcIiwgXCJ3aWR0aFwiIF0sIGZ1bmN0aW9uKCBpLCBkaW1lbnNpb24gKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgZGltZW5zaW9uIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBDZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gYnV0IGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXRcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4K1xuXHRcdFx0XHRcdC8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvXG5cdFx0XHRcdFx0Ly8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHRcdFx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlXG5cdFx0XHRcdFx0Ly8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLlxuXHRcdFx0XHRcdCggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/XG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKTtcblx0XHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0XHRnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBleHRyYSApIHtcblx0XHRcdHZhciBtYXRjaGVzLFxuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblx0XHRcdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdFx0XHRzdWJ0cmFjdCA9IGV4dHJhICYmIGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdFx0XHRlbGVtLFxuXHRcdFx0XHRcdGRpbWVuc2lvbixcblx0XHRcdFx0XHRleHRyYSxcblx0XHRcdFx0XHRpc0JvcmRlckJveCxcblx0XHRcdFx0XHRzdHlsZXNcblx0XHRcdFx0KTtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdW5yZWxpYWJsZSBib3JkZXItYm94IGRpbWVuc2lvbnMgYnkgY29tcGFyaW5nIG9mZnNldCogdG8gY29tcHV0ZWQgYW5kXG5cdFx0XHQvLyBmYWtpbmcgYSBjb250ZW50LWJveCB0byBnZXQgYm9yZGVyIGFuZCBwYWRkaW5nIChnaC0zNjk5KVxuXHRcdFx0aWYgKCBpc0JvcmRlckJveCAmJiBzdXBwb3J0LnNjcm9sbGJveFNpemUoKSA9PT0gc3R5bGVzLnBvc2l0aW9uICkge1xuXHRcdFx0XHRzdWJ0cmFjdCAtPSBNYXRoLmNlaWwoXG5cdFx0XHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdFx0XHRwYXJzZUZsb2F0KCBzdHlsZXNbIGRpbWVuc2lvbiBdICkgLVxuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudCggZWxlbSwgZGltZW5zaW9uLCBcImJvcmRlclwiLCBmYWxzZSwgc3R5bGVzICkgLVxuXHRcdFx0XHRcdDAuNVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb252ZXJ0IHRvIHBpeGVscyBpZiB2YWx1ZSBhZGp1c3RtZW50IGlzIG5lZWRlZFxuXHRcdFx0aWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJlxuXHRcdFx0XHQoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSAhPT0gXCJweFwiICkge1xuXG5cdFx0XHRcdGVsZW0uc3R5bGVbIGRpbWVuc2lvbiBdID0gdmFsdWU7XG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5LmNzcyggZWxlbSwgZGltZW5zaW9uICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICk7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuY3NzSG9va3MubWFyZ2luTGVmdCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpbkxlZnQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuICggcGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC1cblx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuXHRcdFx0XHRcdH0gKVxuXHRcdFx0XHQpICsgXCJweFwiO1xuXHRcdH1cblx0fVxuKTtcblxuLy8gVGhlc2UgaG9va3MgYXJlIHVzZWQgYnkgYW5pbWF0ZSB0byBleHBhbmQgcHJvcGVydGllc1xualF1ZXJ5LmVhY2goIHtcblx0bWFyZ2luOiBcIlwiLFxuXHRwYWRkaW5nOiBcIlwiLFxuXHRib3JkZXI6IFwiV2lkdGhcIlxufSwgZnVuY3Rpb24oIHByZWZpeCwgc3VmZml4ICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdID0ge1xuXHRcdGV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGkgPSAwLFxuXHRcdFx0XHRleHBhbmRlZCA9IHt9LFxuXG5cdFx0XHRcdC8vIEFzc3VtZXMgYSBzaW5nbGUgbnVtYmVyIGlmIG5vdCBhIHN0cmluZ1xuXHRcdFx0XHRwYXJ0cyA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHZhbHVlLnNwbGl0KCBcIiBcIiApIDogWyB2YWx1ZSBdO1xuXG5cdFx0XHRmb3IgKCA7IGkgPCA0OyBpKysgKSB7XG5cdFx0XHRcdGV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkgXSArIHN1ZmZpeCBdID1cblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBleHBhbmRlZDtcblx0XHR9XG5cdH07XG5cblx0aWYgKCBwcmVmaXggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXS5zZXQgPSBzZXRQb3NpdGl2ZU51bWJlcjtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGNzczogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdHZhciBzdHlsZXMsIGxlbixcblx0XHRcdFx0bWFwID0ge30sXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIG5hbWUgKSApIHtcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICk7XG5cdFx0XHRcdGxlbiA9IG5hbWUubGVuZ3RoO1xuXG5cdFx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdG1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBtYXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lLCB2YWx1ZSApIDpcblx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApO1xuXHRcdH0sIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9XG59ICk7XG5cblxuZnVuY3Rpb24gVHdlZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkge1xuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xufVxualF1ZXJ5LlR3ZWVuID0gVHdlZW47XG5cblR3ZWVuLnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IFR3ZWVuLFxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcblx0XHR0aGlzLnByb3AgPSBwcm9wO1xuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHQ7XG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblx0XHR0aGlzLnN0YXJ0ID0gdGhpcy5ub3cgPSB0aGlzLmN1cigpO1xuXHRcdHRoaXMuZW5kID0gZW5kO1xuXHRcdHRoaXMudW5pdCA9IHVuaXQgfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdH0sXG5cdGN1cjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdHJldHVybiBob29rcyAmJiBob29rcy5nZXQgP1xuXHRcdFx0aG9va3MuZ2V0KCB0aGlzICkgOlxuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LmdldCggdGhpcyApO1xuXHR9LFxuXHRydW46IGZ1bmN0aW9uKCBwZXJjZW50ICkge1xuXHRcdHZhciBlYXNlZCxcblx0XHRcdGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmR1cmF0aW9uICkge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IGpRdWVyeS5lYXNpbmdbIHRoaXMuZWFzaW5nIF0oXG5cdFx0XHRcdHBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAsIDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvblxuXHRcdFx0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7XG5cdFx0fVxuXHRcdHRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnN0ZXAgKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7XG5cdFx0XHRob29rcy5zZXQoIHRoaXMgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCggdGhpcyApO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fVxufTtcblxuVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4ucHJvdG90eXBlO1xuXG5Ud2Vlbi5wcm9wSG9va3MgPSB7XG5cdF9kZWZhdWx0OiB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0XHR2YXIgcmVzdWx0O1xuXG5cdFx0XHQvLyBVc2UgYSBwcm9wZXJ0eSBvbiB0aGUgZWxlbWVudCBkaXJlY3RseSB3aGVuIGl0IGlzIG5vdCBhIERPTSBlbGVtZW50LFxuXHRcdFx0Ly8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy5cblx0XHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUGFzc2luZyBhbiBlbXB0eSBzdHJpbmcgYXMgYSAzcmQgcGFyYW1ldGVyIHRvIC5jc3Mgd2lsbCBhdXRvbWF0aWNhbGx5XG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxuXHRcdFx0Ly8gU2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQ7XG5cdFx0XHQvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzIFwicm90YXRlKDFyYWQpXCIgYXJlIHJldHVybmVkIGFzLWlzLlxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xuXG5cdFx0XHQvLyBFbXB0eSBzdHJpbmdzLCBudWxsLCB1bmRlZmluZWQgYW5kIFwiYXV0b1wiIGFyZSBjb252ZXJ0ZWQgdG8gMC5cblx0XHRcdHJldHVybiAhcmVzdWx0IHx8IHJlc3VsdCA9PT0gXCJhdXRvXCIgPyAwIDogcmVzdWx0O1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cblx0XHRcdC8vIFVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0LlxuXHRcdFx0Ly8gVXNlIGNzc0hvb2sgaWYgaXRzIHRoZXJlLlxuXHRcdFx0Ly8gVXNlIC5zdHlsZSBpZiBhdmFpbGFibGUgYW5kIHVzZSBwbGFpbiBwcm9wZXJ0aWVzIHdoZXJlIGF2YWlsYWJsZS5cblx0XHRcdGlmICggalF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSApIHtcblx0XHRcdFx0alF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSggdHdlZW4gKTtcblx0XHRcdH0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCB0d2Vlbi5lbGVtLnN0eWxlWyBqUXVlcnkuY3NzUHJvcHNbIHR3ZWVuLnByb3AgXSBdICE9IG51bGwgfHxcblx0XHRcdFx0XHRqUXVlcnkuY3NzSG9va3NbIHR3ZWVuLnByb3AgXSApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5lYXNpbmcgPSB7XG5cdGxpbmVhcjogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIHA7XG5cdH0sXG5cdHN3aW5nOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xuXHR9LFxuXHRfZGVmYXVsdDogXCJzd2luZ1wiXG59O1xuXG5qUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcblxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcbmpRdWVyeS5meC5zdGVwID0ge307XG5cblxuXG5cbnZhclxuXHRmeE5vdywgaW5Qcm9ncmVzcyxcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xuXG5mdW5jdGlvbiBzY2hlZHVsZSgpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdGlmICggZG9jdW1lbnQuaGlkZGVuID09PSBmYWxzZSAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lICkge1xuXHRcdFx0d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggc2NoZWR1bGUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0d2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTtcblx0XHR9XG5cblx0XHRqUXVlcnkuZngudGljaygpO1xuXHR9XG59XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBEYXRlLm5vdygpICk7XG59XG5cbi8vIEdlbmVyYXRlIHBhcmFtZXRlcnMgdG8gY3JlYXRlIGEgc3RhbmRhcmQgYW5pbWF0aW9uXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xuXHR2YXIgd2hpY2gsXG5cdFx0aSA9IDAsXG5cdFx0YXR0cnMgPSB7IGhlaWdodDogdHlwZSB9O1xuXG5cdC8vIElmIHdlIGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMSB0byBkbyBhbGwgY3NzRXhwYW5kIHZhbHVlcyxcblx0Ly8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiAtIGluY2x1ZGVXaWR0aCApIHtcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xuXHR9XG5cblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XG5cdFx0YXR0cnMub3BhY2l0eSA9IGF0dHJzLndpZHRoID0gdHlwZTtcblx0fVxuXG5cdHJldHVybiBhdHRycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7XG5cdHZhciB0d2Vlbixcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHR2YXIgcHJvcCwgdmFsdWUsIHRvZ2dsZSwgaG9va3MsIG9sZGZpcmUsIHByb3BUd2VlbiwgcmVzdG9yZURpc3BsYXksIGRpc3BsYXksXG5cdFx0aXNCb3ggPSBcIndpZHRoXCIgaW4gcHJvcHMgfHwgXCJoZWlnaHRcIiBpbiBwcm9wcyxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICksXG5cdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBRdWV1ZS1za2lwcGluZyBhbmltYXRpb25zIGhpamFjayB0aGUgZnggaG9va3Ncblx0aWYgKCAhb3B0cy5xdWV1ZSApIHtcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xuXHRcdFx0aG9va3MudW5xdWV1ZWQgPSAwO1xuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggIWhvb2tzLnVucXVldWVkICkge1xuXHRcdFx0XHRcdG9sZGZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aG9va3MudW5xdWV1ZWQrKztcblxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb21wbGV0ZSBoYW5kbGVyIGlzIGNhbGxlZCBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRGV0ZWN0IHNob3cvaGlkZSBhbmltYXRpb25zXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XG5cdFx0dmFsdWUgPSBwcm9wc1sgcHJvcCBdO1xuXHRcdGlmICggcmZ4dHlwZXMudGVzdCggdmFsdWUgKSApIHtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xuXHRcdFx0dG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVlID09PSBcInRvZ2dsZVwiO1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJldGVuZCB0byBiZSBoaWRkZW4gaWYgdGhpcyBpcyBhIFwic2hvd1wiIGFuZFxuXHRcdFx0XHQvLyB0aGVyZSBpcyBzdGlsbCBkYXRhIGZyb20gYSBzdG9wcGVkIHNob3cvaGlkZVxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gdHJ1ZTtcblxuXHRcdFx0XHQvLyBJZ25vcmUgYWxsIG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gfHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQmFpbCBvdXQgaWYgdGhpcyBpcyBhIG5vLW9wIGxpa2UgLmhpZGUoKS5oaWRlKClcblx0cHJvcFR3ZWVuID0gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wcyApO1xuXHRpZiAoICFwcm9wVHdlZW4gJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBSZXN0cmljdCBcIm92ZXJmbG93XCIgYW5kIFwiZGlzcGxheVwiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnNcblx0aWYgKCBpc0JveCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3QgaW5mZXIgdGhlIHNob3J0aGFuZFxuXHRcdC8vIGZyb20gaWRlbnRpY2FsbHktdmFsdWVkIG92ZXJmbG93WCBhbmQgb3ZlcmZsb3dZIGFuZCBFZGdlIGp1c3QgbWlycm9yc1xuXHRcdC8vIHRoZSBvdmVyZmxvd1ggdmFsdWUgdGhlcmUuXG5cdFx0b3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZsb3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07XG5cblx0XHQvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGVcblx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFTaG93ICYmIGRhdGFTaG93LmRpc3BsYXk7XG5cdFx0aWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkge1xuXHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0fVxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ICkge1xuXHRcdFx0XHRkaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEdldCBub25lbXB0eSB2YWx1ZShzKSBieSB0ZW1wb3JhcmlseSBmb3JjaW5nIHZpc2liaWxpdHlcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5IHx8IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQW5pbWF0ZSBpbmxpbmUgZWxlbWVudHMgYXMgaW5saW5lLWJsb2NrXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcImlubGluZVwiIHx8IGRpc3BsYXkgPT09IFwiaW5saW5lLWJsb2NrXCIgJiYgcmVzdG9yZURpc3BsYXkgIT0gbnVsbCApIHtcblx0XHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXG5cdFx0XHRcdC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIGRpc3BsYXkgdmFsdWUgYXQgdGhlIGVuZCBvZiBwdXJlIHNob3cvaGlkZSBhbmltYXRpb25zXG5cdFx0XHRcdGlmICggIXByb3BUd2VlbiApIHtcblx0XHRcdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5ID0gc3R5bGUuZGlzcGxheTtcblx0XHRcdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgPyBcIlwiIDogZGlzcGxheTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3dbIDAgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WSA9IG9wdHMub3ZlcmZsb3dbIDIgXTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBJbXBsZW1lbnQgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0cHJvcFR3ZWVuID0gZmFsc2U7XG5cdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblxuXHRcdC8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5pbWF0aW9uXG5cdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0aWYgKCBkYXRhU2hvdyApIHtcblx0XHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IGRhdGFTaG93LmhpZGRlbjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIFwiZnhzaG93XCIsIHsgZGlzcGxheTogcmVzdG9yZURpc3BsYXkgfSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdG9yZSBoaWRkZW4vdmlzaWJsZSBmb3IgdG9nZ2xlIHNvIGAuc3RvcCgpLnRvZ2dsZSgpYCBcInJldmVyc2VzXCJcblx0XHRcdGlmICggdG9nZ2xlICkge1xuXHRcdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTaG93IGVsZW1lbnRzIGJlZm9yZSBhbmltYXRpbmcgdGhlbVxuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0XHQvLyBUaGUgZmluYWwgc3RlcCBvZiBhIFwiaGlkZVwiIGFuaW1hdGlvbiBpcyBhY3R1YWxseSBoaWRpbmcgdGhlIGVsZW1lbnRcblx0XHRcdFx0aWYgKCAhaGlkZGVuICkge1xuXHRcdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJmeHNob3dcIiApO1xuXHRcdFx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBvcmlnWyBwcm9wIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdC8vIFBlci1wcm9wZXJ0eSBzZXR1cFxuXHRcdHByb3BUd2VlbiA9IGNyZWF0ZVR3ZWVuKCBoaWRkZW4gPyBkYXRhU2hvd1sgcHJvcCBdIDogMCwgcHJvcCwgYW5pbSApO1xuXHRcdGlmICggISggcHJvcCBpbiBkYXRhU2hvdyApICkge1xuXHRcdFx0ZGF0YVNob3dbIHByb3AgXSA9IHByb3BUd2Vlbi5zdGFydDtcblx0XHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0XHRwcm9wVHdlZW4uZW5kID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0XHRwcm9wVHdlZW4uc3RhcnQgPSAwO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBwcm9wRmlsdGVyKCBwcm9wcywgc3BlY2lhbEVhc2luZyApIHtcblx0dmFyIGluZGV4LCBuYW1lLCBlYXNpbmcsIHZhbHVlLCBob29rcztcblxuXHQvLyBjYW1lbENhc2UsIHNwZWNpYWxFYXNpbmcgYW5kIGV4cGFuZCBjc3NIb29rIHBhc3Ncblx0Zm9yICggaW5kZXggaW4gcHJvcHMgKSB7XG5cdFx0bmFtZSA9IGNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRlYXNpbmcgPSB2YWx1ZVsgMSBdO1xuXHRcdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyAwIF07XG5cdFx0fVxuXG5cdFx0aWYgKCBpbmRleCAhPT0gbmFtZSApIHtcblx0XHRcdHByb3BzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgaW5kZXggXTtcblx0XHR9XG5cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdO1xuXHRcdGlmICggaG9va3MgJiYgXCJleHBhbmRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbHVlID0gaG9va3MuZXhwYW5kKCB2YWx1ZSApO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBuYW1lIF07XG5cblx0XHRcdC8vIE5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3b24ndCBvdmVyd3JpdGUgZXhpc3Rpbmcga2V5cy5cblx0XHRcdC8vIFJldXNpbmcgJ2luZGV4JyBiZWNhdXNlIHdlIGhhdmUgdGhlIGNvcnJlY3QgXCJuYW1lXCJcblx0XHRcdGZvciAoIGluZGV4IGluIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICEoIGluZGV4IGluIHByb3BzICkgKSB7XG5cdFx0XHRcdFx0cHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgaW5kZXggXTtcblx0XHRcdFx0XHRzcGVjaWFsRWFzaW5nWyBpbmRleCBdID0gZWFzaW5nO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHNwZWNpYWxFYXNpbmdbIG5hbWUgXSA9IGVhc2luZztcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gQW5pbWF0aW9uKCBlbGVtLCBwcm9wZXJ0aWVzLCBvcHRpb25zICkge1xuXHR2YXIgcmVzdWx0LFxuXHRcdHN0b3BwZWQsXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzLmxlbmd0aCxcblx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIERvbid0IG1hdGNoIGVsZW0gaW4gdGhlIDphbmltYXRlZCBzZWxlY3RvclxuXHRcdFx0ZGVsZXRlIHRpY2suZWxlbTtcblx0XHR9ICksXG5cdFx0dGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHR2YXIgY3VycmVudFRpbWUgPSBmeE5vdyB8fCBjcmVhdGVGeE5vdygpLFxuXHRcdFx0XHRyZW1haW5pbmcgPSBNYXRoLm1heCggMCwgYW5pbWF0aW9uLnN0YXJ0VGltZSArIGFuaW1hdGlvbi5kdXJhdGlvbiAtIGN1cnJlbnRUaW1lICksXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCAyLjMgb25seVxuXHRcdFx0XHQvLyBBcmNoYWljIGNyYXNoIGJ1ZyB3b24ndCBhbGxvdyB1cyB0byB1c2UgYDEgLSAoIDAuNSB8fCAwIClgICgjMTI0OTcpXG5cdFx0XHRcdHRlbXAgPSByZW1haW5pbmcgLyBhbmltYXRpb24uZHVyYXRpb24gfHwgMCxcblx0XHRcdFx0cGVyY2VudCA9IDEgLSB0ZW1wLFxuXHRcdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRcdGxlbmd0aCA9IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoO1xuXG5cdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTtcblxuXHRcdFx0Ly8gSWYgdGhlcmUncyBtb3JlIHRvIGRvLCB5aWVsZFxuXHRcdFx0aWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7XG5cdFx0XHRcdHJldHVybiByZW1haW5pbmc7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoaXMgd2FzIGFuIGVtcHR5IGFuaW1hdGlvbiwgc3ludGhlc2l6ZSBhIGZpbmFsIHByb2dyZXNzIG5vdGlmaWNhdGlvblxuXHRcdFx0aWYgKCAhbGVuZ3RoICkge1xuXHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlc29sdmUgdGhlIGFuaW1hdGlvbiBhbmQgcmVwb3J0IGl0cyBjb25jbHVzaW9uXG5cdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24gXSApO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0YW5pbWF0aW9uID0gZGVmZXJyZWQucHJvbWlzZSgge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdHByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLFxuXHRcdFx0b3B0czogalF1ZXJ5LmV4dGVuZCggdHJ1ZSwge1xuXHRcdFx0XHRzcGVjaWFsRWFzaW5nOiB7fSxcblx0XHRcdFx0ZWFzaW5nOiBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0XG5cdFx0XHR9LCBvcHRpb25zICksXG5cdFx0XHRvcmlnaW5hbFByb3BlcnRpZXM6IHByb3BlcnRpZXMsXG5cdFx0XHRvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsXG5cdFx0XHRzdGFydFRpbWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcblx0XHRcdHR3ZWVuczogW10sXG5cdFx0XHRjcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHtcblx0XHRcdFx0dmFyIHR3ZWVuID0galF1ZXJ5LlR3ZWVuKCBlbGVtLCBhbmltYXRpb24ub3B0cywgcHJvcCwgZW5kLFxuXHRcdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XG5cdFx0XHRcdFx0cmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0Ly8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnNcblx0YW5pbWF0aW9uXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHRyZXR1cm4gYW5pbWF0aW9uO1xufVxuXG5qUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7XG5cblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSA9IEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmXG5cdGlmICggalF1ZXJ5LmZ4Lm9mZiApIHtcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xuXG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0aWYgKCBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyApIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7XG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIG9wdDtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNldHRpbmcgb3BhY2l0eSB0byAwXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRyZWUgKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSAmJiB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gXCJib29sZWFuXCIgP1xuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxuLy8gR2VuZXJhdGUgc2hvcnRjdXRzIGZvciBjdXN0b20gYW5pbWF0aW9uc1xualF1ZXJ5LmVhY2goIHtcblx0c2xpZGVEb3duOiBnZW5GeCggXCJzaG93XCIgKSxcblx0c2xpZGVVcDogZ2VuRngoIFwiaGlkZVwiICksXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeCggXCJ0b2dnbGVcIiApLFxuXHRmYWRlSW46IHsgb3BhY2l0eTogXCJzaG93XCIgfSxcblx0ZmFkZU91dDogeyBvcGFjaXR5OiBcImhpZGVcIiB9LFxuXHRmYWRlVG9nZ2xlOiB7IG9wYWNpdHk6IFwidG9nZ2xlXCIgfVxufSwgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LnRpbWVycyA9IFtdO1xualF1ZXJ5LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHtcblx0dmFyIHRpbWVyLFxuXHRcdGkgPSAwLFxuXHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnM7XG5cblx0ZnhOb3cgPSBEYXRlLm5vdygpO1xuXG5cdGZvciAoIDsgaSA8IHRpbWVycy5sZW5ndGg7IGkrKyApIHtcblx0XHR0aW1lciA9IHRpbWVyc1sgaSBdO1xuXG5cdFx0Ly8gUnVuIHRoZSB0aW1lciBhbmQgc2FmZWx5IHJlbW92ZSBpdCB3aGVuIGRvbmUgKGFsbG93aW5nIGZvciBleHRlcm5hbCByZW1vdmFsKVxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xuXHRcdFx0dGltZXJzLnNwbGljZSggaS0tLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhdGltZXJzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xuXHR9XG5cdGZ4Tm93ID0gdW5kZWZpbmVkO1xufTtcblxualF1ZXJ5LmZ4LnRpbWVyID0gZnVuY3Rpb24oIHRpbWVyICkge1xuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XG5cdGpRdWVyeS5meC5zdGFydCgpO1xufTtcblxualF1ZXJ5LmZ4LmludGVydmFsID0gMTM7XG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGluUHJvZ3Jlc3MgPSB0cnVlO1xuXHRzY2hlZHVsZSgpO1xufTtcblxualF1ZXJ5LmZ4LnN0b3AgPSBmdW5jdGlvbigpIHtcblx0aW5Qcm9ncmVzcyA9IG51bGw7XG59O1xuXG5qUXVlcnkuZnguc3BlZWRzID0ge1xuXHRzbG93OiA2MDAsXG5cdGZhc3Q6IDIwMCxcblxuXHQvLyBEZWZhdWx0IHNwZWVkXG5cdF9kZWZhdWx0OiA0MDBcbn07XG5cblxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxuLy8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTAwMzI0MDE0NzQ3L2h0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS9cbmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkge1xuXHR0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lO1xuXHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHtcblx0XHR2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7XG5cdFx0aG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dCApO1xuXHRcdH07XG5cdH0gKTtcbn07XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICksXG5cdFx0c2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzZWxlY3RcIiApLFxuXHRcdG9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvcHRpb25cIiApICk7XG5cblx0aW5wdXQudHlwZSA9IFwiY2hlY2tib3hcIjtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4zIG9ubHlcblx0Ly8gRGVmYXVsdCB2YWx1ZSBmb3IgYSBjaGVja2JveCBzaG91bGQgYmUgXCJvblwiXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdFxuXHRzdXBwb3J0Lm9wdFNlbGVjdGVkID0gb3B0LnNlbGVjdGVkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBBbiBpbnB1dCBsb3NlcyBpdHMgdmFsdWUgYWZ0ZXIgYmVjb21pbmcgYSByYWRpb1xuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRpbnB1dC52YWx1ZSA9IFwidFwiO1xuXHRpbnB1dC50eXBlID0gXCJyYWRpb1wiO1xuXHRzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gXCJ0XCI7XG59ICkoKTtcblxuXG52YXIgYm9vbEhvb2ssXG5cdGF0dHJIYW5kbGUgPSBqUXVlcnkuZXhwci5hdHRySGFuZGxlO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvblxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZpbmVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gbnVsbCApIHtcblx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyBcIlwiICk7XG5cdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcblx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7XG5cdH0sXG5cblx0YXR0ckhvb2tzOiB7XG5cdFx0dHlwZToge1xuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggIXN1cHBvcnQucmFkaW9WYWx1ZSAmJiB2YWx1ZSA9PT0gXCJyYWRpb1wiICYmXG5cdFx0XHRcdFx0bm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsXG5cdFx0XHRpID0gMCxcblxuXHRcdFx0Ly8gQXR0cmlidXRlIG5hbWVzIGNhbiBjb250YWluIG5vbi1IVE1MIHdoaXRlc3BhY2UgY2hhcmFjdGVyc1xuXHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdHdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkge1xuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggbmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lO1xuXHR9XG59O1xuXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdHZhciBnZXR0ZXIgPSBhdHRySGFuZGxlWyBuYW1lIF0gfHwgalF1ZXJ5LmZpbmQuYXR0cjtcblxuXHRhdHRySGFuZGxlWyBuYW1lIF0gPSBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHJldCwgaGFuZGxlLFxuXHRcdFx0bG93ZXJjYXNlTmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblxuXHRcdGlmICggIWlzWE1MICkge1xuXG5cdFx0XHQvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wIGJ5IHRlbXBvcmFyaWx5IHJlbW92aW5nIHRoaXMgZnVuY3Rpb24gZnJvbSB0aGUgZ2V0dGVyXG5cdFx0XHRoYW5kbGUgPSBhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF07XG5cdFx0XHRhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSByZXQ7XG5cdFx0XHRyZXQgPSBnZXR0ZXIoIGVsZW0sIG5hbWUsIGlzWE1MICkgIT0gbnVsbCA/XG5cdFx0XHRcdGxvd2VyY2FzZU5hbWUgOlxuXHRcdFx0XHRudWxsO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gaGFuZGxlO1xuXHRcdH1cblx0XHRyZXR1cm4gcmV0O1xuXHR9O1xufSApO1xuXG5cblxuXG52YXIgcmZvY3VzYWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXG5cdHJjbGlja2FibGUgPSAvXig/OmF8YXJlYSkkL2k7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5wcm9wLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVQcm9wOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRlbGV0ZSB0aGlzWyBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWUgXTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rc1xuXHRcdFx0bmFtZSA9IGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZTtcblx0XHRcdGhvb2tzID0galF1ZXJ5LnByb3BIb29rc1sgbmFtZSBdO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAoIGVsZW1bIG5hbWUgXSA9IHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVsZW1bIG5hbWUgXTtcblx0fSxcblxuXHRwcm9wSG9va3M6IHtcblx0XHR0YWJJbmRleDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdFx0XHRcdC8vIGVsZW0udGFiSW5kZXggZG9lc24ndCBhbHdheXMgcmV0dXJuIHRoZVxuXHRcdFx0XHQvLyBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0IGJlZW4gZXhwbGljaXRseSBzZXRcblx0XHRcdFx0Ly8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTQxMTE2MjMzMzQ3L2h0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXG5cdFx0XHRcdC8vIFVzZSBwcm9wZXIgYXR0cmlidXRlIHJldHJpZXZhbCgjMTIwNzIpXG5cdFx0XHRcdHZhciB0YWJpbmRleCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidGFiaW5kZXhcIiApO1xuXG5cdFx0XHRcdGlmICggdGFiaW5kZXggKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHBhcnNlSW50KCB0YWJpbmRleCwgMTAgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHRyZm9jdXNhYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSB8fFxuXHRcdFx0XHRcdHJjbGlja2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmXG5cdFx0XHRcdFx0ZWxlbS5ocmVmXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiAwO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRwcm9wRml4OiB7XG5cdFx0XCJmb3JcIjogXCJodG1sRm9yXCIsXG5cdFx0XCJjbGFzc1wiOiBcImNsYXNzTmFtZVwiXG5cdH1cbn0gKTtcblxuLy8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG4vLyBBY2Nlc3NpbmcgdGhlIHNlbGVjdGVkSW5kZXggcHJvcGVydHlcbi8vIGZvcmNlcyB0aGUgYnJvd3NlciB0byByZXNwZWN0IHNldHRpbmcgc2VsZWN0ZWRcbi8vIG9uIHRoZSBvcHRpb25cbi8vIFRoZSBnZXR0ZXIgZW5zdXJlcyBhIGRlZmF1bHQgb3B0aW9uIGlzIHNlbGVjdGVkXG4vLyB3aGVuIGluIGFuIG9wdGdyb3VwXG4vLyBlc2xpbnQgcnVsZSBcIm5vLXVudXNlZC1leHByZXNzaW9uc1wiIGlzIGRpc2FibGVkIGZvciB0aGlzIGNvZGVcbi8vIHNpbmNlIGl0IGNvbnNpZGVycyBzdWNoIGFjY2Vzc2lvbnMgbm9vcFxuaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHtcblx0alF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCAmJiBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0LyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogXCJvZmZcIiAqL1xuXG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdHBhcmVudC5zZWxlY3RlZEluZGV4O1xuXG5cdFx0XHRcdGlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn1cblxualF1ZXJ5LmVhY2goIFtcblx0XCJ0YWJJbmRleFwiLFxuXHRcInJlYWRPbmx5XCIsXG5cdFwibWF4TGVuZ3RoXCIsXG5cdFwiY2VsbFNwYWNpbmdcIixcblx0XCJjZWxsUGFkZGluZ1wiLFxuXHRcInJvd1NwYW5cIixcblx0XCJjb2xTcGFuXCIsXG5cdFwidXNlTWFwXCIsXG5cdFwiZnJhbWVCb3JkZXJcIixcblx0XCJjb250ZW50RWRpdGFibGVcIlxuXSwgZnVuY3Rpb24oKSB7XG5cdGpRdWVyeS5wcm9wRml4WyB0aGlzLnRvTG93ZXJDYXNlKCkgXSA9IHRoaXM7XG59ICk7XG5cblxuXG5cblx0Ly8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2UgYWNjb3JkaW5nIHRvIEhUTUwgc3BlY1xuXHQvLyBodHRwczovL2luZnJhLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLWFzY2lpLXdoaXRlc3BhY2Vcblx0ZnVuY3Rpb24gc3RyaXBBbmRDb2xsYXBzZSggdmFsdWUgKSB7XG5cdFx0dmFyIHRva2VucyA9IHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdFx0cmV0dXJuIHRva2Vucy5qb2luKCBcIiBcIiApO1xuXHR9XG5cblxuZnVuY3Rpb24gZ2V0Q2xhc3MoIGVsZW0gKSB7XG5cdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSAmJiBlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc1wiICkgfHwgXCJcIjtcbn1cblxuZnVuY3Rpb24gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICkge1xuXHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9XG5cdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXHR9XG5cdHJldHVybiBbXTtcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmFkZENsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRjbGFzc2VzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA8IDAgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciArPSBjbGF6eiArIFwiIFwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IHN0cmlwQW5kQ29sbGFwc2UoIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0cmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRpID0gMDtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5yZW1vdmVDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB0aGlzLmF0dHIoIFwiY2xhc3NcIiwgXCJcIiApO1xuXHRcdH1cblxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3Nlcy5sZW5ndGggKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblxuXHRcdFx0XHQvLyBUaGlzIGV4cHJlc3Npb24gaXMgaGVyZSBmb3IgYmV0dGVyIGNvbXByZXNzaWJpbGl0eSAoc2VlIGFkZENsYXNzKVxuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBjdXJWYWx1ZSApICsgXCIgXCIgKTtcblxuXHRcdFx0XHRpZiAoIGN1ciApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgKmFsbCogaW5zdGFuY2VzXG5cdFx0XHRcdFx0XHR3aGlsZSAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA+IC0xICkge1xuXHRcdFx0XHRcdFx0XHRjdXIgPSBjdXIucmVwbGFjZSggXCIgXCIgKyBjbGF6eiArIFwiIFwiLCBcIiBcIiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IHN0cmlwQW5kQ29sbGFwc2UoIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0dG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7XG5cdFx0dmFyIHR5cGUgPSB0eXBlb2YgdmFsdWUsXG5cdFx0XHRpc1ZhbGlkVmFsdWUgPSB0eXBlID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIHR5cGVvZiBzdGF0ZVZhbCA9PT0gXCJib29sZWFuXCIgJiYgaXNWYWxpZFZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlVmFsID8gdGhpcy5hZGRDbGFzcyggdmFsdWUgKSA6IHRoaXMucmVtb3ZlQ2xhc3MoIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnRvZ2dsZUNsYXNzKFxuXHRcdFx0XHRcdHZhbHVlLmNhbGwoIHRoaXMsIGksIGdldENsYXNzKCB0aGlzICksIHN0YXRlVmFsICksXG5cdFx0XHRcdFx0c3RhdGVWYWxcblx0XHRcdFx0KTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBjbGFzc05hbWUsIGksIHNlbGYsIGNsYXNzTmFtZXM7XG5cblx0XHRcdGlmICggaXNWYWxpZFZhbHVlICkge1xuXG5cdFx0XHRcdC8vIFRvZ2dsZSBpbmRpdmlkdWFsIGNsYXNzIG5hbWVzXG5cdFx0XHRcdGkgPSAwO1xuXHRcdFx0XHRzZWxmID0galF1ZXJ5KCB0aGlzICk7XG5cdFx0XHRcdGNsYXNzTmFtZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdFx0XHR3aGlsZSAoICggY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSsrIF0gKSApIHtcblxuXHRcdFx0XHRcdC8vIENoZWNrIGVhY2ggY2xhc3NOYW1lIGdpdmVuLCBzcGFjZSBzZXBhcmF0ZWQgbGlzdFxuXHRcdFx0XHRcdGlmICggc2VsZi5oYXNDbGFzcyggY2xhc3NOYW1lICkgKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnJlbW92ZUNsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2VsZi5hZGRDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdC8vIFRvZ2dsZSB3aG9sZSBjbGFzcyBuYW1lXG5cdFx0XHR9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0XHRjbGFzc05hbWUgPSBnZXRDbGFzcyggdGhpcyApO1xuXHRcdFx0XHRpZiAoIGNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGNsYXNzTmFtZSBpZiBzZXRcblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiLCBjbGFzc05hbWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIElmIHRoZSBlbGVtZW50IGhhcyBhIGNsYXNzIG5hbWUgb3IgaWYgd2UncmUgcGFzc2VkIGBmYWxzZWAsXG5cdFx0XHRcdC8vIHRoZW4gcmVtb3ZlIHRoZSB3aG9sZSBjbGFzc25hbWUgKGlmIHRoZXJlIHdhcyBvbmUsIHRoZSBhYm92ZSBzYXZlZCBpdCkuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBicmluZyBiYWNrIHdoYXRldmVyIHdhcyBwcmV2aW91c2x5IHNhdmVkIChpZiBhbnl0aGluZyksXG5cdFx0XHRcdC8vIGZhbGxpbmcgYmFjayB0byB0aGUgZW1wdHkgc3RyaW5nIGlmIG5vdGhpbmcgd2FzIHN0b3JlZC5cblx0XHRcdFx0aWYgKCB0aGlzLnNldEF0dHJpYnV0ZSApIHtcblx0XHRcdFx0XHR0aGlzLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLFxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lIHx8IHZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRcdFx0XHRcIlwiIDpcblx0XHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcblx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGdldENsYXNzKCBlbGVtICkgKSArIFwiIFwiICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIHJyZXR1cm4gPSAvXFxyL2c7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0dmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGhvb2tzLCByZXQsIHZhbHVlSXNGdW5jdGlvbixcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF07XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBlIF0gfHxcblx0XHRcdFx0XHRqUXVlcnkudmFsSG9va3NbIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xuXG5cdFx0XHRcdGlmICggaG9va3MgJiZcblx0XHRcdFx0XHRcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIFwidmFsdWVcIiApICkgIT09IHVuZGVmaW5lZFxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0ID0gZWxlbS52YWx1ZTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzXG5cdFx0XHRcdGlmICggdHlwZW9mIHJldCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0XHRyZXR1cm4gcmV0LnJlcGxhY2UoIHJyZXR1cm4sIFwiXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEhhbmRsZSBjYXNlcyB3aGVyZSB2YWx1ZSBpcyBudWxsL3VuZGVmIG9yIG51bWJlclxuXHRcdFx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyBcIlwiIDogcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFsdWVJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0dmFyIHZhbDtcblxuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlICE9PSAxICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xuXHRcdFx0XHR2YWwgPSB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBqUXVlcnkoIHRoaXMgKS52YWwoKSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFsID0gdmFsdWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRyZWF0IG51bGwvdW5kZWZpbmVkIGFzIFwiXCI7IGNvbnZlcnQgbnVtYmVycyB0byBzdHJpbmdcblx0XHRcdGlmICggdmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHZhbCA9IFwiXCI7XG5cblx0XHRcdH0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHZhbCArPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCBBcnJheS5pc0FycmF5KCB2YWwgKSApIHtcblx0XHRcdFx0dmFsID0galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiO1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cblx0XHRcdGhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyB0aGlzLnR5cGUgXSB8fCBqUXVlcnkudmFsSG9va3NbIHRoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xuXG5cdFx0XHQvLyBJZiBzZXQgcmV0dXJucyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBub3JtYWwgc2V0dGluZ1xuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCBcInZhbHVlXCIgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHR0aGlzLnZhbHVlID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHZhbEhvb2tzOiB7XG5cdFx0b3B0aW9uOiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHRcdHZhciB2YWwgPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInZhbHVlXCIgKTtcblx0XHRcdFx0cmV0dXJuIHZhbCAhPSBudWxsID9cblx0XHRcdFx0XHR2YWwgOlxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMCAtIDExIG9ubHlcblx0XHRcdFx0XHQvLyBvcHRpb24udGV4dCB0aHJvd3MgZXhjZXB0aW9ucyAoIzE0Njg2LCAjMTQ4NTgpXG5cdFx0XHRcdFx0Ly8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2Vcblx0XHRcdFx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2Utd2hpdGVzcGFjZVxuXHRcdFx0XHRcdHN0cmlwQW5kQ29sbGFwc2UoIGpRdWVyeS50ZXh0KCBlbGVtICkgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdHNlbGVjdDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHZhbHVlLCBvcHRpb24sIGksXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHRpbmRleCA9IGVsZW0uc2VsZWN0ZWRJbmRleCxcblx0XHRcdFx0XHRvbmUgPSBlbGVtLnR5cGUgPT09IFwic2VsZWN0LW9uZVwiLFxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcblx0XHRcdFx0XHRtYXggPSBvbmUgPyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHRpZiAoIGluZGV4IDwgMCApIHtcblx0XHRcdFx0XHRpID0gbWF4O1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0aSA9IG9uZSA/IGluZGV4IDogMDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHNlbGVjdGVkIG9wdGlvbnNcblx0XHRcdFx0Zm9yICggOyBpIDwgbWF4OyBpKysgKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHQvLyBJRTgtOSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICgjMjU1MSlcblx0XHRcdFx0XHRpZiAoICggb3B0aW9uLnNlbGVjdGVkIHx8IGkgPT09IGluZGV4ICkgJiZcblxuXHRcdFx0XHRcdFx0XHQvLyBEb24ndCByZXR1cm4gb3B0aW9ucyB0aGF0IGFyZSBkaXNhYmxlZCBvciBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHRcdFx0XHRcdCFvcHRpb24uZGlzYWJsZWQgJiZcblx0XHRcdFx0XHRcdFx0KCAhb3B0aW9uLnBhcmVudE5vZGUuZGlzYWJsZWQgfHxcblx0XHRcdFx0XHRcdFx0XHQhbm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCBcIm9wdGdyb3VwXCIgKSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBHZXQgdGhlIHNwZWNpZmljIHZhbHVlIGZvciB0aGUgb3B0aW9uXG5cdFx0XHRcdFx0XHR2YWx1ZSA9IGpRdWVyeSggb3B0aW9uICkudmFsKCk7XG5cblx0XHRcdFx0XHRcdC8vIFdlIGRvbid0IG5lZWQgYW4gYXJyYXkgZm9yIG9uZSBzZWxlY3RzXG5cdFx0XHRcdFx0XHRpZiAoIG9uZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBNdWx0aS1TZWxlY3RzIHJldHVybiBhbiBhcnJheVxuXHRcdFx0XHRcdFx0dmFsdWVzLnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH0sXG5cblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHR2YXIgb3B0aW9uU2V0LCBvcHRpb24sXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHR2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLFxuXHRcdFx0XHRcdGkgPSBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXG5cdFx0XHRcdFx0aWYgKCBvcHRpb24uc2VsZWN0ZWQgPVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGpRdWVyeS52YWxIb29rcy5vcHRpb24uZ2V0KCBvcHRpb24gKSwgdmFsdWVzICkgPiAtMVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0b3B0aW9uU2V0ID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbmQtYXNzaWduICovXG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBGb3JjZSBicm93c2VycyB0byBiZWhhdmUgY29uc2lzdGVudGx5IHdoZW4gbm9uLW1hdGNoaW5nIHZhbHVlIGlzIHNldFxuXHRcdFx0XHRpZiAoICFvcHRpb25TZXQgKSB7XG5cdFx0XHRcdFx0ZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gUmFkaW9zIGFuZCBjaGVja2JveGVzIGdldHRlci9zZXR0ZXJcbmpRdWVyeS5lYWNoKCBbIFwicmFkaW9cIiwgXCJjaGVja2JveFwiIF0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IHtcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS5jaGVja2VkID0galF1ZXJ5LmluQXJyYXkoIGpRdWVyeSggZWxlbSApLnZhbCgpLCB2YWx1ZSApID4gLTEgKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdGlmICggIXN1cHBvcnQuY2hlY2tPbiApIHtcblx0XHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXS5nZXQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IG51bGwgPyBcIm9uXCIgOiBlbGVtLnZhbHVlO1xuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUmV0dXJuIGpRdWVyeSBmb3IgYXR0cmlidXRlcy1vbmx5IGluY2x1c2lvblxuXG5cbnN1cHBvcnQuZm9jdXNpbiA9IFwib25mb2N1c2luXCIgaW4gd2luZG93O1xuXG5cbnZhciByZm9jdXNNb3JwaCA9IC9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLyxcblx0c3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgPSBmdW5jdGlvbiggZSApIHtcblx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9O1xuXG5qUXVlcnkuZXh0ZW5kKCBqUXVlcnkuZXZlbnQsIHtcblxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggZXZlbnQsIGRhdGEsIGVsZW0sIG9ubHlIYW5kbGVycyApIHtcblxuXHRcdHZhciBpLCBjdXIsIHRtcCwgYnViYmxlVHlwZSwgb250eXBlLCBoYW5kbGUsIHNwZWNpYWwsIGxhc3RFbGVtZW50LFxuXHRcdFx0ZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRvY3VtZW50IF0sXG5cdFx0XHR0eXBlID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcInR5cGVcIiApID8gZXZlbnQudHlwZSA6IGV2ZW50LFxuXHRcdFx0bmFtZXNwYWNlcyA9IGhhc093bi5jYWxsKCBldmVudCwgXCJuYW1lc3BhY2VcIiApID8gZXZlbnQubmFtZXNwYWNlLnNwbGl0KCBcIi5cIiApIDogW107XG5cblx0XHRjdXIgPSBsYXN0RWxlbWVudCA9IHRtcCA9IGVsZW0gPSBlbGVtIHx8IGRvY3VtZW50O1xuXG5cdFx0Ly8gRG9uJ3QgZG8gZXZlbnRzIG9uIHRleHQgYW5kIGNvbW1lbnQgbm9kZXNcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBmb2N1cy9ibHVyIG1vcnBocyB0byBmb2N1c2luL291dDsgZW5zdXJlIHdlJ3JlIG5vdCBmaXJpbmcgdGhlbSByaWdodCBub3dcblx0XHRpZiAoIHJmb2N1c01vcnBoLnRlc3QoIHR5cGUgKyBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCB0eXBlLmluZGV4T2YoIFwiLlwiICkgPiAtMSApIHtcblxuXHRcdFx0Ly8gTmFtZXNwYWNlZCB0cmlnZ2VyOyBjcmVhdGUgYSByZWdleHAgdG8gbWF0Y2ggZXZlbnQgdHlwZSBpbiBoYW5kbGUoKVxuXHRcdFx0bmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoIFwiLlwiICk7XG5cdFx0XHR0eXBlID0gbmFtZXNwYWNlcy5zaGlmdCgpO1xuXHRcdFx0bmFtZXNwYWNlcy5zb3J0KCk7XG5cdFx0fVxuXHRcdG9udHlwZSA9IHR5cGUuaW5kZXhPZiggXCI6XCIgKSA8IDAgJiYgXCJvblwiICsgdHlwZTtcblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhIGpRdWVyeS5FdmVudCBvYmplY3QsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0eXBlIHN0cmluZ1xuXHRcdGV2ZW50ID0gZXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0ZXZlbnQgOlxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggdHlwZSwgdHlwZW9mIGV2ZW50ID09PSBcIm9iamVjdFwiICYmIGV2ZW50ICk7XG5cblx0XHQvLyBUcmlnZ2VyIGJpdG1hc2s6ICYgMSBmb3IgbmF0aXZlIGhhbmRsZXJzOyAmIDIgZm9yIGpRdWVyeSAoYWx3YXlzIHRydWUpXG5cdFx0ZXZlbnQuaXNUcmlnZ2VyID0gb25seUhhbmRsZXJzID8gMiA6IDM7XG5cdFx0ZXZlbnQubmFtZXNwYWNlID0gbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApO1xuXHRcdGV2ZW50LnJuYW1lc3BhY2UgPSBldmVudC5uYW1lc3BhY2UgP1xuXHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICkgOlxuXHRcdFx0bnVsbDtcblxuXHRcdC8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNlZFxuXHRcdGV2ZW50LnJlc3VsdCA9IHVuZGVmaW5lZDtcblx0XHRpZiAoICFldmVudC50YXJnZXQgKSB7XG5cdFx0XHRldmVudC50YXJnZXQgPSBlbGVtO1xuXHRcdH1cblxuXHRcdC8vIENsb25lIGFueSBpbmNvbWluZyBkYXRhIGFuZCBwcmVwZW5kIHRoZSBldmVudCwgY3JlYXRpbmcgdGhlIGhhbmRsZXIgYXJnIGxpc3Rcblx0XHRkYXRhID0gZGF0YSA9PSBudWxsID9cblx0XHRcdFsgZXZlbnQgXSA6XG5cdFx0XHRqUXVlcnkubWFrZUFycmF5KCBkYXRhLCBbIGV2ZW50IF0gKTtcblxuXHRcdC8vIEFsbG93IHNwZWNpYWwgZXZlbnRzIHRvIGRyYXcgb3V0c2lkZSB0aGUgbGluZXNcblx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgc3BlY2lhbC50cmlnZ2VyICYmIHNwZWNpYWwudHJpZ2dlci5hcHBseSggZWxlbSwgZGF0YSApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgZXZlbnQgcHJvcGFnYXRpb24gcGF0aCBpbiBhZHZhbmNlLCBwZXIgVzNDIGV2ZW50cyBzcGVjICgjOTk1MSlcblx0XHQvLyBCdWJibGUgdXAgdG8gZG9jdW1lbnQsIHRoZW4gdG8gd2luZG93OyB3YXRjaCBmb3IgYSBnbG9iYWwgb3duZXJEb2N1bWVudCB2YXIgKCM5NzI0KVxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhc3BlY2lhbC5ub0J1YmJsZSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0YnViYmxlVHlwZSA9IHNwZWNpYWwuZGVsZWdhdGVUeXBlIHx8IHR5cGU7XG5cdFx0XHRpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkge1xuXHRcdFx0XHRjdXIgPSBjdXIucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGZvciAoIDsgY3VyOyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIGN1ciApO1xuXHRcdFx0XHR0bXAgPSBjdXI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9jdW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKVxuXHRcdFx0aWYgKCB0bXAgPT09ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCB0bXAuZGVmYXVsdFZpZXcgfHwgdG1wLnBhcmVudFdpbmRvdyB8fCB3aW5kb3cgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGaXJlIGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGV2ZW50UGF0aFsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGxhc3RFbGVtZW50ID0gY3VyO1xuXHRcdFx0ZXZlbnQudHlwZSA9IGkgPiAxID9cblx0XHRcdFx0YnViYmxlVHlwZSA6XG5cdFx0XHRcdHNwZWNpYWwuYmluZFR5cGUgfHwgdHlwZTtcblxuXHRcdFx0Ly8galF1ZXJ5IGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9ICggZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gJiZcblx0XHRcdFx0ZGF0YVByaXYuZ2V0KCBjdXIsIFwiaGFuZGxlXCIgKTtcblx0XHRcdGlmICggaGFuZGxlICkge1xuXHRcdFx0XHRoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBOYXRpdmUgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gb250eXBlICYmIGN1clsgb250eXBlIF07XG5cdFx0XHRpZiAoIGhhbmRsZSAmJiBoYW5kbGUuYXBwbHkgJiYgYWNjZXB0RGF0YSggY3VyICkgKSB7XG5cdFx0XHRcdGV2ZW50LnJlc3VsdCA9IGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGV2ZW50LnR5cGUgPSB0eXBlO1xuXG5cdFx0Ly8gSWYgbm9ib2R5IHByZXZlbnRlZCB0aGUgZGVmYXVsdCBhY3Rpb24sIGRvIGl0IG5vd1xuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKSB7XG5cblx0XHRcdGlmICggKCAhc3BlY2lhbC5fZGVmYXVsdCB8fFxuXHRcdFx0XHRzcGVjaWFsLl9kZWZhdWx0LmFwcGx5KCBldmVudFBhdGgucG9wKCksIGRhdGEgKSA9PT0gZmFsc2UgKSAmJlxuXHRcdFx0XHRhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cblx0XHRcdFx0Ly8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIHRoZSBldmVudC5cblx0XHRcdFx0Ly8gRG9uJ3QgZG8gZGVmYXVsdCBhY3Rpb25zIG9uIHdpbmRvdywgdGhhdCdzIHdoZXJlIGdsb2JhbCB2YXJpYWJsZXMgYmUgKCM2MTcwKVxuXHRcdFx0XHRpZiAoIG9udHlwZSAmJiBpc0Z1bmN0aW9uKCBlbGVtWyB0eXBlIF0gKSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0XHRcdC8vIERvbid0IHJlLXRyaWdnZXIgYW4gb25GT08gZXZlbnQgd2hlbiB3ZSBjYWxsIGl0cyBGT08oKSBtZXRob2Rcblx0XHRcdFx0XHR0bXAgPSBlbGVtWyBvbnR5cGUgXTtcblxuXHRcdFx0XHRcdGlmICggdG1wICkge1xuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSBudWxsO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFByZXZlbnQgcmUtdHJpZ2dlcmluZyBvZiB0aGUgc2FtZSBldmVudCwgc2luY2Ugd2UgYWxyZWFkeSBidWJibGVkIGl0IGFib3ZlXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHR5cGU7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xuXG5cdFx0XHRcdFx0aWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0XHRcdFx0bGFzdEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdW5kZWZpbmVkO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IHRtcDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdC8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9uZVxuXHQvLyBVc2VkIG9ubHkgZm9yIGBmb2N1cyhpbiB8IG91dClgIGV2ZW50c1xuXHRzaW11bGF0ZTogZnVuY3Rpb24oIHR5cGUsIGVsZW0sIGV2ZW50ICkge1xuXHRcdHZhciBlID0galF1ZXJ5LmV4dGVuZChcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoKSxcblx0XHRcdGV2ZW50LFxuXHRcdFx0e1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRpc1NpbXVsYXRlZDogdHJ1ZVxuXHRcdFx0fVxuXHRcdCk7XG5cblx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggZSwgbnVsbCwgZWxlbSApO1xuXHR9XG5cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXMgKTtcblx0XHR9ICk7XG5cdH0sXG5cdHRyaWdnZXJIYW5kbGVyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgZWxlbSA9IHRoaXNbIDAgXTtcblx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIGVsZW0sIHRydWUgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxuXG4vLyBTdXBwb3J0OiBGaXJlZm94IDw9NDRcbi8vIEZpcmVmb3ggZG9lc24ndCBoYXZlIGZvY3VzKGluIHwgb3V0KSBldmVudHNcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njg3Nzg3XG4vL1xuLy8gU3VwcG9ydDogQ2hyb21lIDw9NDggLSA0OSwgU2FmYXJpIDw9OS4wIC0gOS4xXG4vLyBmb2N1cyhpbiB8IG91dCkgZXZlbnRzIGZpcmUgYWZ0ZXIgZm9jdXMgJiBibHVyIGV2ZW50cyxcbi8vIHdoaWNoIGlzIHNwZWMgdmlvbGF0aW9uIC0gaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudHMtZm9jdXNldmVudC1ldmVudC1vcmRlclxuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NDk4NTdcbmlmICggIXN1cHBvcnQuZm9jdXNpbiApIHtcblx0alF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblxuXHRcdC8vIEF0dGFjaCBhIHNpbmdsZSBjYXB0dXJpbmcgaGFuZGxlciBvbiB0aGUgZG9jdW1lbnQgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0XG5cdFx0dmFyIGhhbmRsZXIgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQuc2ltdWxhdGUoIGZpeCwgZXZlbnQudGFyZ2V0LCBqUXVlcnkuZXZlbnQuZml4KCBldmVudCApICk7XG5cdFx0fTtcblxuXHRcdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBmaXggXSA9IHtcblx0XHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5hZGRFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgKCBhdHRhY2hlcyB8fCAwICkgKyAxICk7XG5cdFx0XHR9LFxuXHRcdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICkgLSAxO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0gKTtcbn1cbnZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcblxudmFyIG5vbmNlID0gRGF0ZS5ub3coKTtcblxudmFyIHJxdWVyeSA9ICggL1xcPy8gKTtcblxuXG5cbi8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmdcbmpRdWVyeS5wYXJzZVhNTCA9IGZ1bmN0aW9uKCBkYXRhICkge1xuXHR2YXIgeG1sO1xuXHRpZiAoICFkYXRhIHx8IHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0Ly8gSUUgdGhyb3dzIG9uIHBhcnNlRnJvbVN0cmluZyB3aXRoIGludmFsaWQgaW5wdXQuXG5cdHRyeSB7XG5cdFx0eG1sID0gKCBuZXcgd2luZG93LkRPTVBhcnNlcigpICkucGFyc2VGcm9tU3RyaW5nKCBkYXRhLCBcInRleHQveG1sXCIgKTtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0eG1sID0gdW5kZWZpbmVkO1xuXHR9XG5cblx0aWYgKCAheG1sIHx8IHhtbC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJwYXJzZXJlcnJvclwiICkubGVuZ3RoICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyBkYXRhICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cblxudmFyXG5cdHJicmFja2V0ID0gL1xcW1xcXSQvLFxuXHRyQ1JMRiA9IC9cXHI/XFxuL2csXG5cdHJzdWJtaXR0ZXJUeXBlcyA9IC9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxcblx0cnN1Ym1pdHRhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO1xuXG5mdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7XG5cdHZhciBuYW1lO1xuXG5cdGlmICggQXJyYXkuaXNBcnJheSggb2JqICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS5cblx0XHRqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHtcblx0XHRcdGlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7XG5cblx0XHRcdFx0Ly8gVHJlYXQgZWFjaCBhcnJheSBpdGVtIGFzIGEgc2NhbGFyLlxuXHRcdFx0XHRhZGQoIHByZWZpeCwgdiApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cyBudW1lcmljIGluZGV4LlxuXHRcdFx0XHRidWlsZFBhcmFtcyhcblx0XHRcdFx0XHRwcmVmaXggKyBcIltcIiArICggdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPSBudWxsID8gaSA6IFwiXCIgKSArIFwiXVwiLFxuXHRcdFx0XHRcdHYsXG5cdFx0XHRcdFx0dHJhZGl0aW9uYWwsXG5cdFx0XHRcdFx0YWRkXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdH0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiB0b1R5cGUoIG9iaiApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIG9iamVjdCBpdGVtLlxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCArIFwiW1wiICsgbmFtZSArIFwiXVwiLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHNjYWxhciBpdGVtLlxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcblx0fVxufVxuXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxuLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XG5cdHZhciBwcmVmaXgsXG5cdFx0cyA9IFtdLFxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCB1c2UgaXRzIHJldHVybiB2YWx1ZVxuXHRcdFx0dmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgP1xuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb24oKSA6XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbjtcblxuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArXG5cdFx0XHRcdGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdH07XG5cblx0Ly8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy5cblx0aWYgKCBBcnJheS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9ICk7XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdH0gKS5nZXQoKTtcblx0fVxufSApO1xuXG5cbnZhclxuXHRyMjAgPSAvJTIwL2csXG5cdHJoYXNoID0gLyMuKiQvLFxuXHRyYW50aUNhY2hlID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcblxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblx0b3JpZ2luQW5jaG9yLmhyZWYgPSBsb2NhdGlvbi5ocmVmO1xuXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XG5mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHtcblxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXG5cdHJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkge1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZnVuYyA9IGRhdGFUeXBlRXhwcmVzc2lvbjtcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xuXHRcdH1cblxuXHRcdHZhciBkYXRhVHlwZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0ZGF0YVR5cGVzID0gZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggZnVuYyApICkge1xuXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcblx0XHRcdFx0aWYgKCBkYXRhVHlwZVsgMCBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkucHVzaCggZnVuYyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XG5cblx0dmFyIGluc3BlY3RlZCA9IHt9LFxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xuXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xuXHRcdHZhciBzZWxlY3RlZDtcblx0XHRpbnNwZWN0ZWRbIGRhdGFUeXBlIF0gPSB0cnVlO1xuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xuXHRcdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydCA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XG5cblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xuXHR9XG5cblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XG59XG5cbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcbi8vIEZpeGVzICM5ODg3XG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcblx0dmFyIGtleSwgZGVlcCxcblx0XHRmbGF0T3B0aW9ucyA9IGpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnMgfHwge307XG5cblx0Zm9yICgga2V5IGluIHNyYyApIHtcblx0XHRpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENvbmRlbnNlIGVxdWl2YWxlbmNlIGNvbnZlcnRlcnNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y3VycmVudCA9IHRtcFsgMCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXBwbHkgY29udmVydGVyIChpZiBub3QgYW4gZXF1aXZhbGVuY2UpXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcblxuXHRcdFx0XHRcdC8vIFVubGVzcyBlcnJvcnMgYXJlIGFsbG93ZWQgdG8gYnViYmxlLCBjYXRjaCBhbmQgcmV0dXJuIHRoZW1cblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgcy50aHJvd3MgKSB7XG5cdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXRlOiBcInBhcnNlcmVycm9yXCIsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNvbnYgPyBlIDogXCJObyBjb252ZXJzaW9uIGZyb20gXCIgKyBwcmV2ICsgXCIgdG8gXCIgKyBjdXJyZW50XG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHsgc3RhdGU6IFwic3VjY2Vzc1wiLCBkYXRhOiByZXNwb25zZSB9O1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzXG5cdGFjdGl2ZTogMCxcblxuXHQvLyBMYXN0LU1vZGlmaWVkIGhlYWRlciBjYWNoZSBmb3IgbmV4dCByZXF1ZXN0XG5cdGxhc3RNb2RpZmllZDoge30sXG5cdGV0YWc6IHt9LFxuXG5cdGFqYXhTZXR0aW5nczoge1xuXHRcdHVybDogbG9jYXRpb24uaHJlZixcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGlzTG9jYWw6IHJsb2NhbFByb3RvY29sLnRlc3QoIGxvY2F0aW9uLnByb3RvY29sICksXG5cdFx0Z2xvYmFsOiB0cnVlLFxuXHRcdHByb2Nlc3NEYXRhOiB0cnVlLFxuXHRcdGFzeW5jOiB0cnVlLFxuXHRcdGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLFxuXG5cdFx0Lypcblx0XHR0aW1lb3V0OiAwLFxuXHRcdGRhdGE6IG51bGwsXG5cdFx0ZGF0YVR5cGU6IG51bGwsXG5cdFx0dXNlcm5hbWU6IG51bGwsXG5cdFx0cGFzc3dvcmQ6IG51bGwsXG5cdFx0Y2FjaGU6IG51bGwsXG5cdFx0dGhyb3dzOiBmYWxzZSxcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXG5cdFx0aGVhZGVyczoge30sXG5cdFx0Ki9cblxuXHRcdGFjY2VwdHM6IHtcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxuXHRcdFx0aHRtbDogXCJ0ZXh0L2h0bWxcIixcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXG5cdFx0fSxcblxuXHRcdGNvbnRlbnRzOiB7XG5cdFx0XHR4bWw6IC9cXGJ4bWxcXGIvLFxuXHRcdFx0aHRtbDogL1xcYmh0bWwvLFxuXHRcdFx0anNvbjogL1xcYmpzb25cXGIvXG5cdFx0fSxcblxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XG5cdFx0XHR4bWw6IFwicmVzcG9uc2VYTUxcIixcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXG5cdFx0fSxcblxuXHRcdC8vIERhdGEgY29udmVydGVyc1xuXHRcdC8vIEtleXMgc2VwYXJhdGUgc291cmNlIChvciBjYXRjaGFsbCBcIipcIikgYW5kIGRlc3RpbmF0aW9uIHR5cGVzIHdpdGggYSBzaW5nbGUgc3BhY2Vcblx0XHRjb252ZXJ0ZXJzOiB7XG5cblx0XHRcdC8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dFxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxuXG5cdFx0XHQvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbilcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXG5cblx0XHRcdC8vIEV2YWx1YXRlIHRleHQgYXMgYSBqc29uIGV4cHJlc3Npb25cblx0XHRcdFwidGV4dCBqc29uXCI6IEpTT04ucGFyc2UsXG5cblx0XHRcdC8vIFBhcnNlIHRleHQgYXMgeG1sXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxuXHRcdH0sXG5cblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcblx0XHQvLyBhbmQgd2hlbiB5b3UgY3JlYXRlIG9uZSB0aGF0IHNob3VsZG4ndCBiZVxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxuXHRcdGZsYXRPcHRpb25zOiB7XG5cdFx0XHR1cmw6IHRydWUsXG5cdFx0XHRjb250ZXh0OiB0cnVlXG5cdFx0fVxuXHR9LFxuXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XG5cdC8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy5cblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcblx0XHRyZXR1cm4gc2V0dGluZ3MgP1xuXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxuXHRcdFx0YWpheEV4dGVuZCggYWpheEV4dGVuZCggdGFyZ2V0LCBqUXVlcnkuYWpheFNldHRpbmdzICksIHNldHRpbmdzICkgOlxuXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXG5cdFx0XHRhamF4RXh0ZW5kKCBqUXVlcnkuYWpheFNldHRpbmdzLCB0YXJnZXQgKTtcblx0fSxcblxuXHRhamF4UHJlZmlsdGVyOiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMgKSxcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXG5cblx0Ly8gTWFpbiBtZXRob2Rcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcblxuXHRcdC8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0b3B0aW9ucyA9IHVybDtcblx0XHRcdHVybCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBGb3JjZSBvcHRpb25zIHRvIGJlIGFuIG9iamVjdFxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdFx0dmFyIHRyYW5zcG9ydCxcblxuXHRcdFx0Ly8gVVJMIHdpdGhvdXQgYW50aS1jYWNoZSBwYXJhbVxuXHRcdFx0Y2FjaGVVUkwsXG5cblx0XHRcdC8vIFJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyxcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcblxuXHRcdFx0Ly8gdGltZW91dCBoYW5kbGVcblx0XHRcdHRpbWVvdXRUaW1lcixcblxuXHRcdFx0Ly8gVXJsIGNsZWFudXAgdmFyXG5cdFx0XHR1cmxBbmNob3IsXG5cblx0XHRcdC8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBzZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbilcblx0XHRcdGNvbXBsZXRlZCxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkXG5cdFx0XHRmaXJlR2xvYmFscyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJsXG5cdFx0XHR1bmNhY2hlZCxcblxuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdFxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXG5cblx0XHRcdC8vIENhbGxiYWNrcyBjb250ZXh0XG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcblxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXG5cdFx0XHRcdCggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LFxuXG5cdFx0XHQvLyBEZWZlcnJlZHNcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkID0galF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRzdGF0dXNDb2RlID0gcy5zdGF0dXNDb2RlIHx8IHt9LFxuXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxuXHRcdFx0cmVxdWVzdEhlYWRlcnMgPSB7fSxcblx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSxcblxuXHRcdFx0Ly8gRGVmYXVsdCBhYm9ydCBtZXNzYWdlXG5cdFx0XHRzdHJBYm9ydCA9IFwiY2FuY2VsZWRcIixcblxuXHRcdFx0Ly8gRmFrZSB4aHJcblx0XHRcdGpxWEhSID0ge1xuXHRcdFx0XHRyZWFkeVN0YXRlOiAwLFxuXG5cdFx0XHRcdC8vIEJ1aWxkcyBoZWFkZXJzIGhhc2h0YWJsZSBpZiBuZWVkZWRcblx0XHRcdFx0Z2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0XHRcdFx0dmFyIG1hdGNoO1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnMgPSB7fTtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoID0gcmhlYWRlcnMuZXhlYyggcmVzcG9uc2VIZWFkZXJzU3RyaW5nICkgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBtYXRjaCA9PSBudWxsID8gbnVsbCA6IG1hdGNoO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFJhdyBzdHJpbmdcblx0XHRcdFx0Z2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gY29tcGxldGVkID8gcmVzcG9uc2VIZWFkZXJzU3RyaW5nIDogbnVsbDtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYWNoZXMgdGhlIGhlYWRlclxuXHRcdFx0XHRzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdG5hbWUgPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSA9XG5cdFx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8IG5hbWU7XG5cdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlcyByZXNwb25zZSBjb250ZW50LXR5cGUgaGVhZGVyXG5cdFx0XHRcdG92ZXJyaWRlTWltZVR5cGU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRzLm1pbWVUeXBlID0gdHlwZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdFx0c3RhdHVzQ29kZTogZnVuY3Rpb24oIG1hcCApIHtcblx0XHRcdFx0XHR2YXIgY29kZTtcblx0XHRcdFx0XHRpZiAoIG1hcCApIHtcblx0XHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNhbGxiYWNrc1xuXHRcdFx0XHRcdFx0XHRqcVhIUi5hbHdheXMoIG1hcFsganFYSFIuc3RhdHVzIF0gKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTGF6eS1hZGQgdGhlIG5ldyBjYWxsYmFja3MgaW4gYSB3YXkgdGhhdCBwcmVzZXJ2ZXMgb2xkIG9uZXNcblx0XHRcdFx0XHRcdFx0Zm9yICggY29kZSBpbiBtYXAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdHVzQ29kZVsgY29kZSBdID0gWyBzdGF0dXNDb2RlWyBjb2RlIF0sIG1hcFsgY29kZSBdIF07XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FuY2VsIHRoZSByZXF1ZXN0XG5cdFx0XHRcdGFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHR2YXIgZmluYWxUZXh0ID0gc3RhdHVzVGV4dCB8fCBzdHJBYm9ydDtcblx0XHRcdFx0XHRpZiAoIHRyYW5zcG9ydCApIHtcblx0XHRcdFx0XHRcdHRyYW5zcG9ydC5hYm9ydCggZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRvbmUoIDAsIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0Ly8gQXR0YWNoIGRlZmVycmVkc1xuXHRcdGRlZmVycmVkLnByb21pc2UoIGpxWEhSICk7XG5cblx0XHQvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkIChwcmVmaWx0ZXJzIG1pZ2h0IGV4cGVjdCBpdClcblx0XHQvLyBIYW5kbGUgZmFsc3kgdXJsIGluIHRoZSBzZXR0aW5ncyBvYmplY3QgKCMxMDA5MzogY29uc2lzdGVuY3kgd2l0aCBvbGQgc2lnbmF0dXJlKVxuXHRcdC8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlmIGF2YWlsYWJsZVxuXHRcdHMudXJsID0gKCAoIHVybCB8fCBzLnVybCB8fCBsb2NhdGlvbi5ocmVmICkgKyBcIlwiIClcblx0XHRcdC5yZXBsYWNlKCBycHJvdG9jb2wsIGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICk7XG5cblx0XHQvLyBBbGlhcyBtZXRob2Qgb3B0aW9uIHRvIHR5cGUgYXMgcGVyIHRpY2tldCAjMTIwMDRcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xuXG5cdFx0Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdFxuXHRcdHMuZGF0YVR5cGVzID0gKCBzLmRhdGFUeXBlIHx8IFwiKlwiICkudG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXG5cdFx0Ly8gQSBjcm9zcy1kb21haW4gcmVxdWVzdCBpcyBpbiBvcmRlciB3aGVuIHRoZSBvcmlnaW4gZG9lc24ndCBtYXRjaCB0aGUgY3VycmVudCBvcmlnaW4uXG5cdFx0aWYgKCBzLmNyb3NzRG9tYWluID09IG51bGwgKSB7XG5cdFx0XHR1cmxBbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSwgRWRnZSAxMiAtIDE1XG5cdFx0XHQvLyBJRSB0aHJvd3MgZXhjZXB0aW9uIG9uIGFjY2Vzc2luZyB0aGUgaHJlZiBwcm9wZXJ0eSBpZiB1cmwgaXMgbWFsZm9ybWVkLFxuXHRcdFx0Ly8gZS5nLiBodHRwOi8vZXhhbXBsZS5jb206ODB4L1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSBzLnVybDtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSBvbmx5XG5cdFx0XHRcdC8vIEFuY2hvcidzIGhvc3QgcHJvcGVydHkgaXNuJ3QgY29ycmVjdGx5IHNldCB3aGVuIHMudXJsIGlzIHJlbGF0aXZlXG5cdFx0XHRcdHVybEFuY2hvci5ocmVmID0gdXJsQW5jaG9yLmhyZWY7XG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSBvcmlnaW5BbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyBvcmlnaW5BbmNob3IuaG9zdCAhPT1cblx0XHRcdFx0XHR1cmxBbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxBbmNob3IuaG9zdDtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZXJlIGlzIGFuIGVycm9yIHBhcnNpbmcgdGhlIFVSTCwgYXNzdW1lIGl0IGlzIGNyb3NzRG9tYWluLFxuXHRcdFx0XHQvLyBpdCBjYW4gYmUgcmVqZWN0ZWQgYnkgdGhlIHRyYW5zcG9ydCBpZiBpdCBpcyBpbnZhbGlkXG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgZGF0YSBpZiBub3QgYWxyZWFkeSBhIHN0cmluZ1xuXHRcdGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiYgdHlwZW9mIHMuZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHMuZGF0YSA9IGpRdWVyeS5wYXJhbSggcy5kYXRhLCBzLnRyYWRpdGlvbmFsICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcHJlZmlsdGVyc1xuXHRcdGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzLCBzLCBvcHRpb25zLCBqcVhIUiApO1xuXG5cdFx0Ly8gSWYgcmVxdWVzdCB3YXMgYWJvcnRlZCBpbnNpZGUgYSBwcmVmaWx0ZXIsIHN0b3AgdGhlcmVcblx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdHJldHVybiBqcVhIUjtcblx0XHR9XG5cblx0XHQvLyBXZSBjYW4gZmlyZSBnbG9iYWwgZXZlbnRzIGFzIG9mIG5vdyBpZiBhc2tlZCB0b1xuXHRcdC8vIERvbid0IGZpcmUgZXZlbnRzIGlmIGpRdWVyeS5ldmVudCBpcyB1bmRlZmluZWQgaW4gYW4gQU1ELXVzYWdlIHNjZW5hcmlvICgjMTUxMTgpXG5cdFx0ZmlyZUdsb2JhbHMgPSBqUXVlcnkuZXZlbnQgJiYgcy5nbG9iYWw7XG5cblx0XHQvLyBXYXRjaCBmb3IgYSBuZXcgc2V0IG9mIHJlcXVlc3RzXG5cdFx0aWYgKCBmaXJlR2xvYmFscyAmJiBqUXVlcnkuYWN0aXZlKysgPT09IDAgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RhcnRcIiApO1xuXHRcdH1cblxuXHRcdC8vIFVwcGVyY2FzZSB0aGUgdHlwZVxuXHRcdHMudHlwZSA9IHMudHlwZS50b1VwcGVyQ2FzZSgpO1xuXG5cdFx0Ly8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRlbnRcblx0XHRzLmhhc0NvbnRlbnQgPSAhcm5vQ29udGVudC50ZXN0KCBzLnR5cGUgKTtcblxuXHRcdC8vIFNhdmUgdGhlIFVSTCBpbiBjYXNlIHdlJ3JlIHRveWluZyB3aXRoIHRoZSBJZi1Nb2RpZmllZC1TaW5jZVxuXHRcdC8vIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciBsYXRlciBvblxuXHRcdC8vIFJlbW92ZSBoYXNoIHRvIHNpbXBsaWZ5IHVybCBtYW5pcHVsYXRpb25cblx0XHRjYWNoZVVSTCA9IHMudXJsLnJlcGxhY2UoIHJoYXNoLCBcIlwiICk7XG5cblx0XHQvLyBNb3JlIG9wdGlvbnMgaGFuZGxpbmcgZm9yIHJlcXVlc3RzIHdpdGggbm8gY29udGVudFxuXHRcdGlmICggIXMuaGFzQ29udGVudCApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIGhhc2ggc28gd2UgY2FuIHB1dCBpdCBiYWNrXG5cdFx0XHR1bmNhY2hlZCA9IHMudXJsLnNsaWNlKCBjYWNoZVVSTC5sZW5ndGggKTtcblxuXHRcdFx0Ly8gSWYgZGF0YSBpcyBhdmFpbGFibGUgYW5kIHNob3VsZCBiZSBwcm9jZXNzZWQsIGFwcGVuZCBkYXRhIHRvIHVybFxuXHRcdFx0aWYgKCBzLmRhdGEgJiYgKCBzLnByb2Nlc3NEYXRhIHx8IHR5cGVvZiBzLmRhdGEgPT09IFwic3RyaW5nXCIgKSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgKz0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuZGF0YTtcblxuXHRcdFx0XHQvLyAjOTY4MjogcmVtb3ZlIGRhdGEgc28gdGhhdCBpdCdzIG5vdCB1c2VkIGluIGFuIGV2ZW50dWFsIHJldHJ5XG5cdFx0XHRcdGRlbGV0ZSBzLmRhdGE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBvciB1cGRhdGUgYW50aS1jYWNoZSBwYXJhbSBpZiBuZWVkZWRcblx0XHRcdGlmICggcy5jYWNoZSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdGNhY2hlVVJMID0gY2FjaGVVUkwucmVwbGFjZSggcmFudGlDYWNoZSwgXCIkMVwiICk7XG5cdFx0XHRcdHVuY2FjaGVkID0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIFwiXz1cIiArICggbm9uY2UrKyApICsgdW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxuXHRcdFx0XHRpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gXCJIRUFEXCIgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XG5cblx0XHRcdFx0Ly8gaWYgbm90IG1vZGlmaWVkXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlO1xuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0aXNTdWNjZXNzID0gIWVycm9yO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RvcFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ganFYSFI7XG5cdH0sXG5cblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssIFwianNvblwiICk7XG5cdH0sXG5cblx0Z2V0U2NyaXB0OiBmdW5jdGlvbiggdXJsLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCB1bmRlZmluZWQsIGNhbGxiYWNrLCBcInNjcmlwdFwiICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGRhdGEgKSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IGNhbGxiYWNrO1xuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUgLnVybClcblx0XHRyZXR1cm4galF1ZXJ5LmFqYXgoIGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0dHlwZTogbWV0aG9kLFxuXHRcdFx0ZGF0YVR5cGU6IHR5cGUsXG5cdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0c3VjY2VzczogY2FsbGJhY2tcblx0XHR9LCBqUXVlcnkuaXNQbGFpbk9iamVjdCggdXJsICkgJiYgdXJsICkgKTtcblx0fTtcbn0gKTtcblxuXG5qUXVlcnkuX2V2YWxVcmwgPSBmdW5jdGlvbiggdXJsICkge1xuXHRyZXR1cm4galF1ZXJ5LmFqYXgoIHtcblx0XHR1cmw6IHVybCxcblxuXHRcdC8vIE1ha2UgdGhpcyBleHBsaWNpdCwgc2luY2UgdXNlciBjYW4gb3ZlcnJpZGUgdGhpcyB0aHJvdWdoIGFqYXhTZXR1cCAoIzExMjY0KVxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0ZGF0YVR5cGU6IFwic2NyaXB0XCIsXG5cdFx0Y2FjaGU6IHRydWUsXG5cdFx0YXN5bmM6IGZhbHNlLFxuXHRcdGdsb2JhbDogZmFsc2UsXG5cdFx0XCJ0aHJvd3NcIjogdHJ1ZVxuXHR9ICk7XG59O1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0d3JhcEFsbDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIHdyYXA7XG5cblx0XHRpZiAoIHRoaXNbIDAgXSApIHtcblx0XHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0XHRodG1sID0gaHRtbC5jYWxsKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmRcblx0XHRcdHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNbIDAgXS5vd25lckRvY3VtZW50ICkuZXEoIDAgKS5jbG9uZSggdHJ1ZSApO1xuXG5cdFx0XHRpZiAoIHRoaXNbIDAgXS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHdyYXAubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xuXG5cdFx0XHRcdHdoaWxlICggZWxlbS5maXJzdEVsZW1lbnRDaGlsZCApIHtcblx0XHRcdFx0XHRlbGVtID0gZWxlbS5maXJzdEVsZW1lbnRDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBlbGVtO1xuXHRcdFx0fSApLmFwcGVuZCggdGhpcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHdyYXBJbm5lcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcElubmVyKCBodG1sLmNhbGwoIHRoaXMsIGkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSxcblx0XHRcdFx0Y29udGVudHMgPSBzZWxmLmNvbnRlbnRzKCk7XG5cblx0XHRcdGlmICggY29udGVudHMubGVuZ3RoICkge1xuXHRcdFx0XHRjb250ZW50cy53cmFwQWxsKCBodG1sICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNlbGYuYXBwZW5kKCBodG1sICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciBodG1sSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIGh0bWwgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaHRtbElzRnVuY3Rpb24gPyBodG1sLmNhbGwoIHRoaXMsIGkgKSA6IGh0bWwgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0dW53cmFwOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dGhpcy5wYXJlbnQoIHNlbGVjdG9yICkubm90KCBcImJvZHlcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkucmVwbGFjZVdpdGgoIHRoaXMuY2hpbGROb2RlcyApO1xuXHRcdH0gKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuaGlkZGVuID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlKCBlbGVtICk7XG59O1xualF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhISggZWxlbS5vZmZzZXRXaWR0aCB8fCBlbGVtLm9mZnNldEhlaWdodCB8fCBlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICk7XG59O1xuXG5cblxuXG5qUXVlcnkuYWpheFNldHRpbmdzLnhociA9IGZ1bmN0aW9uKCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XG5cdH0gY2F0Y2ggKCBlICkge31cbn07XG5cbnZhciB4aHJTdWNjZXNzU3RhdHVzID0ge1xuXG5cdFx0Ly8gRmlsZSBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyBjb2RlIDAsIGFzc3VtZSAyMDBcblx0XHQwOiAyMDAsXG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdC8vICMxNDUwOiBzb21ldGltZXMgSUUgcmV0dXJucyAxMjIzIHdoZW4gaXQgc2hvdWxkIGJlIDIwNFxuXHRcdDEyMjM6IDIwNFxuXHR9LFxuXHR4aHJTdXBwb3J0ZWQgPSBqUXVlcnkuYWpheFNldHRpbmdzLnhocigpO1xuXG5zdXBwb3J0LmNvcnMgPSAhIXhoclN1cHBvcnRlZCAmJiAoIFwid2l0aENyZWRlbnRpYWxzXCIgaW4geGhyU3VwcG9ydGVkICk7XG5zdXBwb3J0LmFqYXggPSB4aHJTdXBwb3J0ZWQgPSAhIXhoclN1cHBvcnRlZDtcblxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHR2YXIgY2FsbGJhY2ssIGVycm9yQ2FsbGJhY2s7XG5cblx0Ly8gQ3Jvc3MgZG9tYWluIG9ubHkgYWxsb3dlZCBpZiBzdXBwb3J0ZWQgdGhyb3VnaCBYTUxIdHRwUmVxdWVzdFxuXHRpZiAoIHN1cHBvcnQuY29ycyB8fCB4aHJTdXBwb3J0ZWQgJiYgIW9wdGlvbnMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbmQ6IGZ1bmN0aW9uKCBoZWFkZXJzLCBjb21wbGV0ZSApIHtcblx0XHRcdFx0dmFyIGksXG5cdFx0XHRcdFx0eGhyID0gb3B0aW9ucy54aHIoKTtcblxuXHRcdFx0XHR4aHIub3Blbihcblx0XHRcdFx0XHRvcHRpb25zLnR5cGUsXG5cdFx0XHRcdFx0b3B0aW9ucy51cmwsXG5cdFx0XHRcdFx0b3B0aW9ucy5hc3luYyxcblx0XHRcdFx0XHRvcHRpb25zLnVzZXJuYW1lLFxuXHRcdFx0XHRcdG9wdGlvbnMucGFzc3dvcmRcblx0XHRcdFx0KTtcblxuXHRcdFx0XHQvLyBBcHBseSBjdXN0b20gZmllbGRzIGlmIHByb3ZpZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0Zm9yICggaSBpbiBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRcdHhoclsgaSBdID0gb3B0aW9ucy54aHJGaWVsZHNbIGkgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBPdmVycmlkZSBtaW1lIHR5cGUgaWYgbmVlZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy5taW1lVHlwZSAmJiB4aHIub3ZlcnJpZGVNaW1lVHlwZSApIHtcblx0XHRcdFx0XHR4aHIub3ZlcnJpZGVNaW1lVHlwZSggb3B0aW9ucy5taW1lVHlwZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gWC1SZXF1ZXN0ZWQtV2l0aCBoZWFkZXJcblx0XHRcdFx0Ly8gRm9yIGNyb3NzLWRvbWFpbiByZXF1ZXN0cywgc2VlaW5nIGFzIGNvbmRpdGlvbnMgZm9yIGEgcHJlZmxpZ2h0IGFyZVxuXHRcdFx0XHQvLyBha2luIHRvIGEgamlnc2F3IHB1enpsZSwgd2Ugc2ltcGx5IG5ldmVyIHNldCBpdCB0byBiZSBzdXJlLlxuXHRcdFx0XHQvLyAoaXQgY2FuIGFsd2F5cyBiZSBzZXQgb24gYSBwZXItcmVxdWVzdCBiYXNpcyBvciBldmVuIHVzaW5nIGFqYXhTZXR1cClcblx0XHRcdFx0Ly8gRm9yIHNhbWUtZG9tYWluIHJlcXVlc3RzLCB3b24ndCBjaGFuZ2UgaGVhZGVyIGlmIGFscmVhZHkgcHJvdmlkZWQuXG5cdFx0XHRcdGlmICggIW9wdGlvbnMuY3Jvc3NEb21haW4gJiYgIWhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gKSB7XG5cdFx0XHRcdFx0aGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSA9IFwiWE1MSHR0cFJlcXVlc3RcIjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFNldCBoZWFkZXJzXG5cdFx0XHRcdGZvciAoIGkgaW4gaGVhZGVycyApIHtcblx0XHRcdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlciggaSwgaGVhZGVyc1sgaSBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gZXJyb3JDYWxsYmFjayA9IHhoci5vbmxvYWQgPVxuXHRcdFx0XHRcdFx0XHRcdHhoci5vbmVycm9yID0geGhyLm9uYWJvcnQgPSB4aHIub250aW1lb3V0ID1cblx0XHRcdFx0XHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuXG5cdFx0XHRcdFx0XHRcdGlmICggdHlwZSA9PT0gXCJhYm9ydFwiICkge1xuXHRcdFx0XHRcdFx0XHRcdHhoci5hYm9ydCgpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCB0eXBlID09PSBcImVycm9yXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIE9uIGEgbWFudWFsIG5hdGl2ZSBhYm9ydCwgSUU5IHRocm93c1xuXHRcdFx0XHRcdFx0XHRcdC8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNzIHRoYXQgaXMgbm90IHJlYWR5U3RhdGVcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHR5cGVvZiB4aHIuc3RhdHVzICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIDAsIFwiZXJyb3JcIiApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBGaWxlOiBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwN1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHJTdWNjZXNzU3RhdHVzWyB4aHIuc3RhdHVzIF0gfHwgeGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0LFxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSUU5IGhhcyBubyBYSFIyIGJ1dCB0aHJvd3Mgb24gYmluYXJ5ICh0cmFjLTExNDI2KVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OClcblx0XHRcdFx0XHRcdFx0XHRcdCggeGhyLnJlc3BvbnNlVHlwZSB8fCBcInRleHRcIiApICE9PSBcInRleHRcIiAgfHxcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiB4aHIucmVzcG9uc2VUZXh0ICE9PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBiaW5hcnk6IHhoci5yZXNwb25zZSB9IDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyB0ZXh0OiB4aHIucmVzcG9uc2VUZXh0IH0sXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBMaXN0ZW4gdG8gZXZlbnRzXG5cdFx0XHRcdHhoci5vbmxvYWQgPSBjYWxsYmFjaygpO1xuXHRcdFx0XHRlcnJvckNhbGxiYWNrID0geGhyLm9uZXJyb3IgPSB4aHIub250aW1lb3V0ID0gY2FsbGJhY2soIFwiZXJyb3JcIiApO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDkgb25seVxuXHRcdFx0XHQvLyBVc2Ugb25yZWFkeXN0YXRlY2hhbmdlIHRvIHJlcGxhY2Ugb25hYm9ydFxuXHRcdFx0XHQvLyB0byBoYW5kbGUgdW5jYXVnaHQgYWJvcnRzXG5cdFx0XHRcdGlmICggeGhyLm9uYWJvcnQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR4aHIub25hYm9ydCA9IGVycm9yQ2FsbGJhY2s7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0XHQvLyBDaGVjayByZWFkeVN0YXRlIGJlZm9yZSB0aW1lb3V0IGFzIGl0IGNoYW5nZXNcblx0XHRcdFx0XHRcdGlmICggeGhyLnJlYWR5U3RhdGUgPT09IDQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQWxsb3cgb25lcnJvciB0byBiZSBjYWxsZWQgZmlyc3QsXG5cdFx0XHRcdFx0XHRcdC8vIGJ1dCB0aGF0IHdpbGwgbm90IGhhbmRsZSBhIG5hdGl2ZSBhYm9ydFxuXHRcdFx0XHRcdFx0XHQvLyBBbHNvLCBzYXZlIGVycm9yQ2FsbGJhY2sgdG8gYSB2YXJpYWJsZVxuXHRcdFx0XHRcdFx0XHQvLyBhcyB4aHIub25lcnJvciBjYW5ub3QgYmUgYWNjZXNzZWRcblx0XHRcdFx0XHRcdFx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRlcnJvckNhbGxiYWNrKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENyZWF0ZSB0aGUgYWJvcnQgY2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBjYWxsYmFjayggXCJhYm9ydFwiICk7XG5cblx0XHRcdFx0dHJ5IHtcblxuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3QgKHRoaXMgbWF5IHJhaXNlIGFuIGV4Y2VwdGlvbilcblx0XHRcdFx0XHR4aHIuc2VuZCggb3B0aW9ucy5oYXNDb250ZW50ICYmIG9wdGlvbnMuZGF0YSB8fCBudWxsICk7XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0Ly8gIzE0NjgzOiBPbmx5IHJldGhyb3cgaWYgdGhpcyBoYXNuJ3QgYmVlbiBub3RpZmllZCBhcyBhbiBlcnJvciB5ZXRcblx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG4vLyBQcmV2ZW50IGF1dG8tZXhlY3V0aW9uIG9mIHNjcmlwdHMgd2hlbiBubyBleHBsaWNpdCBkYXRhVHlwZSB3YXMgcHJvdmlkZWQgKFNlZSBnaC0yNDMyKVxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy5jb250ZW50cy5zY3JpcHQgPSBmYWxzZTtcblx0fVxufSApO1xuXG4vLyBJbnN0YWxsIHNjcmlwdCBkYXRhVHlwZVxualF1ZXJ5LmFqYXhTZXR1cCgge1xuXHRhY2NlcHRzOiB7XG5cdFx0c2NyaXB0OiBcInRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgXCIgK1xuXHRcdFx0XCJhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIlxuXHR9LFxuXHRjb250ZW50czoge1xuXHRcdHNjcmlwdDogL1xcYig/OmphdmF8ZWNtYSlzY3JpcHRcXGIvXG5cdH0sXG5cdGNvbnZlcnRlcnM6IHtcblx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoIHRleHQgKTtcblx0XHRcdHJldHVybiB0ZXh0O1xuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIYW5kbGUgY2FjaGUncyBzcGVjaWFsIGNhc2UgYW5kIGNyb3NzRG9tYWluXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdHMuY2FjaGUgPSBmYWxzZTtcblx0fVxuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy50eXBlID0gXCJHRVRcIjtcblx0fVxufSApO1xuXG4vLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnRcbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblxuXHQvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIHJlcXVlc3RzXG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHR2YXIgc2NyaXB0LCBjYWxsYmFjaztcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIF8sIGNvbXBsZXRlICkge1xuXHRcdFx0XHRzY3JpcHQgPSBqUXVlcnkoIFwiPHNjcmlwdD5cIiApLnByb3AoIHtcblx0XHRcdFx0XHRjaGFyc2V0OiBzLnNjcmlwdENoYXJzZXQsXG5cdFx0XHRcdFx0c3JjOiBzLnVybFxuXHRcdFx0XHR9ICkub24oXG5cdFx0XHRcdFx0XCJsb2FkIGVycm9yXCIsXG5cdFx0XHRcdFx0Y2FsbGJhY2sgPSBmdW5jdGlvbiggZXZ0ICkge1xuXHRcdFx0XHRcdFx0c2NyaXB0LnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBudWxsO1xuXHRcdFx0XHRcdFx0aWYgKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCBldnQudHlwZSA9PT0gXCJlcnJvclwiID8gNDA0IDogMjAwLCBldnQudHlwZSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0KTtcblxuXHRcdFx0XHQvLyBVc2UgbmF0aXZlIERPTSBtYW5pcHVsYXRpb24gdG8gYXZvaWQgb3VyIGRvbU1hbmlwIEFKQVggdHJpY2tlcnlcblx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0WyAwIF0gKTtcblx0XHRcdH0sXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIG9sZENhbGxiYWNrcyA9IFtdLFxuXHRyanNvbnAgPSAvKD0pXFw/KD89JnwkKXxcXD9cXD8vO1xuXG4vLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXG5cdGpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjYWxsYmFjayA9IG9sZENhbGxiYWNrcy5wb3AoKSB8fCAoIGpRdWVyeS5leHBhbmRvICsgXCJfXCIgKyAoIG5vbmNlKysgKSApO1xuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xuXHRcdHJldHVybiBjYWxsYmFjaztcblx0fVxufSApO1xuXG4vLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHNcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xuXG5cdHZhciBjYWxsYmFja05hbWUsIG92ZXJ3cml0dGVuLCByZXNwb25zZUNvbnRhaW5lcixcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xuXHRcdFx0XCJ1cmxcIiA6XG5cdFx0XHR0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcblx0XHRcdFx0XHQuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICYmXG5cdFx0XHRcdHJqc29ucC50ZXN0KCBzLmRhdGEgKSAmJiBcImRhdGFcIlxuXHRcdCk7XG5cblx0Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzIFwianNvbnBcIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldFxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcblxuXHRcdC8vIEdldCBjYWxsYmFjayBuYW1lLCByZW1lbWJlcmluZyBwcmVleGlzdGluZyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggaXRcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBpc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXG5cdFx0aWYgKCBqc29uUHJvcCApIHtcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XG5cdFx0XHRzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gXCImXCIgOiBcIj9cIiApICsgcy5qc29ucCArIFwiPVwiICsgY2FsbGJhY2tOYW1lO1xuXHRcdH1cblxuXHRcdC8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb25cblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcblx0XHRcdFx0alF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyBcIiB3YXMgbm90IGNhbGxlZFwiICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcblx0XHR9O1xuXG5cdFx0Ly8gRm9yY2UganNvbiBkYXRhVHlwZVxuXHRcdHMuZGF0YVR5cGVzWyAwIF0gPSBcImpzb25cIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcblx0XHRvdmVyd3JpdHRlbiA9IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07XG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XG5cdFx0fTtcblxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxuXHRcdGpxWEhSLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxuXHRcdFx0aWYgKCBvdmVyd3JpdHRlbiA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xuXG5cdFx0XHQvLyBPdGhlcndpc2UgcmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcblx0XHRcdFx0cy5qc29ucENhbGxiYWNrID0gb3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrO1xuXG5cdFx0XHRcdC8vIFNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2Vcblx0XHRcdFx0b2xkQ2FsbGJhY2tzLnB1c2goIGNhbGxiYWNrTmFtZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYWxsIGlmIGl0IHdhcyBhIGZ1bmN0aW9uIGFuZCB3ZSBoYXZlIGEgcmVzcG9uc2Vcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgaXNGdW5jdGlvbiggb3ZlcndyaXR0ZW4gKSApIHtcblx0XHRcdFx0b3ZlcndyaXR0ZW4oIHJlc3BvbnNlQ29udGFpbmVyWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBvdmVyd3JpdHRlbiA9IHVuZGVmaW5lZDtcblx0XHR9ICk7XG5cblx0XHQvLyBEZWxlZ2F0ZSB0byBzY3JpcHRcblx0XHRyZXR1cm4gXCJzY3JpcHRcIjtcblx0fVxufSApO1xuXG5cblxuXG4vLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5XG4vLyBJbiBTYWZhcmkgOCBkb2N1bWVudHMgY3JlYXRlZCB2aWEgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4vLyBjb2xsYXBzZSBzaWJsaW5nIGZvcm1zOiB0aGUgc2Vjb25kIG9uZSBiZWNvbWVzIGEgY2hpbGQgb2YgdGhlIGZpcnN0IG9uZS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC5cbi8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzczMzdcbnN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ID0gKCBmdW5jdGlvbigpIHtcblx0dmFyIGJvZHkgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKS5ib2R5O1xuXHRib2R5LmlubmVySFRNTCA9IFwiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT5cIjtcblx0cmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7XG59ICkoKTtcblxuXG4vLyBBcmd1bWVudCBcImRhdGFcIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWxcbi8vIGNvbnRleHQgKG9wdGlvbmFsKTogSWYgc3BlY2lmaWVkLCB0aGUgZnJhZ21lbnQgd2lsbCBiZSBjcmVhdGVkIGluIHRoaXMgY29udGV4dCxcbi8vIGRlZmF1bHRzIHRvIGRvY3VtZW50XG4vLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nXG5qUXVlcnkucGFyc2VIVE1MID0gZnVuY3Rpb24oIGRhdGEsIGNvbnRleHQsIGtlZXBTY3JpcHRzICkge1xuXHRpZiAoIHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cblx0dmFyIGJhc2UsIHBhcnNlZCwgc2NyaXB0cztcblxuXHRpZiAoICFjb250ZXh0ICkge1xuXG5cdFx0Ly8gU3RvcCBzY3JpcHRzIG9yIGlubGluZSBldmVudCBoYW5kbGVycyBmcm9tIGJlaW5nIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG5cdFx0Ly8gYnkgdXNpbmcgZG9jdW1lbnQuaW1wbGVtZW50YXRpb25cblx0XHRpZiAoIHN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ICkge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApO1xuXG5cdFx0XHQvLyBTZXQgdGhlIGJhc2UgaHJlZiBmb3IgdGhlIGNyZWF0ZWQgZG9jdW1lbnRcblx0XHRcdC8vIHNvIGFueSBwYXJzZWQgZWxlbWVudHMgd2l0aCBVUkxzXG5cdFx0XHQvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KVxuXHRcdFx0YmFzZSA9IGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJiYXNlXCIgKTtcblx0XHRcdGJhc2UuaHJlZiA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG5cdFx0XHRjb250ZXh0LmhlYWQuYXBwZW5kQ2hpbGQoIGJhc2UgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50O1xuXHRcdH1cblx0fVxuXG5cdHBhcnNlZCA9IHJzaW5nbGVUYWcuZXhlYyggZGF0YSApO1xuXHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07XG5cdH1cblxuXHRwYXJzZWQgPSBidWlsZEZyYWdtZW50KCBbIGRhdGEgXSwgY29udGV4dCwgc2NyaXB0cyApO1xuXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkoIHNjcmlwdHMgKS5yZW1vdmUoKTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBwYXJzZWQuY2hpbGROb2RlcyApO1xufTtcblxuXG4vKipcbiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2VcbiAqL1xualF1ZXJ5LmZuLmxvYWQgPSBmdW5jdGlvbiggdXJsLCBwYXJhbXMsIGNhbGxiYWNrICkge1xuXHR2YXIgc2VsZWN0b3IsIHR5cGUsIHJlc3BvbnNlLFxuXHRcdHNlbGYgPSB0aGlzLFxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xuXG5cdGlmICggb2ZmID4gLTEgKSB7XG5cdFx0c2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNlKCB1cmwuc2xpY2UoIG9mZiApICk7XG5cdFx0dXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTtcblx0fVxuXG5cdC8vIElmIGl0J3MgYSBmdW5jdGlvblxuXHRpZiAoIGlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xuXG5cdFx0Ly8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2tcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XG5cblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHR0eXBlID0gXCJQT1NUXCI7XG5cdH1cblxuXHQvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlmeSwgbWFrZSB0aGUgcmVxdWVzdFxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXG5cdFx0XHQvLyBNYWtlIHZhbHVlIG9mIHRoaXMgZmllbGQgZXhwbGljaXQgc2luY2Vcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XG5cblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XG5cblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xuXG5cdFx0XHRcdC8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdlxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XG5cblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXG5cdFx0Ly8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImpxWEhSXCIsIFwic3RhdHVzXCIsIFwiZXJyb3JcIlxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoIHRoaXMsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cblxuXG5cbi8vIEF0dGFjaCBhIGJ1bmNoIG9mIGZ1bmN0aW9ucyBmb3IgaGFuZGxpbmcgY29tbW9uIEFKQVggZXZlbnRzXG5qUXVlcnkuZWFjaCggW1xuXHRcImFqYXhTdGFydFwiLFxuXHRcImFqYXhTdG9wXCIsXG5cdFwiYWpheENvbXBsZXRlXCIsXG5cdFwiYWpheEVycm9yXCIsXG5cdFwiYWpheFN1Y2Nlc3NcIixcblx0XCJhamF4U2VuZFwiXG5dLCBmdW5jdGlvbiggaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG5cdH0gKS5sZW5ndGg7XG59O1xuXG5cblxuXG5qUXVlcnkub2Zmc2V0ID0ge1xuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xuXHRcdHZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sXG5cdFx0XHRwb3NpdGlvbiA9IGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApLFxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxuXHRcdFx0cHJvcHMgPSB7fTtcblxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cblx0XHRpZiAoIHBvc2l0aW9uID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0ZWxlbS5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblx0XHR9XG5cblx0XHRjdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpO1xuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcblx0XHRjdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJsZWZ0XCIgKTtcblx0XHRjYWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIiB8fCBwb3NpdGlvbiA9PT0gXCJmaXhlZFwiICkgJiZcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcblxuXHRcdC8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcblx0XHRcdGN1clBvc2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpO1xuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHtcblxuXHRcdFx0Ly8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpXG5cdFx0XHRvcHRpb25zID0gb3B0aW9ucy5jYWxsKCBlbGVtLCBpLCBqUXVlcnkuZXh0ZW5kKCB7fSwgY3VyT2Zmc2V0ICkgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdGlvbnMudG9wICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wO1xuXHRcdH1cblx0XHRpZiAoIG9wdGlvbnMubGVmdCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7XG5cdFx0fVxuXG5cdFx0aWYgKCBcInVzaW5nXCIgaW4gb3B0aW9ucyApIHtcblx0XHRcdG9wdGlvbnMudXNpbmcuY2FsbCggZWxlbSwgcHJvcHMgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJFbGVtLmNzcyggcHJvcHMgKTtcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHQvLyBvZmZzZXQoKSByZWxhdGVzIGFuIGVsZW1lbnQncyBib3JkZXIgYm94IHRvIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b2Zmc2V0OiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHRcdC8vIFByZXNlcnZlIGNoYWluaW5nIGZvciBzZXR0ZXJcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gb3B0aW9ucyA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0dGhpcyA6XG5cdFx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTtcblx0XHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHZhciByZWN0LCB3aW4sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIChkaXNwbGF5OiBub25lKSBlbGVtZW50cyAoZ2gtMjMxMClcblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhXG5cdFx0Ly8gZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXG5cdFx0aWYgKCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB7IHRvcDogMCwgbGVmdDogMCB9O1xuXHRcdH1cblxuXHRcdC8vIEdldCBkb2N1bWVudC1yZWxhdGl2ZSBwb3NpdGlvbiBieSBhZGRpbmcgdmlld3BvcnQgc2Nyb2xsIHRvIHZpZXdwb3J0LXJlbGF0aXZlIGdCQ1Jcblx0XHRyZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0XHR3aW4gPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQsXG5cdFx0XHRsZWZ0OiByZWN0LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXRcblx0XHR9O1xuXHR9LFxuXG5cdC8vIHBvc2l0aW9uKCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgbWFyZ2luIGJveCB0byBpdHMgb2Zmc2V0IHBhcmVudCdzIHBhZGRpbmcgYm94XG5cdC8vIFRoaXMgY29ycmVzcG9uZHMgdG8gdGhlIGJlaGF2aW9yIG9mIENTUyBhYnNvbHV0ZSBwb3NpdGlvbmluZ1xuXHRwb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCAhdGhpc1sgMCBdICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCwgZG9jLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBwb3NpdGlvbjpmaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gdGhlIHZpZXdwb3J0LCB3aGljaCBpdHNlbGYgYWx3YXlzIGhhcyB6ZXJvIG9mZnNldFxuXHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICkgPT09IFwiZml4ZWRcIiApIHtcblxuXHRcdFx0Ly8gQXNzdW1lIHBvc2l0aW9uOmZpeGVkIGltcGxpZXMgYXZhaWxhYmlsaXR5IG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdFxuXHRcdFx0b2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB0aGUgKnJlYWwqIG9mZnNldCBwYXJlbnQsIHdoaWNoIGNhbiBiZSB0aGUgZG9jdW1lbnQgb3IgaXRzIHJvb3QgZWxlbWVudFxuXHRcdFx0Ly8gd2hlbiBhIHN0YXRpY2FsbHkgcG9zaXRpb25lZCBlbGVtZW50IGlzIGlkZW50aWZpZWRcblx0XHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudDtcblx0XHRcdG9mZnNldFBhcmVudCA9IGVsZW0ub2Zmc2V0UGFyZW50IHx8IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJlxuXHRcdFx0XHQoIG9mZnNldFBhcmVudCA9PT0gZG9jLmJvZHkgfHwgb2Zmc2V0UGFyZW50ID09PSBkb2MuZG9jdW1lbnRFbGVtZW50ICkgJiZcblx0XHRcdFx0alF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApIHtcblxuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGlmICggb2Zmc2V0UGFyZW50ICYmIG9mZnNldFBhcmVudCAhPT0gZWxlbSAmJiBvZmZzZXRQYXJlbnQubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gSW5jb3Jwb3JhdGUgYm9yZGVycyBpbnRvIGl0cyBvZmZzZXQsIHNpbmNlIHRoZXkgYXJlIG91dHNpZGUgaXRzIGNvbnRlbnQgb3JpZ2luXG5cdFx0XHRcdHBhcmVudE9mZnNldCA9IGpRdWVyeSggb2Zmc2V0UGFyZW50ICkub2Zmc2V0KCk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC50b3AgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlclRvcFdpZHRoXCIsIHRydWUgKTtcblx0XHRcdFx0cGFyZW50T2Zmc2V0LmxlZnQgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlckxlZnRXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU3VidHJhY3QgcGFyZW50IG9mZnNldHMgYW5kIGVsZW1lbnQgbWFyZ2luc1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IG9mZnNldC50b3AgLSBwYXJlbnRPZmZzZXQudG9wIC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5Ub3BcIiwgdHJ1ZSApLFxuXHRcdFx0bGVmdDogb2Zmc2V0LmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luTGVmdFwiLCB0cnVlIClcblx0XHR9O1xuXHR9LFxuXG5cdC8vIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIGRvY3VtZW50RWxlbWVudCBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOlxuXHQvLyAxKSBGb3IgdGhlIGVsZW1lbnQgaW5zaWRlIHRoZSBpZnJhbWUgd2l0aG91dCBvZmZzZXRQYXJlbnQsIHRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuXG5cdC8vICAgIGRvY3VtZW50RWxlbWVudCBvZiB0aGUgcGFyZW50IHdpbmRvd1xuXHQvLyAyKSBGb3IgdGhlIGhpZGRlbiBvciBkZXRhY2hlZCBlbGVtZW50XG5cdC8vIDMpIEZvciBib2R5IG9yIGh0bWwgZWxlbWVudCwgaS5lLiBpbiBjYXNlIG9mIHRoZSBodG1sIG5vZGUgLSBpdCB3aWxsIHJldHVybiBpdHNlbGZcblx0Ly9cblx0Ly8gYnV0IHRob3NlIGV4Y2VwdGlvbnMgd2VyZSBuZXZlciBwcmVzZW50ZWQgYXMgYSByZWFsIGxpZmUgdXNlLWNhc2VzXG5cdC8vIGFuZCBtaWdodCBiZSBjb25zaWRlcmVkIGFzIG1vcmUgcHJlZmVyYWJsZSByZXN1bHRzLlxuXHQvL1xuXHQvLyBUaGlzIGxvZ2ljLCBob3dldmVyLCBpcyBub3QgZ3VhcmFudGVlZCBhbmQgY2FuIGNoYW5nZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZVxuXHRvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQ7XG5cblx0XHRcdHdoaWxlICggb2Zmc2V0UGFyZW50ICYmIGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jdW1lbnRFbGVtZW50O1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG4vLyBDcmVhdGUgc2Nyb2xsTGVmdCBhbmQgc2Nyb2xsVG9wIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IHNjcm9sbExlZnQ6IFwicGFnZVhPZmZzZXRcIiwgc2Nyb2xsVG9wOiBcInBhZ2VZT2Zmc2V0XCIgfSwgZnVuY3Rpb24oIG1ldGhvZCwgcHJvcCApIHtcblx0dmFyIHRvcCA9IFwicGFnZVlPZmZzZXRcIiA9PT0gcHJvcDtcblxuXHRqUXVlcnkuZm5bIG1ldGhvZCBdID0gZnVuY3Rpb24oIHZhbCApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbWV0aG9kLCB2YWwgKSB7XG5cblx0XHRcdC8vIENvYWxlc2NlIGRvY3VtZW50cyBhbmQgd2luZG93c1xuXHRcdFx0dmFyIHdpbjtcblx0XHRcdGlmICggaXNXaW5kb3coIGVsZW0gKSApIHtcblx0XHRcdFx0d2luID0gZWxlbTtcblx0XHRcdH0gZWxzZSBpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW0uZGVmYXVsdFZpZXc7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiB3aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHdpbiApIHtcblx0XHRcdFx0d2luLnNjcm9sbFRvKFxuXHRcdFx0XHRcdCF0b3AgPyB2YWwgOiB3aW4ucGFnZVhPZmZzZXQsXG5cdFx0XHRcdFx0dG9wID8gdmFsIDogd2luLnBhZ2VZT2Zmc2V0XG5cdFx0XHRcdCk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1bIG1ldGhvZCBdID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH07XG59ICk7XG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA8PTcgLSA5LjEsIENocm9tZSA8PTM3IC0gNDlcbi8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcbi8vIEJsaW5rIGJ1ZzogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NTg5MzQ3XG4vLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2VudCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0O1xuLy8gcmF0aGVyIHRoYW4gbWFrZSB0aGUgY3NzIG1vZHVsZSBkZXBlbmQgb24gdGhlIG9mZnNldCBtb2R1bGUsIGp1c3QgY2hlY2sgZm9yIGl0IGhlcmVcbmpRdWVyeS5lYWNoKCBbIFwidG9wXCIsIFwibGVmdFwiIF0sIGZ1bmN0aW9uKCBpLCBwcm9wICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByb3AgXSA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5waXhlbFBvc2l0aW9uLFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGNvbXB1dGVkID0gY3VyQ1NTKCBlbGVtLCBwcm9wICk7XG5cblx0XHRcdFx0Ly8gSWYgY3VyQ1NTIHJldHVybnMgcGVyY2VudGFnZSwgZmFsbGJhY2sgdG8gb2Zmc2V0XG5cdFx0XHRcdHJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgXCJweFwiIDpcblx0XHRcdFx0XHRjb21wdXRlZDtcblx0XHRcdH1cblx0XHR9XG5cdCk7XG59ICk7XG5cblxuLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBIZWlnaHQ6IFwiaGVpZ2h0XCIsIFdpZHRoOiBcIndpZHRoXCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7XG5cdGpRdWVyeS5lYWNoKCB7IHBhZGRpbmc6IFwiaW5uZXJcIiArIG5hbWUsIGNvbnRlbnQ6IHR5cGUsIFwiXCI6IFwib3V0ZXJcIiArIG5hbWUgfSxcblx0XHRmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0dGhpcy50cmlnZ2VyKCBuYW1lICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cblxuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG4vLyBhcmd1bWVudHMuXG4vLyBqUXVlcnkucHJveHkgaXMgZGVwcmVjYXRlZCB0byBwcm9tb3RlIHN0YW5kYXJkcyAoc3BlY2lmaWNhbGx5IEZ1bmN0aW9uI2JpbmQpXG4vLyBIb3dldmVyLCBpdCBpcyBub3Qgc2xhdGVkIGZvciByZW1vdmFsIGFueSB0aW1lIHNvb25cbmpRdWVyeS5wcm94eSA9IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0dmFyIHRtcCwgYXJncywgcHJveHk7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdGNvbnRleHQgPSBmbjtcblx0XHRmbiA9IHRtcDtcblx0fVxuXG5cdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXG5cdC8vIHRoaXMgdGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRlZmluZWQuXG5cdGlmICggIWlzRnVuY3Rpb24oIGZuICkgKSB7XG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxuXG5cdC8vIFNpbXVsYXRlZCBiaW5kXG5cdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0cHJveHkgPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTtcblx0fTtcblxuXHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcblx0cHJveHkuZ3VpZCA9IGZuLmd1aWQgPSBmbi5ndWlkIHx8IGpRdWVyeS5ndWlkKys7XG5cblx0cmV0dXJuIHByb3h5O1xufTtcblxualF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkge1xuXHRpZiAoIGhvbGQgKSB7XG5cdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHR9XG59O1xualF1ZXJ5LmlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xualF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG5qUXVlcnkubm9kZU5hbWUgPSBub2RlTmFtZTtcbmpRdWVyeS5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmpRdWVyeS5pc1dpbmRvdyA9IGlzV2luZG93O1xualF1ZXJ5LmNhbWVsQ2FzZSA9IGNhbWVsQ2FzZTtcbmpRdWVyeS50eXBlID0gdG9UeXBlO1xuXG5qUXVlcnkubm93ID0gRGF0ZS5ub3c7XG5cbmpRdWVyeS5pc051bWVyaWMgPSBmdW5jdGlvbiggb2JqICkge1xuXG5cdC8vIEFzIG9mIGpRdWVyeSAzLjAsIGlzTnVtZXJpYyBpcyBsaW1pdGVkIHRvXG5cdC8vIHN0cmluZ3MgYW5kIG51bWJlcnMgKHByaW1pdGl2ZXMgb3Igb2JqZWN0cylcblx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2Milcblx0dmFyIHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XG5cdHJldHVybiAoIHR5cGUgPT09IFwibnVtYmVyXCIgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiApICYmXG5cblx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoXCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0IWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApO1xufTtcblxuXG5cblxuLy8gUmVnaXN0ZXIgYXMgYSBuYW1lZCBBTUQgbW9kdWxlLCBzaW5jZSBqUXVlcnkgY2FuIGJlIGNvbmNhdGVuYXRlZCB3aXRoIG90aGVyXG4vLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0XG4vLyB1bmRlcnN0YW5kcyBhbm9ueW1vdXMgQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3Rcbi8vIHdheSB0byByZWdpc3Rlci4gTG93ZXJjYXNlIGpxdWVyeSBpcyB1c2VkIGJlY2F1c2UgQU1EIG1vZHVsZSBuYW1lcyBhcmVcbi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZVxuLy8gZmlsZSBuYW1lLiBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzXG4vLyB0byBjYWxsIG5vQ29uZmxpY3QgdG8gaGlkZSB0aGlzIHZlcnNpb24gb2YgalF1ZXJ5LCBpdCB3aWxsIHdvcmsuXG5cbi8vIE5vdGUgdGhhdCBmb3IgbWF4aW11bSBwb3J0YWJpbGl0eSwgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBqUXVlcnkgc2hvdWxkXG4vLyBkZWNsYXJlIHRoZW1zZWx2ZXMgYXMgYW5vbnltb3VzIG1vZHVsZXMsIGFuZCBhdm9pZCBzZXR0aW5nIGEgZ2xvYmFsIGlmIGFuXG4vLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzL3dpa2kvVXBkYXRpbmctZXhpc3RpbmctbGlicmFyaWVzI3dpa2ktYW5vblxuXG5pZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXHRkZWZpbmUoIFwianF1ZXJ5XCIsIFtdLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5O1xuXHR9ICk7XG59XG5cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggIW5vR2xvYmFsICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxuXG5cbnJldHVybiBqUXVlcnk7XG59ICk7XG4iLCIvKiEgU2Nyb2xsTWFnaWMgdjIuMC41IHwgKGMpIDIwMTUgSmFuIFBhZXBrZSAoQGphbnBhZXBrZSkgfCBsaWNlbnNlICYgaW5mbzogaHR0cDovL3Njcm9sbG1hZ2ljLmlvICovXG5cbiFmdW5jdGlvbihlLHQpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUodCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9dCgpOmUuU2Nyb2xsTWFnaWM9dCgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ZnVuY3Rpb24oKXt9O2UudmVyc2lvbj1cIjIuMC41XCIsd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXdoZWVsXCIsZnVuY3Rpb24oKXt9KTt2YXIgdD1cImRhdGEtc2Nyb2xsbWFnaWMtcGluLXNwYWNlclwiO2UuQ29udHJvbGxlcj1mdW5jdGlvbihyKXt2YXIgbyxzLGE9XCJTY3JvbGxNYWdpYy5Db250cm9sbGVyXCIsbD1cIkZPUldBUkRcIixjPVwiUkVWRVJTRVwiLHU9XCJQQVVTRURcIixmPW4uZGVmYXVsdHMsZD10aGlzLGg9aS5leHRlbmQoe30sZixyKSxnPVtdLHA9ITEsdj0wLG09dSx3PSEwLHk9MCxTPSEwLGI9ZnVuY3Rpb24oKXtmb3IodmFyIGUgaW4gaClmLmhhc093blByb3BlcnR5KGUpfHxkZWxldGUgaFtlXTtpZihoLmNvbnRhaW5lcj1pLmdldC5lbGVtZW50cyhoLmNvbnRhaW5lcilbMF0sIWguY29udGFpbmVyKXRocm93IGErXCIgaW5pdCBmYWlsZWQuXCI7dz1oLmNvbnRhaW5lcj09PXdpbmRvd3x8aC5jb250YWluZXI9PT1kb2N1bWVudC5ib2R5fHwhZG9jdW1lbnQuYm9keS5jb250YWlucyhoLmNvbnRhaW5lciksdyYmKGguY29udGFpbmVyPXdpbmRvdykseT16KCksaC5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLFQpLGguY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixUKSxoLnJlZnJlc2hJbnRlcnZhbD1wYXJzZUludChoLnJlZnJlc2hJbnRlcnZhbCl8fGYucmVmcmVzaEludGVydmFsLEUoKX0sRT1mdW5jdGlvbigpe2gucmVmcmVzaEludGVydmFsPjAmJihzPXdpbmRvdy5zZXRUaW1lb3V0KEEsaC5yZWZyZXNoSW50ZXJ2YWwpKX0seD1mdW5jdGlvbigpe3JldHVybiBoLnZlcnRpY2FsP2kuZ2V0LnNjcm9sbFRvcChoLmNvbnRhaW5lcik6aS5nZXQuc2Nyb2xsTGVmdChoLmNvbnRhaW5lcil9LHo9ZnVuY3Rpb24oKXtyZXR1cm4gaC52ZXJ0aWNhbD9pLmdldC5oZWlnaHQoaC5jb250YWluZXIpOmkuZ2V0LndpZHRoKGguY29udGFpbmVyKX0sQz10aGlzLl9zZXRTY3JvbGxQb3M9ZnVuY3Rpb24oZSl7aC52ZXJ0aWNhbD93P3dpbmRvdy5zY3JvbGxUbyhpLmdldC5zY3JvbGxMZWZ0KCksZSk6aC5jb250YWluZXIuc2Nyb2xsVG9wPWU6dz93aW5kb3cuc2Nyb2xsVG8oZSxpLmdldC5zY3JvbGxUb3AoKSk6aC5jb250YWluZXIuc2Nyb2xsTGVmdD1lfSxGPWZ1bmN0aW9uKCl7aWYoUyYmcCl7dmFyIGU9aS50eXBlLkFycmF5KHApP3A6Zy5zbGljZSgwKTtwPSExO3ZhciB0PXY7dj1kLnNjcm9sbFBvcygpO3ZhciBuPXYtdDswIT09biYmKG09bj4wP2w6YyksbT09PWMmJmUucmV2ZXJzZSgpLGUuZm9yRWFjaChmdW5jdGlvbihlKXtlLnVwZGF0ZSghMCl9KX19LEw9ZnVuY3Rpb24oKXtvPWkuckFGKEYpfSxUPWZ1bmN0aW9uKGUpe1wicmVzaXplXCI9PWUudHlwZSYmKHk9eigpLG09dSkscCE9PSEwJiYocD0hMCxMKCkpfSxBPWZ1bmN0aW9uKCl7aWYoIXcmJnkhPXooKSl7dmFyIGU7dHJ5e2U9bmV3IEV2ZW50KFwicmVzaXplXCIse2J1YmJsZXM6ITEsY2FuY2VsYWJsZTohMX0pfWNhdGNoKHQpe2U9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJFdmVudFwiKSxlLmluaXRFdmVudChcInJlc2l6ZVwiLCExLCExKX1oLmNvbnRhaW5lci5kaXNwYXRjaEV2ZW50KGUpfWcuZm9yRWFjaChmdW5jdGlvbihlKXtlLnJlZnJlc2goKX0pLEUoKX07dGhpcy5fb3B0aW9ucz1oO3ZhciBPPWZ1bmN0aW9uKGUpe2lmKGUubGVuZ3RoPD0xKXJldHVybiBlO3ZhciB0PWUuc2xpY2UoMCk7cmV0dXJuIHQuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiBlLnNjcm9sbE9mZnNldCgpPnQuc2Nyb2xsT2Zmc2V0KCk/MTotMX0pLHR9O3JldHVybiB0aGlzLmFkZFNjZW5lPWZ1bmN0aW9uKHQpe2lmKGkudHlwZS5BcnJheSh0KSl0LmZvckVhY2goZnVuY3Rpb24oZSl7ZC5hZGRTY2VuZShlKX0pO2Vsc2UgaWYodCBpbnN0YW5jZW9mIGUuU2NlbmUpaWYodC5jb250cm9sbGVyKCkhPT1kKXQuYWRkVG8oZCk7ZWxzZSBpZihnLmluZGV4T2YodCk8MCl7Zy5wdXNoKHQpLGc9TyhnKSx0Lm9uKFwic2hpZnQuY29udHJvbGxlcl9zb3J0XCIsZnVuY3Rpb24oKXtnPU8oZyl9KTtmb3IodmFyIG4gaW4gaC5nbG9iYWxTY2VuZU9wdGlvbnMpdFtuXSYmdFtuXS5jYWxsKHQsaC5nbG9iYWxTY2VuZU9wdGlvbnNbbl0pfXJldHVybiBkfSx0aGlzLnJlbW92ZVNjZW5lPWZ1bmN0aW9uKGUpe2lmKGkudHlwZS5BcnJheShlKSllLmZvckVhY2goZnVuY3Rpb24oZSl7ZC5yZW1vdmVTY2VuZShlKX0pO2Vsc2V7dmFyIHQ9Zy5pbmRleE9mKGUpO3Q+LTEmJihlLm9mZihcInNoaWZ0LmNvbnRyb2xsZXJfc29ydFwiKSxnLnNwbGljZSh0LDEpLGUucmVtb3ZlKCkpfXJldHVybiBkfSx0aGlzLnVwZGF0ZVNjZW5lPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGkudHlwZS5BcnJheSh0KT90LmZvckVhY2goZnVuY3Rpb24oZSl7ZC51cGRhdGVTY2VuZShlLG4pfSk6bj90LnVwZGF0ZSghMCk6cCE9PSEwJiZ0IGluc3RhbmNlb2YgZS5TY2VuZSYmKHA9cHx8W10sLTE9PXAuaW5kZXhPZih0KSYmcC5wdXNoKHQpLHA9TyhwKSxMKCkpLGR9LHRoaXMudXBkYXRlPWZ1bmN0aW9uKGUpe3JldHVybiBUKHt0eXBlOlwicmVzaXplXCJ9KSxlJiZGKCksZH0sdGhpcy5zY3JvbGxUbz1mdW5jdGlvbihuLHIpe2lmKGkudHlwZS5OdW1iZXIobikpQy5jYWxsKGguY29udGFpbmVyLG4scik7ZWxzZSBpZihuIGluc3RhbmNlb2YgZS5TY2VuZSluLmNvbnRyb2xsZXIoKT09PWQmJmQuc2Nyb2xsVG8obi5zY3JvbGxPZmZzZXQoKSxyKTtlbHNlIGlmKGkudHlwZS5GdW5jdGlvbihuKSlDPW47ZWxzZXt2YXIgbz1pLmdldC5lbGVtZW50cyhuKVswXTtpZihvKXtmb3IoO28ucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUodCk7KW89by5wYXJlbnROb2RlO3ZhciBzPWgudmVydGljYWw/XCJ0b3BcIjpcImxlZnRcIixhPWkuZ2V0Lm9mZnNldChoLmNvbnRhaW5lciksbD1pLmdldC5vZmZzZXQobyk7d3x8KGFbc10tPWQuc2Nyb2xsUG9zKCkpLGQuc2Nyb2xsVG8obFtzXS1hW3NdLHIpfX1yZXR1cm4gZH0sdGhpcy5zY3JvbGxQb3M9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGkudHlwZS5GdW5jdGlvbihlKSYmKHg9ZSksZCk6eC5jYWxsKGQpfSx0aGlzLmluZm89ZnVuY3Rpb24oZSl7dmFyIHQ9e3NpemU6eSx2ZXJ0aWNhbDpoLnZlcnRpY2FsLHNjcm9sbFBvczp2LHNjcm9sbERpcmVjdGlvbjptLGNvbnRhaW5lcjpoLmNvbnRhaW5lcixpc0RvY3VtZW50Ond9O3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3ZvaWQgMCE9PXRbZV0/dFtlXTp2b2lkIDA6dH0sdGhpcy5sb2dsZXZlbD1mdW5jdGlvbigpe3JldHVybiBkfSx0aGlzLmVuYWJsZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KFMhPWUmJihTPSEhZSxkLnVwZGF0ZVNjZW5lKGcsITApKSxkKTpTfSx0aGlzLmRlc3Ryb3k9ZnVuY3Rpb24oZSl7d2luZG93LmNsZWFyVGltZW91dChzKTtmb3IodmFyIHQ9Zy5sZW5ndGg7dC0tOylnW3RdLmRlc3Ryb3koZSk7cmV0dXJuIGguY29udGFpbmVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixUKSxoLmNvbnRhaW5lci5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsVCksaS5jQUYobyksbnVsbH0sYigpLGR9O3ZhciBuPXtkZWZhdWx0czp7Y29udGFpbmVyOndpbmRvdyx2ZXJ0aWNhbDohMCxnbG9iYWxTY2VuZU9wdGlvbnM6e30sbG9nbGV2ZWw6MixyZWZyZXNoSW50ZXJ2YWw6MTAwfX07ZS5Db250cm9sbGVyLmFkZE9wdGlvbj1mdW5jdGlvbihlLHQpe24uZGVmYXVsdHNbZV09dH0sZS5Db250cm9sbGVyLmV4dGVuZD1mdW5jdGlvbih0KXt2YXIgbj10aGlzO2UuQ29udHJvbGxlcj1mdW5jdGlvbigpe3JldHVybiBuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLiRzdXBlcj1pLmV4dGVuZCh7fSx0aGlzKSx0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc30saS5leHRlbmQoZS5Db250cm9sbGVyLG4pLGUuQ29udHJvbGxlci5wcm90b3R5cGU9bi5wcm90b3R5cGUsZS5Db250cm9sbGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbnRyb2xsZXJ9LGUuU2NlbmU9ZnVuY3Rpb24obil7dmFyIG8scyxhPVwiQkVGT1JFXCIsbD1cIkRVUklOR1wiLGM9XCJBRlRFUlwiLHU9ci5kZWZhdWx0cyxmPXRoaXMsZD1pLmV4dGVuZCh7fSx1LG4pLGg9YSxnPTAscD17c3RhcnQ6MCxlbmQ6MH0sdj0wLG09ITAsdz1mdW5jdGlvbigpe2Zvcih2YXIgZSBpbiBkKXUuaGFzT3duUHJvcGVydHkoZSl8fGRlbGV0ZSBkW2VdO2Zvcih2YXIgdCBpbiB1KUwodCk7QygpfSx5PXt9O3RoaXMub249ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaS50eXBlLkZ1bmN0aW9uKHQpJiYoZT1lLnRyaW0oKS5zcGxpdChcIiBcIiksZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWUuc3BsaXQoXCIuXCIpLHI9blswXSxpPW5bMV07XCIqXCIhPXImJih5W3JdfHwoeVtyXT1bXSkseVtyXS5wdXNoKHtuYW1lc3BhY2U6aXx8XCJcIixjYWxsYmFjazp0fSkpfSkpLGZ9LHRoaXMub2ZmPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU/KGU9ZS50cmltKCkuc3BsaXQoXCIgXCIpLGUuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgbj1lLnNwbGl0KFwiLlwiKSxyPW5bMF0saT1uWzFdfHxcIlwiLG89XCIqXCI9PT1yP09iamVjdC5rZXlzKHkpOltyXTtvLmZvckVhY2goZnVuY3Rpb24oZSl7Zm9yKHZhciBuPXlbZV18fFtdLHI9bi5sZW5ndGg7ci0tOyl7dmFyIG89bltyXTshb3x8aSE9PW8ubmFtZXNwYWNlJiZcIipcIiE9PWl8fHQmJnQhPW8uY2FsbGJhY2t8fG4uc3BsaWNlKHIsMSl9bi5sZW5ndGh8fGRlbGV0ZSB5W2VdfSl9KSxmKTpmfSx0aGlzLnRyaWdnZXI9ZnVuY3Rpb24odCxuKXtpZih0KXt2YXIgcj10LnRyaW0oKS5zcGxpdChcIi5cIiksaT1yWzBdLG89clsxXSxzPXlbaV07cyYmcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe28mJm8hPT10Lm5hbWVzcGFjZXx8dC5jYWxsYmFjay5jYWxsKGYsbmV3IGUuRXZlbnQoaSx0Lm5hbWVzcGFjZSxmLG4pKX0pfXJldHVybiBmfSxmLm9uKFwiY2hhbmdlLmludGVybmFsXCIsZnVuY3Rpb24oZSl7XCJsb2dsZXZlbFwiIT09ZS53aGF0JiZcInR3ZWVuQ2hhbmdlc1wiIT09ZS53aGF0JiYoXCJ0cmlnZ2VyRWxlbWVudFwiPT09ZS53aGF0P0UoKTpcInJldmVyc2VcIj09PWUud2hhdCYmZi51cGRhdGUoKSl9KS5vbihcInNoaWZ0LmludGVybmFsXCIsZnVuY3Rpb24oKXtTKCksZi51cGRhdGUoKX0pLHRoaXMuYWRkVG89ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBlLkNvbnRyb2xsZXImJnMhPXQmJihzJiZzLnJlbW92ZVNjZW5lKGYpLHM9dCxDKCksYighMCksRSghMCksUygpLHMuaW5mbyhcImNvbnRhaW5lclwiKS5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIseCksdC5hZGRTY2VuZShmKSxmLnRyaWdnZXIoXCJhZGRcIix7Y29udHJvbGxlcjpzfSksZi51cGRhdGUoKSksZn0sdGhpcy5lbmFibGVkPWZ1bmN0aW9uKGUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhtIT1lJiYobT0hIWUsZi51cGRhdGUoITApKSxmKTptfSx0aGlzLnJlbW92ZT1mdW5jdGlvbigpe2lmKHMpe3MuaW5mbyhcImNvbnRhaW5lclwiKS5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIseCk7dmFyIGU9cztzPXZvaWQgMCxlLnJlbW92ZVNjZW5lKGYpLGYudHJpZ2dlcihcInJlbW92ZVwiKX1yZXR1cm4gZn0sdGhpcy5kZXN0cm95PWZ1bmN0aW9uKGUpe3JldHVybiBmLnRyaWdnZXIoXCJkZXN0cm95XCIse3Jlc2V0OmV9KSxmLnJlbW92ZSgpLGYub2ZmKFwiKi4qXCIpLG51bGx9LHRoaXMudXBkYXRlPWZ1bmN0aW9uKGUpe2lmKHMpaWYoZSlpZihzLmVuYWJsZWQoKSYmbSl7dmFyIHQsbj1zLmluZm8oXCJzY3JvbGxQb3NcIik7dD1kLmR1cmF0aW9uPjA/KG4tcC5zdGFydCkvKHAuZW5kLXAuc3RhcnQpOm4+PXAuc3RhcnQ/MTowLGYudHJpZ2dlcihcInVwZGF0ZVwiLHtzdGFydFBvczpwLnN0YXJ0LGVuZFBvczpwLmVuZCxzY3JvbGxQb3M6bn0pLGYucHJvZ3Jlc3ModCl9ZWxzZSBUJiZoPT09bCYmTyghMCk7ZWxzZSBzLnVwZGF0ZVNjZW5lKGYsITEpO3JldHVybiBmfSx0aGlzLnJlZnJlc2g9ZnVuY3Rpb24oKXtyZXR1cm4gYigpLEUoKSxmfSx0aGlzLnByb2dyZXNzPWZ1bmN0aW9uKGUpe2lmKGFyZ3VtZW50cy5sZW5ndGgpe3ZhciB0PSExLG49aCxyPXM/cy5pbmZvKFwic2Nyb2xsRGlyZWN0aW9uXCIpOlwiUEFVU0VEXCIsaT1kLnJldmVyc2V8fGU+PWc7aWYoMD09PWQuZHVyYXRpb24/KHQ9ZyE9ZSxnPTE+ZSYmaT8wOjEsaD0wPT09Zz9hOmwpOjA+ZSYmaCE9PWEmJmk/KGc9MCxoPWEsdD0hMCk6ZT49MCYmMT5lJiZpPyhnPWUsaD1sLHQ9ITApOmU+PTEmJmghPT1jPyhnPTEsaD1jLHQ9ITApOmghPT1sfHxpfHxPKCksdCl7dmFyIG89e3Byb2dyZXNzOmcsc3RhdGU6aCxzY3JvbGxEaXJlY3Rpb246cn0sdT1oIT1uLHA9ZnVuY3Rpb24oZSl7Zi50cmlnZ2VyKGUsbyl9O3UmJm4hPT1sJiYocChcImVudGVyXCIpLHAobj09PWE/XCJzdGFydFwiOlwiZW5kXCIpKSxwKFwicHJvZ3Jlc3NcIiksdSYmaCE9PWwmJihwKGg9PT1hP1wic3RhcnRcIjpcImVuZFwiKSxwKFwibGVhdmVcIikpfXJldHVybiBmfXJldHVybiBnfTt2YXIgUz1mdW5jdGlvbigpe3A9e3N0YXJ0OnYrZC5vZmZzZXR9LHMmJmQudHJpZ2dlckVsZW1lbnQmJihwLnN0YXJ0LT1zLmluZm8oXCJzaXplXCIpKmQudHJpZ2dlckhvb2spLHAuZW5kPXAuc3RhcnQrZC5kdXJhdGlvbn0sYj1mdW5jdGlvbihlKXtpZihvKXt2YXIgdD1cImR1cmF0aW9uXCI7Rih0LG8uY2FsbChmKSkmJiFlJiYoZi50cmlnZ2VyKFwiY2hhbmdlXCIse3doYXQ6dCxuZXd2YWw6ZFt0XX0pLGYudHJpZ2dlcihcInNoaWZ0XCIse3JlYXNvbjp0fSkpfX0sRT1mdW5jdGlvbihlKXt2YXIgbj0wLHI9ZC50cmlnZ2VyRWxlbWVudDtpZihzJiZyKXtmb3IodmFyIG89cy5pbmZvKCksYT1pLmdldC5vZmZzZXQoby5jb250YWluZXIpLGw9by52ZXJ0aWNhbD9cInRvcFwiOlwibGVmdFwiO3IucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUodCk7KXI9ci5wYXJlbnROb2RlO3ZhciBjPWkuZ2V0Lm9mZnNldChyKTtvLmlzRG9jdW1lbnR8fChhW2xdLT1zLnNjcm9sbFBvcygpKSxuPWNbbF0tYVtsXX12YXIgdT1uIT12O3Y9bix1JiYhZSYmZi50cmlnZ2VyKFwic2hpZnRcIix7cmVhc29uOlwidHJpZ2dlckVsZW1lbnRQb3NpdGlvblwifSl9LHg9ZnVuY3Rpb24oKXtkLnRyaWdnZXJIb29rPjAmJmYudHJpZ2dlcihcInNoaWZ0XCIse3JlYXNvbjpcImNvbnRhaW5lclJlc2l6ZVwifSl9LHo9aS5leHRlbmQoci52YWxpZGF0ZSx7ZHVyYXRpb246ZnVuY3Rpb24oZSl7aWYoaS50eXBlLlN0cmluZyhlKSYmZS5tYXRjaCgvXihcXC58XFxkKSpcXGQrJSQvKSl7dmFyIHQ9cGFyc2VGbG9hdChlKS8xMDA7ZT1mdW5jdGlvbigpe3JldHVybiBzP3MuaW5mbyhcInNpemVcIikqdDowfX1pZihpLnR5cGUuRnVuY3Rpb24oZSkpe289ZTt0cnl7ZT1wYXJzZUZsb2F0KG8oKSl9Y2F0Y2godCl7ZT0tMX19aWYoZT1wYXJzZUZsb2F0KGUpLCFpLnR5cGUuTnVtYmVyKGUpfHwwPmUpdGhyb3cgbz8obz12b2lkIDAsMCk6MDtyZXR1cm4gZX19KSxDPWZ1bmN0aW9uKGUpe2U9YXJndW1lbnRzLmxlbmd0aD9bZV06T2JqZWN0LmtleXMoeiksZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0O2lmKHpbZV0pdHJ5e3Q9eltlXShkW2VdKX1jYXRjaChuKXt0PXVbZV19ZmluYWxseXtkW2VdPXR9fSl9LEY9ZnVuY3Rpb24oZSx0KXt2YXIgbj0hMSxyPWRbZV07cmV0dXJuIGRbZV0hPXQmJihkW2VdPXQsQyhlKSxuPXIhPWRbZV0pLG59LEw9ZnVuY3Rpb24oZSl7ZltlXXx8KGZbZV09ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KFwiZHVyYXRpb25cIj09PWUmJihvPXZvaWQgMCksRihlLHQpJiYoZi50cmlnZ2VyKFwiY2hhbmdlXCIse3doYXQ6ZSxuZXd2YWw6ZFtlXX0pLHIuc2hpZnRzLmluZGV4T2YoZSk+LTEmJmYudHJpZ2dlcihcInNoaWZ0XCIse3JlYXNvbjplfSkpLGYpOmRbZV19KX07dGhpcy5jb250cm9sbGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LHRoaXMuc3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gaH0sdGhpcy5zY3JvbGxPZmZzZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gcC5zdGFydH0sdGhpcy50cmlnZ2VyUG9zaXRpb249ZnVuY3Rpb24oKXt2YXIgZT1kLm9mZnNldDtyZXR1cm4gcyYmKGUrPWQudHJpZ2dlckVsZW1lbnQ/djpzLmluZm8oXCJzaXplXCIpKmYudHJpZ2dlckhvb2soKSksZX07dmFyIFQsQTtmLm9uKFwic2hpZnQuaW50ZXJuYWxcIixmdW5jdGlvbihlKXt2YXIgdD1cImR1cmF0aW9uXCI9PT1lLnJlYXNvbjsoaD09PWMmJnR8fGg9PT1sJiYwPT09ZC5kdXJhdGlvbikmJk8oKSx0JiZfKCl9KS5vbihcInByb2dyZXNzLmludGVybmFsXCIsZnVuY3Rpb24oKXtPKCl9KS5vbihcImFkZC5pbnRlcm5hbFwiLGZ1bmN0aW9uKCl7XygpfSkub24oXCJkZXN0cm95LmludGVybmFsXCIsZnVuY3Rpb24oZSl7Zi5yZW1vdmVQaW4oZS5yZXNldCl9KTt2YXIgTz1mdW5jdGlvbihlKXtpZihUJiZzKXt2YXIgdD1zLmluZm8oKSxuPUEuc3BhY2VyLmZpcnN0Q2hpbGQ7aWYoZXx8aCE9PWwpe3ZhciByPXtwb3NpdGlvbjpBLmluRmxvdz9cInJlbGF0aXZlXCI6XCJhYnNvbHV0ZVwiLHRvcDowLGxlZnQ6MH0sbz1pLmNzcyhuLFwicG9zaXRpb25cIikhPXIucG9zaXRpb247QS5wdXNoRm9sbG93ZXJzP2QuZHVyYXRpb24+MCYmKGg9PT1jJiYwPT09cGFyc2VGbG9hdChpLmNzcyhBLnNwYWNlcixcInBhZGRpbmctdG9wXCIpKT9vPSEwOmg9PT1hJiYwPT09cGFyc2VGbG9hdChpLmNzcyhBLnNwYWNlcixcInBhZGRpbmctYm90dG9tXCIpKSYmKG89ITApKTpyW3QudmVydGljYWw/XCJ0b3BcIjpcImxlZnRcIl09ZC5kdXJhdGlvbipnLGkuY3NzKG4sciksbyYmXygpfWVsc2V7XCJmaXhlZFwiIT1pLmNzcyhuLFwicG9zaXRpb25cIikmJihpLmNzcyhuLHtwb3NpdGlvbjpcImZpeGVkXCJ9KSxfKCkpO3ZhciB1PWkuZ2V0Lm9mZnNldChBLnNwYWNlciwhMCksZj1kLnJldmVyc2V8fDA9PT1kLmR1cmF0aW9uP3Quc2Nyb2xsUG9zLXAuc3RhcnQ6TWF0aC5yb3VuZChnKmQuZHVyYXRpb24qMTApLzEwO3VbdC52ZXJ0aWNhbD9cInRvcFwiOlwibGVmdFwiXSs9ZixpLmNzcyhBLnNwYWNlci5maXJzdENoaWxkLHt0b3A6dS50b3AsbGVmdDp1LmxlZnR9KX19fSxfPWZ1bmN0aW9uKCl7aWYoVCYmcyYmQS5pbkZsb3cpe3ZhciBlPWg9PT1sLHQ9cy5pbmZvKFwidmVydGljYWxcIiksbj1BLnNwYWNlci5maXJzdENoaWxkLHI9aS5pc01hcmdpbkNvbGxhcHNlVHlwZShpLmNzcyhBLnNwYWNlcixcImRpc3BsYXlcIikpLG89e307QS5yZWxTaXplLndpZHRofHxBLnJlbFNpemUuYXV0b0Z1bGxXaWR0aD9lP2kuY3NzKFQse3dpZHRoOmkuZ2V0LndpZHRoKEEuc3BhY2VyKX0pOmkuY3NzKFQse3dpZHRoOlwiMTAwJVwifSk6KG9bXCJtaW4td2lkdGhcIl09aS5nZXQud2lkdGgodD9UOm4sITAsITApLG8ud2lkdGg9ZT9vW1wibWluLXdpZHRoXCJdOlwiYXV0b1wiKSxBLnJlbFNpemUuaGVpZ2h0P2U/aS5jc3MoVCx7aGVpZ2h0OmkuZ2V0LmhlaWdodChBLnNwYWNlciktKEEucHVzaEZvbGxvd2Vycz9kLmR1cmF0aW9uOjApfSk6aS5jc3MoVCx7aGVpZ2h0OlwiMTAwJVwifSk6KG9bXCJtaW4taGVpZ2h0XCJdPWkuZ2V0LmhlaWdodCh0P246VCwhMCwhciksby5oZWlnaHQ9ZT9vW1wibWluLWhlaWdodFwiXTpcImF1dG9cIiksQS5wdXNoRm9sbG93ZXJzJiYob1tcInBhZGRpbmdcIisodD9cIlRvcFwiOlwiTGVmdFwiKV09ZC5kdXJhdGlvbipnLG9bXCJwYWRkaW5nXCIrKHQ/XCJCb3R0b21cIjpcIlJpZ2h0XCIpXT1kLmR1cmF0aW9uKigxLWcpKSxpLmNzcyhBLnNwYWNlcixvKX19LE49ZnVuY3Rpb24oKXtzJiZUJiZoPT09bCYmIXMuaW5mbyhcImlzRG9jdW1lbnRcIikmJk8oKX0sUD1mdW5jdGlvbigpe3MmJlQmJmg9PT1sJiYoKEEucmVsU2l6ZS53aWR0aHx8QS5yZWxTaXplLmF1dG9GdWxsV2lkdGgpJiZpLmdldC53aWR0aCh3aW5kb3cpIT1pLmdldC53aWR0aChBLnNwYWNlci5wYXJlbnROb2RlKXx8QS5yZWxTaXplLmhlaWdodCYmaS5nZXQuaGVpZ2h0KHdpbmRvdykhPWkuZ2V0LmhlaWdodChBLnNwYWNlci5wYXJlbnROb2RlKSkmJl8oKX0sRD1mdW5jdGlvbihlKXtzJiZUJiZoPT09bCYmIXMuaW5mbyhcImlzRG9jdW1lbnRcIikmJihlLnByZXZlbnREZWZhdWx0KCkscy5fc2V0U2Nyb2xsUG9zKHMuaW5mbyhcInNjcm9sbFBvc1wiKS0oKGUud2hlZWxEZWx0YXx8ZVtzLmluZm8oXCJ2ZXJ0aWNhbFwiKT9cIndoZWVsRGVsdGFZXCI6XCJ3aGVlbERlbHRhWFwiXSkvM3x8MzAqLWUuZGV0YWlsKSkpfTt0aGlzLnNldFBpbj1mdW5jdGlvbihlLG4pe3ZhciByPXtwdXNoRm9sbG93ZXJzOiEwLHNwYWNlckNsYXNzOlwic2Nyb2xsbWFnaWMtcGluLXNwYWNlclwifTtpZihuPWkuZXh0ZW5kKHt9LHIsbiksZT1pLmdldC5lbGVtZW50cyhlKVswXSwhZSlyZXR1cm4gZjtpZihcImZpeGVkXCI9PT1pLmNzcyhlLFwicG9zaXRpb25cIikpcmV0dXJuIGY7aWYoVCl7aWYoVD09PWUpcmV0dXJuIGY7Zi5yZW1vdmVQaW4oKX1UPWU7dmFyIG89VC5wYXJlbnROb2RlLnN0eWxlLmRpc3BsYXkscz1bXCJ0b3BcIixcImxlZnRcIixcImJvdHRvbVwiLFwicmlnaHRcIixcIm1hcmdpblwiLFwibWFyZ2luTGVmdFwiLFwibWFyZ2luUmlnaHRcIixcIm1hcmdpblRvcFwiLFwibWFyZ2luQm90dG9tXCJdO1QucGFyZW50Tm9kZS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO3ZhciBhPVwiYWJzb2x1dGVcIiE9aS5jc3MoVCxcInBvc2l0aW9uXCIpLGw9aS5jc3MoVCxzLmNvbmNhdChbXCJkaXNwbGF5XCJdKSksYz1pLmNzcyhULFtcIndpZHRoXCIsXCJoZWlnaHRcIl0pO1QucGFyZW50Tm9kZS5zdHlsZS5kaXNwbGF5PW8sIWEmJm4ucHVzaEZvbGxvd2VycyYmKG4ucHVzaEZvbGxvd2Vycz0hMSk7dmFyIHU9VC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLFQpLGQ9aS5leHRlbmQobCx7cG9zaXRpb246YT9cInJlbGF0aXZlXCI6XCJhYnNvbHV0ZVwiLGJveFNpemluZzpcImNvbnRlbnQtYm94XCIsbW96Qm94U2l6aW5nOlwiY29udGVudC1ib3hcIix3ZWJraXRCb3hTaXppbmc6XCJjb250ZW50LWJveFwifSk7aWYoYXx8aS5leHRlbmQoZCxpLmNzcyhULFtcIndpZHRoXCIsXCJoZWlnaHRcIl0pKSxpLmNzcyh1LGQpLHUuc2V0QXR0cmlidXRlKHQsXCJcIiksaS5hZGRDbGFzcyh1LG4uc3BhY2VyQ2xhc3MpLEE9e3NwYWNlcjp1LHJlbFNpemU6e3dpZHRoOlwiJVwiPT09Yy53aWR0aC5zbGljZSgtMSksaGVpZ2h0OlwiJVwiPT09Yy5oZWlnaHQuc2xpY2UoLTEpLGF1dG9GdWxsV2lkdGg6XCJhdXRvXCI9PT1jLndpZHRoJiZhJiZpLmlzTWFyZ2luQ29sbGFwc2VUeXBlKGwuZGlzcGxheSl9LHB1c2hGb2xsb3dlcnM6bi5wdXNoRm9sbG93ZXJzLGluRmxvdzphfSwhVC5fX19vcmlnU3R5bGUpe1QuX19fb3JpZ1N0eWxlPXt9O3ZhciBoPVQuc3R5bGUsZz1zLmNvbmNhdChbXCJ3aWR0aFwiLFwiaGVpZ2h0XCIsXCJwb3NpdGlvblwiLFwiYm94U2l6aW5nXCIsXCJtb3pCb3hTaXppbmdcIixcIndlYmtpdEJveFNpemluZ1wiXSk7Zy5mb3JFYWNoKGZ1bmN0aW9uKGUpe1QuX19fb3JpZ1N0eWxlW2VdPWhbZV18fFwiXCJ9KX1yZXR1cm4gQS5yZWxTaXplLndpZHRoJiZpLmNzcyh1LHt3aWR0aDpjLndpZHRofSksQS5yZWxTaXplLmhlaWdodCYmaS5jc3ModSx7aGVpZ2h0OmMuaGVpZ2h0fSksdS5hcHBlbmRDaGlsZChUKSxpLmNzcyhULHtwb3NpdGlvbjphP1wicmVsYXRpdmVcIjpcImFic29sdXRlXCIsbWFyZ2luOlwiYXV0b1wiLHRvcDpcImF1dG9cIixsZWZ0OlwiYXV0b1wiLGJvdHRvbTpcImF1dG9cIixyaWdodDpcImF1dG9cIn0pLChBLnJlbFNpemUud2lkdGh8fEEucmVsU2l6ZS5hdXRvRnVsbFdpZHRoKSYmaS5jc3MoVCx7Ym94U2l6aW5nOlwiYm9yZGVyLWJveFwiLG1vekJveFNpemluZzpcImJvcmRlci1ib3hcIix3ZWJraXRCb3hTaXppbmc6XCJib3JkZXItYm94XCJ9KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLE4pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsTiksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixQKSxULmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXdoZWVsXCIsRCksVC5hZGRFdmVudExpc3RlbmVyKFwiRE9NTW91c2VTY3JvbGxcIixEKSxPKCksZn0sdGhpcy5yZW1vdmVQaW49ZnVuY3Rpb24oZSl7aWYoVCl7aWYoaD09PWwmJk8oITApLGV8fCFzKXt2YXIgbj1BLnNwYWNlci5maXJzdENoaWxkO2lmKG4uaGFzQXR0cmlidXRlKHQpKXt2YXIgcj1BLnNwYWNlci5zdHlsZSxvPVtcIm1hcmdpblwiLFwibWFyZ2luTGVmdFwiLFwibWFyZ2luUmlnaHRcIixcIm1hcmdpblRvcFwiLFwibWFyZ2luQm90dG9tXCJdO21hcmdpbnM9e30sby5mb3JFYWNoKGZ1bmN0aW9uKGUpe21hcmdpbnNbZV09cltlXXx8XCJcIn0pLGkuY3NzKG4sbWFyZ2lucyl9QS5zcGFjZXIucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobixBLnNwYWNlciksQS5zcGFjZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChBLnNwYWNlciksVC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZSh0KXx8KGkuY3NzKFQsVC5fX19vcmlnU3R5bGUpLGRlbGV0ZSBULl9fX29yaWdTdHlsZSl9d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixOKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLE4pLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsUCksVC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V3aGVlbFwiLEQpLFQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTU1vdXNlU2Nyb2xsXCIsRCksVD12b2lkIDB9cmV0dXJuIGZ9O3ZhciBSLGs9W107cmV0dXJuIGYub24oXCJkZXN0cm95LmludGVybmFsXCIsZnVuY3Rpb24oZSl7Zi5yZW1vdmVDbGFzc1RvZ2dsZShlLnJlc2V0KX0pLHRoaXMuc2V0Q2xhc3NUb2dnbGU9ZnVuY3Rpb24oZSx0KXt2YXIgbj1pLmdldC5lbGVtZW50cyhlKTtyZXR1cm4gMCE9PW4ubGVuZ3RoJiZpLnR5cGUuU3RyaW5nKHQpPyhrLmxlbmd0aD4wJiZmLnJlbW92ZUNsYXNzVG9nZ2xlKCksUj10LGs9bixmLm9uKFwiZW50ZXIuaW50ZXJuYWxfY2xhc3MgbGVhdmUuaW50ZXJuYWxfY2xhc3NcIixmdW5jdGlvbihlKXt2YXIgdD1cImVudGVyXCI9PT1lLnR5cGU/aS5hZGRDbGFzczppLnJlbW92ZUNsYXNzO2suZm9yRWFjaChmdW5jdGlvbihlKXt0KGUsUil9KX0pLGYpOmZ9LHRoaXMucmVtb3ZlQ2xhc3NUb2dnbGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmsuZm9yRWFjaChmdW5jdGlvbihlKXtpLnJlbW92ZUNsYXNzKGUsUil9KSxmLm9mZihcInN0YXJ0LmludGVybmFsX2NsYXNzIGVuZC5pbnRlcm5hbF9jbGFzc1wiKSxSPXZvaWQgMCxrPVtdLGZ9LHcoKSxmfTt2YXIgcj17ZGVmYXVsdHM6e2R1cmF0aW9uOjAsb2Zmc2V0OjAsdHJpZ2dlckVsZW1lbnQ6dm9pZCAwLHRyaWdnZXJIb29rOi41LHJldmVyc2U6ITAsbG9nbGV2ZWw6Mn0sdmFsaWRhdGU6e29mZnNldDpmdW5jdGlvbihlKXtpZihlPXBhcnNlRmxvYXQoZSksIWkudHlwZS5OdW1iZXIoZSkpdGhyb3cgMDtyZXR1cm4gZX0sdHJpZ2dlckVsZW1lbnQ6ZnVuY3Rpb24oZSl7aWYoZT1lfHx2b2lkIDApe3ZhciB0PWkuZ2V0LmVsZW1lbnRzKGUpWzBdO2lmKCF0KXRocm93IDA7ZT10fXJldHVybiBlfSx0cmlnZ2VySG9vazpmdW5jdGlvbihlKXt2YXIgdD17b25DZW50ZXI6LjUsb25FbnRlcjoxLG9uTGVhdmU6MH07aWYoaS50eXBlLk51bWJlcihlKSllPU1hdGgubWF4KDAsTWF0aC5taW4ocGFyc2VGbG9hdChlKSwxKSk7ZWxzZXtpZighKGUgaW4gdCkpdGhyb3cgMDtlPXRbZV19cmV0dXJuIGV9LHJldmVyc2U6ZnVuY3Rpb24oZSl7cmV0dXJuISFlfX0sc2hpZnRzOltcImR1cmF0aW9uXCIsXCJvZmZzZXRcIixcInRyaWdnZXJIb29rXCJdfTtlLlNjZW5lLmFkZE9wdGlvbj1mdW5jdGlvbihlLHQsbixpKXtlIGluIHIuZGVmYXVsdHN8fChyLmRlZmF1bHRzW2VdPXQsci52YWxpZGF0ZVtlXT1uLGkmJnIuc2hpZnRzLnB1c2goZSkpfSxlLlNjZW5lLmV4dGVuZD1mdW5jdGlvbih0KXt2YXIgbj10aGlzO2UuU2NlbmU9ZnVuY3Rpb24oKXtyZXR1cm4gbi5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy4kc3VwZXI9aS5leHRlbmQoe30sdGhpcyksdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9LGkuZXh0ZW5kKGUuU2NlbmUsbiksZS5TY2VuZS5wcm90b3R5cGU9bi5wcm90b3R5cGUsZS5TY2VuZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5TY2VuZX0sZS5FdmVudD1mdW5jdGlvbihlLHQsbixyKXtyPXJ8fHt9O2Zvcih2YXIgaSBpbiByKXRoaXNbaV09cltpXTtyZXR1cm4gdGhpcy50eXBlPWUsdGhpcy50YXJnZXQ9dGhpcy5jdXJyZW50VGFyZ2V0PW4sdGhpcy5uYW1lc3BhY2U9dHx8XCJcIix0aGlzLnRpbWVTdGFtcD10aGlzLnRpbWVzdGFtcD1EYXRlLm5vdygpLHRoaXN9O3ZhciBpPWUuX3V0aWw9ZnVuY3Rpb24oZSl7dmFyIHQsbj17fSxyPWZ1bmN0aW9uKGUpe3JldHVybiBwYXJzZUZsb2F0KGUpfHwwfSxpPWZ1bmN0aW9uKHQpe3JldHVybiB0LmN1cnJlbnRTdHlsZT90LmN1cnJlbnRTdHlsZTplLmdldENvbXB1dGVkU3R5bGUodCl9LG89ZnVuY3Rpb24odCxuLG8scyl7aWYobj1uPT09ZG9jdW1lbnQ/ZTpuLG49PT1lKXM9ITE7ZWxzZSBpZighZi5Eb21FbGVtZW50KG4pKXJldHVybiAwO3Q9dC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSt0LnN1YnN0cigxKS50b0xvd2VyQ2FzZSgpO3ZhciBhPShvP25bXCJvZmZzZXRcIit0XXx8bltcIm91dGVyXCIrdF06bltcImNsaWVudFwiK3RdfHxuW1wiaW5uZXJcIit0XSl8fDA7aWYobyYmcyl7dmFyIGw9aShuKTthKz1cIkhlaWdodFwiPT09dD9yKGwubWFyZ2luVG9wKStyKGwubWFyZ2luQm90dG9tKTpyKGwubWFyZ2luTGVmdCkrcihsLm1hcmdpblJpZ2h0KX1yZXR1cm4gYX0scz1mdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKC9eW15hLXpdKyhbYS16XSkvZyxcIiQxXCIpLnJlcGxhY2UoLy0oW2Etel0pL2csZnVuY3Rpb24oZSl7cmV0dXJuIGVbMV0udG9VcHBlckNhc2UoKX0pfTtuLmV4dGVuZD1mdW5jdGlvbihlKXtmb3IoZT1lfHx7fSx0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKylpZihhcmd1bWVudHNbdF0pZm9yKHZhciBuIGluIGFyZ3VtZW50c1t0XSlhcmd1bWVudHNbdF0uaGFzT3duUHJvcGVydHkobikmJihlW25dPWFyZ3VtZW50c1t0XVtuXSk7cmV0dXJuIGV9LG4uaXNNYXJnaW5Db2xsYXBzZVR5cGU9ZnVuY3Rpb24oZSl7cmV0dXJuW1wiYmxvY2tcIixcImZsZXhcIixcImxpc3QtaXRlbVwiLFwidGFibGVcIixcIi13ZWJraXQtYm94XCJdLmluZGV4T2YoZSk+LTF9O3ZhciBhPTAsbD1bXCJtc1wiLFwibW96XCIsXCJ3ZWJraXRcIixcIm9cIl0sYz1lLnJlcXVlc3RBbmltYXRpb25GcmFtZSx1PWUuY2FuY2VsQW5pbWF0aW9uRnJhbWU7Zm9yKHQ9MDshYyYmdDxsLmxlbmd0aDsrK3QpYz1lW2xbdF0rXCJSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIl0sdT1lW2xbdF0rXCJDYW5jZWxBbmltYXRpb25GcmFtZVwiXXx8ZVtsW3RdK1wiQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCJdO2N8fChjPWZ1bmN0aW9uKHQpe3ZhciBuPShuZXcgRGF0ZSkuZ2V0VGltZSgpLHI9TWF0aC5tYXgoMCwxNi0obi1hKSksaT1lLnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0KG4rcil9LHIpO3JldHVybiBhPW4rcixpfSksdXx8KHU9ZnVuY3Rpb24odCl7ZS5jbGVhclRpbWVvdXQodCl9KSxuLnJBRj1jLmJpbmQoZSksbi5jQUY9dS5iaW5kKGUpO3ZhciBmPW4udHlwZT1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnJlcGxhY2UoL15cXFtvYmplY3QgKC4rKVxcXSQvLFwiJDFcIikudG9Mb3dlckNhc2UoKX07Zi5TdHJpbmc9ZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09PWYoZSl9LGYuRnVuY3Rpb249ZnVuY3Rpb24oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT09ZihlKX0sZi5BcnJheT1mdW5jdGlvbihlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKX0sZi5OdW1iZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIWYuQXJyYXkoZSkmJmUtcGFyc2VGbG9hdChlKSsxPj0wfSxmLkRvbUVsZW1lbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIEhUTUxFbGVtZW50P2UgaW5zdGFuY2VvZiBIVE1MRWxlbWVudDplJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWUmJjE9PT1lLm5vZGVUeXBlJiZcInN0cmluZ1wiPT10eXBlb2YgZS5ub2RlTmFtZX07dmFyIGQ9bi5nZXQ9e307cmV0dXJuIGQuZWxlbWVudHM9ZnVuY3Rpb24odCl7dmFyIG49W107aWYoZi5TdHJpbmcodCkpdHJ5e3Q9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KX1jYXRjaChlKXtyZXR1cm4gbn1pZihcIm5vZGVsaXN0XCI9PT1mKHQpfHxmLkFycmF5KHQpKWZvcih2YXIgcj0wLGk9bi5sZW5ndGg9dC5sZW5ndGg7aT5yO3IrKyl7dmFyIG89dFtyXTtuW3JdPWYuRG9tRWxlbWVudChvKT9vOmQuZWxlbWVudHMobyl9ZWxzZShmLkRvbUVsZW1lbnQodCl8fHQ9PT1kb2N1bWVudHx8dD09PWUpJiYobj1bdF0pO3JldHVybiBufSxkLnNjcm9sbFRvcD1mdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJudW1iZXJcIj09dHlwZW9mIHQuc2Nyb2xsVG9wP3Quc2Nyb2xsVG9wOmUucGFnZVlPZmZzZXR8fDB9LGQuc2Nyb2xsTGVmdD1mdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJudW1iZXJcIj09dHlwZW9mIHQuc2Nyb2xsTGVmdD90LnNjcm9sbExlZnQ6ZS5wYWdlWE9mZnNldHx8MH0sZC53aWR0aD1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG8oXCJ3aWR0aFwiLGUsdCxuKX0sZC5oZWlnaHQ9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBvKFwiaGVpZ2h0XCIsZSx0LG4pfSxkLm9mZnNldD1mdW5jdGlvbihlLHQpe3ZhciBuPXt0b3A6MCxsZWZ0OjB9O2lmKGUmJmUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KXt2YXIgcj1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO24udG9wPXIudG9wLG4ubGVmdD1yLmxlZnQsdHx8KG4udG9wKz1kLnNjcm9sbFRvcCgpLG4ubGVmdCs9ZC5zY3JvbGxMZWZ0KCkpfXJldHVybiBufSxuLmFkZENsYXNzPWZ1bmN0aW9uKGUsdCl7dCYmKGUuY2xhc3NMaXN0P2UuY2xhc3NMaXN0LmFkZCh0KTplLmNsYXNzTmFtZSs9XCIgXCIrdCl9LG4ucmVtb3ZlQ2xhc3M9ZnVuY3Rpb24oZSx0KXt0JiYoZS5jbGFzc0xpc3Q/ZS5jbGFzc0xpc3QucmVtb3ZlKHQpOmUuY2xhc3NOYW1lPWUuY2xhc3NOYW1lLnJlcGxhY2UoUmVnRXhwKFwiKF58XFxcXGIpXCIrdC5zcGxpdChcIiBcIikuam9pbihcInxcIikrXCIoXFxcXGJ8JClcIixcImdpXCIpLFwiIFwiKSl9LG4uY3NzPWZ1bmN0aW9uKGUsdCl7aWYoZi5TdHJpbmcodCkpcmV0dXJuIGkoZSlbcyh0KV07aWYoZi5BcnJheSh0KSl7dmFyIG49e30scj1pKGUpO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24oZSl7bltlXT1yW3MoZSldfSksbn1mb3IodmFyIG8gaW4gdCl7dmFyIGE9dFtvXTthPT1wYXJzZUZsb2F0KGEpJiYoYSs9XCJweFwiKSxlLnN0eWxlW3MobyldPWF9fSxufSh3aW5kb3d8fHt9KTtyZXR1cm4gZX0pOyIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLCBldmFsKShcInRoaXNcIik7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCIvKiBnbG9iYWxzIF9fd2VicGFja19hbWRfb3B0aW9uc19fICovXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19hbWRfb3B0aW9uc19fO1xuIiwiLyohXG4gKiBWRVJTSU9OOiAyLjAuMVxuICogREFURTogMjAxOC0wNS0zMFxuICogVVBEQVRFUyBBTkQgRE9DUyBBVDogaHR0cDovL2dyZWVuc29jay5jb21cbiAqIFxuICogSW5jbHVkZXMgYWxsIG9mIHRoZSBmb2xsb3dpbmc6IFR3ZWVuTGl0ZSwgVHdlZW5NYXgsIFRpbWVsaW5lTGl0ZSwgVGltZWxpbmVNYXgsIEVhc2VQYWNrLCBDU1NQbHVnaW4sIFJvdW5kUHJvcHNQbHVnaW4sIEJlemllclBsdWdpbiwgQXR0clBsdWdpbiwgRGlyZWN0aW9uYWxSb3RhdGlvblBsdWdpblxuICpcbiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwOC0yMDE4LCBHcmVlblNvY2suIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIHdvcmsgaXMgc3ViamVjdCB0byB0aGUgdGVybXMgYXQgaHR0cDovL2dyZWVuc29jay5jb20vc3RhbmRhcmQtbGljZW5zZSBvciBmb3JcbiAqIENsdWIgR3JlZW5Tb2NrIG1lbWJlcnMsIHRoZSBzb2Z0d2FyZSBhZ3JlZW1lbnQgdGhhdCB3YXMgaXNzdWVkIHdpdGggeW91ciBtZW1iZXJzaGlwLlxuICogXG4gKiBAYXV0aG9yOiBKYWNrIERveWxlLCBqYWNrQGdyZWVuc29jay5jb21cbiAqKi9cbnZhciBfZ3NTY29wZT1cInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6dGhpc3x8d2luZG93OyhfZ3NTY29wZS5fZ3NRdWV1ZXx8KF9nc1Njb3BlLl9nc1F1ZXVlPVtdKSkucHVzaChmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO19nc1Njb3BlLl9nc0RlZmluZShcIlR3ZWVuTWF4XCIsW1wiY29yZS5BbmltYXRpb25cIixcImNvcmUuU2ltcGxlVGltZWxpbmVcIixcIlR3ZWVuTGl0ZVwiXSxmdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz1bXSxkPWEubGVuZ3RoO2ZvcihiPTA7YiE9PWQ7Yy5wdXNoKGFbYisrXSkpO3JldHVybiBjfSxlPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9YS5jeWNsZTtmb3IoZCBpbiBmKWU9ZltkXSxhW2RdPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZShjLGJbY10pOmVbYyVlLmxlbmd0aF07ZGVsZXRlIGEuY3ljbGV9LGY9ZnVuY3Rpb24oYSxiLGQpe2MuY2FsbCh0aGlzLGEsYixkKSx0aGlzLl9jeWNsZT0wLHRoaXMuX3lveW89dGhpcy52YXJzLnlveW89PT0hMHx8ISF0aGlzLnZhcnMueW95b0Vhc2UsdGhpcy5fcmVwZWF0PXRoaXMudmFycy5yZXBlYXR8fDAsdGhpcy5fcmVwZWF0RGVsYXk9dGhpcy52YXJzLnJlcGVhdERlbGF5fHwwLHRoaXMuX3JlcGVhdCYmdGhpcy5fdW5jYWNoZSghMCksdGhpcy5yZW5kZXI9Zi5wcm90b3R5cGUucmVuZGVyfSxnPTFlLTEwLGg9Yy5faW50ZXJuYWxzLGk9aC5pc1NlbGVjdG9yLGo9aC5pc0FycmF5LGs9Zi5wcm90b3R5cGU9Yy50byh7fSwuMSx7fSksbD1bXTtmLnZlcnNpb249XCIyLjAuMVwiLGsuY29uc3RydWN0b3I9ZixrLmtpbGwoKS5fZ2M9ITEsZi5raWxsVHdlZW5zT2Y9Zi5raWxsRGVsYXllZENhbGxzVG89Yy5raWxsVHdlZW5zT2YsZi5nZXRUd2VlbnNPZj1jLmdldFR3ZWVuc09mLGYubGFnU21vb3RoaW5nPWMubGFnU21vb3RoaW5nLGYudGlja2VyPWMudGlja2VyLGYucmVuZGVyPWMucmVuZGVyLGsuaW52YWxpZGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl95b3lvPXRoaXMudmFycy55b3lvPT09ITB8fCEhdGhpcy52YXJzLnlveW9FYXNlLHRoaXMuX3JlcGVhdD10aGlzLnZhcnMucmVwZWF0fHwwLHRoaXMuX3JlcGVhdERlbGF5PXRoaXMudmFycy5yZXBlYXREZWxheXx8MCx0aGlzLl95b3lvRWFzZT1udWxsLHRoaXMuX3VuY2FjaGUoITApLGMucHJvdG90eXBlLmludmFsaWRhdGUuY2FsbCh0aGlzKX0say51cGRhdGVUbz1mdW5jdGlvbihhLGIpe3ZhciBkLGU9dGhpcy5yYXRpbyxmPXRoaXMudmFycy5pbW1lZGlhdGVSZW5kZXJ8fGEuaW1tZWRpYXRlUmVuZGVyO2ImJnRoaXMuX3N0YXJ0VGltZTx0aGlzLl90aW1lbGluZS5fdGltZSYmKHRoaXMuX3N0YXJ0VGltZT10aGlzLl90aW1lbGluZS5fdGltZSx0aGlzLl91bmNhY2hlKCExKSx0aGlzLl9nYz90aGlzLl9lbmFibGVkKCEwLCExKTp0aGlzLl90aW1lbGluZS5pbnNlcnQodGhpcyx0aGlzLl9zdGFydFRpbWUtdGhpcy5fZGVsYXkpKTtmb3IoZCBpbiBhKXRoaXMudmFyc1tkXT1hW2RdO2lmKHRoaXMuX2luaXR0ZWR8fGYpaWYoYil0aGlzLl9pbml0dGVkPSExLGYmJnRoaXMucmVuZGVyKDAsITAsITApO2Vsc2UgaWYodGhpcy5fZ2MmJnRoaXMuX2VuYWJsZWQoITAsITEpLHRoaXMuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQmJnRoaXMuX2ZpcnN0UFQmJmMuX29uUGx1Z2luRXZlbnQoXCJfb25EaXNhYmxlXCIsdGhpcyksdGhpcy5fdGltZS90aGlzLl9kdXJhdGlvbj4uOTk4KXt2YXIgZz10aGlzLl90b3RhbFRpbWU7dGhpcy5yZW5kZXIoMCwhMCwhMSksdGhpcy5faW5pdHRlZD0hMSx0aGlzLnJlbmRlcihnLCEwLCExKX1lbHNlIGlmKHRoaXMuX2luaXR0ZWQ9ITEsdGhpcy5faW5pdCgpLHRoaXMuX3RpbWU+MHx8Zilmb3IodmFyIGgsaT0xLygxLWUpLGo9dGhpcy5fZmlyc3RQVDtqOyloPWoucytqLmMsai5jKj1pLGoucz1oLWouYyxqPWouX25leHQ7cmV0dXJuIHRoaXN9LGsucmVuZGVyPWZ1bmN0aW9uKGEsYixkKXt0aGlzLl9pbml0dGVkfHwwPT09dGhpcy5fZHVyYXRpb24mJnRoaXMudmFycy5yZXBlYXQmJnRoaXMuaW52YWxpZGF0ZSgpO3ZhciBlLGYsaSxqLGssbCxtLG4sbyxwPXRoaXMuX2RpcnR5P3RoaXMudG90YWxEdXJhdGlvbigpOnRoaXMuX3RvdGFsRHVyYXRpb24scT10aGlzLl90aW1lLHI9dGhpcy5fdG90YWxUaW1lLHM9dGhpcy5fY3ljbGUsdD10aGlzLl9kdXJhdGlvbix1PXRoaXMuX3Jhd1ByZXZUaW1lO2lmKGE+PXAtMWUtNyYmYT49MD8odGhpcy5fdG90YWxUaW1lPXAsdGhpcy5fY3ljbGU9dGhpcy5fcmVwZWF0LHRoaXMuX3lveW8mJjAhPT0oMSZ0aGlzLl9jeWNsZSk/KHRoaXMuX3RpbWU9MCx0aGlzLnJhdGlvPXRoaXMuX2Vhc2UuX2NhbGNFbmQ/dGhpcy5fZWFzZS5nZXRSYXRpbygwKTowKToodGhpcy5fdGltZT10LHRoaXMucmF0aW89dGhpcy5fZWFzZS5fY2FsY0VuZD90aGlzLl9lYXNlLmdldFJhdGlvKDEpOjEpLHRoaXMuX3JldmVyc2VkfHwoZT0hMCxmPVwib25Db21wbGV0ZVwiLGQ9ZHx8dGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuKSwwPT09dCYmKHRoaXMuX2luaXR0ZWR8fCF0aGlzLnZhcnMubGF6eXx8ZCkmJih0aGlzLl9zdGFydFRpbWU9PT10aGlzLl90aW1lbGluZS5fZHVyYXRpb24mJihhPTApLCgwPnV8fDA+PWEmJmE+PS0xZS03fHx1PT09ZyYmXCJpc1BhdXNlXCIhPT10aGlzLmRhdGEpJiZ1IT09YSYmKGQ9ITAsdT5nJiYoZj1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIpKSx0aGlzLl9yYXdQcmV2VGltZT1uPSFifHxhfHx1PT09YT9hOmcpKToxZS03PmE/KHRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPXRoaXMuX2N5Y2xlPTAsdGhpcy5yYXRpbz10aGlzLl9lYXNlLl9jYWxjRW5kP3RoaXMuX2Vhc2UuZ2V0UmF0aW8oMCk6MCwoMCE9PXJ8fDA9PT10JiZ1PjApJiYoZj1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIsZT10aGlzLl9yZXZlcnNlZCksMD5hJiYodGhpcy5fYWN0aXZlPSExLDA9PT10JiYodGhpcy5faW5pdHRlZHx8IXRoaXMudmFycy5sYXp5fHxkKSYmKHU+PTAmJihkPSEwKSx0aGlzLl9yYXdQcmV2VGltZT1uPSFifHxhfHx1PT09YT9hOmcpKSx0aGlzLl9pbml0dGVkfHwoZD0hMCkpOih0aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT1hLDAhPT10aGlzLl9yZXBlYXQmJihqPXQrdGhpcy5fcmVwZWF0RGVsYXksdGhpcy5fY3ljbGU9dGhpcy5fdG90YWxUaW1lL2o+PjAsMCE9PXRoaXMuX2N5Y2xlJiZ0aGlzLl9jeWNsZT09PXRoaXMuX3RvdGFsVGltZS9qJiZhPj1yJiZ0aGlzLl9jeWNsZS0tLHRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lLXRoaXMuX2N5Y2xlKmosdGhpcy5feW95byYmMCE9PSgxJnRoaXMuX2N5Y2xlKSYmKHRoaXMuX3RpbWU9dC10aGlzLl90aW1lLG89dGhpcy5feW95b0Vhc2V8fHRoaXMudmFycy55b3lvRWFzZSxvJiYodGhpcy5feW95b0Vhc2V8fChvIT09ITB8fHRoaXMuX2luaXR0ZWQ/dGhpcy5feW95b0Vhc2U9bz1vPT09ITA/dGhpcy5fZWFzZTpvIGluc3RhbmNlb2YgRWFzZT9vOkVhc2UubWFwW29dOihvPXRoaXMudmFycy5lYXNlLHRoaXMuX3lveW9FYXNlPW89bz9vIGluc3RhbmNlb2YgRWFzZT9vOlwiZnVuY3Rpb25cIj09dHlwZW9mIG8/bmV3IEVhc2Uobyx0aGlzLnZhcnMuZWFzZVBhcmFtcyk6RWFzZS5tYXBbb118fGMuZGVmYXVsdEVhc2U6Yy5kZWZhdWx0RWFzZSkpLHRoaXMucmF0aW89bz8xLW8uZ2V0UmF0aW8oKHQtdGhpcy5fdGltZSkvdCk6MCkpLHRoaXMuX3RpbWU+dD90aGlzLl90aW1lPXQ6dGhpcy5fdGltZTwwJiYodGhpcy5fdGltZT0wKSksdGhpcy5fZWFzZVR5cGUmJiFvPyhrPXRoaXMuX3RpbWUvdCxsPXRoaXMuX2Vhc2VUeXBlLG09dGhpcy5fZWFzZVBvd2VyLCgxPT09bHx8Mz09PWwmJms+PS41KSYmKGs9MS1rKSwzPT09bCYmKGsqPTIpLDE9PT1tP2sqPWs6Mj09PW0/ayo9ayprOjM9PT1tP2sqPWsqayprOjQ9PT1tJiYoayo9ayprKmsqayksMT09PWw/dGhpcy5yYXRpbz0xLWs6Mj09PWw/dGhpcy5yYXRpbz1rOnRoaXMuX3RpbWUvdDwuNT90aGlzLnJhdGlvPWsvMjp0aGlzLnJhdGlvPTEtay8yKTpvfHwodGhpcy5yYXRpbz10aGlzLl9lYXNlLmdldFJhdGlvKHRoaXMuX3RpbWUvdCkpKSxxPT09dGhpcy5fdGltZSYmIWQmJnM9PT10aGlzLl9jeWNsZSlyZXR1cm4gdm9pZChyIT09dGhpcy5fdG90YWxUaW1lJiZ0aGlzLl9vblVwZGF0ZSYmKGJ8fHRoaXMuX2NhbGxiYWNrKFwib25VcGRhdGVcIikpKTtpZighdGhpcy5faW5pdHRlZCl7aWYodGhpcy5faW5pdCgpLCF0aGlzLl9pbml0dGVkfHx0aGlzLl9nYylyZXR1cm47aWYoIWQmJnRoaXMuX2ZpcnN0UFQmJih0aGlzLnZhcnMubGF6eSE9PSExJiZ0aGlzLl9kdXJhdGlvbnx8dGhpcy52YXJzLmxhenkmJiF0aGlzLl9kdXJhdGlvbikpcmV0dXJuIHRoaXMuX3RpbWU9cSx0aGlzLl90b3RhbFRpbWU9cix0aGlzLl9yYXdQcmV2VGltZT11LHRoaXMuX2N5Y2xlPXMsaC5sYXp5VHdlZW5zLnB1c2godGhpcyksdm9pZCh0aGlzLl9sYXp5PVthLGJdKTshdGhpcy5fdGltZXx8ZXx8bz9lJiZ0aGlzLl9lYXNlLl9jYWxjRW5kJiYhbyYmKHRoaXMucmF0aW89dGhpcy5fZWFzZS5nZXRSYXRpbygwPT09dGhpcy5fdGltZT8wOjEpKTp0aGlzLnJhdGlvPXRoaXMuX2Vhc2UuZ2V0UmF0aW8odGhpcy5fdGltZS90KX1mb3IodGhpcy5fbGF6eSE9PSExJiYodGhpcy5fbGF6eT0hMSksdGhpcy5fYWN0aXZlfHwhdGhpcy5fcGF1c2VkJiZ0aGlzLl90aW1lIT09cSYmYT49MCYmKHRoaXMuX2FjdGl2ZT0hMCksMD09PXImJigyPT09dGhpcy5faW5pdHRlZCYmYT4wJiZ0aGlzLl9pbml0KCksdGhpcy5fc3RhcnRBdCYmKGE+PTA/dGhpcy5fc3RhcnRBdC5yZW5kZXIoYSwhMCxkKTpmfHwoZj1cIl9kdW1teUdTXCIpKSx0aGlzLnZhcnMub25TdGFydCYmKDAhPT10aGlzLl90b3RhbFRpbWV8fDA9PT10KSYmKGJ8fHRoaXMuX2NhbGxiYWNrKFwib25TdGFydFwiKSkpLGk9dGhpcy5fZmlyc3RQVDtpOylpLmY/aS50W2kucF0oaS5jKnRoaXMucmF0aW8raS5zKTppLnRbaS5wXT1pLmMqdGhpcy5yYXRpbytpLnMsaT1pLl9uZXh0O3RoaXMuX29uVXBkYXRlJiYoMD5hJiZ0aGlzLl9zdGFydEF0JiZ0aGlzLl9zdGFydFRpbWUmJnRoaXMuX3N0YXJ0QXQucmVuZGVyKGEsITAsZCksYnx8KHRoaXMuX3RvdGFsVGltZSE9PXJ8fGYpJiZ0aGlzLl9jYWxsYmFjayhcIm9uVXBkYXRlXCIpKSx0aGlzLl9jeWNsZSE9PXMmJihifHx0aGlzLl9nY3x8dGhpcy52YXJzLm9uUmVwZWF0JiZ0aGlzLl9jYWxsYmFjayhcIm9uUmVwZWF0XCIpKSxmJiYoIXRoaXMuX2djfHxkKSYmKDA+YSYmdGhpcy5fc3RhcnRBdCYmIXRoaXMuX29uVXBkYXRlJiZ0aGlzLl9zdGFydFRpbWUmJnRoaXMuX3N0YXJ0QXQucmVuZGVyKGEsITAsZCksZSYmKHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiYmdGhpcy5fZW5hYmxlZCghMSwhMSksdGhpcy5fYWN0aXZlPSExKSwhYiYmdGhpcy52YXJzW2ZdJiZ0aGlzLl9jYWxsYmFjayhmKSwwPT09dCYmdGhpcy5fcmF3UHJldlRpbWU9PT1nJiZuIT09ZyYmKHRoaXMuX3Jhd1ByZXZUaW1lPTApKX0sZi50bz1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIG5ldyBmKGEsYixjKX0sZi5mcm9tPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYy5ydW5CYWNrd2FyZHM9ITAsYy5pbW1lZGlhdGVSZW5kZXI9MCE9Yy5pbW1lZGlhdGVSZW5kZXIsbmV3IGYoYSxiLGMpfSxmLmZyb21Ubz1mdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gZC5zdGFydEF0PWMsZC5pbW1lZGlhdGVSZW5kZXI9MCE9ZC5pbW1lZGlhdGVSZW5kZXImJjAhPWMuaW1tZWRpYXRlUmVuZGVyLG5ldyBmKGEsYixkKX0sZi5zdGFnZ2VyVG89Zi5hbGxUbz1mdW5jdGlvbihhLGIsZyxoLGssbSxuKXtoPWh8fDA7dmFyIG8scCxxLHIscz0wLHQ9W10sdT1mdW5jdGlvbigpe2cub25Db21wbGV0ZSYmZy5vbkNvbXBsZXRlLmFwcGx5KGcub25Db21wbGV0ZVNjb3BlfHx0aGlzLGFyZ3VtZW50cyksay5hcHBseShufHxnLmNhbGxiYWNrU2NvcGV8fHRoaXMsbXx8bCl9LHY9Zy5jeWNsZSx3PWcuc3RhcnRBdCYmZy5zdGFydEF0LmN5Y2xlO2ZvcihqKGEpfHwoXCJzdHJpbmdcIj09dHlwZW9mIGEmJihhPWMuc2VsZWN0b3IoYSl8fGEpLGkoYSkmJihhPWQoYSkpKSxhPWF8fFtdLDA+aCYmKGE9ZChhKSxhLnJldmVyc2UoKSxoKj0tMSksbz1hLmxlbmd0aC0xLHE9MDtvPj1xO3ErKyl7cD17fTtmb3IociBpbiBnKXBbcl09Z1tyXTtpZih2JiYoZShwLGEscSksbnVsbCE9cC5kdXJhdGlvbiYmKGI9cC5kdXJhdGlvbixkZWxldGUgcC5kdXJhdGlvbikpLHcpe3c9cC5zdGFydEF0PXt9O2ZvcihyIGluIGcuc3RhcnRBdCl3W3JdPWcuc3RhcnRBdFtyXTtlKHAuc3RhcnRBdCxhLHEpfXAuZGVsYXk9cysocC5kZWxheXx8MCkscT09PW8mJmsmJihwLm9uQ29tcGxldGU9dSksdFtxXT1uZXcgZihhW3FdLGIscCkscys9aH1yZXR1cm4gdH0sZi5zdGFnZ2VyRnJvbT1mLmFsbEZyb209ZnVuY3Rpb24oYSxiLGMsZCxlLGcsaCl7cmV0dXJuIGMucnVuQmFja3dhcmRzPSEwLGMuaW1tZWRpYXRlUmVuZGVyPTAhPWMuaW1tZWRpYXRlUmVuZGVyLGYuc3RhZ2dlclRvKGEsYixjLGQsZSxnLGgpfSxmLnN0YWdnZXJGcm9tVG89Zi5hbGxGcm9tVG89ZnVuY3Rpb24oYSxiLGMsZCxlLGcsaCxpKXtyZXR1cm4gZC5zdGFydEF0PWMsZC5pbW1lZGlhdGVSZW5kZXI9MCE9ZC5pbW1lZGlhdGVSZW5kZXImJjAhPWMuaW1tZWRpYXRlUmVuZGVyLGYuc3RhZ2dlclRvKGEsYixkLGUsZyxoLGkpfSxmLmRlbGF5ZWRDYWxsPWZ1bmN0aW9uKGEsYixjLGQsZSl7cmV0dXJuIG5ldyBmKGIsMCx7ZGVsYXk6YSxvbkNvbXBsZXRlOmIsb25Db21wbGV0ZVBhcmFtczpjLGNhbGxiYWNrU2NvcGU6ZCxvblJldmVyc2VDb21wbGV0ZTpiLG9uUmV2ZXJzZUNvbXBsZXRlUGFyYW1zOmMsaW1tZWRpYXRlUmVuZGVyOiExLHVzZUZyYW1lczplLG92ZXJ3cml0ZTowfSl9LGYuc2V0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBmKGEsMCxiKX0sZi5pc1R3ZWVuaW5nPWZ1bmN0aW9uKGEpe3JldHVybiBjLmdldFR3ZWVuc09mKGEsITApLmxlbmd0aD4wfTt2YXIgbT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgZD1bXSxlPTAsZj1hLl9maXJzdDtmOylmIGluc3RhbmNlb2YgYz9kW2UrK109ZjooYiYmKGRbZSsrXT1mKSxkPWQuY29uY2F0KG0oZixiKSksZT1kLmxlbmd0aCksZj1mLl9uZXh0O3JldHVybiBkfSxuPWYuZ2V0QWxsVHdlZW5zPWZ1bmN0aW9uKGIpe3JldHVybiBtKGEuX3Jvb3RUaW1lbGluZSxiKS5jb25jYXQobShhLl9yb290RnJhbWVzVGltZWxpbmUsYikpfTtmLmtpbGxBbGw9ZnVuY3Rpb24oYSxjLGQsZSl7bnVsbD09YyYmKGM9ITApLG51bGw9PWQmJihkPSEwKTt2YXIgZixnLGgsaT1uKDAhPWUpLGo9aS5sZW5ndGgsaz1jJiZkJiZlO2ZvcihoPTA7aj5oO2grKylnPWlbaF0sKGt8fGcgaW5zdGFuY2VvZiBifHwoZj1nLnRhcmdldD09PWcudmFycy5vbkNvbXBsZXRlKSYmZHx8YyYmIWYpJiYoYT9nLnRvdGFsVGltZShnLl9yZXZlcnNlZD8wOmcudG90YWxEdXJhdGlvbigpKTpnLl9lbmFibGVkKCExLCExKSl9LGYua2lsbENoaWxkVHdlZW5zT2Y9ZnVuY3Rpb24oYSxiKXtpZihudWxsIT1hKXt2YXIgZSxnLGssbCxtLG49aC50d2Vlbkxvb2t1cDtpZihcInN0cmluZ1wiPT10eXBlb2YgYSYmKGE9Yy5zZWxlY3RvcihhKXx8YSksaShhKSYmKGE9ZChhKSksaihhKSlmb3IobD1hLmxlbmd0aDstLWw+LTE7KWYua2lsbENoaWxkVHdlZW5zT2YoYVtsXSxiKTtlbHNle2U9W107Zm9yKGsgaW4gbilmb3IoZz1uW2tdLnRhcmdldC5wYXJlbnROb2RlO2c7KWc9PT1hJiYoZT1lLmNvbmNhdChuW2tdLnR3ZWVucykpLGc9Zy5wYXJlbnROb2RlO2ZvcihtPWUubGVuZ3RoLGw9MDttPmw7bCsrKWImJmVbbF0udG90YWxUaW1lKGVbbF0udG90YWxEdXJhdGlvbigpKSxlW2xdLl9lbmFibGVkKCExLCExKX19fTt2YXIgbz1mdW5jdGlvbihhLGMsZCxlKXtjPWMhPT0hMSxkPWQhPT0hMSxlPWUhPT0hMTtmb3IodmFyIGYsZyxoPW4oZSksaT1jJiZkJiZlLGo9aC5sZW5ndGg7LS1qPi0xOylnPWhbal0sKGl8fGcgaW5zdGFuY2VvZiBifHwoZj1nLnRhcmdldD09PWcudmFycy5vbkNvbXBsZXRlKSYmZHx8YyYmIWYpJiZnLnBhdXNlZChhKX07cmV0dXJuIGYucGF1c2VBbGw9ZnVuY3Rpb24oYSxiLGMpe28oITAsYSxiLGMpfSxmLnJlc3VtZUFsbD1mdW5jdGlvbihhLGIsYyl7byghMSxhLGIsYyl9LGYuZ2xvYmFsVGltZVNjYWxlPWZ1bmN0aW9uKGIpe3ZhciBkPWEuX3Jvb3RUaW1lbGluZSxlPWMudGlja2VyLnRpbWU7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGI9Ynx8ZyxkLl9zdGFydFRpbWU9ZS0oZS1kLl9zdGFydFRpbWUpKmQuX3RpbWVTY2FsZS9iLGQ9YS5fcm9vdEZyYW1lc1RpbWVsaW5lLGU9Yy50aWNrZXIuZnJhbWUsZC5fc3RhcnRUaW1lPWUtKGUtZC5fc3RhcnRUaW1lKSpkLl90aW1lU2NhbGUvYixkLl90aW1lU2NhbGU9YS5fcm9vdFRpbWVsaW5lLl90aW1lU2NhbGU9YixiKTpkLl90aW1lU2NhbGV9LGsucHJvZ3Jlc3M9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLnRvdGFsVGltZSh0aGlzLmR1cmF0aW9uKCkqKHRoaXMuX3lveW8mJjAhPT0oMSZ0aGlzLl9jeWNsZSk/MS1hOmEpK3RoaXMuX2N5Y2xlKih0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSksYik6dGhpcy5fdGltZS90aGlzLmR1cmF0aW9uKCl9LGsudG90YWxQcm9ncmVzcz1mdW5jdGlvbihhLGIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMudG90YWxUaW1lKHRoaXMudG90YWxEdXJhdGlvbigpKmEsYik6dGhpcy5fdG90YWxUaW1lL3RoaXMudG90YWxEdXJhdGlvbigpfSxrLnRpbWU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fZGlydHkmJnRoaXMudG90YWxEdXJhdGlvbigpLGE+dGhpcy5fZHVyYXRpb24mJihhPXRoaXMuX2R1cmF0aW9uKSx0aGlzLl95b3lvJiYwIT09KDEmdGhpcy5fY3ljbGUpP2E9dGhpcy5fZHVyYXRpb24tYSt0aGlzLl9jeWNsZSoodGhpcy5fZHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpOjAhPT10aGlzLl9yZXBlYXQmJihhKz10aGlzLl9jeWNsZSoodGhpcy5fZHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpKSx0aGlzLnRvdGFsVGltZShhLGIpKTp0aGlzLl90aW1lfSxrLmR1cmF0aW9uPWZ1bmN0aW9uKGIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP2EucHJvdG90eXBlLmR1cmF0aW9uLmNhbGwodGhpcyxiKTp0aGlzLl9kdXJhdGlvbn0say50b3RhbER1cmF0aW9uPWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPy0xPT09dGhpcy5fcmVwZWF0P3RoaXM6dGhpcy5kdXJhdGlvbigoYS10aGlzLl9yZXBlYXQqdGhpcy5fcmVwZWF0RGVsYXkpLyh0aGlzLl9yZXBlYXQrMSkpOih0aGlzLl9kaXJ0eSYmKHRoaXMuX3RvdGFsRHVyYXRpb249LTE9PT10aGlzLl9yZXBlYXQ/OTk5OTk5OTk5OTk5OnRoaXMuX2R1cmF0aW9uKih0aGlzLl9yZXBlYXQrMSkrdGhpcy5fcmVwZWF0RGVsYXkqdGhpcy5fcmVwZWF0LHRoaXMuX2RpcnR5PSExKSx0aGlzLl90b3RhbER1cmF0aW9uKX0say5yZXBlYXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3JlcGVhdD1hLHRoaXMuX3VuY2FjaGUoITApKTp0aGlzLl9yZXBlYXR9LGsucmVwZWF0RGVsYXk9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3JlcGVhdERlbGF5PWEsdGhpcy5fdW5jYWNoZSghMCkpOnRoaXMuX3JlcGVhdERlbGF5fSxrLnlveW89ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3lveW89YSx0aGlzKTp0aGlzLl95b3lvfSxmfSwhMCksX2dzU2NvcGUuX2dzRGVmaW5lKFwiVGltZWxpbmVMaXRlXCIsW1wiY29yZS5BbmltYXRpb25cIixcImNvcmUuU2ltcGxlVGltZWxpbmVcIixcIlR3ZWVuTGl0ZVwiXSxmdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZnVuY3Rpb24oYSl7Yi5jYWxsKHRoaXMsYSksdGhpcy5fbGFiZWxzPXt9LHRoaXMuYXV0b1JlbW92ZUNoaWxkcmVuPXRoaXMudmFycy5hdXRvUmVtb3ZlQ2hpbGRyZW49PT0hMCx0aGlzLnNtb290aENoaWxkVGltaW5nPXRoaXMudmFycy5zbW9vdGhDaGlsZFRpbWluZz09PSEwLHRoaXMuX3NvcnRDaGlsZHJlbj0hMCx0aGlzLl9vblVwZGF0ZT10aGlzLnZhcnMub25VcGRhdGU7dmFyIGMsZCxlPXRoaXMudmFycztmb3IoZCBpbiBlKWM9ZVtkXSxpKGMpJiYtMSE9PWMuam9pbihcIlwiKS5pbmRleE9mKFwie3NlbGZ9XCIpJiYoZVtkXT10aGlzLl9zd2FwU2VsZkluUGFyYW1zKGMpKTtpKGUudHdlZW5zKSYmdGhpcy5hZGQoZS50d2VlbnMsMCxlLmFsaWduLGUuc3RhZ2dlcil9LGU9MWUtMTAsZj1jLl9pbnRlcm5hbHMsZz1kLl9pbnRlcm5hbHM9e30saD1mLmlzU2VsZWN0b3IsaT1mLmlzQXJyYXksaj1mLmxhenlUd2VlbnMsaz1mLmxhenlSZW5kZXIsbD1fZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyxtPWZ1bmN0aW9uKGEpe3ZhciBiLGM9e307Zm9yKGIgaW4gYSljW2JdPWFbYl07cmV0dXJuIGN9LG49ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1hLmN5Y2xlO2ZvcihkIGluIGYpZT1mW2RdLGFbZF09XCJmdW5jdGlvblwiPT10eXBlb2YgZT9lKGMsYltjXSk6ZVtjJWUubGVuZ3RoXTtkZWxldGUgYS5jeWNsZX0sbz1nLnBhdXNlQ2FsbGJhY2s9ZnVuY3Rpb24oKXt9LHA9ZnVuY3Rpb24oYSl7dmFyIGIsYz1bXSxkPWEubGVuZ3RoO2ZvcihiPTA7YiE9PWQ7Yy5wdXNoKGFbYisrXSkpO3JldHVybiBjfSxxPWQucHJvdG90eXBlPW5ldyBiO3JldHVybiBkLnZlcnNpb249XCIyLjAuMVwiLHEuY29uc3RydWN0b3I9ZCxxLmtpbGwoKS5fZ2M9cS5fZm9yY2luZ1BsYXloZWFkPXEuX2hhc1BhdXNlPSExLHEudG89ZnVuY3Rpb24oYSxiLGQsZSl7dmFyIGY9ZC5yZXBlYXQmJmwuVHdlZW5NYXh8fGM7cmV0dXJuIGI/dGhpcy5hZGQobmV3IGYoYSxiLGQpLGUpOnRoaXMuc2V0KGEsZCxlKX0scS5mcm9tPWZ1bmN0aW9uKGEsYixkLGUpe3JldHVybiB0aGlzLmFkZCgoZC5yZXBlYXQmJmwuVHdlZW5NYXh8fGMpLmZyb20oYSxiLGQpLGUpfSxxLmZyb21Ubz1mdW5jdGlvbihhLGIsZCxlLGYpe3ZhciBnPWUucmVwZWF0JiZsLlR3ZWVuTWF4fHxjO3JldHVybiBiP3RoaXMuYWRkKGcuZnJvbVRvKGEsYixkLGUpLGYpOnRoaXMuc2V0KGEsZSxmKX0scS5zdGFnZ2VyVG89ZnVuY3Rpb24oYSxiLGUsZixnLGksaixrKXt2YXIgbCxvLHE9bmV3IGQoe29uQ29tcGxldGU6aSxvbkNvbXBsZXRlUGFyYW1zOmosY2FsbGJhY2tTY29wZTprLHNtb290aENoaWxkVGltaW5nOnRoaXMuc21vb3RoQ2hpbGRUaW1pbmd9KSxyPWUuY3ljbGU7Zm9yKFwic3RyaW5nXCI9PXR5cGVvZiBhJiYoYT1jLnNlbGVjdG9yKGEpfHxhKSxhPWF8fFtdLGgoYSkmJihhPXAoYSkpLGY9Znx8MCwwPmYmJihhPXAoYSksYS5yZXZlcnNlKCksZio9LTEpLG89MDtvPGEubGVuZ3RoO28rKylsPW0oZSksbC5zdGFydEF0JiYobC5zdGFydEF0PW0obC5zdGFydEF0KSxsLnN0YXJ0QXQuY3ljbGUmJm4obC5zdGFydEF0LGEsbykpLHImJihuKGwsYSxvKSxudWxsIT1sLmR1cmF0aW9uJiYoYj1sLmR1cmF0aW9uLGRlbGV0ZSBsLmR1cmF0aW9uKSkscS50byhhW29dLGIsbCxvKmYpO3JldHVybiB0aGlzLmFkZChxLGcpfSxxLnN0YWdnZXJGcm9tPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCl7cmV0dXJuIGMuaW1tZWRpYXRlUmVuZGVyPTAhPWMuaW1tZWRpYXRlUmVuZGVyLGMucnVuQmFja3dhcmRzPSEwLHRoaXMuc3RhZ2dlclRvKGEsYixjLGQsZSxmLGcsaCl9LHEuc3RhZ2dlckZyb21Ubz1mdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsaSl7cmV0dXJuIGQuc3RhcnRBdD1jLGQuaW1tZWRpYXRlUmVuZGVyPTAhPWQuaW1tZWRpYXRlUmVuZGVyJiYwIT1jLmltbWVkaWF0ZVJlbmRlcix0aGlzLnN0YWdnZXJUbyhhLGIsZCxlLGYsZyxoLGkpfSxxLmNhbGw9ZnVuY3Rpb24oYSxiLGQsZSl7cmV0dXJuIHRoaXMuYWRkKGMuZGVsYXllZENhbGwoMCxhLGIsZCksZSl9LHEuc2V0PWZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gZD10aGlzLl9wYXJzZVRpbWVPckxhYmVsKGQsMCwhMCksbnVsbD09Yi5pbW1lZGlhdGVSZW5kZXImJihiLmltbWVkaWF0ZVJlbmRlcj1kPT09dGhpcy5fdGltZSYmIXRoaXMuX3BhdXNlZCksdGhpcy5hZGQobmV3IGMoYSwwLGIpLGQpfSxkLmV4cG9ydFJvb3Q9ZnVuY3Rpb24oYSxiKXthPWF8fHt9LG51bGw9PWEuc21vb3RoQ2hpbGRUaW1pbmcmJihhLnNtb290aENoaWxkVGltaW5nPSEwKTt2YXIgZSxmLGcsaCxpPW5ldyBkKGEpLGo9aS5fdGltZWxpbmU7Zm9yKG51bGw9PWImJihiPSEwKSxqLl9yZW1vdmUoaSwhMCksaS5fc3RhcnRUaW1lPTAsaS5fcmF3UHJldlRpbWU9aS5fdGltZT1pLl90b3RhbFRpbWU9ai5fdGltZSxnPWouX2ZpcnN0O2c7KWg9Zy5fbmV4dCxiJiZnIGluc3RhbmNlb2YgYyYmZy50YXJnZXQ9PT1nLnZhcnMub25Db21wbGV0ZXx8KGY9Zy5fc3RhcnRUaW1lLWcuX2RlbGF5LDA+ZiYmKGU9MSksaS5hZGQoZyxmKSksZz1oO3JldHVybiBqLmFkZChpLDApLGUmJmkudG90YWxEdXJhdGlvbigpLGl9LHEuYWRkPWZ1bmN0aW9uKGUsZixnLGgpe3ZhciBqLGssbCxtLG4sbztpZihcIm51bWJlclwiIT10eXBlb2YgZiYmKGY9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChmLDAsITAsZSkpLCEoZSBpbnN0YW5jZW9mIGEpKXtpZihlIGluc3RhbmNlb2YgQXJyYXl8fGUmJmUucHVzaCYmaShlKSl7Zm9yKGc9Z3x8XCJub3JtYWxcIixoPWh8fDAsaj1mLGs9ZS5sZW5ndGgsbD0wO2s+bDtsKyspaShtPWVbbF0pJiYobT1uZXcgZCh7dHdlZW5zOm19KSksdGhpcy5hZGQobSxqKSxcInN0cmluZ1wiIT10eXBlb2YgbSYmXCJmdW5jdGlvblwiIT10eXBlb2YgbSYmKFwic2VxdWVuY2VcIj09PWc/aj1tLl9zdGFydFRpbWUrbS50b3RhbER1cmF0aW9uKCkvbS5fdGltZVNjYWxlOlwic3RhcnRcIj09PWcmJihtLl9zdGFydFRpbWUtPW0uZGVsYXkoKSkpLGorPWg7cmV0dXJuIHRoaXMuX3VuY2FjaGUoITApfWlmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiB0aGlzLmFkZExhYmVsKGUsZik7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvd1wiQ2Fubm90IGFkZCBcIitlK1wiIGludG8gdGhlIHRpbWVsaW5lOyBpdCBpcyBub3QgYSB0d2VlbiwgdGltZWxpbmUsIGZ1bmN0aW9uLCBvciBzdHJpbmcuXCI7ZT1jLmRlbGF5ZWRDYWxsKDAsZSl9aWYoYi5wcm90b3R5cGUuYWRkLmNhbGwodGhpcyxlLGYpLGUuX3RpbWUmJmUucmVuZGVyKCh0aGlzLnJhd1RpbWUoKS1lLl9zdGFydFRpbWUpKmUuX3RpbWVTY2FsZSwhMSwhMSksKHRoaXMuX2djfHx0aGlzLl90aW1lPT09dGhpcy5fZHVyYXRpb24pJiYhdGhpcy5fcGF1c2VkJiZ0aGlzLl9kdXJhdGlvbjx0aGlzLmR1cmF0aW9uKCkpZm9yKG49dGhpcyxvPW4ucmF3VGltZSgpPmUuX3N0YXJ0VGltZTtuLl90aW1lbGluZTspbyYmbi5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmc/bi50b3RhbFRpbWUobi5fdG90YWxUaW1lLCEwKTpuLl9nYyYmbi5fZW5hYmxlZCghMCwhMSksbj1uLl90aW1lbGluZTtyZXR1cm4gdGhpc30scS5yZW1vdmU9ZnVuY3Rpb24oYil7aWYoYiBpbnN0YW5jZW9mIGEpe3RoaXMuX3JlbW92ZShiLCExKTt2YXIgYz1iLl90aW1lbGluZT1iLnZhcnMudXNlRnJhbWVzP2EuX3Jvb3RGcmFtZXNUaW1lbGluZTphLl9yb290VGltZWxpbmU7cmV0dXJuIGIuX3N0YXJ0VGltZT0oYi5fcGF1c2VkP2IuX3BhdXNlVGltZTpjLl90aW1lKS0oYi5fcmV2ZXJzZWQ/Yi50b3RhbER1cmF0aW9uKCktYi5fdG90YWxUaW1lOmIuX3RvdGFsVGltZSkvYi5fdGltZVNjYWxlLHRoaXN9aWYoYiBpbnN0YW5jZW9mIEFycmF5fHxiJiZiLnB1c2gmJmkoYikpe2Zvcih2YXIgZD1iLmxlbmd0aDstLWQ+LTE7KXRoaXMucmVtb3ZlKGJbZF0pO3JldHVybiB0aGlzfXJldHVyblwic3RyaW5nXCI9PXR5cGVvZiBiP3RoaXMucmVtb3ZlTGFiZWwoYik6dGhpcy5raWxsKG51bGwsYil9LHEuX3JlbW92ZT1mdW5jdGlvbihhLGMpe2IucHJvdG90eXBlLl9yZW1vdmUuY2FsbCh0aGlzLGEsYyk7dmFyIGQ9dGhpcy5fbGFzdDtyZXR1cm4gZD90aGlzLl90aW1lPnRoaXMuZHVyYXRpb24oKSYmKHRoaXMuX3RpbWU9dGhpcy5fZHVyYXRpb24sdGhpcy5fdG90YWxUaW1lPXRoaXMuX3RvdGFsRHVyYXRpb24pOnRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lPXRoaXMuX2R1cmF0aW9uPXRoaXMuX3RvdGFsRHVyYXRpb249MCx0aGlzfSxxLmFwcGVuZD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmFkZChhLHRoaXMuX3BhcnNlVGltZU9yTGFiZWwobnVsbCxiLCEwLGEpKX0scS5pbnNlcnQ9cS5pbnNlcnRNdWx0aXBsZT1mdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5hZGQoYSxifHwwLGMsZCl9LHEuYXBwZW5kTXVsdGlwbGU9ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHRoaXMuYWRkKGEsdGhpcy5fcGFyc2VUaW1lT3JMYWJlbChudWxsLGIsITAsYSksYyxkKX0scS5hZGRMYWJlbD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLl9sYWJlbHNbYV09dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChiKSx0aGlzfSxxLmFkZFBhdXNlPWZ1bmN0aW9uKGEsYixkLGUpe3ZhciBmPWMuZGVsYXllZENhbGwoMCxvLGQsZXx8dGhpcyk7cmV0dXJuIGYudmFycy5vbkNvbXBsZXRlPWYudmFycy5vblJldmVyc2VDb21wbGV0ZT1iLGYuZGF0YT1cImlzUGF1c2VcIix0aGlzLl9oYXNQYXVzZT0hMCx0aGlzLmFkZChmLGEpfSxxLnJlbW92ZUxhYmVsPWZ1bmN0aW9uKGEpe3JldHVybiBkZWxldGUgdGhpcy5fbGFiZWxzW2FdLHRoaXN9LHEuZ2V0TGFiZWxUaW1lPWZ1bmN0aW9uKGEpe3JldHVybiBudWxsIT10aGlzLl9sYWJlbHNbYV0/dGhpcy5fbGFiZWxzW2FdOi0xfSxxLl9wYXJzZVRpbWVPckxhYmVsPWZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmLGc7aWYoZSBpbnN0YW5jZW9mIGEmJmUudGltZWxpbmU9PT10aGlzKXRoaXMucmVtb3ZlKGUpO2Vsc2UgaWYoZSYmKGUgaW5zdGFuY2VvZiBBcnJheXx8ZS5wdXNoJiZpKGUpKSlmb3IoZz1lLmxlbmd0aDstLWc+LTE7KWVbZ11pbnN0YW5jZW9mIGEmJmVbZ10udGltZWxpbmU9PT10aGlzJiZ0aGlzLnJlbW92ZShlW2ddKTtpZihmPVwibnVtYmVyXCIhPXR5cGVvZiBifHxjP3RoaXMuZHVyYXRpb24oKT45OTk5OTk5OTk5OT90aGlzLnJlY2VudCgpLmVuZFRpbWUoITEpOnRoaXMuX2R1cmF0aW9uOjAsXCJzdHJpbmdcIj09dHlwZW9mIGMpcmV0dXJuIHRoaXMuX3BhcnNlVGltZU9yTGFiZWwoYyxkJiZcIm51bWJlclwiPT10eXBlb2YgYiYmbnVsbD09dGhpcy5fbGFiZWxzW2NdP2ItZjowLGQpO2lmKGM9Y3x8MCxcInN0cmluZ1wiIT10eXBlb2YgYnx8IWlzTmFOKGIpJiZudWxsPT10aGlzLl9sYWJlbHNbYl0pbnVsbD09YiYmKGI9Zik7ZWxzZXtpZihnPWIuaW5kZXhPZihcIj1cIiksLTE9PT1nKXJldHVybiBudWxsPT10aGlzLl9sYWJlbHNbYl0/ZD90aGlzLl9sYWJlbHNbYl09ZitjOmM6dGhpcy5fbGFiZWxzW2JdK2M7Yz1wYXJzZUludChiLmNoYXJBdChnLTEpK1wiMVwiLDEwKSpOdW1iZXIoYi5zdWJzdHIoZysxKSksYj1nPjE/dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChiLnN1YnN0cigwLGctMSksMCxkKTpmfXJldHVybiBOdW1iZXIoYikrY30scS5zZWVrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMudG90YWxUaW1lKFwibnVtYmVyXCI9PXR5cGVvZiBhP2E6dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChhKSxiIT09ITEpfSxxLnN0b3A9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXVzZWQoITApfSxxLmdvdG9BbmRQbGF5PWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMucGxheShhLGIpfSxxLmdvdG9BbmRTdG9wPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMucGF1c2UoYSxiKX0scS5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe3RoaXMuX2djJiZ0aGlzLl9lbmFibGVkKCEwLCExKTt2YXIgZCxmLGcsaCxpLGwsbSxuPXRoaXMuX3RpbWUsbz10aGlzLl9kaXJ0eT90aGlzLnRvdGFsRHVyYXRpb24oKTp0aGlzLl90b3RhbER1cmF0aW9uLHA9dGhpcy5fc3RhcnRUaW1lLHE9dGhpcy5fdGltZVNjYWxlLHI9dGhpcy5fcGF1c2VkO2lmKG4hPT10aGlzLl90aW1lJiYoYSs9dGhpcy5fdGltZS1uKSxhPj1vLTFlLTcmJmE+PTApdGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9byx0aGlzLl9yZXZlcnNlZHx8dGhpcy5faGFzUGF1c2VkQ2hpbGQoKXx8KGY9ITAsaD1cIm9uQ29tcGxldGVcIixpPSEhdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuLDA9PT10aGlzLl9kdXJhdGlvbiYmKDA+PWEmJmE+PS0xZS03fHx0aGlzLl9yYXdQcmV2VGltZTwwfHx0aGlzLl9yYXdQcmV2VGltZT09PWUpJiZ0aGlzLl9yYXdQcmV2VGltZSE9PWEmJnRoaXMuX2ZpcnN0JiYoaT0hMCx0aGlzLl9yYXdQcmV2VGltZT5lJiYoaD1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIpKSksdGhpcy5fcmF3UHJldlRpbWU9dGhpcy5fZHVyYXRpb258fCFifHxhfHx0aGlzLl9yYXdQcmV2VGltZT09PWE/YTplLGE9bysxZS00O2Vsc2UgaWYoMWUtNz5hKWlmKHRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPTAsKDAhPT1ufHwwPT09dGhpcy5fZHVyYXRpb24mJnRoaXMuX3Jhd1ByZXZUaW1lIT09ZSYmKHRoaXMuX3Jhd1ByZXZUaW1lPjB8fDA+YSYmdGhpcy5fcmF3UHJldlRpbWU+PTApKSYmKGg9XCJvblJldmVyc2VDb21wbGV0ZVwiLGY9dGhpcy5fcmV2ZXJzZWQpLDA+YSl0aGlzLl9hY3RpdmU9ITEsdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuJiZ0aGlzLl9yZXZlcnNlZD8oaT1mPSEwLGg9XCJvblJldmVyc2VDb21wbGV0ZVwiKTp0aGlzLl9yYXdQcmV2VGltZT49MCYmdGhpcy5fZmlyc3QmJihpPSEwKSx0aGlzLl9yYXdQcmV2VGltZT1hO2Vsc2V7aWYodGhpcy5fcmF3UHJldlRpbWU9dGhpcy5fZHVyYXRpb258fCFifHxhfHx0aGlzLl9yYXdQcmV2VGltZT09PWE/YTplLDA9PT1hJiZmKWZvcihkPXRoaXMuX2ZpcnN0O2QmJjA9PT1kLl9zdGFydFRpbWU7KWQuX2R1cmF0aW9ufHwoZj0hMSksZD1kLl9uZXh0O2E9MCx0aGlzLl9pbml0dGVkfHwoaT0hMCl9ZWxzZXtpZih0aGlzLl9oYXNQYXVzZSYmIXRoaXMuX2ZvcmNpbmdQbGF5aGVhZCYmIWIpe2lmKGE+PW4pZm9yKGQ9dGhpcy5fZmlyc3Q7ZCYmZC5fc3RhcnRUaW1lPD1hJiYhbDspZC5fZHVyYXRpb258fFwiaXNQYXVzZVwiIT09ZC5kYXRhfHxkLnJhdGlvfHwwPT09ZC5fc3RhcnRUaW1lJiYwPT09dGhpcy5fcmF3UHJldlRpbWV8fChsPWQpLGQ9ZC5fbmV4dDtlbHNlIGZvcihkPXRoaXMuX2xhc3Q7ZCYmZC5fc3RhcnRUaW1lPj1hJiYhbDspZC5fZHVyYXRpb258fFwiaXNQYXVzZVwiPT09ZC5kYXRhJiZkLl9yYXdQcmV2VGltZT4wJiYobD1kKSxkPWQuX3ByZXY7bCYmKHRoaXMuX3RpbWU9YT1sLl9zdGFydFRpbWUsdGhpcy5fdG90YWxUaW1lPWErdGhpcy5fY3ljbGUqKHRoaXMuX3RvdGFsRHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpKX10aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT10aGlzLl9yYXdQcmV2VGltZT1hfWlmKHRoaXMuX3RpbWUhPT1uJiZ0aGlzLl9maXJzdHx8Y3x8aXx8bCl7aWYodGhpcy5faW5pdHRlZHx8KHRoaXMuX2luaXR0ZWQ9ITApLHRoaXMuX2FjdGl2ZXx8IXRoaXMuX3BhdXNlZCYmdGhpcy5fdGltZSE9PW4mJmE+MCYmKHRoaXMuX2FjdGl2ZT0hMCksMD09PW4mJnRoaXMudmFycy5vblN0YXJ0JiYoMD09PXRoaXMuX3RpbWUmJnRoaXMuX2R1cmF0aW9ufHxifHx0aGlzLl9jYWxsYmFjayhcIm9uU3RhcnRcIikpLG09dGhpcy5fdGltZSxtPj1uKWZvcihkPXRoaXMuX2ZpcnN0O2QmJihnPWQuX25leHQsbT09PXRoaXMuX3RpbWUmJighdGhpcy5fcGF1c2VkfHxyKSk7KShkLl9hY3RpdmV8fGQuX3N0YXJ0VGltZTw9bSYmIWQuX3BhdXNlZCYmIWQuX2djKSYmKGw9PT1kJiZ0aGlzLnBhdXNlKCksZC5fcmV2ZXJzZWQ/ZC5yZW5kZXIoKGQuX2RpcnR5P2QudG90YWxEdXJhdGlvbigpOmQuX3RvdGFsRHVyYXRpb24pLShhLWQuX3N0YXJ0VGltZSkqZC5fdGltZVNjYWxlLGIsYyk6ZC5yZW5kZXIoKGEtZC5fc3RhcnRUaW1lKSpkLl90aW1lU2NhbGUsYixjKSksZD1nO2Vsc2UgZm9yKGQ9dGhpcy5fbGFzdDtkJiYoZz1kLl9wcmV2LG09PT10aGlzLl90aW1lJiYoIXRoaXMuX3BhdXNlZHx8cikpOyl7aWYoZC5fYWN0aXZlfHxkLl9zdGFydFRpbWU8PW4mJiFkLl9wYXVzZWQmJiFkLl9nYyl7aWYobD09PWQpe2ZvcihsPWQuX3ByZXY7bCYmbC5lbmRUaW1lKCk+dGhpcy5fdGltZTspbC5yZW5kZXIobC5fcmV2ZXJzZWQ/bC50b3RhbER1cmF0aW9uKCktKGEtbC5fc3RhcnRUaW1lKSpsLl90aW1lU2NhbGU6KGEtbC5fc3RhcnRUaW1lKSpsLl90aW1lU2NhbGUsYixjKSxsPWwuX3ByZXY7bD1udWxsLHRoaXMucGF1c2UoKX1kLl9yZXZlcnNlZD9kLnJlbmRlcigoZC5fZGlydHk/ZC50b3RhbER1cmF0aW9uKCk6ZC5fdG90YWxEdXJhdGlvbiktKGEtZC5fc3RhcnRUaW1lKSpkLl90aW1lU2NhbGUsYixjKTpkLnJlbmRlcigoYS1kLl9zdGFydFRpbWUpKmQuX3RpbWVTY2FsZSxiLGMpfWQ9Z310aGlzLl9vblVwZGF0ZSYmKGJ8fChqLmxlbmd0aCYmaygpLHRoaXMuX2NhbGxiYWNrKFwib25VcGRhdGVcIikpKSxoJiYodGhpcy5fZ2N8fChwPT09dGhpcy5fc3RhcnRUaW1lfHxxIT09dGhpcy5fdGltZVNjYWxlKSYmKDA9PT10aGlzLl90aW1lfHxvPj10aGlzLnRvdGFsRHVyYXRpb24oKSkmJihmJiYoai5sZW5ndGgmJmsoKSx0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX2VuYWJsZWQoITEsITEpLHRoaXMuX2FjdGl2ZT0hMSksIWImJnRoaXMudmFyc1toXSYmdGhpcy5fY2FsbGJhY2soaCkpKX19LHEuX2hhc1BhdXNlZENoaWxkPWZ1bmN0aW9uKCl7Zm9yKHZhciBhPXRoaXMuX2ZpcnN0O2E7KXtpZihhLl9wYXVzZWR8fGEgaW5zdGFuY2VvZiBkJiZhLl9oYXNQYXVzZWRDaGlsZCgpKXJldHVybiEwO2E9YS5fbmV4dH1yZXR1cm4hMX0scS5nZXRDaGlsZHJlbj1mdW5jdGlvbihhLGIsZCxlKXtlPWV8fC05OTk5OTk5OTk5O2Zvcih2YXIgZj1bXSxnPXRoaXMuX2ZpcnN0LGg9MDtnOylnLl9zdGFydFRpbWU8ZXx8KGcgaW5zdGFuY2VvZiBjP2IhPT0hMSYmKGZbaCsrXT1nKTooZCE9PSExJiYoZltoKytdPWcpLGEhPT0hMSYmKGY9Zi5jb25jYXQoZy5nZXRDaGlsZHJlbighMCxiLGQpKSxoPWYubGVuZ3RoKSkpLGc9Zy5fbmV4dDtyZXR1cm4gZn0scS5nZXRUd2VlbnNPZj1mdW5jdGlvbihhLGIpe3ZhciBkLGUsZj10aGlzLl9nYyxnPVtdLGg9MDtmb3IoZiYmdGhpcy5fZW5hYmxlZCghMCwhMCksZD1jLmdldFR3ZWVuc09mKGEpLGU9ZC5sZW5ndGg7LS1lPi0xOykoZFtlXS50aW1lbGluZT09PXRoaXN8fGImJnRoaXMuX2NvbnRhaW5zKGRbZV0pKSYmKGdbaCsrXT1kW2VdKTtyZXR1cm4gZiYmdGhpcy5fZW5hYmxlZCghMSwhMCksZ30scS5yZWNlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjZW50fSxxLl9jb250YWlucz1mdW5jdGlvbihhKXtmb3IodmFyIGI9YS50aW1lbGluZTtiOyl7aWYoYj09PXRoaXMpcmV0dXJuITA7Yj1iLnRpbWVsaW5lfXJldHVybiExfSxxLnNoaWZ0Q2hpbGRyZW49ZnVuY3Rpb24oYSxiLGMpe2M9Y3x8MDtmb3IodmFyIGQsZT10aGlzLl9maXJzdCxmPXRoaXMuX2xhYmVscztlOyllLl9zdGFydFRpbWU+PWMmJihlLl9zdGFydFRpbWUrPWEpLGU9ZS5fbmV4dDtpZihiKWZvcihkIGluIGYpZltkXT49YyYmKGZbZF0rPWEpO3JldHVybiB0aGlzLl91bmNhY2hlKCEwKX0scS5fa2lsbD1mdW5jdGlvbihhLGIpe2lmKCFhJiYhYilyZXR1cm4gdGhpcy5fZW5hYmxlZCghMSwhMSk7Zm9yKHZhciBjPWI/dGhpcy5nZXRUd2VlbnNPZihiKTp0aGlzLmdldENoaWxkcmVuKCEwLCEwLCExKSxkPWMubGVuZ3RoLGU9ITE7LS1kPi0xOyljW2RdLl9raWxsKGEsYikmJihlPSEwKTtyZXR1cm4gZX0scS5jbGVhcj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmdldENoaWxkcmVuKCExLCEwLCEwKSxjPWIubGVuZ3RoO2Zvcih0aGlzLl90aW1lPXRoaXMuX3RvdGFsVGltZT0wOy0tYz4tMTspYltjXS5fZW5hYmxlZCghMSwhMSk7cmV0dXJuIGEhPT0hMSYmKHRoaXMuX2xhYmVscz17fSksdGhpcy5fdW5jYWNoZSghMCl9LHEuaW52YWxpZGF0ZT1mdW5jdGlvbigpe2Zvcih2YXIgYj10aGlzLl9maXJzdDtiOyliLmludmFsaWRhdGUoKSxiPWIuX25leHQ7cmV0dXJuIGEucHJvdG90eXBlLmludmFsaWRhdGUuY2FsbCh0aGlzKX0scS5fZW5hYmxlZD1mdW5jdGlvbihhLGMpe2lmKGE9PT10aGlzLl9nYylmb3IodmFyIGQ9dGhpcy5fZmlyc3Q7ZDspZC5fZW5hYmxlZChhLCEwKSxkPWQuX25leHQ7cmV0dXJuIGIucHJvdG90eXBlLl9lbmFibGVkLmNhbGwodGhpcyxhLGMpfSxxLnRvdGFsVGltZT1mdW5jdGlvbihiLGMsZCl7dGhpcy5fZm9yY2luZ1BsYXloZWFkPSEwO3ZhciBlPWEucHJvdG90eXBlLnRvdGFsVGltZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuX2ZvcmNpbmdQbGF5aGVhZD0hMSxlfSxxLmR1cmF0aW9uPWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPygwIT09dGhpcy5kdXJhdGlvbigpJiYwIT09YSYmdGhpcy50aW1lU2NhbGUodGhpcy5fZHVyYXRpb24vYSksdGhpcyk6KHRoaXMuX2RpcnR5JiZ0aGlzLnRvdGFsRHVyYXRpb24oKSx0aGlzLl9kdXJhdGlvbil9LHEudG90YWxEdXJhdGlvbj1mdW5jdGlvbihhKXtpZighYXJndW1lbnRzLmxlbmd0aCl7aWYodGhpcy5fZGlydHkpe2Zvcih2YXIgYixjLGQ9MCxlPXRoaXMuX2xhc3QsZj05OTk5OTk5OTk5OTk7ZTspYj1lLl9wcmV2LGUuX2RpcnR5JiZlLnRvdGFsRHVyYXRpb24oKSxlLl9zdGFydFRpbWU+ZiYmdGhpcy5fc29ydENoaWxkcmVuJiYhZS5fcGF1c2VkJiYhdGhpcy5fY2FsY3VsYXRpbmdEdXJhdGlvbj8odGhpcy5fY2FsY3VsYXRpbmdEdXJhdGlvbj0xLHRoaXMuYWRkKGUsZS5fc3RhcnRUaW1lLWUuX2RlbGF5KSx0aGlzLl9jYWxjdWxhdGluZ0R1cmF0aW9uPTApOmY9ZS5fc3RhcnRUaW1lLGUuX3N0YXJ0VGltZTwwJiYhZS5fcGF1c2VkJiYoZC09ZS5fc3RhcnRUaW1lLHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nJiYodGhpcy5fc3RhcnRUaW1lKz1lLl9zdGFydFRpbWUvdGhpcy5fdGltZVNjYWxlLHRoaXMuX3RpbWUtPWUuX3N0YXJ0VGltZSx0aGlzLl90b3RhbFRpbWUtPWUuX3N0YXJ0VGltZSx0aGlzLl9yYXdQcmV2VGltZS09ZS5fc3RhcnRUaW1lKSx0aGlzLnNoaWZ0Q2hpbGRyZW4oLWUuX3N0YXJ0VGltZSwhMSwtOTk5OTk5OTk5OSksZj0wKSxjPWUuX3N0YXJ0VGltZStlLl90b3RhbER1cmF0aW9uL2UuX3RpbWVTY2FsZSxjPmQmJihkPWMpLGU9Yjt0aGlzLl9kdXJhdGlvbj10aGlzLl90b3RhbER1cmF0aW9uPWQsdGhpcy5fZGlydHk9ITF9cmV0dXJuIHRoaXMuX3RvdGFsRHVyYXRpb259cmV0dXJuIGEmJnRoaXMudG90YWxEdXJhdGlvbigpP3RoaXMudGltZVNjYWxlKHRoaXMuX3RvdGFsRHVyYXRpb24vYSk6dGhpc30scS5wYXVzZWQ9ZnVuY3Rpb24oYil7aWYoIWIpZm9yKHZhciBjPXRoaXMuX2ZpcnN0LGQ9dGhpcy5fdGltZTtjOyljLl9zdGFydFRpbWU9PT1kJiZcImlzUGF1c2VcIj09PWMuZGF0YSYmKGMuX3Jhd1ByZXZUaW1lPTApLGM9Yy5fbmV4dDtyZXR1cm4gYS5wcm90b3R5cGUucGF1c2VkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0scS51c2VzRnJhbWVzPWZ1bmN0aW9uKCl7Zm9yKHZhciBiPXRoaXMuX3RpbWVsaW5lO2IuX3RpbWVsaW5lOyliPWIuX3RpbWVsaW5lO3JldHVybiBiPT09YS5fcm9vdEZyYW1lc1RpbWVsaW5lfSxxLnJhd1RpbWU9ZnVuY3Rpb24oYSl7cmV0dXJuIGEmJih0aGlzLl9wYXVzZWR8fHRoaXMuX3JlcGVhdCYmdGhpcy50aW1lKCk+MCYmdGhpcy50b3RhbFByb2dyZXNzKCk8MSk/dGhpcy5fdG90YWxUaW1lJSh0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSk6dGhpcy5fcGF1c2VkP3RoaXMuX3RvdGFsVGltZToodGhpcy5fdGltZWxpbmUucmF3VGltZShhKS10aGlzLl9zdGFydFRpbWUpKnRoaXMuX3RpbWVTY2FsZX0sZH0sITApLF9nc1Njb3BlLl9nc0RlZmluZShcIlRpbWVsaW5lTWF4XCIsW1wiVGltZWxpbmVMaXRlXCIsXCJUd2VlbkxpdGVcIixcImVhc2luZy5FYXNlXCJdLGZ1bmN0aW9uKGEsYixjKXt2YXIgZD1mdW5jdGlvbihiKXthLmNhbGwodGhpcyxiKSx0aGlzLl9yZXBlYXQ9dGhpcy52YXJzLnJlcGVhdHx8MCx0aGlzLl9yZXBlYXREZWxheT10aGlzLnZhcnMucmVwZWF0RGVsYXl8fDAsdGhpcy5fY3ljbGU9MCx0aGlzLl95b3lvPXRoaXMudmFycy55b3lvPT09ITAsdGhpcy5fZGlydHk9ITB9LGU9MWUtMTAsZj1iLl9pbnRlcm5hbHMsZz1mLmxhenlUd2VlbnMsaD1mLmxhenlSZW5kZXIsaT1fZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyxqPW5ldyBjKG51bGwsbnVsbCwxLDApLGs9ZC5wcm90b3R5cGU9bmV3IGE7cmV0dXJuIGsuY29uc3RydWN0b3I9ZCxrLmtpbGwoKS5fZ2M9ITEsZC52ZXJzaW9uPVwiMi4wLjFcIixrLmludmFsaWRhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5feW95bz10aGlzLnZhcnMueW95bz09PSEwLHRoaXMuX3JlcGVhdD10aGlzLnZhcnMucmVwZWF0fHwwLHRoaXMuX3JlcGVhdERlbGF5PXRoaXMudmFycy5yZXBlYXREZWxheXx8MCx0aGlzLl91bmNhY2hlKCEwKSxhLnByb3RvdHlwZS5pbnZhbGlkYXRlLmNhbGwodGhpcyl9LGsuYWRkQ2FsbGJhY2s9ZnVuY3Rpb24oYSxjLGQsZSl7cmV0dXJuIHRoaXMuYWRkKGIuZGVsYXllZENhbGwoMCxhLGQsZSksYyl9LGsucmVtb3ZlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtpZihhKWlmKG51bGw9PWIpdGhpcy5fa2lsbChudWxsLGEpO2Vsc2UgZm9yKHZhciBjPXRoaXMuZ2V0VHdlZW5zT2YoYSwhMSksZD1jLmxlbmd0aCxlPXRoaXMuX3BhcnNlVGltZU9yTGFiZWwoYik7LS1kPi0xOyljW2RdLl9zdGFydFRpbWU9PT1lJiZjW2RdLl9lbmFibGVkKCExLCExKTtyZXR1cm4gdGhpc30say5yZW1vdmVQYXVzZT1mdW5jdGlvbihiKXtyZXR1cm4gdGhpcy5yZW1vdmVDYWxsYmFjayhhLl9pbnRlcm5hbHMucGF1c2VDYWxsYmFjayxiKX0say50d2VlblRvPWZ1bmN0aW9uKGEsYyl7Yz1jfHx7fTt2YXIgZCxlLGYsZz17ZWFzZTpqLHVzZUZyYW1lczp0aGlzLnVzZXNGcmFtZXMoKSxpbW1lZGlhdGVSZW5kZXI6ITEsbGF6eTohMX0saD1jLnJlcGVhdCYmaS5Ud2Vlbk1heHx8Yjtmb3IoZSBpbiBjKWdbZV09Y1tlXTtyZXR1cm4gZy50aW1lPXRoaXMuX3BhcnNlVGltZU9yTGFiZWwoYSksZD1NYXRoLmFicyhOdW1iZXIoZy50aW1lKS10aGlzLl90aW1lKS90aGlzLl90aW1lU2NhbGV8fC4wMDEsZj1uZXcgaCh0aGlzLGQsZyksZy5vblN0YXJ0PWZ1bmN0aW9uKCl7Zi50YXJnZXQucGF1c2VkKCEwKSxmLnZhcnMudGltZT09PWYudGFyZ2V0LnRpbWUoKXx8ZCE9PWYuZHVyYXRpb24oKXx8Zi5pc0Zyb21Ub3x8Zi5kdXJhdGlvbihNYXRoLmFicyhmLnZhcnMudGltZS1mLnRhcmdldC50aW1lKCkpL2YudGFyZ2V0Ll90aW1lU2NhbGUpLnJlbmRlcihmLnRpbWUoKSwhMCwhMCksYy5vblN0YXJ0JiZjLm9uU3RhcnQuYXBwbHkoYy5vblN0YXJ0U2NvcGV8fGMuY2FsbGJhY2tTY29wZXx8ZixjLm9uU3RhcnRQYXJhbXN8fFtdKX0sZn0say50d2VlbkZyb21Ubz1mdW5jdGlvbihhLGIsYyl7Yz1jfHx7fSxhPXRoaXMuX3BhcnNlVGltZU9yTGFiZWwoYSksYy5zdGFydEF0PXtvbkNvbXBsZXRlOnRoaXMuc2VlayxvbkNvbXBsZXRlUGFyYW1zOlthXSxjYWxsYmFja1Njb3BlOnRoaXN9LGMuaW1tZWRpYXRlUmVuZGVyPWMuaW1tZWRpYXRlUmVuZGVyIT09ITE7dmFyIGQ9dGhpcy50d2VlblRvKGIsYyk7cmV0dXJuIGQuaXNGcm9tVG89MSxkLmR1cmF0aW9uKE1hdGguYWJzKGQudmFycy50aW1lLWEpL3RoaXMuX3RpbWVTY2FsZXx8LjAwMSl9LGsucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXt0aGlzLl9nYyYmdGhpcy5fZW5hYmxlZCghMCwhMSk7dmFyIGQsZixpLGosayxsLG0sbixvPXRoaXMuX3RpbWUscD10aGlzLl9kaXJ0eT90aGlzLnRvdGFsRHVyYXRpb24oKTp0aGlzLl90b3RhbER1cmF0aW9uLHE9dGhpcy5fZHVyYXRpb24scj10aGlzLl90b3RhbFRpbWUscz10aGlzLl9zdGFydFRpbWUsdD10aGlzLl90aW1lU2NhbGUsdT10aGlzLl9yYXdQcmV2VGltZSx2PXRoaXMuX3BhdXNlZCx3PXRoaXMuX2N5Y2xlO2lmKG8hPT10aGlzLl90aW1lJiYoYSs9dGhpcy5fdGltZS1vKSxhPj1wLTFlLTcmJmE+PTApdGhpcy5fbG9ja2VkfHwodGhpcy5fdG90YWxUaW1lPXAsdGhpcy5fY3ljbGU9dGhpcy5fcmVwZWF0KSx0aGlzLl9yZXZlcnNlZHx8dGhpcy5faGFzUGF1c2VkQ2hpbGQoKXx8KGY9ITAsaj1cIm9uQ29tcGxldGVcIixrPSEhdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuLDA9PT10aGlzLl9kdXJhdGlvbiYmKDA+PWEmJmE+PS0xZS03fHwwPnV8fHU9PT1lKSYmdSE9PWEmJnRoaXMuX2ZpcnN0JiYoaz0hMCx1PmUmJihqPVwib25SZXZlcnNlQ29tcGxldGVcIikpKSx0aGlzLl9yYXdQcmV2VGltZT10aGlzLl9kdXJhdGlvbnx8IWJ8fGF8fHRoaXMuX3Jhd1ByZXZUaW1lPT09YT9hOmUsdGhpcy5feW95byYmMCE9PSgxJnRoaXMuX2N5Y2xlKT90aGlzLl90aW1lPWE9MDoodGhpcy5fdGltZT1xLGE9cSsxZS00KTtlbHNlIGlmKDFlLTc+YSlpZih0aGlzLl9sb2NrZWR8fCh0aGlzLl90b3RhbFRpbWU9dGhpcy5fY3ljbGU9MCksdGhpcy5fdGltZT0wLCgwIT09b3x8MD09PXEmJnUhPT1lJiYodT4wfHwwPmEmJnU+PTApJiYhdGhpcy5fbG9ja2VkKSYmKGo9XCJvblJldmVyc2VDb21wbGV0ZVwiLGY9dGhpcy5fcmV2ZXJzZWQpLDA+YSl0aGlzLl9hY3RpdmU9ITEsdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuJiZ0aGlzLl9yZXZlcnNlZD8oaz1mPSEwLGo9XCJvblJldmVyc2VDb21wbGV0ZVwiKTp1Pj0wJiZ0aGlzLl9maXJzdCYmKGs9ITApLHRoaXMuX3Jhd1ByZXZUaW1lPWE7ZWxzZXtpZih0aGlzLl9yYXdQcmV2VGltZT1xfHwhYnx8YXx8dGhpcy5fcmF3UHJldlRpbWU9PT1hP2E6ZSwwPT09YSYmZilmb3IoZD10aGlzLl9maXJzdDtkJiYwPT09ZC5fc3RhcnRUaW1lOylkLl9kdXJhdGlvbnx8KGY9ITEpLGQ9ZC5fbmV4dDthPTAsdGhpcy5faW5pdHRlZHx8KGs9ITApfWVsc2UgaWYoMD09PXEmJjA+dSYmKGs9ITApLHRoaXMuX3RpbWU9dGhpcy5fcmF3UHJldlRpbWU9YSx0aGlzLl9sb2NrZWR8fCh0aGlzLl90b3RhbFRpbWU9YSwwIT09dGhpcy5fcmVwZWF0JiYobD1xK3RoaXMuX3JlcGVhdERlbGF5LHRoaXMuX2N5Y2xlPXRoaXMuX3RvdGFsVGltZS9sPj4wLDAhPT10aGlzLl9jeWNsZSYmdGhpcy5fY3ljbGU9PT10aGlzLl90b3RhbFRpbWUvbCYmYT49ciYmdGhpcy5fY3ljbGUtLSx0aGlzLl90aW1lPXRoaXMuX3RvdGFsVGltZS10aGlzLl9jeWNsZSpsLHRoaXMuX3lveW8mJjAhPT0oMSZ0aGlzLl9jeWNsZSkmJih0aGlzLl90aW1lPXEtdGhpcy5fdGltZSksdGhpcy5fdGltZT5xPyh0aGlzLl90aW1lPXEsYT1xKzFlLTQpOnRoaXMuX3RpbWU8MD90aGlzLl90aW1lPWE9MDphPXRoaXMuX3RpbWUpKSx0aGlzLl9oYXNQYXVzZSYmIXRoaXMuX2ZvcmNpbmdQbGF5aGVhZCYmIWIpe2lmKGE9dGhpcy5fdGltZSxhPj1vfHx0aGlzLl9yZXBlYXQmJnchPT10aGlzLl9jeWNsZSlmb3IoZD10aGlzLl9maXJzdDtkJiZkLl9zdGFydFRpbWU8PWEmJiFtOylkLl9kdXJhdGlvbnx8XCJpc1BhdXNlXCIhPT1kLmRhdGF8fGQucmF0aW98fDA9PT1kLl9zdGFydFRpbWUmJjA9PT10aGlzLl9yYXdQcmV2VGltZXx8KG09ZCksZD1kLl9uZXh0O2Vsc2UgZm9yKGQ9dGhpcy5fbGFzdDtkJiZkLl9zdGFydFRpbWU+PWEmJiFtOylkLl9kdXJhdGlvbnx8XCJpc1BhdXNlXCI9PT1kLmRhdGEmJmQuX3Jhd1ByZXZUaW1lPjAmJihtPWQpLGQ9ZC5fcHJldjttJiZtLl9zdGFydFRpbWU8cSYmKHRoaXMuX3RpbWU9YT1tLl9zdGFydFRpbWUsdGhpcy5fdG90YWxUaW1lPWErdGhpcy5fY3ljbGUqKHRoaXMuX3RvdGFsRHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpKX1pZih0aGlzLl9jeWNsZSE9PXcmJiF0aGlzLl9sb2NrZWQpe3ZhciB4PXRoaXMuX3lveW8mJjAhPT0oMSZ3KSx5PXg9PT0odGhpcy5feW95byYmMCE9PSgxJnRoaXMuX2N5Y2xlKSksej10aGlzLl90b3RhbFRpbWUsQT10aGlzLl9jeWNsZSxCPXRoaXMuX3Jhd1ByZXZUaW1lLEM9dGhpcy5fdGltZTtpZih0aGlzLl90b3RhbFRpbWU9dypxLHRoaXMuX2N5Y2xlPHc/eD0heDp0aGlzLl90b3RhbFRpbWUrPXEsdGhpcy5fdGltZT1vLHRoaXMuX3Jhd1ByZXZUaW1lPTA9PT1xP3UtMWUtNDp1LHRoaXMuX2N5Y2xlPXcsdGhpcy5fbG9ja2VkPSEwLG89eD8wOnEsdGhpcy5yZW5kZXIobyxiLDA9PT1xKSxifHx0aGlzLl9nY3x8dGhpcy52YXJzLm9uUmVwZWF0JiYodGhpcy5fY3ljbGU9QSx0aGlzLl9sb2NrZWQ9ITEsdGhpcy5fY2FsbGJhY2soXCJvblJlcGVhdFwiKSksbyE9PXRoaXMuX3RpbWUpcmV0dXJuO2lmKHkmJih0aGlzLl9jeWNsZT13LHRoaXMuX2xvY2tlZD0hMCxvPXg/cSsxZS00Oi0xZS00LHRoaXMucmVuZGVyKG8sITAsITEpKSx0aGlzLl9sb2NrZWQ9ITEsdGhpcy5fcGF1c2VkJiYhdilyZXR1cm47dGhpcy5fdGltZT1DLHRoaXMuX3RvdGFsVGltZT16LHRoaXMuX2N5Y2xlPUEsdGhpcy5fcmF3UHJldlRpbWU9Qn1pZighKHRoaXMuX3RpbWUhPT1vJiZ0aGlzLl9maXJzdHx8Y3x8a3x8bSkpcmV0dXJuIHZvaWQociE9PXRoaXMuX3RvdGFsVGltZSYmdGhpcy5fb25VcGRhdGUmJihifHx0aGlzLl9jYWxsYmFjayhcIm9uVXBkYXRlXCIpKSk7aWYodGhpcy5faW5pdHRlZHx8KHRoaXMuX2luaXR0ZWQ9ITApLHRoaXMuX2FjdGl2ZXx8IXRoaXMuX3BhdXNlZCYmdGhpcy5fdG90YWxUaW1lIT09ciYmYT4wJiYodGhpcy5fYWN0aXZlPSEwKSwwPT09ciYmdGhpcy52YXJzLm9uU3RhcnQmJigwPT09dGhpcy5fdG90YWxUaW1lJiZ0aGlzLl90b3RhbER1cmF0aW9ufHxifHx0aGlzLl9jYWxsYmFjayhcIm9uU3RhcnRcIikpLG49dGhpcy5fdGltZSxuPj1vKWZvcihkPXRoaXMuX2ZpcnN0O2QmJihpPWQuX25leHQsbj09PXRoaXMuX3RpbWUmJighdGhpcy5fcGF1c2VkfHx2KSk7KShkLl9hY3RpdmV8fGQuX3N0YXJ0VGltZTw9dGhpcy5fdGltZSYmIWQuX3BhdXNlZCYmIWQuX2djKSYmKG09PT1kJiZ0aGlzLnBhdXNlKCksZC5fcmV2ZXJzZWQ/ZC5yZW5kZXIoKGQuX2RpcnR5P2QudG90YWxEdXJhdGlvbigpOmQuX3RvdGFsRHVyYXRpb24pLShhLWQuX3N0YXJ0VGltZSkqZC5fdGltZVNjYWxlLGIsYyk6ZC5yZW5kZXIoKGEtZC5fc3RhcnRUaW1lKSpkLl90aW1lU2NhbGUsYixjKSksZD1pO2Vsc2UgZm9yKGQ9dGhpcy5fbGFzdDtkJiYoaT1kLl9wcmV2LG49PT10aGlzLl90aW1lJiYoIXRoaXMuX3BhdXNlZHx8dikpOyl7aWYoZC5fYWN0aXZlfHxkLl9zdGFydFRpbWU8PW8mJiFkLl9wYXVzZWQmJiFkLl9nYyl7aWYobT09PWQpe2ZvcihtPWQuX3ByZXY7bSYmbS5lbmRUaW1lKCk+dGhpcy5fdGltZTspbS5yZW5kZXIobS5fcmV2ZXJzZWQ/bS50b3RhbER1cmF0aW9uKCktKGEtbS5fc3RhcnRUaW1lKSptLl90aW1lU2NhbGU6KGEtbS5fc3RhcnRUaW1lKSptLl90aW1lU2NhbGUsYixjKSxtPW0uX3ByZXY7bT1udWxsLHRoaXMucGF1c2UoKX1kLl9yZXZlcnNlZD9kLnJlbmRlcigoZC5fZGlydHk/ZC50b3RhbER1cmF0aW9uKCk6ZC5fdG90YWxEdXJhdGlvbiktKGEtZC5fc3RhcnRUaW1lKSpkLl90aW1lU2NhbGUsYixjKTpkLnJlbmRlcigoYS1kLl9zdGFydFRpbWUpKmQuX3RpbWVTY2FsZSxiLGMpfWQ9aX10aGlzLl9vblVwZGF0ZSYmKGJ8fChnLmxlbmd0aCYmaCgpLHRoaXMuX2NhbGxiYWNrKFwib25VcGRhdGVcIikpKSxqJiYodGhpcy5fbG9ja2VkfHx0aGlzLl9nY3x8KHM9PT10aGlzLl9zdGFydFRpbWV8fHQhPT10aGlzLl90aW1lU2NhbGUpJiYoMD09PXRoaXMuX3RpbWV8fHA+PXRoaXMudG90YWxEdXJhdGlvbigpKSYmKGYmJihnLmxlbmd0aCYmaCgpLHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiYmdGhpcy5fZW5hYmxlZCghMSwhMSksdGhpcy5fYWN0aXZlPSExKSwhYiYmdGhpcy52YXJzW2pdJiZ0aGlzLl9jYWxsYmFjayhqKSkpfSxrLmdldEFjdGl2ZT1mdW5jdGlvbihhLGIsYyl7bnVsbD09YSYmKGE9ITApLG51bGw9PWImJihiPSEwKSxudWxsPT1jJiYoYz0hMSk7dmFyIGQsZSxmPVtdLGc9dGhpcy5nZXRDaGlsZHJlbihhLGIsYyksaD0wLGk9Zy5sZW5ndGg7Zm9yKGQ9MDtpPmQ7ZCsrKWU9Z1tkXSxlLmlzQWN0aXZlKCkmJihmW2grK109ZSk7cmV0dXJuIGZ9LGsuZ2V0TGFiZWxBZnRlcj1mdW5jdGlvbihhKXthfHwwIT09YSYmKGE9dGhpcy5fdGltZSk7dmFyIGIsYz10aGlzLmdldExhYmVsc0FycmF5KCksZD1jLmxlbmd0aDtmb3IoYj0wO2Q+YjtiKyspaWYoY1tiXS50aW1lPmEpcmV0dXJuIGNbYl0ubmFtZTtyZXR1cm4gbnVsbH0say5nZXRMYWJlbEJlZm9yZT1mdW5jdGlvbihhKXtudWxsPT1hJiYoYT10aGlzLl90aW1lKTtmb3IodmFyIGI9dGhpcy5nZXRMYWJlbHNBcnJheSgpLGM9Yi5sZW5ndGg7LS1jPi0xOylpZihiW2NdLnRpbWU8YSlyZXR1cm4gYltjXS5uYW1lO3JldHVybiBudWxsfSxrLmdldExhYmVsc0FycmF5PWZ1bmN0aW9uKCl7dmFyIGEsYj1bXSxjPTA7Zm9yKGEgaW4gdGhpcy5fbGFiZWxzKWJbYysrXT17dGltZTp0aGlzLl9sYWJlbHNbYV0sbmFtZTphfTtyZXR1cm4gYi5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEudGltZS1iLnRpbWV9KSxifSxrLmludmFsaWRhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbG9ja2VkPSExLGEucHJvdG90eXBlLmludmFsaWRhdGUuY2FsbCh0aGlzKX0say5wcm9ncmVzcz1mdW5jdGlvbihhLGIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMudG90YWxUaW1lKHRoaXMuZHVyYXRpb24oKSoodGhpcy5feW95byYmMCE9PSgxJnRoaXMuX2N5Y2xlKT8xLWE6YSkrdGhpcy5fY3ljbGUqKHRoaXMuX2R1cmF0aW9uK3RoaXMuX3JlcGVhdERlbGF5KSxiKTp0aGlzLl90aW1lL3RoaXMuZHVyYXRpb24oKXx8MH0say50b3RhbFByb2dyZXNzPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy50b3RhbFRpbWUodGhpcy50b3RhbER1cmF0aW9uKCkqYSxiKTp0aGlzLl90b3RhbFRpbWUvdGhpcy50b3RhbER1cmF0aW9uKCl8fDB9LGsudG90YWxEdXJhdGlvbj1mdW5jdGlvbihiKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8tMSE9PXRoaXMuX3JlcGVhdCYmYj90aGlzLnRpbWVTY2FsZSh0aGlzLnRvdGFsRHVyYXRpb24oKS9iKTp0aGlzOih0aGlzLl9kaXJ0eSYmKGEucHJvdG90eXBlLnRvdGFsRHVyYXRpb24uY2FsbCh0aGlzKSx0aGlzLl90b3RhbER1cmF0aW9uPS0xPT09dGhpcy5fcmVwZWF0Pzk5OTk5OTk5OTk5OTp0aGlzLl9kdXJhdGlvbioodGhpcy5fcmVwZWF0KzEpK3RoaXMuX3JlcGVhdERlbGF5KnRoaXMuX3JlcGVhdCksdGhpcy5fdG90YWxEdXJhdGlvbil9LGsudGltZT1mdW5jdGlvbihhLGIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl9kaXJ0eSYmdGhpcy50b3RhbER1cmF0aW9uKCksYT50aGlzLl9kdXJhdGlvbiYmKGE9dGhpcy5fZHVyYXRpb24pLHRoaXMuX3lveW8mJjAhPT0oMSZ0aGlzLl9jeWNsZSk/YT10aGlzLl9kdXJhdGlvbi1hK3RoaXMuX2N5Y2xlKih0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSk6MCE9PXRoaXMuX3JlcGVhdCYmKGErPXRoaXMuX2N5Y2xlKih0aGlzLl9kdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSkpLHRoaXMudG90YWxUaW1lKGEsYikpOnRoaXMuX3RpbWV9LGsucmVwZWF0PWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl9yZXBlYXQ9YSx0aGlzLl91bmNhY2hlKCEwKSk6dGhpcy5fcmVwZWF0fSxrLnJlcGVhdERlbGF5PWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl9yZXBlYXREZWxheT1hLHRoaXMuX3VuY2FjaGUoITApKTp0aGlzLl9yZXBlYXREZWxheX0say55b3lvPWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl95b3lvPWEsdGhpcyk6dGhpcy5feW95b30say5jdXJyZW50TGFiZWw9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5zZWVrKGEsITApOnRoaXMuZ2V0TGFiZWxCZWZvcmUodGhpcy5fdGltZSsxZS04KX0sZH0sITApLGZ1bmN0aW9uKCl7dmFyIGE9MTgwL01hdGguUEksYj1bXSxjPVtdLGQ9W10sZT17fSxmPV9nc1Njb3BlLl9nc0RlZmluZS5nbG9iYWxzLGc9ZnVuY3Rpb24oYSxiLGMsZCl7Yz09PWQmJihjPWQtKGQtYikvMWU2KSxhPT09YiYmKGI9YSsoYy1hKS8xZTYpLHRoaXMuYT1hLHRoaXMuYj1iLHRoaXMuYz1jLHRoaXMuZD1kLHRoaXMuZGE9ZC1hLHRoaXMuY2E9Yy1hLHRoaXMuYmE9Yi1hfSxoPVwiLHgseSx6LGxlZnQsdG9wLHJpZ2h0LGJvdHRvbSxtYXJnaW5Ub3AsbWFyZ2luTGVmdCxtYXJnaW5SaWdodCxtYXJnaW5Cb3R0b20scGFkZGluZ0xlZnQscGFkZGluZ1RvcCxwYWRkaW5nUmlnaHQscGFkZGluZ0JvdHRvbSxiYWNrZ3JvdW5kUG9zaXRpb24sYmFja2dyb3VuZFBvc2l0aW9uX3ksXCIsaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT17YTphfSxmPXt9LGc9e30saD17YzpkfSxpPShhK2IpLzIsaj0oYitjKS8yLGs9KGMrZCkvMixsPShpK2opLzIsbT0oaitrKS8yLG49KG0tbCkvODtyZXR1cm4gZS5iPWkrKGEtaSkvNCxmLmI9bCtuLGUuYz1mLmE9KGUuYitmLmIpLzIsZi5jPWcuYT0obCttKS8yLGcuYj1tLW4saC5iPWsrKGQtaykvNCxnLmM9aC5hPShnLmIraC5iKS8yLFtlLGYsZyxoXX0saj1mdW5jdGlvbihhLGUsZixnLGgpe3ZhciBqLGssbCxtLG4sbyxwLHEscixzLHQsdSx2LHc9YS5sZW5ndGgtMSx4PTAseT1hWzBdLmE7Zm9yKGo9MDt3Pmo7aisrKW49YVt4XSxrPW4uYSxsPW4uZCxtPWFbeCsxXS5kLGg/KHQ9YltqXSx1PWNbal0sdj0odSt0KSplKi4yNS8oZz8uNTpkW2pdfHwuNSksbz1sLShsLWspKihnPy41KmU6MCE9PXQ/di90OjApLHA9bCsobS1sKSooZz8uNSplOjAhPT11P3YvdTowKSxxPWwtKG8rKChwLW8pKigzKnQvKHQrdSkrLjUpLzR8fDApKSk6KG89bC0obC1rKSplKi41LHA9bCsobS1sKSplKi41LHE9bC0obytwKS8yKSxvKz1xLHArPXEsbi5jPXI9bywwIT09aj9uLmI9eTpuLmI9eT1uLmErLjYqKG4uYy1uLmEpLG4uZGE9bC1rLG4uY2E9ci1rLG4uYmE9eS1rLGY/KHM9aShrLHkscixsKSxhLnNwbGljZSh4LDEsc1swXSxzWzFdLHNbMl0sc1szXSkseCs9NCk6eCsrLHk9cDtuPWFbeF0sbi5iPXksbi5jPXkrLjQqKG4uZC15KSxuLmRhPW4uZC1uLmEsbi5jYT1uLmMtbi5hLG4uYmE9eS1uLmEsZiYmKHM9aShuLmEseSxuLmMsbi5kKSxhLnNwbGljZSh4LDEsc1swXSxzWzFdLHNbMl0sc1szXSkpfSxrPWZ1bmN0aW9uKGEsZCxlLGYpe3ZhciBoLGksaixrLGwsbSxuPVtdO2lmKGYpZm9yKGE9W2ZdLmNvbmNhdChhKSxpPWEubGVuZ3RoOy0taT4tMTspXCJzdHJpbmdcIj09dHlwZW9mKG09YVtpXVtkXSkmJlwiPVwiPT09bS5jaGFyQXQoMSkmJihhW2ldW2RdPWZbZF0rTnVtYmVyKG0uY2hhckF0KDApK20uc3Vic3RyKDIpKSk7aWYoaD1hLmxlbmd0aC0yLDA+aClyZXR1cm4gblswXT1uZXcgZyhhWzBdW2RdLDAsMCxhWzBdW2RdKSxuO2ZvcihpPTA7aD5pO2krKylqPWFbaV1bZF0saz1hW2krMV1bZF0sbltpXT1uZXcgZyhqLDAsMCxrKSxlJiYobD1hW2krMl1bZF0sYltpXT0oYltpXXx8MCkrKGstaikqKGstaiksY1tpXT0oY1tpXXx8MCkrKGwtaykqKGwtaykpO3JldHVybiBuW2ldPW5ldyBnKGFbaV1bZF0sMCwwLGFbaSsxXVtkXSksbn0sbD1mdW5jdGlvbihhLGYsZyxpLGwsbSl7dmFyIG4sbyxwLHEscixzLHQsdSx2PXt9LHc9W10seD1tfHxhWzBdO2w9XCJzdHJpbmdcIj09dHlwZW9mIGw/XCIsXCIrbCtcIixcIjpoLG51bGw9PWYmJihmPTEpO2ZvcihvIGluIGFbMF0pdy5wdXNoKG8pO2lmKGEubGVuZ3RoPjEpe2Zvcih1PWFbYS5sZW5ndGgtMV0sdD0hMCxuPXcubGVuZ3RoOy0tbj4tMTspaWYobz13W25dLE1hdGguYWJzKHhbb10tdVtvXSk+LjA1KXt0PSExO2JyZWFrfXQmJihhPWEuY29uY2F0KCksbSYmYS51bnNoaWZ0KG0pLGEucHVzaChhWzFdKSxtPWFbYS5sZW5ndGgtM10pfWZvcihiLmxlbmd0aD1jLmxlbmd0aD1kLmxlbmd0aD0wLG49dy5sZW5ndGg7LS1uPi0xOylvPXdbbl0sZVtvXT0tMSE9PWwuaW5kZXhPZihcIixcIitvK1wiLFwiKSx2W29dPWsoYSxvLGVbb10sbSk7Zm9yKG49Yi5sZW5ndGg7LS1uPi0xOyliW25dPU1hdGguc3FydChiW25dKSxjW25dPU1hdGguc3FydChjW25dKTtpZighaSl7Zm9yKG49dy5sZW5ndGg7LS1uPi0xOylpZihlW29dKWZvcihwPXZbd1tuXV0sXG5zPXAubGVuZ3RoLTEscT0wO3M+cTtxKyspcj1wW3ErMV0uZGEvY1txXStwW3FdLmRhL2JbcV18fDAsZFtxXT0oZFtxXXx8MCkrcipyO2ZvcihuPWQubGVuZ3RoOy0tbj4tMTspZFtuXT1NYXRoLnNxcnQoZFtuXSl9Zm9yKG49dy5sZW5ndGgscT1nPzQ6MTstLW4+LTE7KW89d1tuXSxwPXZbb10saihwLGYsZyxpLGVbb10pLHQmJihwLnNwbGljZSgwLHEpLHAuc3BsaWNlKHAubGVuZ3RoLXEscSkpO3JldHVybiB2fSxtPWZ1bmN0aW9uKGEsYixjKXtiPWJ8fFwic29mdFwiO3ZhciBkLGUsZixoLGksaixrLGwsbSxuLG8scD17fSxxPVwiY3ViaWNcIj09PWI/MzoyLHI9XCJzb2Z0XCI9PT1iLHM9W107aWYociYmYyYmKGE9W2NdLmNvbmNhdChhKSksbnVsbD09YXx8YS5sZW5ndGg8cSsxKXRocm93XCJpbnZhbGlkIEJlemllciBkYXRhXCI7Zm9yKG0gaW4gYVswXSlzLnB1c2gobSk7Zm9yKGo9cy5sZW5ndGg7LS1qPi0xOyl7Zm9yKG09c1tqXSxwW21dPWk9W10sbj0wLGw9YS5sZW5ndGgsaz0wO2w+aztrKyspZD1udWxsPT1jP2Fba11bbV06XCJzdHJpbmdcIj09dHlwZW9mKG89YVtrXVttXSkmJlwiPVwiPT09by5jaGFyQXQoMSk/Y1ttXStOdW1iZXIoby5jaGFyQXQoMCkrby5zdWJzdHIoMikpOk51bWJlcihvKSxyJiZrPjEmJmwtMT5rJiYoaVtuKytdPShkK2lbbi0yXSkvMiksaVtuKytdPWQ7Zm9yKGw9bi1xKzEsbj0wLGs9MDtsPms7ays9cSlkPWlba10sZT1pW2srMV0sZj1pW2srMl0saD0yPT09cT8wOmlbayszXSxpW24rK109bz0zPT09cT9uZXcgZyhkLGUsZixoKTpuZXcgZyhkLCgyKmUrZCkvMywoMiplK2YpLzMsZik7aS5sZW5ndGg9bn1yZXR1cm4gcH0sbj1mdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkLGUsZixnLGgsaSxqLGssbCxtLG4sbz0xL2MscD1hLmxlbmd0aDstLXA+LTE7KWZvcihtPWFbcF0sZj1tLmEsZz1tLmQtZixoPW0uYy1mLGk9bS5iLWYsZD1lPTAsaz0xO2M+PWs7aysrKWo9byprLGw9MS1qLGQ9ZS0oZT0oaipqKmcrMypsKihqKmgrbCppKSkqaiksbj1wKmMray0xLGJbbl09KGJbbl18fDApK2QqZH0sbz1mdW5jdGlvbihhLGIpe2I9Yj4+MHx8Njt2YXIgYyxkLGUsZixnPVtdLGg9W10saT0wLGo9MCxrPWItMSxsPVtdLG09W107Zm9yKGMgaW4gYSluKGFbY10sZyxiKTtmb3IoZT1nLmxlbmd0aCxkPTA7ZT5kO2QrKylpKz1NYXRoLnNxcnQoZ1tkXSksZj1kJWIsbVtmXT1pLGY9PT1rJiYoais9aSxmPWQvYj4+MCxsW2ZdPW0saFtmXT1qLGk9MCxtPVtdKTtyZXR1cm57bGVuZ3RoOmosbGVuZ3RoczpoLHNlZ21lbnRzOmx9fSxwPV9nc1Njb3BlLl9nc0RlZmluZS5wbHVnaW4oe3Byb3BOYW1lOlwiYmV6aWVyXCIscHJpb3JpdHk6LTEsdmVyc2lvbjpcIjEuMy44XCIsQVBJOjIsZ2xvYmFsOiEwLGluaXQ6ZnVuY3Rpb24oYSxiLGMpe3RoaXMuX3RhcmdldD1hLGIgaW5zdGFuY2VvZiBBcnJheSYmKGI9e3ZhbHVlczpifSksdGhpcy5fZnVuYz17fSx0aGlzLl9tb2Q9e30sdGhpcy5fcHJvcHM9W10sdGhpcy5fdGltZVJlcz1udWxsPT1iLnRpbWVSZXNvbHV0aW9uPzY6cGFyc2VJbnQoYi50aW1lUmVzb2x1dGlvbiwxMCk7dmFyIGQsZSxmLGcsaCxpPWIudmFsdWVzfHxbXSxqPXt9LGs9aVswXSxuPWIuYXV0b1JvdGF0ZXx8Yy52YXJzLm9yaWVudFRvQmV6aWVyO3RoaXMuX2F1dG9Sb3RhdGU9bj9uIGluc3RhbmNlb2YgQXJyYXk/bjpbW1wieFwiLFwieVwiLFwicm90YXRpb25cIixuPT09ITA/MDpOdW1iZXIobil8fDBdXTpudWxsO2ZvcihkIGluIGspdGhpcy5fcHJvcHMucHVzaChkKTtmb3IoZj10aGlzLl9wcm9wcy5sZW5ndGg7LS1mPi0xOylkPXRoaXMuX3Byb3BzW2ZdLHRoaXMuX292ZXJ3cml0ZVByb3BzLnB1c2goZCksZT10aGlzLl9mdW5jW2RdPVwiZnVuY3Rpb25cIj09dHlwZW9mIGFbZF0saltkXT1lP2FbZC5pbmRleE9mKFwic2V0XCIpfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBhW1wiZ2V0XCIrZC5zdWJzdHIoMyldP2Q6XCJnZXRcIitkLnN1YnN0cigzKV0oKTpwYXJzZUZsb2F0KGFbZF0pLGh8fGpbZF0hPT1pWzBdW2RdJiYoaD1qKTtpZih0aGlzLl9iZXppZXJzPVwiY3ViaWNcIiE9PWIudHlwZSYmXCJxdWFkcmF0aWNcIiE9PWIudHlwZSYmXCJzb2Z0XCIhPT1iLnR5cGU/bChpLGlzTmFOKGIuY3VydmluZXNzKT8xOmIuY3VydmluZXNzLCExLFwidGhydUJhc2ljXCI9PT1iLnR5cGUsYi5jb3JyZWxhdGUsaCk6bShpLGIudHlwZSxqKSx0aGlzLl9zZWdDb3VudD10aGlzLl9iZXppZXJzW2RdLmxlbmd0aCx0aGlzLl90aW1lUmVzKXt2YXIgcD1vKHRoaXMuX2JlemllcnMsdGhpcy5fdGltZVJlcyk7dGhpcy5fbGVuZ3RoPXAubGVuZ3RoLHRoaXMuX2xlbmd0aHM9cC5sZW5ndGhzLHRoaXMuX3NlZ21lbnRzPXAuc2VnbWVudHMsdGhpcy5fbDE9dGhpcy5fbGk9dGhpcy5fczE9dGhpcy5fc2k9MCx0aGlzLl9sMj10aGlzLl9sZW5ndGhzWzBdLHRoaXMuX2N1clNlZz10aGlzLl9zZWdtZW50c1swXSx0aGlzLl9zMj10aGlzLl9jdXJTZWdbMF0sdGhpcy5fcHJlYz0xL3RoaXMuX2N1clNlZy5sZW5ndGh9aWYobj10aGlzLl9hdXRvUm90YXRlKWZvcih0aGlzLl9pbml0aWFsUm90YXRpb25zPVtdLG5bMF1pbnN0YW5jZW9mIEFycmF5fHwodGhpcy5fYXV0b1JvdGF0ZT1uPVtuXSksZj1uLmxlbmd0aDstLWY+LTE7KXtmb3IoZz0wOzM+ZztnKyspZD1uW2ZdW2ddLHRoaXMuX2Z1bmNbZF09XCJmdW5jdGlvblwiPT10eXBlb2YgYVtkXT9hW2QuaW5kZXhPZihcInNldFwiKXx8XCJmdW5jdGlvblwiIT10eXBlb2YgYVtcImdldFwiK2Quc3Vic3RyKDMpXT9kOlwiZ2V0XCIrZC5zdWJzdHIoMyldOiExO2Q9bltmXVsyXSx0aGlzLl9pbml0aWFsUm90YXRpb25zW2ZdPSh0aGlzLl9mdW5jW2RdP3RoaXMuX2Z1bmNbZF0uY2FsbCh0aGlzLl90YXJnZXQpOnRoaXMuX3RhcmdldFtkXSl8fDAsdGhpcy5fb3ZlcndyaXRlUHJvcHMucHVzaChkKX1yZXR1cm4gdGhpcy5fc3RhcnRSYXRpbz1jLnZhcnMucnVuQmFja3dhcmRzPzE6MCwhMH0sc2V0OmZ1bmN0aW9uKGIpe3ZhciBjLGQsZSxmLGcsaCxpLGosayxsLG09dGhpcy5fc2VnQ291bnQsbj10aGlzLl9mdW5jLG89dGhpcy5fdGFyZ2V0LHA9YiE9PXRoaXMuX3N0YXJ0UmF0aW87aWYodGhpcy5fdGltZVJlcyl7aWYoaz10aGlzLl9sZW5ndGhzLGw9dGhpcy5fY3VyU2VnLGIqPXRoaXMuX2xlbmd0aCxlPXRoaXMuX2xpLGI+dGhpcy5fbDImJm0tMT5lKXtmb3Ioaj1tLTE7aj5lJiYodGhpcy5fbDI9a1srK2VdKTw9YjspO3RoaXMuX2wxPWtbZS0xXSx0aGlzLl9saT1lLHRoaXMuX2N1clNlZz1sPXRoaXMuX3NlZ21lbnRzW2VdLHRoaXMuX3MyPWxbdGhpcy5fczE9dGhpcy5fc2k9MF19ZWxzZSBpZihiPHRoaXMuX2wxJiZlPjApe2Zvcig7ZT4wJiYodGhpcy5fbDE9a1stLWVdKT49YjspOzA9PT1lJiZiPHRoaXMuX2wxP3RoaXMuX2wxPTA6ZSsrLHRoaXMuX2wyPWtbZV0sdGhpcy5fbGk9ZSx0aGlzLl9jdXJTZWc9bD10aGlzLl9zZWdtZW50c1tlXSx0aGlzLl9zMT1sWyh0aGlzLl9zaT1sLmxlbmd0aC0xKS0xXXx8MCx0aGlzLl9zMj1sW3RoaXMuX3NpXX1pZihjPWUsYi09dGhpcy5fbDEsZT10aGlzLl9zaSxiPnRoaXMuX3MyJiZlPGwubGVuZ3RoLTEpe2ZvcihqPWwubGVuZ3RoLTE7aj5lJiYodGhpcy5fczI9bFsrK2VdKTw9YjspO3RoaXMuX3MxPWxbZS0xXSx0aGlzLl9zaT1lfWVsc2UgaWYoYjx0aGlzLl9zMSYmZT4wKXtmb3IoO2U+MCYmKHRoaXMuX3MxPWxbLS1lXSk+PWI7KTswPT09ZSYmYjx0aGlzLl9zMT90aGlzLl9zMT0wOmUrKyx0aGlzLl9zMj1sW2VdLHRoaXMuX3NpPWV9aD0oZSsoYi10aGlzLl9zMSkvKHRoaXMuX3MyLXRoaXMuX3MxKSkqdGhpcy5fcHJlY3x8MH1lbHNlIGM9MD5iPzA6Yj49MT9tLTE6bSpiPj4wLGg9KGItYyooMS9tKSkqbTtmb3IoZD0xLWgsZT10aGlzLl9wcm9wcy5sZW5ndGg7LS1lPi0xOylmPXRoaXMuX3Byb3BzW2VdLGc9dGhpcy5fYmV6aWVyc1tmXVtjXSxpPShoKmgqZy5kYSszKmQqKGgqZy5jYStkKmcuYmEpKSpoK2cuYSx0aGlzLl9tb2RbZl0mJihpPXRoaXMuX21vZFtmXShpLG8pKSxuW2ZdP29bZl0oaSk6b1tmXT1pO2lmKHRoaXMuX2F1dG9Sb3RhdGUpe3ZhciBxLHIscyx0LHUsdix3LHg9dGhpcy5fYXV0b1JvdGF0ZTtmb3IoZT14Lmxlbmd0aDstLWU+LTE7KWY9eFtlXVsyXSx2PXhbZV1bM118fDAsdz14W2VdWzRdPT09ITA/MTphLGc9dGhpcy5fYmV6aWVyc1t4W2VdWzBdXSxxPXRoaXMuX2JlemllcnNbeFtlXVsxXV0sZyYmcSYmKGc9Z1tjXSxxPXFbY10scj1nLmErKGcuYi1nLmEpKmgsdD1nLmIrKGcuYy1nLmIpKmgscis9KHQtcikqaCx0Kz0oZy5jKyhnLmQtZy5jKSpoLXQpKmgscz1xLmErKHEuYi1xLmEpKmgsdT1xLmIrKHEuYy1xLmIpKmgscys9KHUtcykqaCx1Kz0ocS5jKyhxLmQtcS5jKSpoLXUpKmgsaT1wP01hdGguYXRhbjIodS1zLHQtcikqdyt2OnRoaXMuX2luaXRpYWxSb3RhdGlvbnNbZV0sdGhpcy5fbW9kW2ZdJiYoaT10aGlzLl9tb2RbZl0oaSxvKSksbltmXT9vW2ZdKGkpOm9bZl09aSl9fX0pLHE9cC5wcm90b3R5cGU7cC5iZXppZXJUaHJvdWdoPWwscC5jdWJpY1RvUXVhZHJhdGljPWkscC5fYXV0b0NTUz0hMCxwLnF1YWRyYXRpY1RvQ3ViaWM9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBuZXcgZyhhLCgyKmIrYSkvMywoMipiK2MpLzMsYyl9LHAuX2Nzc1JlZ2lzdGVyPWZ1bmN0aW9uKCl7dmFyIGE9Zi5DU1NQbHVnaW47aWYoYSl7dmFyIGI9YS5faW50ZXJuYWxzLGM9Yi5fcGFyc2VUb1Byb3h5LGQ9Yi5fc2V0UGx1Z2luUmF0aW8sZT1iLkNTU1Byb3BUd2VlbjtiLl9yZWdpc3RlckNvbXBsZXhTcGVjaWFsUHJvcChcImJlemllclwiLHtwYXJzZXI6ZnVuY3Rpb24oYSxiLGYsZyxoLGkpe2IgaW5zdGFuY2VvZiBBcnJheSYmKGI9e3ZhbHVlczpifSksaT1uZXcgcDt2YXIgaixrLGwsbT1iLnZhbHVlcyxuPW0ubGVuZ3RoLTEsbz1bXSxxPXt9O2lmKDA+bilyZXR1cm4gaDtmb3Ioaj0wO24+PWo7aisrKWw9YyhhLG1bal0sZyxoLGksbiE9PWopLG9bal09bC5lbmQ7Zm9yKGsgaW4gYilxW2tdPWJba107cmV0dXJuIHEudmFsdWVzPW8saD1uZXcgZShhLFwiYmV6aWVyXCIsMCwwLGwucHQsMiksaC5kYXRhPWwsaC5wbHVnaW49aSxoLnNldFJhdGlvPWQsMD09PXEuYXV0b1JvdGF0ZSYmKHEuYXV0b1JvdGF0ZT0hMCksIXEuYXV0b1JvdGF0ZXx8cS5hdXRvUm90YXRlIGluc3RhbmNlb2YgQXJyYXl8fChqPXEuYXV0b1JvdGF0ZT09PSEwPzA6TnVtYmVyKHEuYXV0b1JvdGF0ZSkscS5hdXRvUm90YXRlPW51bGwhPWwuZW5kLmxlZnQ/W1tcImxlZnRcIixcInRvcFwiLFwicm90YXRpb25cIixqLCExXV06bnVsbCE9bC5lbmQueD9bW1wieFwiLFwieVwiLFwicm90YXRpb25cIixqLCExXV06ITEpLHEuYXV0b1JvdGF0ZSYmKGcuX3RyYW5zZm9ybXx8Zy5fZW5hYmxlVHJhbnNmb3JtcyghMSksbC5hdXRvUm90YXRlPWcuX3RhcmdldC5fZ3NUcmFuc2Zvcm0sbC5wcm94eS5yb3RhdGlvbj1sLmF1dG9Sb3RhdGUucm90YXRpb258fDAsZy5fb3ZlcndyaXRlUHJvcHMucHVzaChcInJvdGF0aW9uXCIpKSxpLl9vbkluaXRUd2VlbihsLnByb3h5LHEsZy5fdHdlZW4pLGh9fSl9fSxxLl9tb2Q9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGM9dGhpcy5fb3ZlcndyaXRlUHJvcHMsZD1jLmxlbmd0aDstLWQ+LTE7KWI9YVtjW2RdXSxiJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBiJiYodGhpcy5fbW9kW2NbZF1dPWIpfSxxLl9raWxsPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZD10aGlzLl9wcm9wcztmb3IoYiBpbiB0aGlzLl9iZXppZXJzKWlmKGIgaW4gYSlmb3IoZGVsZXRlIHRoaXMuX2JlemllcnNbYl0sZGVsZXRlIHRoaXMuX2Z1bmNbYl0sYz1kLmxlbmd0aDstLWM+LTE7KWRbY109PT1iJiZkLnNwbGljZShjLDEpO2lmKGQ9dGhpcy5fYXV0b1JvdGF0ZSlmb3IoYz1kLmxlbmd0aDstLWM+LTE7KWFbZFtjXVsyXV0mJmQuc3BsaWNlKGMsMSk7cmV0dXJuIHRoaXMuX3N1cGVyLl9raWxsLmNhbGwodGhpcyxhKX19KCksX2dzU2NvcGUuX2dzRGVmaW5lKFwicGx1Z2lucy5DU1NQbHVnaW5cIixbXCJwbHVnaW5zLlR3ZWVuUGx1Z2luXCIsXCJUd2VlbkxpdGVcIl0sZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnPWZ1bmN0aW9uKCl7YS5jYWxsKHRoaXMsXCJjc3NcIiksdGhpcy5fb3ZlcndyaXRlUHJvcHMubGVuZ3RoPTAsdGhpcy5zZXRSYXRpbz1nLnByb3RvdHlwZS5zZXRSYXRpb30saD1fZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyxpPXt9LGo9Zy5wcm90b3R5cGU9bmV3IGEoXCJjc3NcIik7ai5jb25zdHJ1Y3Rvcj1nLGcudmVyc2lvbj1cIjEuMjAuNVwiLGcuQVBJPTIsZy5kZWZhdWx0VHJhbnNmb3JtUGVyc3BlY3RpdmU9MCxnLmRlZmF1bHRTa2V3VHlwZT1cImNvbXBlbnNhdGVkXCIsZy5kZWZhdWx0U21vb3RoT3JpZ2luPSEwLGo9XCJweFwiLGcuc3VmZml4TWFwPXt0b3A6aixyaWdodDpqLGJvdHRvbTpqLGxlZnQ6aix3aWR0aDpqLGhlaWdodDpqLGZvbnRTaXplOmoscGFkZGluZzpqLG1hcmdpbjpqLHBlcnNwZWN0aXZlOmosbGluZUhlaWdodDpcIlwifTt2YXIgayxsLG0sbixvLHAscSxyLHM9Lyg/OlxcLXxcXC58XFxiKShcXGR8XFwufGVcXC0pKy9nLHQ9Lyg/OlxcZHxcXC1cXGR8XFwuXFxkfFxcLVxcLlxcZHxcXCs9XFxkfFxcLT1cXGR8XFwrPS5cXGR8XFwtPVxcLlxcZCkrL2csdT0vKD86XFwrPXxcXC09fFxcLXxcXGIpW1xcZFxcLVxcLl0rW2EtekEtWjAtOV0qKD86JXxcXGIpL2dpLHY9Lyg/IVsrLV0/XFxkKlxcLj9cXGQrfFsrLV18ZVsrLV1cXGQrKVteMC05XS9nLHc9Lyg/OlxcZHxcXC18XFwrfD18I3xcXC4pKi9nLHg9L29wYWNpdHkgKj0gKihbXildKikvaSx5PS9vcGFjaXR5OihbXjtdKikvaSx6PS9hbHBoYVxcKG9wYWNpdHkgKj0uKz9cXCkvaSxBPS9eKHJnYnxoc2wpLyxCPS8oW0EtWl0pL2csQz0vLShbYS16XSkvZ2ksRD0vKF4oPzp1cmxcXChcXFwifHVybFxcKCkpfCg/OihcXFwiXFwpKSR8XFwpJCkvZ2ksRT1mdW5jdGlvbihhLGIpe3JldHVybiBiLnRvVXBwZXJDYXNlKCl9LEY9Lyg/OkxlZnR8UmlnaHR8V2lkdGgpL2ksRz0vKE0xMXxNMTJ8TTIxfE0yMik9W1xcZFxcLVxcLmVdKy9naSxIPS9wcm9naWRcXDpEWEltYWdlVHJhbnNmb3JtXFwuTWljcm9zb2Z0XFwuTWF0cml4XFwoLis/XFwpL2ksST0vLCg/PVteXFwpXSooPzpcXCh8JCkpL2dpLEo9L1tcXHMsXFwoXS9pLEs9TWF0aC5QSS8xODAsTD0xODAvTWF0aC5QSSxNPXt9LE49e3N0eWxlOnt9fSxPPV9nc1Njb3BlLmRvY3VtZW50fHx7Y3JlYXRlRWxlbWVudDpmdW5jdGlvbigpe3JldHVybiBOfX0sUD1mdW5jdGlvbihhLGIpe3JldHVybiBPLmNyZWF0ZUVsZW1lbnROUz9PLmNyZWF0ZUVsZW1lbnROUyhifHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixhKTpPLmNyZWF0ZUVsZW1lbnQoYSl9LFE9UChcImRpdlwiKSxSPVAoXCJpbWdcIiksUz1nLl9pbnRlcm5hbHM9e19zcGVjaWFsUHJvcHM6aX0sVD0oX2dzU2NvcGUubmF2aWdhdG9yfHx7fSkudXNlckFnZW50fHxcIlwiLFU9ZnVuY3Rpb24oKXt2YXIgYT1ULmluZGV4T2YoXCJBbmRyb2lkXCIpLGI9UChcImFcIik7cmV0dXJuIG09LTEhPT1ULmluZGV4T2YoXCJTYWZhcmlcIikmJi0xPT09VC5pbmRleE9mKFwiQ2hyb21lXCIpJiYoLTE9PT1hfHxwYXJzZUZsb2F0KFQuc3Vic3RyKGErOCwyKSk+Myksbz1tJiZwYXJzZUZsb2F0KFQuc3Vic3RyKFQuaW5kZXhPZihcIlZlcnNpb24vXCIpKzgsMikpPDYsbj0tMSE9PVQuaW5kZXhPZihcIkZpcmVmb3hcIiksKC9NU0lFIChbMC05XXsxLH1bXFwuMC05XXswLH0pLy5leGVjKFQpfHwvVHJpZGVudFxcLy4qcnY6KFswLTldezEsfVtcXC4wLTldezAsfSkvLmV4ZWMoVCkpJiYocD1wYXJzZUZsb2F0KFJlZ0V4cC4kMSkpLGI/KGIuc3R5bGUuY3NzVGV4dD1cInRvcDoxcHg7b3BhY2l0eTouNTU7XCIsL14wLjU1Ly50ZXN0KGIuc3R5bGUub3BhY2l0eSkpOiExfSgpLFY9ZnVuY3Rpb24oYSl7cmV0dXJuIHgudGVzdChcInN0cmluZ1wiPT10eXBlb2YgYT9hOihhLmN1cnJlbnRTdHlsZT9hLmN1cnJlbnRTdHlsZS5maWx0ZXI6YS5zdHlsZS5maWx0ZXIpfHxcIlwiKT9wYXJzZUZsb2F0KFJlZ0V4cC4kMSkvMTAwOjF9LFc9ZnVuY3Rpb24oYSl7X2dzU2NvcGUuY29uc29sZSYmY29uc29sZS5sb2coYSl9LFg9XCJcIixZPVwiXCIsWj1mdW5jdGlvbihhLGIpe2I9Ynx8UTt2YXIgYyxkLGU9Yi5zdHlsZTtpZih2b2lkIDAhPT1lW2FdKXJldHVybiBhO2ZvcihhPWEuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHIoMSksYz1bXCJPXCIsXCJNb3pcIixcIm1zXCIsXCJNc1wiLFwiV2Via2l0XCJdLGQ9NTstLWQ+LTEmJnZvaWQgMD09PWVbY1tkXSthXTspO3JldHVybiBkPj0wPyhZPTM9PT1kP1wibXNcIjpjW2RdLFg9XCItXCIrWS50b0xvd2VyQ2FzZSgpK1wiLVwiLFkrYSk6bnVsbH0sJD0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6Ty5kZWZhdWx0Vmlld3x8e2dldENvbXB1dGVkU3R5bGU6ZnVuY3Rpb24oKXt9fSkuZ2V0Q29tcHV0ZWRTdHlsZSxfPWcuZ2V0U3R5bGU9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZjtyZXR1cm4gVXx8XCJvcGFjaXR5XCIhPT1iPyghZCYmYS5zdHlsZVtiXT9mPWEuc3R5bGVbYl06KGM9Y3x8JChhKSk/Zj1jW2JdfHxjLmdldFByb3BlcnR5VmFsdWUoYil8fGMuZ2V0UHJvcGVydHlWYWx1ZShiLnJlcGxhY2UoQixcIi0kMVwiKS50b0xvd2VyQ2FzZSgpKTphLmN1cnJlbnRTdHlsZSYmKGY9YS5jdXJyZW50U3R5bGVbYl0pLG51bGw9PWV8fGYmJlwibm9uZVwiIT09ZiYmXCJhdXRvXCIhPT1mJiZcImF1dG8gYXV0b1wiIT09Zj9mOmUpOlYoYSl9LGFhPVMuY29udmVydFRvUGl4ZWxzPWZ1bmN0aW9uKGEsYyxkLGUsZil7aWYoXCJweFwiPT09ZXx8IWUmJlwibGluZUhlaWdodFwiIT09YylyZXR1cm4gZDtpZihcImF1dG9cIj09PWV8fCFkKXJldHVybiAwO3ZhciBoLGksaixrPUYudGVzdChjKSxsPWEsbT1RLnN0eWxlLG49MD5kLG89MT09PWQ7aWYobiYmKGQ9LWQpLG8mJihkKj0xMDApLFwibGluZUhlaWdodFwiIT09Y3x8ZSlpZihcIiVcIj09PWUmJi0xIT09Yy5pbmRleE9mKFwiYm9yZGVyXCIpKWg9ZC8xMDAqKGs/YS5jbGllbnRXaWR0aDphLmNsaWVudEhlaWdodCk7ZWxzZXtpZihtLmNzc1RleHQ9XCJib3JkZXI6MCBzb2xpZCByZWQ7cG9zaXRpb246XCIrXyhhLFwicG9zaXRpb25cIikrXCI7bGluZS1oZWlnaHQ6MDtcIixcIiVcIiE9PWUmJmwuYXBwZW5kQ2hpbGQmJlwidlwiIT09ZS5jaGFyQXQoMCkmJlwicmVtXCIhPT1lKW1baz9cImJvcmRlckxlZnRXaWR0aFwiOlwiYm9yZGVyVG9wV2lkdGhcIl09ZCtlO2Vsc2V7aWYobD1hLnBhcmVudE5vZGV8fE8uYm9keSwtMSE9PV8obCxcImRpc3BsYXlcIikuaW5kZXhPZihcImZsZXhcIikmJihtLnBvc2l0aW9uPVwiYWJzb2x1dGVcIiksaT1sLl9nc0NhY2hlLGo9Yi50aWNrZXIuZnJhbWUsaSYmayYmaS50aW1lPT09ailyZXR1cm4gaS53aWR0aCpkLzEwMDttW2s/XCJ3aWR0aFwiOlwiaGVpZ2h0XCJdPWQrZX1sLmFwcGVuZENoaWxkKFEpLGg9cGFyc2VGbG9hdChRW2s/XCJvZmZzZXRXaWR0aFwiOlwib2Zmc2V0SGVpZ2h0XCJdKSxsLnJlbW92ZUNoaWxkKFEpLGsmJlwiJVwiPT09ZSYmZy5jYWNoZVdpZHRocyE9PSExJiYoaT1sLl9nc0NhY2hlPWwuX2dzQ2FjaGV8fHt9LGkudGltZT1qLGkud2lkdGg9aC9kKjEwMCksMCE9PWh8fGZ8fChoPWFhKGEsYyxkLGUsITApKX1lbHNlIGk9JChhKS5saW5lSGVpZ2h0LGEuc3R5bGUubGluZUhlaWdodD1kLGg9cGFyc2VGbG9hdCgkKGEpLmxpbmVIZWlnaHQpLGEuc3R5bGUubGluZUhlaWdodD1pO3JldHVybiBvJiYoaC89MTAwKSxuPy1oOmh9LGJhPVMuY2FsY3VsYXRlT2Zmc2V0PWZ1bmN0aW9uKGEsYixjKXtpZihcImFic29sdXRlXCIhPT1fKGEsXCJwb3NpdGlvblwiLGMpKXJldHVybiAwO3ZhciBkPVwibGVmdFwiPT09Yj9cIkxlZnRcIjpcIlRvcFwiLGU9XyhhLFwibWFyZ2luXCIrZCxjKTtyZXR1cm4gYVtcIm9mZnNldFwiK2RdLShhYShhLGIscGFyc2VGbG9hdChlKSxlLnJlcGxhY2UodyxcIlwiKSl8fDApfSxjYT1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmPXt9O2lmKGI9Ynx8JChhLG51bGwpKWlmKGM9Yi5sZW5ndGgpZm9yKDstLWM+LTE7KWU9YltjXSwoLTE9PT1lLmluZGV4T2YoXCItdHJhbnNmb3JtXCIpfHxEYT09PWUpJiYoZltlLnJlcGxhY2UoQyxFKV09Yi5nZXRQcm9wZXJ0eVZhbHVlKGUpKTtlbHNlIGZvcihjIGluIGIpKC0xPT09Yy5pbmRleE9mKFwiVHJhbnNmb3JtXCIpfHxDYT09PWMpJiYoZltjXT1iW2NdKTtlbHNlIGlmKGI9YS5jdXJyZW50U3R5bGV8fGEuc3R5bGUpZm9yKGMgaW4gYilcInN0cmluZ1wiPT10eXBlb2YgYyYmdm9pZCAwPT09ZltjXSYmKGZbYy5yZXBsYWNlKEMsRSldPWJbY10pO3JldHVybiBVfHwoZi5vcGFjaXR5PVYoYSkpLGQ9UmEoYSxiLCExKSxmLnJvdGF0aW9uPWQucm90YXRpb24sZi5za2V3WD1kLnNrZXdYLGYuc2NhbGVYPWQuc2NhbGVYLGYuc2NhbGVZPWQuc2NhbGVZLGYueD1kLngsZi55PWQueSxGYSYmKGYuej1kLnosZi5yb3RhdGlvblg9ZC5yb3RhdGlvblgsZi5yb3RhdGlvblk9ZC5yb3RhdGlvblksZi5zY2FsZVo9ZC5zY2FsZVopLGYuZmlsdGVycyYmZGVsZXRlIGYuZmlsdGVycyxmfSxkYT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmLGcsaCxpPXt9LGo9YS5zdHlsZTtmb3IoZyBpbiBjKVwiY3NzVGV4dFwiIT09ZyYmXCJsZW5ndGhcIiE9PWcmJmlzTmFOKGcpJiYoYltnXSE9PShmPWNbZ10pfHxlJiZlW2ddKSYmLTE9PT1nLmluZGV4T2YoXCJPcmlnaW5cIikmJihcIm51bWJlclwiPT10eXBlb2YgZnx8XCJzdHJpbmdcIj09dHlwZW9mIGYpJiYoaVtnXT1cImF1dG9cIiE9PWZ8fFwibGVmdFwiIT09ZyYmXCJ0b3BcIiE9PWc/XCJcIiE9PWYmJlwiYXV0b1wiIT09ZiYmXCJub25lXCIhPT1mfHxcInN0cmluZ1wiIT10eXBlb2YgYltnXXx8XCJcIj09PWJbZ10ucmVwbGFjZSh2LFwiXCIpP2Y6MDpiYShhLGcpLHZvaWQgMCE9PWpbZ10mJihoPW5ldyBzYShqLGcsaltnXSxoKSkpO2lmKGQpZm9yKGcgaW4gZClcImNsYXNzTmFtZVwiIT09ZyYmKGlbZ109ZFtnXSk7cmV0dXJue2RpZnM6aSxmaXJzdE1QVDpofX0sZWE9e3dpZHRoOltcIkxlZnRcIixcIlJpZ2h0XCJdLGhlaWdodDpbXCJUb3BcIixcIkJvdHRvbVwiXX0sZmE9W1wibWFyZ2luTGVmdFwiLFwibWFyZ2luUmlnaHRcIixcIm1hcmdpblRvcFwiLFwibWFyZ2luQm90dG9tXCJdLGdhPWZ1bmN0aW9uKGEsYixjKXtpZihcInN2Z1wiPT09KGEubm9kZU5hbWUrXCJcIikudG9Mb3dlckNhc2UoKSlyZXR1cm4oY3x8JChhKSlbYl18fDA7aWYoYS5nZXRDVE0mJk9hKGEpKXJldHVybiBhLmdldEJCb3goKVtiXXx8MDt2YXIgZD1wYXJzZUZsb2F0KFwid2lkdGhcIj09PWI/YS5vZmZzZXRXaWR0aDphLm9mZnNldEhlaWdodCksZT1lYVtiXSxmPWUubGVuZ3RoO2ZvcihjPWN8fCQoYSxudWxsKTstLWY+LTE7KWQtPXBhcnNlRmxvYXQoXyhhLFwicGFkZGluZ1wiK2VbZl0sYywhMCkpfHwwLGQtPXBhcnNlRmxvYXQoXyhhLFwiYm9yZGVyXCIrZVtmXStcIldpZHRoXCIsYywhMCkpfHwwO3JldHVybiBkfSxoYT1mdW5jdGlvbihhLGIpe2lmKFwiY29udGFpblwiPT09YXx8XCJhdXRvXCI9PT1hfHxcImF1dG8gYXV0b1wiPT09YSlyZXR1cm4gYStcIiBcIjsobnVsbD09YXx8XCJcIj09PWEpJiYoYT1cIjAgMFwiKTt2YXIgYyxkPWEuc3BsaXQoXCIgXCIpLGU9LTEhPT1hLmluZGV4T2YoXCJsZWZ0XCIpP1wiMCVcIjotMSE9PWEuaW5kZXhPZihcInJpZ2h0XCIpP1wiMTAwJVwiOmRbMF0sZj0tMSE9PWEuaW5kZXhPZihcInRvcFwiKT9cIjAlXCI6LTEhPT1hLmluZGV4T2YoXCJib3R0b21cIik/XCIxMDAlXCI6ZFsxXTtpZihkLmxlbmd0aD4zJiYhYil7Zm9yKGQ9YS5zcGxpdChcIiwgXCIpLmpvaW4oXCIsXCIpLnNwbGl0KFwiLFwiKSxhPVtdLGM9MDtjPGQubGVuZ3RoO2MrKylhLnB1c2goaGEoZFtjXSkpO3JldHVybiBhLmpvaW4oXCIsXCIpfXJldHVybiBudWxsPT1mP2Y9XCJjZW50ZXJcIj09PWU/XCI1MCVcIjpcIjBcIjpcImNlbnRlclwiPT09ZiYmKGY9XCI1MCVcIiksKFwiY2VudGVyXCI9PT1lfHxpc05hTihwYXJzZUZsb2F0KGUpKSYmLTE9PT0oZStcIlwiKS5pbmRleE9mKFwiPVwiKSkmJihlPVwiNTAlXCIpLGE9ZStcIiBcIitmKyhkLmxlbmd0aD4yP1wiIFwiK2RbMl06XCJcIiksYiYmKGIub3hwPS0xIT09ZS5pbmRleE9mKFwiJVwiKSxiLm95cD0tMSE9PWYuaW5kZXhPZihcIiVcIiksYi5veHI9XCI9XCI9PT1lLmNoYXJBdCgxKSxiLm95cj1cIj1cIj09PWYuY2hhckF0KDEpLGIub3g9cGFyc2VGbG9hdChlLnJlcGxhY2UodixcIlwiKSksYi5veT1wYXJzZUZsb2F0KGYucmVwbGFjZSh2LFwiXCIpKSxiLnY9YSksYnx8YX0saWE9ZnVuY3Rpb24oYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBhJiYoYT1hKHIscSkpLFwic3RyaW5nXCI9PXR5cGVvZiBhJiZcIj1cIj09PWEuY2hhckF0KDEpP3BhcnNlSW50KGEuY2hhckF0KDApK1wiMVwiLDEwKSpwYXJzZUZsb2F0KGEuc3Vic3RyKDIpKTpwYXJzZUZsb2F0KGEpLXBhcnNlRmxvYXQoYil8fDB9LGphPWZ1bmN0aW9uKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgYSYmKGE9YShyLHEpKSxudWxsPT1hP2I6XCJzdHJpbmdcIj09dHlwZW9mIGEmJlwiPVwiPT09YS5jaGFyQXQoMSk/cGFyc2VJbnQoYS5jaGFyQXQoMCkrXCIxXCIsMTApKnBhcnNlRmxvYXQoYS5zdWJzdHIoMikpK2I6cGFyc2VGbG9hdChhKXx8MH0sa2E9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGUsZixnLGgsaSxqPTFlLTY7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgYSYmKGE9YShyLHEpKSxudWxsPT1hP2g9YjpcIm51bWJlclwiPT10eXBlb2YgYT9oPWE6KGU9MzYwLGY9YS5zcGxpdChcIl9cIiksaT1cIj1cIj09PWEuY2hhckF0KDEpLGc9KGk/cGFyc2VJbnQoYS5jaGFyQXQoMCkrXCIxXCIsMTApKnBhcnNlRmxvYXQoZlswXS5zdWJzdHIoMikpOnBhcnNlRmxvYXQoZlswXSkpKigtMT09PWEuaW5kZXhPZihcInJhZFwiKT8xOkwpLShpPzA6YiksZi5sZW5ndGgmJihkJiYoZFtjXT1iK2cpLC0xIT09YS5pbmRleE9mKFwic2hvcnRcIikmJihnJT1lLGchPT1nJShlLzIpJiYoZz0wPmc/ZytlOmctZSkpLC0xIT09YS5pbmRleE9mKFwiX2N3XCIpJiYwPmc/Zz0oZys5OTk5OTk5OTk5KmUpJWUtKGcvZXwwKSplOi0xIT09YS5pbmRleE9mKFwiY2N3XCIpJiZnPjAmJihnPShnLTk5OTk5OTk5OTkqZSklZS0oZy9lfDApKmUpKSxoPWIrZyksaj5oJiZoPi1qJiYoaD0wKSxofSxsYT17YXF1YTpbMCwyNTUsMjU1XSxsaW1lOlswLDI1NSwwXSxzaWx2ZXI6WzE5MiwxOTIsMTkyXSxibGFjazpbMCwwLDBdLG1hcm9vbjpbMTI4LDAsMF0sdGVhbDpbMCwxMjgsMTI4XSxibHVlOlswLDAsMjU1XSxuYXZ5OlswLDAsMTI4XSx3aGl0ZTpbMjU1LDI1NSwyNTVdLGZ1Y2hzaWE6WzI1NSwwLDI1NV0sb2xpdmU6WzEyOCwxMjgsMF0seWVsbG93OlsyNTUsMjU1LDBdLG9yYW5nZTpbMjU1LDE2NSwwXSxncmF5OlsxMjgsMTI4LDEyOF0scHVycGxlOlsxMjgsMCwxMjhdLGdyZWVuOlswLDEyOCwwXSxyZWQ6WzI1NSwwLDBdLHBpbms6WzI1NSwxOTIsMjAzXSxjeWFuOlswLDI1NSwyNTVdLHRyYW5zcGFyZW50OlsyNTUsMjU1LDI1NSwwXX0sbWE9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBhPTA+YT9hKzE6YT4xP2EtMTphLDI1NSooMT42KmE/YisoYy1iKSphKjY6LjU+YT9jOjI+MyphP2IrKGMtYikqKDIvMy1hKSo2OmIpKy41fDB9LG5hPWcucGFyc2VDb2xvcj1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGcsaCxpLGosayxsLG07aWYoYSlpZihcIm51bWJlclwiPT10eXBlb2YgYSljPVthPj4xNixhPj44JjI1NSwyNTUmYV07ZWxzZXtpZihcIixcIj09PWEuY2hhckF0KGEubGVuZ3RoLTEpJiYoYT1hLnN1YnN0cigwLGEubGVuZ3RoLTEpKSxsYVthXSljPWxhW2FdO2Vsc2UgaWYoXCIjXCI9PT1hLmNoYXJBdCgwKSk0PT09YS5sZW5ndGgmJihkPWEuY2hhckF0KDEpLGU9YS5jaGFyQXQoMiksZj1hLmNoYXJBdCgzKSxhPVwiI1wiK2QrZCtlK2UrZitmKSxhPXBhcnNlSW50KGEuc3Vic3RyKDEpLDE2KSxjPVthPj4xNixhPj44JjI1NSwyNTUmYV07ZWxzZSBpZihcImhzbFwiPT09YS5zdWJzdHIoMCwzKSlpZihjPW09YS5tYXRjaChzKSxiKXtpZigtMSE9PWEuaW5kZXhPZihcIj1cIikpcmV0dXJuIGEubWF0Y2godCl9ZWxzZSBnPU51bWJlcihjWzBdKSUzNjAvMzYwLGg9TnVtYmVyKGNbMV0pLzEwMCxpPU51bWJlcihjWzJdKS8xMDAsZT0uNT49aT9pKihoKzEpOmkraC1pKmgsZD0yKmktZSxjLmxlbmd0aD4zJiYoY1szXT1OdW1iZXIoY1szXSkpLGNbMF09bWEoZysxLzMsZCxlKSxjWzFdPW1hKGcsZCxlKSxjWzJdPW1hKGctMS8zLGQsZSk7ZWxzZSBjPWEubWF0Y2gocyl8fGxhLnRyYW5zcGFyZW50O2NbMF09TnVtYmVyKGNbMF0pLGNbMV09TnVtYmVyKGNbMV0pLGNbMl09TnVtYmVyKGNbMl0pLGMubGVuZ3RoPjMmJihjWzNdPU51bWJlcihjWzNdKSl9ZWxzZSBjPWxhLmJsYWNrO3JldHVybiBiJiYhbSYmKGQ9Y1swXS8yNTUsZT1jWzFdLzI1NSxmPWNbMl0vMjU1LGo9TWF0aC5tYXgoZCxlLGYpLGs9TWF0aC5taW4oZCxlLGYpLGk9KGoraykvMixqPT09az9nPWg9MDoobD1qLWssaD1pPi41P2wvKDItai1rKTpsLyhqK2spLGc9aj09PWQ/KGUtZikvbCsoZj5lPzY6MCk6aj09PWU/KGYtZCkvbCsyOihkLWUpL2wrNCxnKj02MCksY1swXT1nKy41fDAsY1sxXT0xMDAqaCsuNXwwLGNbMl09MTAwKmkrLjV8MCksY30sb2E9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZj1hLm1hdGNoKHBhKXx8W10sZz0wLGg9XCJcIjtpZighZi5sZW5ndGgpcmV0dXJuIGE7Zm9yKGM9MDtjPGYubGVuZ3RoO2MrKylkPWZbY10sZT1hLnN1YnN0cihnLGEuaW5kZXhPZihkLGcpLWcpLGcrPWUubGVuZ3RoK2QubGVuZ3RoLGQ9bmEoZCxiKSwzPT09ZC5sZW5ndGgmJmQucHVzaCgxKSxoKz1lKyhiP1wiaHNsYShcIitkWzBdK1wiLFwiK2RbMV0rXCIlLFwiK2RbMl0rXCIlLFwiK2RbM106XCJyZ2JhKFwiK2Quam9pbihcIixcIikpK1wiKVwiO3JldHVybiBoK2Euc3Vic3RyKGcpfSxwYT1cIig/OlxcXFxiKD86KD86cmdifHJnYmF8aHNsfGhzbGEpXFxcXCguKz9cXFxcKSl8XFxcXEIjKD86WzAtOWEtZl17M30pezEsMn1cXFxcYlwiO2ZvcihqIGluIGxhKXBhKz1cInxcIitqK1wiXFxcXGJcIjtwYT1uZXcgUmVnRXhwKHBhK1wiKVwiLFwiZ2lcIiksZy5jb2xvclN0cmluZ0ZpbHRlcj1mdW5jdGlvbihhKXt2YXIgYixjPWFbMF0rXCIgXCIrYVsxXTtwYS50ZXN0KGMpJiYoYj0tMSE9PWMuaW5kZXhPZihcImhzbChcIil8fC0xIT09Yy5pbmRleE9mKFwiaHNsYShcIiksYVswXT1vYShhWzBdLGIpLGFbMV09b2EoYVsxXSxiKSkscGEubGFzdEluZGV4PTB9LGIuZGVmYXVsdFN0cmluZ0ZpbHRlcnx8KGIuZGVmYXVsdFN0cmluZ0ZpbHRlcj1nLmNvbG9yU3RyaW5nRmlsdGVyKTt2YXIgcWE9ZnVuY3Rpb24oYSxiLGMsZCl7aWYobnVsbD09YSlyZXR1cm4gZnVuY3Rpb24oYSl7cmV0dXJuIGF9O3ZhciBlLGY9Yj8oYS5tYXRjaChwYSl8fFtcIlwiXSlbMF06XCJcIixnPWEuc3BsaXQoZikuam9pbihcIlwiKS5tYXRjaCh1KXx8W10saD1hLnN1YnN0cigwLGEuaW5kZXhPZihnWzBdKSksaT1cIilcIj09PWEuY2hhckF0KGEubGVuZ3RoLTEpP1wiKVwiOlwiXCIsaj0tMSE9PWEuaW5kZXhPZihcIiBcIik/XCIgXCI6XCIsXCIsaz1nLmxlbmd0aCxsPWs+MD9nWzBdLnJlcGxhY2UocyxcIlwiKTpcIlwiO3JldHVybiBrP2U9Yj9mdW5jdGlvbihhKXt2YXIgYixtLG4sbztpZihcIm51bWJlclwiPT10eXBlb2YgYSlhKz1sO2Vsc2UgaWYoZCYmSS50ZXN0KGEpKXtmb3Iobz1hLnJlcGxhY2UoSSxcInxcIikuc3BsaXQoXCJ8XCIpLG49MDtuPG8ubGVuZ3RoO24rKylvW25dPWUob1tuXSk7cmV0dXJuIG8uam9pbihcIixcIil9aWYoYj0oYS5tYXRjaChwYSl8fFtmXSlbMF0sbT1hLnNwbGl0KGIpLmpvaW4oXCJcIikubWF0Y2godSl8fFtdLG49bS5sZW5ndGgsaz5uLS0pZm9yKDsrK248azspbVtuXT1jP21bKG4tMSkvMnwwXTpnW25dO3JldHVybiBoK20uam9pbihqKStqK2IraSsoLTEhPT1hLmluZGV4T2YoXCJpbnNldFwiKT9cIiBpbnNldFwiOlwiXCIpfTpmdW5jdGlvbihhKXt2YXIgYixmLG07aWYoXCJudW1iZXJcIj09dHlwZW9mIGEpYSs9bDtlbHNlIGlmKGQmJkkudGVzdChhKSl7Zm9yKGY9YS5yZXBsYWNlKEksXCJ8XCIpLnNwbGl0KFwifFwiKSxtPTA7bTxmLmxlbmd0aDttKyspZlttXT1lKGZbbV0pO3JldHVybiBmLmpvaW4oXCIsXCIpfWlmKGI9YS5tYXRjaCh1KXx8W10sbT1iLmxlbmd0aCxrPm0tLSlmb3IoOysrbTxrOyliW21dPWM/YlsobS0xKS8yfDBdOmdbbV07cmV0dXJuIGgrYi5qb2luKGopK2l9OmZ1bmN0aW9uKGEpe3JldHVybiBhfX0scmE9ZnVuY3Rpb24oYSl7cmV0dXJuIGE9YS5zcGxpdChcIixcIiksZnVuY3Rpb24oYixjLGQsZSxmLGcsaCl7dmFyIGksaj0oYytcIlwiKS5zcGxpdChcIiBcIik7Zm9yKGg9e30saT0wOzQ+aTtpKyspaFthW2ldXT1qW2ldPWpbaV18fGpbKGktMSkvMj4+MF07cmV0dXJuIGUucGFyc2UoYixoLGYsZyl9fSxzYT0oUy5fc2V0UGx1Z2luUmF0aW89ZnVuY3Rpb24oYSl7dGhpcy5wbHVnaW4uc2V0UmF0aW8oYSk7Zm9yKHZhciBiLGMsZCxlLGYsZz10aGlzLmRhdGEsaD1nLnByb3h5LGk9Zy5maXJzdE1QVCxqPTFlLTY7aTspYj1oW2kudl0saS5yP2I9aS5yKGIpOmo+YiYmYj4taiYmKGI9MCksaS50W2kucF09YixpPWkuX25leHQ7aWYoZy5hdXRvUm90YXRlJiYoZy5hdXRvUm90YXRlLnJvdGF0aW9uPWcubW9kP2cubW9kLmNhbGwodGhpcy5fdHdlZW4saC5yb3RhdGlvbix0aGlzLnQsdGhpcy5fdHdlZW4pOmgucm90YXRpb24pLDE9PT1hfHwwPT09YSlmb3IoaT1nLmZpcnN0TVBULGY9MT09PWE/XCJlXCI6XCJiXCI7aTspe2lmKGM9aS50LGMudHlwZSl7aWYoMT09PWMudHlwZSl7Zm9yKGU9Yy54czArYy5zK2MueHMxLGQ9MTtkPGMubDtkKyspZSs9Y1tcInhuXCIrZF0rY1tcInhzXCIrKGQrMSldO2NbZl09ZX19ZWxzZSBjW2ZdPWMucytjLnhzMDtpPWkuX25leHR9fSxmdW5jdGlvbihhLGIsYyxkLGUpe3RoaXMudD1hLHRoaXMucD1iLHRoaXMudj1jLHRoaXMucj1lLGQmJihkLl9wcmV2PXRoaXMsdGhpcy5fbmV4dD1kKX0pLHRhPShTLl9wYXJzZVRvUHJveHk9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnLGgsaSxqLGssbD1kLG09e30sbj17fSxvPWMuX3RyYW5zZm9ybSxwPU07Zm9yKGMuX3RyYW5zZm9ybT1udWxsLE09YixkPWs9Yy5wYXJzZShhLGIsZCxlKSxNPXAsZiYmKGMuX3RyYW5zZm9ybT1vLGwmJihsLl9wcmV2PW51bGwsbC5fcHJldiYmKGwuX3ByZXYuX25leHQ9bnVsbCkpKTtkJiZkIT09bDspe2lmKGQudHlwZTw9MSYmKGg9ZC5wLG5baF09ZC5zK2QuYyxtW2hdPWQucyxmfHwoaj1uZXcgc2EoZCxcInNcIixoLGosZC5yKSxkLmM9MCksMT09PWQudHlwZSkpZm9yKGc9ZC5sOy0tZz4wOylpPVwieG5cIitnLGg9ZC5wK1wiX1wiK2ksbltoXT1kLmRhdGFbaV0sbVtoXT1kW2ldLGZ8fChqPW5ldyBzYShkLGksaCxqLGQucnhwW2ldKSk7ZD1kLl9uZXh0fXJldHVybntwcm94eTptLGVuZDpuLGZpcnN0TVBUOmoscHQ6a319LFMuQ1NTUHJvcFR3ZWVuPWZ1bmN0aW9uKGEsYixkLGUsZyxoLGksaixrLGwsbSl7dGhpcy50PWEsdGhpcy5wPWIsdGhpcy5zPWQsdGhpcy5jPWUsdGhpcy5uPWl8fGIsYSBpbnN0YW5jZW9mIHRhfHxmLnB1c2godGhpcy5uKSx0aGlzLnI9aj9cImZ1bmN0aW9uXCI9PXR5cGVvZiBqP2o6TWF0aC5yb3VuZDpqLHRoaXMudHlwZT1ofHwwLGsmJih0aGlzLnByPWssYz0hMCksdGhpcy5iPXZvaWQgMD09PWw/ZDpsLHRoaXMuZT12b2lkIDA9PT1tP2QrZTptLGcmJih0aGlzLl9uZXh0PWcsZy5fcHJldj10aGlzKX0pLHVhPWZ1bmN0aW9uKGEsYixjLGQsZSxmKXt2YXIgZz1uZXcgdGEoYSxiLGMsZC1jLGUsLTEsZik7cmV0dXJuIGcuYj1jLGcuZT1nLnhzMD1kLGd9LHZhPWcucGFyc2VDb21wbGV4PWZ1bmN0aW9uKGEsYixjLGQsZSxmLGgsaSxqLGwpe2M9Y3x8Znx8XCJcIixcImZ1bmN0aW9uXCI9PXR5cGVvZiBkJiYoZD1kKHIscSkpLGg9bmV3IHRhKGEsYiwwLDAsaCxsPzI6MSxudWxsLCExLGksYyxkKSxkKz1cIlwiLGUmJnBhLnRlc3QoZCtjKSYmKGQ9W2MsZF0sZy5jb2xvclN0cmluZ0ZpbHRlcihkKSxjPWRbMF0sZD1kWzFdKTt2YXIgbSxuLG8scCx1LHYsdyx4LHkseixBLEIsQyxEPWMuc3BsaXQoXCIsIFwiKS5qb2luKFwiLFwiKS5zcGxpdChcIiBcIiksRT1kLnNwbGl0KFwiLCBcIikuam9pbihcIixcIikuc3BsaXQoXCIgXCIpLEY9RC5sZW5ndGgsRz1rIT09ITE7Zm9yKCgtMSE9PWQuaW5kZXhPZihcIixcIil8fC0xIT09Yy5pbmRleE9mKFwiLFwiKSkmJigtMSE9PShkK2MpLmluZGV4T2YoXCJyZ2JcIil8fC0xIT09KGQrYykuaW5kZXhPZihcImhzbFwiKT8oRD1ELmpvaW4oXCIgXCIpLnJlcGxhY2UoSSxcIiwgXCIpLnNwbGl0KFwiIFwiKSxFPUUuam9pbihcIiBcIikucmVwbGFjZShJLFwiLCBcIikuc3BsaXQoXCIgXCIpKTooRD1ELmpvaW4oXCIgXCIpLnNwbGl0KFwiLFwiKS5qb2luKFwiLCBcIikuc3BsaXQoXCIgXCIpLEU9RS5qb2luKFwiIFwiKS5zcGxpdChcIixcIikuam9pbihcIiwgXCIpLnNwbGl0KFwiIFwiKSksRj1ELmxlbmd0aCksRiE9PUUubGVuZ3RoJiYoRD0oZnx8XCJcIikuc3BsaXQoXCIgXCIpLEY9RC5sZW5ndGgpLGgucGx1Z2luPWosaC5zZXRSYXRpbz1sLHBhLmxhc3RJbmRleD0wLG09MDtGPm07bSsrKWlmKHA9RFttXSx1PUVbbV0rXCJcIix4PXBhcnNlRmxvYXQocCkseHx8MD09PXgpaC5hcHBlbmRYdHJhKFwiXCIseCxpYSh1LHgpLHUucmVwbGFjZSh0LFwiXCIpLEcmJi0xIT09dS5pbmRleE9mKFwicHhcIik/TWF0aC5yb3VuZDohMSwhMCk7ZWxzZSBpZihlJiZwYS50ZXN0KHApKUI9dS5pbmRleE9mKFwiKVwiKSsxLEI9XCIpXCIrKEI/dS5zdWJzdHIoQik6XCJcIiksQz0tMSE9PXUuaW5kZXhPZihcImhzbFwiKSYmVSx6PXUscD1uYShwLEMpLHU9bmEodSxDKSx5PXAubGVuZ3RoK3UubGVuZ3RoPjYseSYmIVUmJjA9PT11WzNdPyhoW1wieHNcIitoLmxdKz1oLmw/XCIgdHJhbnNwYXJlbnRcIjpcInRyYW5zcGFyZW50XCIsaC5lPWguZS5zcGxpdChFW21dKS5qb2luKFwidHJhbnNwYXJlbnRcIikpOihVfHwoeT0hMSksQz9oLmFwcGVuZFh0cmEoei5zdWJzdHIoMCx6LmluZGV4T2YoXCJoc2xcIikpKyh5P1wiaHNsYShcIjpcImhzbChcIikscFswXSxpYSh1WzBdLHBbMF0pLFwiLFwiLCExLCEwKS5hcHBlbmRYdHJhKFwiXCIscFsxXSxpYSh1WzFdLHBbMV0pLFwiJSxcIiwhMSkuYXBwZW5kWHRyYShcIlwiLHBbMl0saWEodVsyXSxwWzJdKSx5P1wiJSxcIjpcIiVcIitCLCExKTpoLmFwcGVuZFh0cmEoei5zdWJzdHIoMCx6LmluZGV4T2YoXCJyZ2JcIikpKyh5P1wicmdiYShcIjpcInJnYihcIikscFswXSx1WzBdLXBbMF0sXCIsXCIsTWF0aC5yb3VuZCwhMCkuYXBwZW5kWHRyYShcIlwiLHBbMV0sdVsxXS1wWzFdLFwiLFwiLE1hdGgucm91bmQpLmFwcGVuZFh0cmEoXCJcIixwWzJdLHVbMl0tcFsyXSx5P1wiLFwiOkIsTWF0aC5yb3VuZCkseSYmKHA9cC5sZW5ndGg8ND8xOnBbM10saC5hcHBlbmRYdHJhKFwiXCIscCwodS5sZW5ndGg8ND8xOnVbM10pLXAsQiwhMSkpKSxwYS5sYXN0SW5kZXg9MDtlbHNlIGlmKHY9cC5tYXRjaChzKSl7aWYodz11Lm1hdGNoKHQpLCF3fHx3Lmxlbmd0aCE9PXYubGVuZ3RoKXJldHVybiBoO2ZvcihvPTAsbj0wO248di5sZW5ndGg7bisrKUE9dltuXSx6PXAuaW5kZXhPZihBLG8pLGguYXBwZW5kWHRyYShwLnN1YnN0cihvLHotbyksTnVtYmVyKEEpLGlhKHdbbl0sQSksXCJcIixHJiZcInB4XCI9PT1wLnN1YnN0cih6K0EubGVuZ3RoLDIpP01hdGgucm91bmQ6ITEsMD09PW4pLG89eitBLmxlbmd0aDtoW1wieHNcIitoLmxdKz1wLnN1YnN0cihvKX1lbHNlIGhbXCJ4c1wiK2gubF0rPWgubHx8aFtcInhzXCIraC5sXT9cIiBcIit1OnU7aWYoLTEhPT1kLmluZGV4T2YoXCI9XCIpJiZoLmRhdGEpe2ZvcihCPWgueHMwK2guZGF0YS5zLG09MTttPGgubDttKyspQis9aFtcInhzXCIrbV0raC5kYXRhW1wieG5cIittXTtoLmU9QitoW1wieHNcIittXX1yZXR1cm4gaC5sfHwoaC50eXBlPS0xLGgueHMwPWguZSksaC54Zmlyc3R8fGh9LHdhPTk7Zm9yKGo9dGEucHJvdG90eXBlLGoubD1qLnByPTA7LS13YT4wOylqW1wieG5cIit3YV09MCxqW1wieHNcIit3YV09XCJcIjtqLnhzMD1cIlwiLGouX25leHQ9ai5fcHJldj1qLnhmaXJzdD1qLmRhdGE9ai5wbHVnaW49ai5zZXRSYXRpbz1qLnJ4cD1udWxsLGouYXBwZW5kWHRyYT1mdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9dGhpcyxoPWcubDtyZXR1cm4gZ1tcInhzXCIraF0rPWYmJihofHxnW1wieHNcIitoXSk/XCIgXCIrYTphfHxcIlwiLGN8fDA9PT1ofHxnLnBsdWdpbj8oZy5sKyssZy50eXBlPWcuc2V0UmF0aW8/MjoxLGdbXCJ4c1wiK2cubF09ZHx8XCJcIixoPjA/KGcuZGF0YVtcInhuXCIraF09YitjLGcucnhwW1wieG5cIitoXT1lLGdbXCJ4blwiK2hdPWIsZy5wbHVnaW58fChnLnhmaXJzdD1uZXcgdGEoZyxcInhuXCIraCxiLGMsZy54Zmlyc3R8fGcsMCxnLm4sZSxnLnByKSxnLnhmaXJzdC54czA9MCksZyk6KGcuZGF0YT17czpiK2N9LGcucnhwPXt9LGcucz1iLGcuYz1jLGcucj1lLGcpKTooZ1tcInhzXCIraF0rPWIrKGR8fFwiXCIpLGcpfTt2YXIgeGE9ZnVuY3Rpb24oYSxiKXtiPWJ8fHt9LHRoaXMucD1iLnByZWZpeD9aKGEpfHxhOmEsaVthXT1pW3RoaXMucF09dGhpcyx0aGlzLmZvcm1hdD1iLmZvcm1hdHRlcnx8cWEoYi5kZWZhdWx0VmFsdWUsYi5jb2xvcixiLmNvbGxhcHNpYmxlLGIubXVsdGkpLGIucGFyc2VyJiYodGhpcy5wYXJzZT1iLnBhcnNlciksdGhpcy5jbHJzPWIuY29sb3IsdGhpcy5tdWx0aT1iLm11bHRpLHRoaXMua2V5d29yZD1iLmtleXdvcmQsdGhpcy5kZmx0PWIuZGVmYXVsdFZhbHVlLHRoaXMucHI9Yi5wcmlvcml0eXx8MH0seWE9Uy5fcmVnaXN0ZXJDb21wbGV4U3BlY2lhbFByb3A9ZnVuY3Rpb24oYSxiLGMpe1wib2JqZWN0XCIhPXR5cGVvZiBiJiYoYj17cGFyc2VyOmN9KTt2YXIgZCxlLGY9YS5zcGxpdChcIixcIiksZz1iLmRlZmF1bHRWYWx1ZTtmb3IoYz1jfHxbZ10sZD0wO2Q8Zi5sZW5ndGg7ZCsrKWIucHJlZml4PTA9PT1kJiZiLnByZWZpeCxiLmRlZmF1bHRWYWx1ZT1jW2RdfHxnLGU9bmV3IHhhKGZbZF0sYil9LHphPVMuX3JlZ2lzdGVyUGx1Z2luUHJvcD1mdW5jdGlvbihhKXtpZighaVthXSl7dmFyIGI9YS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cigxKStcIlBsdWdpblwiO3lhKGEse3BhcnNlcjpmdW5jdGlvbihhLGMsZCxlLGYsZyxqKXt2YXIgaz1oLmNvbS5ncmVlbnNvY2sucGx1Z2luc1tiXTtyZXR1cm4gaz8oay5fY3NzUmVnaXN0ZXIoKSxpW2RdLnBhcnNlKGEsYyxkLGUsZixnLGopKTooVyhcIkVycm9yOiBcIitiK1wiIGpzIGZpbGUgbm90IGxvYWRlZC5cIiksZil9fSl9fTtqPXhhLnByb3RvdHlwZSxqLnBhcnNlQ29tcGxleD1mdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGcsaCxpLGosayxsLG09dGhpcy5rZXl3b3JkO2lmKHRoaXMubXVsdGkmJihJLnRlc3QoYyl8fEkudGVzdChiKT8oaD1iLnJlcGxhY2UoSSxcInxcIikuc3BsaXQoXCJ8XCIpLGk9Yy5yZXBsYWNlKEksXCJ8XCIpLnNwbGl0KFwifFwiKSk6bSYmKGg9W2JdLGk9W2NdKSksaSl7Zm9yKGo9aS5sZW5ndGg+aC5sZW5ndGg/aS5sZW5ndGg6aC5sZW5ndGgsZz0wO2o+ZztnKyspYj1oW2ddPWhbZ118fHRoaXMuZGZsdCxjPWlbZ109aVtnXXx8dGhpcy5kZmx0LG0mJihrPWIuaW5kZXhPZihtKSxsPWMuaW5kZXhPZihtKSxrIT09bCYmKC0xPT09bD9oW2ddPWhbZ10uc3BsaXQobSkuam9pbihcIlwiKTotMT09PWsmJihoW2ddKz1cIiBcIittKSkpO2I9aC5qb2luKFwiLCBcIiksYz1pLmpvaW4oXCIsIFwiKX1yZXR1cm4gdmEoYSx0aGlzLnAsYixjLHRoaXMuY2xycyx0aGlzLmRmbHQsZCx0aGlzLnByLGUsZil9LGoucGFyc2U9ZnVuY3Rpb24oYSxiLGMsZCxmLGcsaCl7cmV0dXJuIHRoaXMucGFyc2VDb21wbGV4KGEuc3R5bGUsdGhpcy5mb3JtYXQoXyhhLHRoaXMucCxlLCExLHRoaXMuZGZsdCkpLHRoaXMuZm9ybWF0KGIpLGYsZyl9LGcucmVnaXN0ZXJTcGVjaWFsUHJvcD1mdW5jdGlvbihhLGIsYyl7eWEoYSx7cGFyc2VyOmZ1bmN0aW9uKGEsZCxlLGYsZyxoLGkpe3ZhciBqPW5ldyB0YShhLGUsMCwwLGcsMixlLCExLGMpO3JldHVybiBqLnBsdWdpbj1oLGouc2V0UmF0aW89YihhLGQsZi5fdHdlZW4sZSksan0scHJpb3JpdHk6Y30pfSxnLnVzZVNWR1RyYW5zZm9ybUF0dHI9ITA7dmFyIEFhLEJhPVwic2NhbGVYLHNjYWxlWSxzY2FsZVoseCx5LHosc2tld1gsc2tld1kscm90YXRpb24scm90YXRpb25YLHJvdGF0aW9uWSxwZXJzcGVjdGl2ZSx4UGVyY2VudCx5UGVyY2VudFwiLnNwbGl0KFwiLFwiKSxDYT1aKFwidHJhbnNmb3JtXCIpLERhPVgrXCJ0cmFuc2Zvcm1cIixFYT1aKFwidHJhbnNmb3JtT3JpZ2luXCIpLEZhPW51bGwhPT1aKFwicGVyc3BlY3RpdmVcIiksR2E9Uy5UcmFuc2Zvcm09ZnVuY3Rpb24oKXt0aGlzLnBlcnNwZWN0aXZlPXBhcnNlRmxvYXQoZy5kZWZhdWx0VHJhbnNmb3JtUGVyc3BlY3RpdmUpfHwwLHRoaXMuZm9yY2UzRD1nLmRlZmF1bHRGb3JjZTNEIT09ITEmJkZhP2cuZGVmYXVsdEZvcmNlM0R8fFwiYXV0b1wiOiExfSxIYT1fZ3NTY29wZS5TVkdFbGVtZW50LElhPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlPU8uY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixhKSxmPS8oW2Etel0pKFtBLVpdKS9nO2ZvcihkIGluIGMpZS5zZXRBdHRyaWJ1dGVOUyhudWxsLGQucmVwbGFjZShmLFwiJDEtJDJcIikudG9Mb3dlckNhc2UoKSxjW2RdKTtyZXR1cm4gYi5hcHBlbmRDaGlsZChlKSxlfSxKYT1PLmRvY3VtZW50RWxlbWVudHx8e30sS2E9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZD1wfHwvQW5kcm9pZC9pLnRlc3QoVCkmJiFfZ3NTY29wZS5jaHJvbWU7cmV0dXJuIE8uY3JlYXRlRWxlbWVudE5TJiYhZCYmKGE9SWEoXCJzdmdcIixKYSksYj1JYShcInJlY3RcIixhLHt3aWR0aDoxMDAsaGVpZ2h0OjUwLHg6MTAwfSksYz1iLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoLGIuc3R5bGVbRWFdPVwiNTAlIDUwJVwiLGIuc3R5bGVbQ2FdPVwic2NhbGVYKDAuNSlcIixkPWM9PT1iLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoJiYhKG4mJkZhKSxKYS5yZW1vdmVDaGlsZChhKSksZH0oKSxMYT1mdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGgsaSxqLGssbCxtLG4sbyxwLHEscixzLHQsdSx2PWEuX2dzVHJhbnNmb3JtLHc9UWEoYSwhMCk7diYmKHQ9di54T3JpZ2luLHU9di55T3JpZ2luKSwoIWR8fChoPWQuc3BsaXQoXCIgXCIpKS5sZW5ndGg8MikmJihuPWEuZ2V0QkJveCgpLDA9PT1uLngmJjA9PT1uLnkmJm4ud2lkdGgrbi5oZWlnaHQ9PT0wJiYobj17eDpwYXJzZUZsb2F0KGEuaGFzQXR0cmlidXRlKFwieFwiKT9hLmdldEF0dHJpYnV0ZShcInhcIik6YS5oYXNBdHRyaWJ1dGUoXCJjeFwiKT9hLmdldEF0dHJpYnV0ZShcImN4XCIpOjApfHwwLHk6cGFyc2VGbG9hdChhLmhhc0F0dHJpYnV0ZShcInlcIik/YS5nZXRBdHRyaWJ1dGUoXCJ5XCIpOmEuaGFzQXR0cmlidXRlKFwiY3lcIik/YS5nZXRBdHRyaWJ1dGUoXCJjeVwiKTowKXx8MCx3aWR0aDowLGhlaWdodDowfSksYj1oYShiKS5zcGxpdChcIiBcIiksaD1bKC0xIT09YlswXS5pbmRleE9mKFwiJVwiKT9wYXJzZUZsb2F0KGJbMF0pLzEwMCpuLndpZHRoOnBhcnNlRmxvYXQoYlswXSkpK24ueCwoLTEhPT1iWzFdLmluZGV4T2YoXCIlXCIpP3BhcnNlRmxvYXQoYlsxXSkvMTAwKm4uaGVpZ2h0OnBhcnNlRmxvYXQoYlsxXSkpK24ueV0pLGMueE9yaWdpbj1rPXBhcnNlRmxvYXQoaFswXSksYy55T3JpZ2luPWw9cGFyc2VGbG9hdChoWzFdKSxkJiZ3IT09UGEmJihtPXdbMF0sbj13WzFdLG89d1syXSxwPXdbM10scT13WzRdLHI9d1s1XSxzPW0qcC1uKm8scyYmKGk9ayoocC9zKStsKigtby9zKSsobypyLXAqcSkvcyxqPWsqKC1uL3MpK2wqKG0vcyktKG0qci1uKnEpL3Msaz1jLnhPcmlnaW49aFswXT1pLGw9Yy55T3JpZ2luPWhbMV09aikpLHYmJihmJiYoYy54T2Zmc2V0PXYueE9mZnNldCxjLnlPZmZzZXQ9di55T2Zmc2V0LHY9YyksZXx8ZSE9PSExJiZnLmRlZmF1bHRTbW9vdGhPcmlnaW4hPT0hMT8oaT1rLXQsaj1sLXUsdi54T2Zmc2V0Kz1pKndbMF0raip3WzJdLWksdi55T2Zmc2V0Kz1pKndbMV0raip3WzNdLWopOnYueE9mZnNldD12LnlPZmZzZXQ9MCksZnx8YS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN2Zy1vcmlnaW5cIixoLmpvaW4oXCIgXCIpKX0sTWE9ZnVuY3Rpb24oYSl7dmFyIGIsYz1QKFwic3ZnXCIsdGhpcy5vd25lclNWR0VsZW1lbnQmJnRoaXMub3duZXJTVkdFbGVtZW50LmdldEF0dHJpYnV0ZShcInhtbG5zXCIpfHxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpLGQ9dGhpcy5wYXJlbnROb2RlLGU9dGhpcy5uZXh0U2libGluZyxmPXRoaXMuc3R5bGUuY3NzVGV4dDtpZihKYS5hcHBlbmRDaGlsZChjKSxjLmFwcGVuZENoaWxkKHRoaXMpLHRoaXMuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsYSl0cnl7Yj10aGlzLmdldEJCb3goKSx0aGlzLl9vcmlnaW5hbEdldEJCb3g9dGhpcy5nZXRCQm94LHRoaXMuZ2V0QkJveD1NYX1jYXRjaChnKXt9ZWxzZSB0aGlzLl9vcmlnaW5hbEdldEJCb3gmJihiPXRoaXMuX29yaWdpbmFsR2V0QkJveCgpKTtyZXR1cm4gZT9kLmluc2VydEJlZm9yZSh0aGlzLGUpOmQuYXBwZW5kQ2hpbGQodGhpcyksSmEucmVtb3ZlQ2hpbGQoYyksdGhpcy5zdHlsZS5jc3NUZXh0PWYsYn0sTmE9ZnVuY3Rpb24oYSl7dHJ5e3JldHVybiBhLmdldEJCb3goKX1jYXRjaChiKXtyZXR1cm4gTWEuY2FsbChhLCEwKX19LE9hPWZ1bmN0aW9uKGEpe3JldHVybiEoIUhhfHwhYS5nZXRDVE18fGEucGFyZW50Tm9kZSYmIWEub3duZXJTVkdFbGVtZW50fHwhTmEoYSkpfSxQYT1bMSwwLDAsMSwwLDBdLFFhPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsZyxoLGk9YS5fZ3NUcmFuc2Zvcm18fG5ldyBHYSxqPTFlNSxrPWEuc3R5bGU7aWYoQ2E/ZD1fKGEsRGEsbnVsbCwhMCk6YS5jdXJyZW50U3R5bGUmJihkPWEuY3VycmVudFN0eWxlLmZpbHRlci5tYXRjaChHKSxkPWQmJjQ9PT1kLmxlbmd0aD9bZFswXS5zdWJzdHIoNCksTnVtYmVyKGRbMl0uc3Vic3RyKDQpKSxOdW1iZXIoZFsxXS5zdWJzdHIoNCkpLGRbM10uc3Vic3RyKDQpLGkueHx8MCxpLnl8fDBdLmpvaW4oXCIsXCIpOlwiXCIpLGM9IWR8fFwibm9uZVwiPT09ZHx8XCJtYXRyaXgoMSwgMCwgMCwgMSwgMCwgMClcIj09PWQsIUNhfHwhKGg9ISQoYSl8fFwibm9uZVwiPT09JChhKS5kaXNwbGF5KSYmYS5wYXJlbnROb2RlfHwoaCYmKGY9ay5kaXNwbGF5LGsuZGlzcGxheT1cImJsb2NrXCIpLGEucGFyZW50Tm9kZXx8KGc9MSxKYS5hcHBlbmRDaGlsZChhKSksZD1fKGEsRGEsbnVsbCwhMCksYz0hZHx8XCJub25lXCI9PT1kfHxcIm1hdHJpeCgxLCAwLCAwLCAxLCAwLCAwKVwiPT09ZCxmP2suZGlzcGxheT1mOmgmJlZhKGssXCJkaXNwbGF5XCIpLGcmJkphLnJlbW92ZUNoaWxkKGEpKSwoaS5zdmd8fGEuZ2V0Q1RNJiZPYShhKSkmJihjJiYtMSE9PShrW0NhXStcIlwiKS5pbmRleE9mKFwibWF0cml4XCIpJiYoZD1rW0NhXSxjPTApLGU9YS5nZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIiksYyYmZSYmKGU9YS50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpLm1hdHJpeCxkPVwibWF0cml4KFwiK2UuYStcIixcIitlLmIrXCIsXCIrZS5jK1wiLFwiK2UuZCtcIixcIitlLmUrXCIsXCIrZS5mK1wiKVwiLGM9MCkpLGMpcmV0dXJuIFBhO2ZvcihlPShkfHxcIlwiKS5tYXRjaChzKXx8W10sd2E9ZS5sZW5ndGg7LS13YT4tMTspZj1OdW1iZXIoZVt3YV0pLGVbd2FdPShnPWYtKGZ8PTApKT8oZypqKygwPmc/LS41Oi41KXwwKS9qK2Y6ZjtyZXR1cm4gYiYmZS5sZW5ndGg+Nj9bZVswXSxlWzFdLGVbNF0sZVs1XSxlWzEyXSxlWzEzXV06ZX0sUmE9Uy5nZXRUcmFuc2Zvcm09ZnVuY3Rpb24oYSxjLGQsZSl7aWYoYS5fZ3NUcmFuc2Zvcm0mJmQmJiFlKXJldHVybiBhLl9nc1RyYW5zZm9ybTt2YXIgZixoLGksaixrLGwsbT1kP2EuX2dzVHJhbnNmb3JtfHxuZXcgR2E6bmV3IEdhLG49bS5zY2FsZVg8MCxvPTJlLTUscD0xZTUscT1GYT9wYXJzZUZsb2F0KF8oYSxFYSxjLCExLFwiMCAwIDBcIikuc3BsaXQoXCIgXCIpWzJdKXx8bS56T3JpZ2lufHwwOjAscj1wYXJzZUZsb2F0KGcuZGVmYXVsdFRyYW5zZm9ybVBlcnNwZWN0aXZlKXx8MDtpZihtLnN2Zz0hKCFhLmdldENUTXx8IU9hKGEpKSxtLnN2ZyYmKExhKGEsXyhhLEVhLGMsITEsXCI1MCUgNTAlXCIpK1wiXCIsbSxhLmdldEF0dHJpYnV0ZShcImRhdGEtc3ZnLW9yaWdpblwiKSksQWE9Zy51c2VTVkdUcmFuc2Zvcm1BdHRyfHxLYSksZj1RYShhKSxmIT09UGEpe2lmKDE2PT09Zi5sZW5ndGgpe3ZhciBzLHQsdSx2LHcseD1mWzBdLHk9ZlsxXSx6PWZbMl0sQT1mWzNdLEI9Zls0XSxDPWZbNV0sRD1mWzZdLEU9Zls3XSxGPWZbOF0sRz1mWzldLEg9ZlsxMF0sST1mWzEyXSxKPWZbMTNdLEs9ZlsxNF0sTT1mWzExXSxOPU1hdGguYXRhbjIoRCxIKTttLnpPcmlnaW4mJihLPS1tLnpPcmlnaW4sST1GKkstZlsxMl0sSj1HKkstZlsxM10sSz1IKksrbS56T3JpZ2luLWZbMTRdKSxtLnJvdGF0aW9uWD1OKkwsTiYmKHY9TWF0aC5jb3MoLU4pLHc9TWF0aC5zaW4oLU4pLHM9Qip2K0Yqdyx0PUMqditHKncsdT1EKnYrSCp3LEY9QiotdytGKnYsRz1DKi13K0cqdixIPUQqLXcrSCp2LE09RSotdytNKnYsQj1zLEM9dCxEPXUpLE49TWF0aC5hdGFuMigteixIKSxtLnJvdGF0aW9uWT1OKkwsTiYmKHY9TWF0aC5jb3MoLU4pLHc9TWF0aC5zaW4oLU4pLHM9eCp2LUYqdyx0PXkqdi1HKncsdT16KnYtSCp3LEc9eSp3K0cqdixIPXoqdytIKnYsTT1BKncrTSp2LHg9cyx5PXQsej11KSxOPU1hdGguYXRhbjIoeSx4KSxtLnJvdGF0aW9uPU4qTCxOJiYodj1NYXRoLmNvcyhOKSx3PU1hdGguc2luKE4pLHM9eCp2K3kqdyx0PUIqditDKncsdT1GKnYrRyp3LHk9eSp2LXgqdyxDPUMqdi1CKncsRz1HKnYtRip3LHg9cyxCPXQsRj11KSxtLnJvdGF0aW9uWCYmTWF0aC5hYnMobS5yb3RhdGlvblgpK01hdGguYWJzKG0ucm90YXRpb24pPjM1OS45JiYobS5yb3RhdGlvblg9bS5yb3RhdGlvbj0wLG0ucm90YXRpb25ZPTE4MC1tLnJvdGF0aW9uWSksTj1NYXRoLmF0YW4yKEIsQyksbS5zY2FsZVg9KE1hdGguc3FydCh4KngreSp5K3oqeikqcCsuNXwwKS9wLG0uc2NhbGVZPShNYXRoLnNxcnQoQypDK0QqRCkqcCsuNXwwKS9wLG0uc2NhbGVaPShNYXRoLnNxcnQoRipGK0cqRytIKkgpKnArLjV8MCkvcCx4Lz1tLnNjYWxlWCxCLz1tLnNjYWxlWSx5Lz1tLnNjYWxlWCxDLz1tLnNjYWxlWSxNYXRoLmFicyhOKT5vPyhtLnNrZXdYPU4qTCxCPTAsXCJzaW1wbGVcIiE9PW0uc2tld1R5cGUmJihtLnNjYWxlWSo9MS9NYXRoLmNvcyhOKSkpOm0uc2tld1g9MCxtLnBlcnNwZWN0aXZlPU0/MS8oMD5NPy1NOk0pOjAsbS54PUksbS55PUosbS56PUssbS5zdmcmJihtLngtPW0ueE9yaWdpbi0obS54T3JpZ2luKngtbS55T3JpZ2luKkIpLG0ueS09bS55T3JpZ2luLShtLnlPcmlnaW4qeS1tLnhPcmlnaW4qQykpfWVsc2UgaWYoIUZhfHxlfHwhZi5sZW5ndGh8fG0ueCE9PWZbNF18fG0ueSE9PWZbNV18fCFtLnJvdGF0aW9uWCYmIW0ucm90YXRpb25ZKXt2YXIgTz1mLmxlbmd0aD49NixQPU8/ZlswXToxLFE9ZlsxXXx8MCxSPWZbMl18fDAsUz1PP2ZbM106MTttLng9Zls0XXx8MCxtLnk9Zls1XXx8MCxpPU1hdGguc3FydChQKlArUSpRKSxqPU1hdGguc3FydChTKlMrUipSKSxrPVB8fFE/TWF0aC5hdGFuMihRLFApKkw6bS5yb3RhdGlvbnx8MCxsPVJ8fFM/TWF0aC5hdGFuMihSLFMpKkwrazptLnNrZXdYfHwwLG0uc2NhbGVYPWksbS5zY2FsZVk9aixtLnJvdGF0aW9uPWssbS5za2V3WD1sLEZhJiYobS5yb3RhdGlvblg9bS5yb3RhdGlvblk9bS56PTAsbS5wZXJzcGVjdGl2ZT1yLG0uc2NhbGVaPTEpLG0uc3ZnJiYobS54LT1tLnhPcmlnaW4tKG0ueE9yaWdpbipQK20ueU9yaWdpbipSKSxtLnktPW0ueU9yaWdpbi0obS54T3JpZ2luKlErbS55T3JpZ2luKlMpKX1NYXRoLmFicyhtLnNrZXdYKT45MCYmTWF0aC5hYnMobS5za2V3WCk8MjcwJiYobj8obS5zY2FsZVgqPS0xLG0uc2tld1grPW0ucm90YXRpb248PTA/MTgwOi0xODAsbS5yb3RhdGlvbis9bS5yb3RhdGlvbjw9MD8xODA6LTE4MCk6KG0uc2NhbGVZKj0tMSxtLnNrZXdYKz1tLnNrZXdYPD0wPzE4MDotMTgwKSksbS56T3JpZ2luPXE7Zm9yKGggaW4gbSltW2hdPG8mJm1baF0+LW8mJihtW2hdPTApfXJldHVybiBkJiYoYS5fZ3NUcmFuc2Zvcm09bSxtLnN2ZyYmKEFhJiZhLnN0eWxlW0NhXT9iLmRlbGF5ZWRDYWxsKC4wMDEsZnVuY3Rpb24oKXtWYShhLnN0eWxlLENhKX0pOiFBYSYmYS5nZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIikmJmIuZGVsYXllZENhbGwoLjAwMSxmdW5jdGlvbigpe2EucmVtb3ZlQXR0cmlidXRlKFwidHJhbnNmb3JtXCIpfSkpKSxtfSxTYT1mdW5jdGlvbihhKXt2YXIgYixjLGQ9dGhpcy5kYXRhLGU9LWQucm90YXRpb24qSyxmPWUrZC5za2V3WCpLLGc9MWU1LGg9KE1hdGguY29zKGUpKmQuc2NhbGVYKmd8MCkvZyxpPShNYXRoLnNpbihlKSpkLnNjYWxlWCpnfDApL2csaj0oTWF0aC5zaW4oZikqLWQuc2NhbGVZKmd8MCkvZyxrPShNYXRoLmNvcyhmKSpkLnNjYWxlWSpnfDApL2csbD10aGlzLnQuc3R5bGUsbT10aGlzLnQuY3VycmVudFN0eWxlO2lmKG0pe2M9aSxpPS1qLGo9LWMsYj1tLmZpbHRlcixsLmZpbHRlcj1cIlwiO3ZhciBuLG8scT10aGlzLnQub2Zmc2V0V2lkdGgscj10aGlzLnQub2Zmc2V0SGVpZ2h0LHM9XCJhYnNvbHV0ZVwiIT09bS5wb3NpdGlvbix0PVwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0Lk1hdHJpeChNMTE9XCIraCtcIiwgTTEyPVwiK2krXCIsIE0yMT1cIitqK1wiLCBNMjI9XCIrayx1PWQueCtxKmQueFBlcmNlbnQvMTAwLHY9ZC55K3IqZC55UGVyY2VudC8xMDA7aWYobnVsbCE9ZC5veCYmKG49KGQub3hwP3EqZC5veCouMDE6ZC5veCktcS8yLG89KGQub3lwP3IqZC5veSouMDE6ZC5veSktci8yLHUrPW4tKG4qaCtvKmkpLHYrPW8tKG4qaitvKmspKSxzPyhuPXEvMixvPXIvMix0Kz1cIiwgRHg9XCIrKG4tKG4qaCtvKmkpK3UpK1wiLCBEeT1cIisoby0obipqK28qaykrdikrXCIpXCIpOnQrPVwiLCBzaXppbmdNZXRob2Q9J2F1dG8gZXhwYW5kJylcIiwtMSE9PWIuaW5kZXhPZihcIkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0Lk1hdHJpeChcIik/bC5maWx0ZXI9Yi5yZXBsYWNlKEgsdCk6bC5maWx0ZXI9dCtcIiBcIitiLCgwPT09YXx8MT09PWEpJiYxPT09aCYmMD09PWkmJjA9PT1qJiYxPT09ayYmKHMmJi0xPT09dC5pbmRleE9mKFwiRHg9MCwgRHk9MFwiKXx8eC50ZXN0KGIpJiYxMDAhPT1wYXJzZUZsb2F0KFJlZ0V4cC4kMSl8fC0xPT09Yi5pbmRleE9mKGIuaW5kZXhPZihcIkFscGhhXCIpKSYmbC5yZW1vdmVBdHRyaWJ1dGUoXCJmaWx0ZXJcIikpLCFzKXt2YXIgeSx6LEEsQj04PnA/MTotMTtmb3Iobj1kLmllT2Zmc2V0WHx8MCxvPWQuaWVPZmZzZXRZfHwwLGQuaWVPZmZzZXRYPU1hdGgucm91bmQoKHEtKCgwPmg/LWg6aCkqcSsoMD5pPy1pOmkpKnIpKS8yK3UpLGQuaWVPZmZzZXRZPU1hdGgucm91bmQoKHItKCgwPms/LWs6aykqcisoMD5qPy1qOmopKnEpKS8yK3YpLHdhPTA7ND53YTt3YSsrKXo9ZmFbd2FdLHk9bVt6XSxjPS0xIT09eS5pbmRleE9mKFwicHhcIik/cGFyc2VGbG9hdCh5KTphYSh0aGlzLnQseixwYXJzZUZsb2F0KHkpLHkucmVwbGFjZSh3LFwiXCIpKXx8MCxBPWMhPT1kW3pdPzI+d2E/LWQuaWVPZmZzZXRYOi1kLmllT2Zmc2V0WToyPndhP24tZC5pZU9mZnNldFg6by1kLmllT2Zmc2V0WSxsW3pdPShkW3pdPU1hdGgucm91bmQoYy1BKigwPT09d2F8fDI9PT13YT8xOkIpKSkrXCJweFwifX19LFRhPVMuc2V0M0RUcmFuc2Zvcm1SYXRpbz1TLnNldFRyYW5zZm9ybVJhdGlvPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoLGksaixrLGwsbSxvLHAscSxyLHMsdCx1LHYsdyx4LHksej10aGlzLmRhdGEsQT10aGlzLnQuc3R5bGUsQj16LnJvdGF0aW9uLEM9ei5yb3RhdGlvblgsRD16LnJvdGF0aW9uWSxFPXouc2NhbGVYLEY9ei5zY2FsZVksRz16LnNjYWxlWixIPXoueCxJPXoueSxKPXoueixMPXouc3ZnLE09ei5wZXJzcGVjdGl2ZSxOPXouZm9yY2UzRCxPPXouc2tld1ksUD16LnNrZXdYO2lmKE8mJihQKz1PLEIrPU8pLCgoMT09PWF8fDA9PT1hKSYmXCJhdXRvXCI9PT1OJiYodGhpcy50d2Vlbi5fdG90YWxUaW1lPT09dGhpcy50d2Vlbi5fdG90YWxEdXJhdGlvbnx8IXRoaXMudHdlZW4uX3RvdGFsVGltZSl8fCFOKSYmIUomJiFNJiYhRCYmIUMmJjE9PT1HfHxBYSYmTHx8IUZhKXJldHVybiB2b2lkKEJ8fFB8fEw/KEIqPUsseD1QKksseT0xZTUsYz1NYXRoLmNvcyhCKSpFLGY9TWF0aC5zaW4oQikqRSxkPU1hdGguc2luKEIteCkqLUYsZz1NYXRoLmNvcyhCLXgpKkYseCYmXCJzaW1wbGVcIj09PXouc2tld1R5cGUmJihiPU1hdGgudGFuKHgtTypLKSxiPU1hdGguc3FydCgxK2IqYiksZCo9YixnKj1iLE8mJihiPU1hdGgudGFuKE8qSyksYj1NYXRoLnNxcnQoMStiKmIpLGMqPWIsZio9YikpLEwmJihIKz16LnhPcmlnaW4tKHoueE9yaWdpbipjK3oueU9yaWdpbipkKSt6LnhPZmZzZXQsSSs9ei55T3JpZ2luLSh6LnhPcmlnaW4qZit6LnlPcmlnaW4qZykrei55T2Zmc2V0LEFhJiYoei54UGVyY2VudHx8ei55UGVyY2VudCkmJihxPXRoaXMudC5nZXRCQm94KCksSCs9LjAxKnoueFBlcmNlbnQqcS53aWR0aCxJKz0uMDEqei55UGVyY2VudCpxLmhlaWdodCkscT0xZS02LHE+SCYmSD4tcSYmKEg9MCkscT5JJiZJPi1xJiYoST0wKSksdT0oYyp5fDApL3krXCIsXCIrKGYqeXwwKS95K1wiLFwiKyhkKnl8MCkveStcIixcIisoZyp5fDApL3krXCIsXCIrSCtcIixcIitJK1wiKVwiLEwmJkFhP3RoaXMudC5zZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIixcIm1hdHJpeChcIit1KTpBW0NhXT0oei54UGVyY2VudHx8ei55UGVyY2VudD9cInRyYW5zbGF0ZShcIit6LnhQZXJjZW50K1wiJSxcIit6LnlQZXJjZW50K1wiJSkgbWF0cml4KFwiOlwibWF0cml4KFwiKSt1KTpBW0NhXT0oei54UGVyY2VudHx8ei55UGVyY2VudD9cInRyYW5zbGF0ZShcIit6LnhQZXJjZW50K1wiJSxcIit6LnlQZXJjZW50K1wiJSkgbWF0cml4KFwiOlwibWF0cml4KFwiKStFK1wiLDAsMCxcIitGK1wiLFwiK0grXCIsXCIrSStcIilcIik7aWYobiYmKHE9MWUtNCxxPkUmJkU+LXEmJihFPUc9MmUtNSkscT5GJiZGPi1xJiYoRj1HPTJlLTUpLCFNfHx6Lnp8fHoucm90YXRpb25YfHx6LnJvdGF0aW9uWXx8KE09MCkpLEJ8fFApQio9SyxyPWM9TWF0aC5jb3MoQikscz1mPU1hdGguc2luKEIpLFAmJihCLT1QKksscj1NYXRoLmNvcyhCKSxzPU1hdGguc2luKEIpLFwic2ltcGxlXCI9PT16LnNrZXdUeXBlJiYoYj1NYXRoLnRhbigoUC1PKSpLKSxiPU1hdGguc3FydCgxK2IqYikscio9YixzKj1iLHouc2tld1kmJihiPU1hdGgudGFuKE8qSyksYj1NYXRoLnNxcnQoMStiKmIpLGMqPWIsZio9YikpKSxkPS1zLGc9cjtlbHNle2lmKCEoRHx8Q3x8MSE9PUd8fE18fEwpKXJldHVybiB2b2lkKEFbQ2FdPSh6LnhQZXJjZW50fHx6LnlQZXJjZW50P1widHJhbnNsYXRlKFwiK3oueFBlcmNlbnQrXCIlLFwiK3oueVBlcmNlbnQrXCIlKSB0cmFuc2xhdGUzZChcIjpcInRyYW5zbGF0ZTNkKFwiKStIK1wicHgsXCIrSStcInB4LFwiK0orXCJweClcIisoMSE9PUV8fDEhPT1GP1wiIHNjYWxlKFwiK0UrXCIsXCIrRitcIilcIjpcIlwiKSk7Yz1nPTEsZD1mPTB9az0xLGU9aD1pPWo9bD1tPTAsbz1NPy0xL006MCxwPXouek9yaWdpbixxPTFlLTYsdj1cIixcIix3PVwiMFwiLEI9RCpLLEImJihyPU1hdGguY29zKEIpLHM9TWF0aC5zaW4oQiksaT0tcyxsPW8qLXMsZT1jKnMsaD1mKnMsaz1yLG8qPXIsYyo9cixmKj1yKSxCPUMqSyxCJiYocj1NYXRoLmNvcyhCKSxzPU1hdGguc2luKEIpLGI9ZCpyK2Uqcyx0PWcqcitoKnMsaj1rKnMsbT1vKnMsZT1kKi1zK2UqcixoPWcqLXMraCpyLGsqPXIsbyo9cixkPWIsZz10KSwxIT09RyYmKGUqPUcsaCo9RyxrKj1HLG8qPUcpLDEhPT1GJiYoZCo9RixnKj1GLGoqPUYsbSo9RiksMSE9PUUmJihjKj1FLGYqPUUsaSo9RSxsKj1FKSwocHx8TCkmJihwJiYoSCs9ZSotcCxJKz1oKi1wLEorPWsqLXArcCksTCYmKEgrPXoueE9yaWdpbi0oei54T3JpZ2luKmMrei55T3JpZ2luKmQpK3oueE9mZnNldCxJKz16LnlPcmlnaW4tKHoueE9yaWdpbipmK3oueU9yaWdpbipnKSt6LnlPZmZzZXQpLHE+SCYmSD4tcSYmKEg9dykscT5JJiZJPi1xJiYoST13KSxxPkomJko+LXEmJihKPTApKSx1PXoueFBlcmNlbnR8fHoueVBlcmNlbnQ/XCJ0cmFuc2xhdGUoXCIrei54UGVyY2VudCtcIiUsXCIrei55UGVyY2VudCtcIiUpIG1hdHJpeDNkKFwiOlwibWF0cml4M2QoXCIsdSs9KHE+YyYmYz4tcT93OmMpK3YrKHE+ZiYmZj4tcT93OmYpK3YrKHE+aSYmaT4tcT93OmkpLHUrPXYrKHE+bCYmbD4tcT93OmwpK3YrKHE+ZCYmZD4tcT93OmQpK3YrKHE+ZyYmZz4tcT93OmcpLEN8fER8fDEhPT1HPyh1Kz12KyhxPmomJmo+LXE/dzpqKSt2KyhxPm0mJm0+LXE/dzptKSt2KyhxPmUmJmU+LXE/dzplKSx1Kz12KyhxPmgmJmg+LXE/dzpoKSt2KyhxPmsmJms+LXE/dzprKSt2KyhxPm8mJm8+LXE/dzpvKSt2KTp1Kz1cIiwwLDAsMCwwLDEsMCxcIix1Kz1IK3YrSSt2K0ordisoTT8xKy1KL006MSkrXCIpXCIsQVtDYV09dX07aj1HYS5wcm90b3R5cGUsai54PWoueT1qLno9ai5za2V3WD1qLnNrZXdZPWoucm90YXRpb249ai5yb3RhdGlvblg9ai5yb3RhdGlvblk9ai56T3JpZ2luPWoueFBlcmNlbnQ9ai55UGVyY2VudD1qLnhPZmZzZXQ9ai55T2Zmc2V0PTAsai5zY2FsZVg9ai5zY2FsZVk9ai5zY2FsZVo9MSx5YShcInRyYW5zZm9ybSxzY2FsZSxzY2FsZVgsc2NhbGVZLHNjYWxlWix4LHkseixyb3RhdGlvbixyb3RhdGlvblgscm90YXRpb25ZLHJvdGF0aW9uWixza2V3WCxza2V3WSxzaG9ydFJvdGF0aW9uLHNob3J0Um90YXRpb25YLHNob3J0Um90YXRpb25ZLHNob3J0Um90YXRpb25aLHRyYW5zZm9ybU9yaWdpbixzdmdPcmlnaW4sdHJhbnNmb3JtUGVyc3BlY3RpdmUsZGlyZWN0aW9uYWxSb3RhdGlvbixwYXJzZVRyYW5zZm9ybSxmb3JjZTNELHNrZXdUeXBlLHhQZXJjZW50LHlQZXJjZW50LHNtb290aE9yaWdpblwiLHtcbnBhcnNlcjpmdW5jdGlvbihhLGIsYyxkLGYsaCxpKXtpZihkLl9sYXN0UGFyc2VkVHJhbnNmb3JtPT09aSlyZXR1cm4gZjtkLl9sYXN0UGFyc2VkVHJhbnNmb3JtPWk7dmFyIGosaz1pLnNjYWxlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBpLnNjYWxlP2kuc2NhbGU6MDtcImZ1bmN0aW9uXCI9PXR5cGVvZiBpW2NdJiYoaj1pW2NdLGlbY109YiksayYmKGkuc2NhbGU9ayhyLGEpKTt2YXIgbCxtLG4sbyxwLHMsdCx1LHYsdz1hLl9nc1RyYW5zZm9ybSx4PWEuc3R5bGUseT0xZS02LHo9QmEubGVuZ3RoLEE9aSxCPXt9LEM9XCJ0cmFuc2Zvcm1PcmlnaW5cIixEPVJhKGEsZSwhMCxBLnBhcnNlVHJhbnNmb3JtKSxFPUEudHJhbnNmb3JtJiYoXCJmdW5jdGlvblwiPT10eXBlb2YgQS50cmFuc2Zvcm0/QS50cmFuc2Zvcm0ocixxKTpBLnRyYW5zZm9ybSk7aWYoRC5za2V3VHlwZT1BLnNrZXdUeXBlfHxELnNrZXdUeXBlfHxnLmRlZmF1bHRTa2V3VHlwZSxkLl90cmFuc2Zvcm09RCxFJiZcInN0cmluZ1wiPT10eXBlb2YgRSYmQ2EpbT1RLnN0eWxlLG1bQ2FdPUUsbS5kaXNwbGF5PVwiYmxvY2tcIixtLnBvc2l0aW9uPVwiYWJzb2x1dGVcIiwtMSE9PUUuaW5kZXhPZihcIiVcIikmJihtLndpZHRoPV8oYSxcIndpZHRoXCIpLG0uaGVpZ2h0PV8oYSxcImhlaWdodFwiKSksTy5ib2R5LmFwcGVuZENoaWxkKFEpLGw9UmEoUSxudWxsLCExKSxcInNpbXBsZVwiPT09RC5za2V3VHlwZSYmKGwuc2NhbGVZKj1NYXRoLmNvcyhsLnNrZXdYKkspKSxELnN2ZyYmKHM9RC54T3JpZ2luLHQ9RC55T3JpZ2luLGwueC09RC54T2Zmc2V0LGwueS09RC55T2Zmc2V0LChBLnRyYW5zZm9ybU9yaWdpbnx8QS5zdmdPcmlnaW4pJiYoRT17fSxMYShhLGhhKEEudHJhbnNmb3JtT3JpZ2luKSxFLEEuc3ZnT3JpZ2luLEEuc21vb3RoT3JpZ2luLCEwKSxzPUUueE9yaWdpbix0PUUueU9yaWdpbixsLngtPUUueE9mZnNldC1ELnhPZmZzZXQsbC55LT1FLnlPZmZzZXQtRC55T2Zmc2V0KSwoc3x8dCkmJih1PVFhKFEsITApLGwueC09cy0ocyp1WzBdK3QqdVsyXSksbC55LT10LShzKnVbMV0rdCp1WzNdKSkpLE8uYm9keS5yZW1vdmVDaGlsZChRKSxsLnBlcnNwZWN0aXZlfHwobC5wZXJzcGVjdGl2ZT1ELnBlcnNwZWN0aXZlKSxudWxsIT1BLnhQZXJjZW50JiYobC54UGVyY2VudD1qYShBLnhQZXJjZW50LEQueFBlcmNlbnQpKSxudWxsIT1BLnlQZXJjZW50JiYobC55UGVyY2VudD1qYShBLnlQZXJjZW50LEQueVBlcmNlbnQpKTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBBKXtpZihsPXtzY2FsZVg6amEobnVsbCE9QS5zY2FsZVg/QS5zY2FsZVg6QS5zY2FsZSxELnNjYWxlWCksc2NhbGVZOmphKG51bGwhPUEuc2NhbGVZP0Euc2NhbGVZOkEuc2NhbGUsRC5zY2FsZVkpLHNjYWxlWjpqYShBLnNjYWxlWixELnNjYWxlWikseDpqYShBLngsRC54KSx5OmphKEEueSxELnkpLHo6amEoQS56LEQueikseFBlcmNlbnQ6amEoQS54UGVyY2VudCxELnhQZXJjZW50KSx5UGVyY2VudDpqYShBLnlQZXJjZW50LEQueVBlcmNlbnQpLHBlcnNwZWN0aXZlOmphKEEudHJhbnNmb3JtUGVyc3BlY3RpdmUsRC5wZXJzcGVjdGl2ZSl9LHA9QS5kaXJlY3Rpb25hbFJvdGF0aW9uLG51bGwhPXApaWYoXCJvYmplY3RcIj09dHlwZW9mIHApZm9yKG0gaW4gcClBW21dPXBbbV07ZWxzZSBBLnJvdGF0aW9uPXA7XCJzdHJpbmdcIj09dHlwZW9mIEEueCYmLTEhPT1BLnguaW5kZXhPZihcIiVcIikmJihsLng9MCxsLnhQZXJjZW50PWphKEEueCxELnhQZXJjZW50KSksXCJzdHJpbmdcIj09dHlwZW9mIEEueSYmLTEhPT1BLnkuaW5kZXhPZihcIiVcIikmJihsLnk9MCxsLnlQZXJjZW50PWphKEEueSxELnlQZXJjZW50KSksbC5yb3RhdGlvbj1rYShcInJvdGF0aW9uXCJpbiBBP0Eucm90YXRpb246XCJzaG9ydFJvdGF0aW9uXCJpbiBBP0Euc2hvcnRSb3RhdGlvbitcIl9zaG9ydFwiOlwicm90YXRpb25aXCJpbiBBP0Eucm90YXRpb25aOkQucm90YXRpb24sRC5yb3RhdGlvbixcInJvdGF0aW9uXCIsQiksRmEmJihsLnJvdGF0aW9uWD1rYShcInJvdGF0aW9uWFwiaW4gQT9BLnJvdGF0aW9uWDpcInNob3J0Um90YXRpb25YXCJpbiBBP0Euc2hvcnRSb3RhdGlvblgrXCJfc2hvcnRcIjpELnJvdGF0aW9uWHx8MCxELnJvdGF0aW9uWCxcInJvdGF0aW9uWFwiLEIpLGwucm90YXRpb25ZPWthKFwicm90YXRpb25ZXCJpbiBBP0Eucm90YXRpb25ZOlwic2hvcnRSb3RhdGlvbllcImluIEE/QS5zaG9ydFJvdGF0aW9uWStcIl9zaG9ydFwiOkQucm90YXRpb25ZfHwwLEQucm90YXRpb25ZLFwicm90YXRpb25ZXCIsQikpLGwuc2tld1g9a2EoQS5za2V3WCxELnNrZXdYKSxsLnNrZXdZPWthKEEuc2tld1ksRC5za2V3WSl9Zm9yKEZhJiZudWxsIT1BLmZvcmNlM0QmJihELmZvcmNlM0Q9QS5mb3JjZTNELG89ITApLG49RC5mb3JjZTNEfHxELnp8fEQucm90YXRpb25YfHxELnJvdGF0aW9uWXx8bC56fHxsLnJvdGF0aW9uWHx8bC5yb3RhdGlvbll8fGwucGVyc3BlY3RpdmUsbnx8bnVsbD09QS5zY2FsZXx8KGwuc2NhbGVaPTEpOy0tej4tMTspdj1CYVt6XSxFPWxbdl0tRFt2XSwoRT55fHwteT5FfHxudWxsIT1BW3ZdfHxudWxsIT1NW3ZdKSYmKG89ITAsZj1uZXcgdGEoRCx2LERbdl0sRSxmKSx2IGluIEImJihmLmU9Qlt2XSksZi54czA9MCxmLnBsdWdpbj1oLGQuX292ZXJ3cml0ZVByb3BzLnB1c2goZi5uKSk7cmV0dXJuIEU9QS50cmFuc2Zvcm1PcmlnaW4sRC5zdmcmJihFfHxBLnN2Z09yaWdpbikmJihzPUQueE9mZnNldCx0PUQueU9mZnNldCxMYShhLGhhKEUpLGwsQS5zdmdPcmlnaW4sQS5zbW9vdGhPcmlnaW4pLGY9dWEoRCxcInhPcmlnaW5cIiwodz9EOmwpLnhPcmlnaW4sbC54T3JpZ2luLGYsQyksZj11YShELFwieU9yaWdpblwiLCh3P0Q6bCkueU9yaWdpbixsLnlPcmlnaW4sZixDKSwocyE9PUQueE9mZnNldHx8dCE9PUQueU9mZnNldCkmJihmPXVhKEQsXCJ4T2Zmc2V0XCIsdz9zOkQueE9mZnNldCxELnhPZmZzZXQsZixDKSxmPXVhKEQsXCJ5T2Zmc2V0XCIsdz90OkQueU9mZnNldCxELnlPZmZzZXQsZixDKSksRT1cIjBweCAwcHhcIiksKEV8fEZhJiZuJiZELnpPcmlnaW4pJiYoQ2E/KG89ITAsdj1FYSxFPShFfHxfKGEsdixlLCExLFwiNTAlIDUwJVwiKSkrXCJcIixmPW5ldyB0YSh4LHYsMCwwLGYsLTEsQyksZi5iPXhbdl0sZi5wbHVnaW49aCxGYT8obT1ELnpPcmlnaW4sRT1FLnNwbGl0KFwiIFwiKSxELnpPcmlnaW49KEUubGVuZ3RoPjImJigwPT09bXx8XCIwcHhcIiE9PUVbMl0pP3BhcnNlRmxvYXQoRVsyXSk6bSl8fDAsZi54czA9Zi5lPUVbMF0rXCIgXCIrKEVbMV18fFwiNTAlXCIpK1wiIDBweFwiLGY9bmV3IHRhKEQsXCJ6T3JpZ2luXCIsMCwwLGYsLTEsZi5uKSxmLmI9bSxmLnhzMD1mLmU9RC56T3JpZ2luKTpmLnhzMD1mLmU9RSk6aGEoRStcIlwiLEQpKSxvJiYoZC5fdHJhbnNmb3JtVHlwZT1ELnN2ZyYmQWF8fCFuJiYzIT09dGhpcy5fdHJhbnNmb3JtVHlwZT8yOjMpLGomJihpW2NdPWopLGsmJihpLnNjYWxlPWspLGZ9LHByZWZpeDohMH0pLHlhKFwiYm94U2hhZG93XCIse2RlZmF1bHRWYWx1ZTpcIjBweCAwcHggMHB4IDBweCAjOTk5XCIscHJlZml4OiEwLGNvbG9yOiEwLG11bHRpOiEwLGtleXdvcmQ6XCJpbnNldFwifSkseWEoXCJib3JkZXJSYWRpdXNcIix7ZGVmYXVsdFZhbHVlOlwiMHB4XCIscGFyc2VyOmZ1bmN0aW9uKGEsYixjLGYsZyxoKXtiPXRoaXMuZm9ybWF0KGIpO3ZhciBpLGosayxsLG0sbixvLHAscSxyLHMsdCx1LHYsdyx4LHk9W1wiYm9yZGVyVG9wTGVmdFJhZGl1c1wiLFwiYm9yZGVyVG9wUmlnaHRSYWRpdXNcIixcImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzXCIsXCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzXCJdLHo9YS5zdHlsZTtmb3IocT1wYXJzZUZsb2F0KGEub2Zmc2V0V2lkdGgpLHI9cGFyc2VGbG9hdChhLm9mZnNldEhlaWdodCksaT1iLnNwbGl0KFwiIFwiKSxqPTA7ajx5Lmxlbmd0aDtqKyspdGhpcy5wLmluZGV4T2YoXCJib3JkZXJcIikmJih5W2pdPVooeVtqXSkpLG09bD1fKGEseVtqXSxlLCExLFwiMHB4XCIpLC0xIT09bS5pbmRleE9mKFwiIFwiKSYmKGw9bS5zcGxpdChcIiBcIiksbT1sWzBdLGw9bFsxXSksbj1rPWlbal0sbz1wYXJzZUZsb2F0KG0pLHQ9bS5zdWJzdHIoKG8rXCJcIikubGVuZ3RoKSx1PVwiPVwiPT09bi5jaGFyQXQoMSksdT8ocD1wYXJzZUludChuLmNoYXJBdCgwKStcIjFcIiwxMCksbj1uLnN1YnN0cigyKSxwKj1wYXJzZUZsb2F0KG4pLHM9bi5zdWJzdHIoKHArXCJcIikubGVuZ3RoLSgwPnA/MTowKSl8fFwiXCIpOihwPXBhcnNlRmxvYXQobikscz1uLnN1YnN0cigocCtcIlwiKS5sZW5ndGgpKSxcIlwiPT09cyYmKHM9ZFtjXXx8dCkscyE9PXQmJih2PWFhKGEsXCJib3JkZXJMZWZ0XCIsbyx0KSx3PWFhKGEsXCJib3JkZXJUb3BcIixvLHQpLFwiJVwiPT09cz8obT12L3EqMTAwK1wiJVwiLGw9dy9yKjEwMCtcIiVcIik6XCJlbVwiPT09cz8oeD1hYShhLFwiYm9yZGVyTGVmdFwiLDEsXCJlbVwiKSxtPXYveCtcImVtXCIsbD13L3grXCJlbVwiKToobT12K1wicHhcIixsPXcrXCJweFwiKSx1JiYobj1wYXJzZUZsb2F0KG0pK3ArcyxrPXBhcnNlRmxvYXQobCkrcCtzKSksZz12YSh6LHlbal0sbStcIiBcIitsLG4rXCIgXCIraywhMSxcIjBweFwiLGcpO3JldHVybiBnfSxwcmVmaXg6ITAsZm9ybWF0dGVyOnFhKFwiMHB4IDBweCAwcHggMHB4XCIsITEsITApfSkseWEoXCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzLGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzLGJvcmRlclRvcExlZnRSYWRpdXMsYm9yZGVyVG9wUmlnaHRSYWRpdXNcIix7ZGVmYXVsdFZhbHVlOlwiMHB4XCIscGFyc2VyOmZ1bmN0aW9uKGEsYixjLGQsZixnKXtyZXR1cm4gdmEoYS5zdHlsZSxjLHRoaXMuZm9ybWF0KF8oYSxjLGUsITEsXCIwcHggMHB4XCIpKSx0aGlzLmZvcm1hdChiKSwhMSxcIjBweFwiLGYpfSxwcmVmaXg6ITAsZm9ybWF0dGVyOnFhKFwiMHB4IDBweFwiLCExLCEwKX0pLHlhKFwiYmFja2dyb3VuZFBvc2l0aW9uXCIse2RlZmF1bHRWYWx1ZTpcIjAgMFwiLHBhcnNlcjpmdW5jdGlvbihhLGIsYyxkLGYsZyl7dmFyIGgsaSxqLGssbCxtLG49XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCIsbz1lfHwkKGEsbnVsbCkscT10aGlzLmZvcm1hdCgobz9wP28uZ2V0UHJvcGVydHlWYWx1ZShuK1wiLXhcIikrXCIgXCIrby5nZXRQcm9wZXJ0eVZhbHVlKG4rXCIteVwiKTpvLmdldFByb3BlcnR5VmFsdWUobik6YS5jdXJyZW50U3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uWCtcIiBcIithLmN1cnJlbnRTdHlsZS5iYWNrZ3JvdW5kUG9zaXRpb25ZKXx8XCIwIDBcIikscj10aGlzLmZvcm1hdChiKTtpZigtMSE9PXEuaW5kZXhPZihcIiVcIikhPSgtMSE9PXIuaW5kZXhPZihcIiVcIikpJiZyLnNwbGl0KFwiLFwiKS5sZW5ndGg8MiYmKG09XyhhLFwiYmFja2dyb3VuZEltYWdlXCIpLnJlcGxhY2UoRCxcIlwiKSxtJiZcIm5vbmVcIiE9PW0pKXtmb3IoaD1xLnNwbGl0KFwiIFwiKSxpPXIuc3BsaXQoXCIgXCIpLFIuc2V0QXR0cmlidXRlKFwic3JjXCIsbSksaj0yOy0taj4tMTspcT1oW2pdLGs9LTEhPT1xLmluZGV4T2YoXCIlXCIpLGshPT0oLTEhPT1pW2pdLmluZGV4T2YoXCIlXCIpKSYmKGw9MD09PWo/YS5vZmZzZXRXaWR0aC1SLndpZHRoOmEub2Zmc2V0SGVpZ2h0LVIuaGVpZ2h0LGhbal09az9wYXJzZUZsb2F0KHEpLzEwMCpsK1wicHhcIjpwYXJzZUZsb2F0KHEpL2wqMTAwK1wiJVwiKTtxPWguam9pbihcIiBcIil9cmV0dXJuIHRoaXMucGFyc2VDb21wbGV4KGEuc3R5bGUscSxyLGYsZyl9LGZvcm1hdHRlcjpoYX0pLHlhKFwiYmFja2dyb3VuZFNpemVcIix7ZGVmYXVsdFZhbHVlOlwiMCAwXCIsZm9ybWF0dGVyOmZ1bmN0aW9uKGEpe3JldHVybiBhKz1cIlwiLFwiY29cIj09PWEuc3Vic3RyKDAsMik/YTpoYSgtMT09PWEuaW5kZXhPZihcIiBcIik/YStcIiBcIithOmEpfX0pLHlhKFwicGVyc3BlY3RpdmVcIix7ZGVmYXVsdFZhbHVlOlwiMHB4XCIscHJlZml4OiEwfSkseWEoXCJwZXJzcGVjdGl2ZU9yaWdpblwiLHtkZWZhdWx0VmFsdWU6XCI1MCUgNTAlXCIscHJlZml4OiEwfSkseWEoXCJ0cmFuc2Zvcm1TdHlsZVwiLHtwcmVmaXg6ITB9KSx5YShcImJhY2tmYWNlVmlzaWJpbGl0eVwiLHtwcmVmaXg6ITB9KSx5YShcInVzZXJTZWxlY3RcIix7cHJlZml4OiEwfSkseWEoXCJtYXJnaW5cIix7cGFyc2VyOnJhKFwibWFyZ2luVG9wLG1hcmdpblJpZ2h0LG1hcmdpbkJvdHRvbSxtYXJnaW5MZWZ0XCIpfSkseWEoXCJwYWRkaW5nXCIse3BhcnNlcjpyYShcInBhZGRpbmdUb3AscGFkZGluZ1JpZ2h0LHBhZGRpbmdCb3R0b20scGFkZGluZ0xlZnRcIil9KSx5YShcImNsaXBcIix7ZGVmYXVsdFZhbHVlOlwicmVjdCgwcHgsMHB4LDBweCwwcHgpXCIscGFyc2VyOmZ1bmN0aW9uKGEsYixjLGQsZixnKXt2YXIgaCxpLGo7cmV0dXJuIDk+cD8oaT1hLmN1cnJlbnRTdHlsZSxqPTg+cD9cIiBcIjpcIixcIixoPVwicmVjdChcIitpLmNsaXBUb3AraitpLmNsaXBSaWdodCtqK2kuY2xpcEJvdHRvbStqK2kuY2xpcExlZnQrXCIpXCIsYj10aGlzLmZvcm1hdChiKS5zcGxpdChcIixcIikuam9pbihqKSk6KGg9dGhpcy5mb3JtYXQoXyhhLHRoaXMucCxlLCExLHRoaXMuZGZsdCkpLGI9dGhpcy5mb3JtYXQoYikpLHRoaXMucGFyc2VDb21wbGV4KGEuc3R5bGUsaCxiLGYsZyl9fSkseWEoXCJ0ZXh0U2hhZG93XCIse2RlZmF1bHRWYWx1ZTpcIjBweCAwcHggMHB4ICM5OTlcIixjb2xvcjohMCxtdWx0aTohMH0pLHlhKFwiYXV0b1JvdW5kLHN0cmljdFVuaXRzXCIse3BhcnNlcjpmdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBlfX0pLHlhKFwiYm9yZGVyXCIse2RlZmF1bHRWYWx1ZTpcIjBweCBzb2xpZCAjMDAwXCIscGFyc2VyOmZ1bmN0aW9uKGEsYixjLGQsZixnKXt2YXIgaD1fKGEsXCJib3JkZXJUb3BXaWR0aFwiLGUsITEsXCIwcHhcIiksaT10aGlzLmZvcm1hdChiKS5zcGxpdChcIiBcIiksaj1pWzBdLnJlcGxhY2UodyxcIlwiKTtyZXR1cm5cInB4XCIhPT1qJiYoaD1wYXJzZUZsb2F0KGgpL2FhKGEsXCJib3JkZXJUb3BXaWR0aFwiLDEsaikraiksdGhpcy5wYXJzZUNvbXBsZXgoYS5zdHlsZSx0aGlzLmZvcm1hdChoK1wiIFwiK18oYSxcImJvcmRlclRvcFN0eWxlXCIsZSwhMSxcInNvbGlkXCIpK1wiIFwiK18oYSxcImJvcmRlclRvcENvbG9yXCIsZSwhMSxcIiMwMDBcIikpLGkuam9pbihcIiBcIiksZixnKX0sY29sb3I6ITAsZm9ybWF0dGVyOmZ1bmN0aW9uKGEpe3ZhciBiPWEuc3BsaXQoXCIgXCIpO3JldHVybiBiWzBdK1wiIFwiKyhiWzFdfHxcInNvbGlkXCIpK1wiIFwiKyhhLm1hdGNoKHBhKXx8W1wiIzAwMFwiXSlbMF19fSkseWEoXCJib3JkZXJXaWR0aFwiLHtwYXJzZXI6cmEoXCJib3JkZXJUb3BXaWR0aCxib3JkZXJSaWdodFdpZHRoLGJvcmRlckJvdHRvbVdpZHRoLGJvcmRlckxlZnRXaWR0aFwiKX0pLHlhKFwiZmxvYXQsY3NzRmxvYXQsc3R5bGVGbG9hdFwiLHtwYXJzZXI6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWEuc3R5bGUsaD1cImNzc0Zsb2F0XCJpbiBnP1wiY3NzRmxvYXRcIjpcInN0eWxlRmxvYXRcIjtyZXR1cm4gbmV3IHRhKGcsaCwwLDAsZSwtMSxjLCExLDAsZ1toXSxiKX19KTt2YXIgVWE9ZnVuY3Rpb24oYSl7dmFyIGIsYz10aGlzLnQsZD1jLmZpbHRlcnx8Xyh0aGlzLmRhdGEsXCJmaWx0ZXJcIil8fFwiXCIsZT10aGlzLnMrdGhpcy5jKmF8MDsxMDA9PT1lJiYoLTE9PT1kLmluZGV4T2YoXCJhdHJpeChcIikmJi0xPT09ZC5pbmRleE9mKFwicmFkaWVudChcIikmJi0xPT09ZC5pbmRleE9mKFwib2FkZXIoXCIpPyhjLnJlbW92ZUF0dHJpYnV0ZShcImZpbHRlclwiKSxiPSFfKHRoaXMuZGF0YSxcImZpbHRlclwiKSk6KGMuZmlsdGVyPWQucmVwbGFjZSh6LFwiXCIpLGI9ITApKSxifHwodGhpcy54bjEmJihjLmZpbHRlcj1kPWR8fFwiYWxwaGEob3BhY2l0eT1cIitlK1wiKVwiKSwtMT09PWQuaW5kZXhPZihcInBhY2l0eVwiKT8wPT09ZSYmdGhpcy54bjF8fChjLmZpbHRlcj1kK1wiIGFscGhhKG9wYWNpdHk9XCIrZStcIilcIik6Yy5maWx0ZXI9ZC5yZXBsYWNlKHgsXCJvcGFjaXR5PVwiK2UpKX07eWEoXCJvcGFjaXR5LGFscGhhLGF1dG9BbHBoYVwiLHtkZWZhdWx0VmFsdWU6XCIxXCIscGFyc2VyOmZ1bmN0aW9uKGEsYixjLGQsZixnKXt2YXIgaD1wYXJzZUZsb2F0KF8oYSxcIm9wYWNpdHlcIixlLCExLFwiMVwiKSksaT1hLnN0eWxlLGo9XCJhdXRvQWxwaGFcIj09PWM7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGImJlwiPVwiPT09Yi5jaGFyQXQoMSkmJihiPShcIi1cIj09PWIuY2hhckF0KDApPy0xOjEpKnBhcnNlRmxvYXQoYi5zdWJzdHIoMikpK2gpLGomJjE9PT1oJiZcImhpZGRlblwiPT09XyhhLFwidmlzaWJpbGl0eVwiLGUpJiYwIT09YiYmKGg9MCksVT9mPW5ldyB0YShpLFwib3BhY2l0eVwiLGgsYi1oLGYpOihmPW5ldyB0YShpLFwib3BhY2l0eVwiLDEwMCpoLDEwMCooYi1oKSxmKSxmLnhuMT1qPzE6MCxpLnpvb209MSxmLnR5cGU9MixmLmI9XCJhbHBoYShvcGFjaXR5PVwiK2YucytcIilcIixmLmU9XCJhbHBoYShvcGFjaXR5PVwiKyhmLnMrZi5jKStcIilcIixmLmRhdGE9YSxmLnBsdWdpbj1nLGYuc2V0UmF0aW89VWEpLGomJihmPW5ldyB0YShpLFwidmlzaWJpbGl0eVwiLDAsMCxmLC0xLG51bGwsITEsMCwwIT09aD9cImluaGVyaXRcIjpcImhpZGRlblwiLDA9PT1iP1wiaGlkZGVuXCI6XCJpbmhlcml0XCIpLGYueHMwPVwiaW5oZXJpdFwiLGQuX292ZXJ3cml0ZVByb3BzLnB1c2goZi5uKSxkLl9vdmVyd3JpdGVQcm9wcy5wdXNoKGMpKSxmfX0pO3ZhciBWYT1mdW5jdGlvbihhLGIpe2ImJihhLnJlbW92ZVByb3BlcnR5PygoXCJtc1wiPT09Yi5zdWJzdHIoMCwyKXx8XCJ3ZWJraXRcIj09PWIuc3Vic3RyKDAsNikpJiYoYj1cIi1cIitiKSxhLnJlbW92ZVByb3BlcnR5KGIucmVwbGFjZShCLFwiLSQxXCIpLnRvTG93ZXJDYXNlKCkpKTphLnJlbW92ZUF0dHJpYnV0ZShiKSl9LFdhPWZ1bmN0aW9uKGEpe2lmKHRoaXMudC5fZ3NDbGFzc1BUPXRoaXMsMT09PWF8fDA9PT1hKXt0aGlzLnQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwwPT09YT90aGlzLmI6dGhpcy5lKTtmb3IodmFyIGI9dGhpcy5kYXRhLGM9dGhpcy50LnN0eWxlO2I7KWIudj9jW2IucF09Yi52OlZhKGMsYi5wKSxiPWIuX25leHQ7MT09PWEmJnRoaXMudC5fZ3NDbGFzc1BUPT09dGhpcyYmKHRoaXMudC5fZ3NDbGFzc1BUPW51bGwpfWVsc2UgdGhpcy50LmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIT09dGhpcy5lJiZ0aGlzLnQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIix0aGlzLmUpfTt5YShcImNsYXNzTmFtZVwiLHtwYXJzZXI6ZnVuY3Rpb24oYSxiLGQsZixnLGgsaSl7dmFyIGosayxsLG0sbixvPWEuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIil8fFwiXCIscD1hLnN0eWxlLmNzc1RleHQ7aWYoZz1mLl9jbGFzc05hbWVQVD1uZXcgdGEoYSxkLDAsMCxnLDIpLGcuc2V0UmF0aW89V2EsZy5wcj0tMTEsYz0hMCxnLmI9byxrPWNhKGEsZSksbD1hLl9nc0NsYXNzUFQpe2ZvcihtPXt9LG49bC5kYXRhO247KW1bbi5wXT0xLG49bi5fbmV4dDtsLnNldFJhdGlvKDEpfXJldHVybiBhLl9nc0NsYXNzUFQ9ZyxnLmU9XCI9XCIhPT1iLmNoYXJBdCgxKT9iOm8ucmVwbGFjZShuZXcgUmVnRXhwKFwiKD86XFxcXHN8XilcIitiLnN1YnN0cigyKStcIig/IVtcXFxcdy1dKVwiKSxcIlwiKSsoXCIrXCI9PT1iLmNoYXJBdCgwKT9cIiBcIitiLnN1YnN0cigyKTpcIlwiKSxhLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsZy5lKSxqPWRhKGEsayxjYShhKSxpLG0pLGEuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixvKSxnLmRhdGE9ai5maXJzdE1QVCxhLnN0eWxlLmNzc1RleHQ9cCxnPWcueGZpcnN0PWYucGFyc2UoYSxqLmRpZnMsZyxoKX19KTt2YXIgWGE9ZnVuY3Rpb24oYSl7aWYoKDE9PT1hfHwwPT09YSkmJnRoaXMuZGF0YS5fdG90YWxUaW1lPT09dGhpcy5kYXRhLl90b3RhbER1cmF0aW9uJiZcImlzRnJvbVN0YXJ0XCIhPT10aGlzLmRhdGEuZGF0YSl7dmFyIGIsYyxkLGUsZixnPXRoaXMudC5zdHlsZSxoPWkudHJhbnNmb3JtLnBhcnNlO2lmKFwiYWxsXCI9PT10aGlzLmUpZy5jc3NUZXh0PVwiXCIsZT0hMDtlbHNlIGZvcihiPXRoaXMuZS5zcGxpdChcIiBcIikuam9pbihcIlwiKS5zcGxpdChcIixcIiksZD1iLmxlbmd0aDstLWQ+LTE7KWM9YltkXSxpW2NdJiYoaVtjXS5wYXJzZT09PWg/ZT0hMDpjPVwidHJhbnNmb3JtT3JpZ2luXCI9PT1jP0VhOmlbY10ucCksVmEoZyxjKTtlJiYoVmEoZyxDYSksZj10aGlzLnQuX2dzVHJhbnNmb3JtLGYmJihmLnN2ZyYmKHRoaXMudC5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLXN2Zy1vcmlnaW5cIiksdGhpcy50LnJlbW92ZUF0dHJpYnV0ZShcInRyYW5zZm9ybVwiKSksZGVsZXRlIHRoaXMudC5fZ3NUcmFuc2Zvcm0pKX19O2Zvcih5YShcImNsZWFyUHJvcHNcIix7cGFyc2VyOmZ1bmN0aW9uKGEsYixkLGUsZil7cmV0dXJuIGY9bmV3IHRhKGEsZCwwLDAsZiwyKSxmLnNldFJhdGlvPVhhLGYuZT1iLGYucHI9LTEwLGYuZGF0YT1lLl90d2VlbixjPSEwLGZ9fSksaj1cImJlemllcix0aHJvd1Byb3BzLHBoeXNpY3NQcm9wcyxwaHlzaWNzMkRcIi5zcGxpdChcIixcIiksd2E9ai5sZW5ndGg7d2EtLTspemEoalt3YV0pO2o9Zy5wcm90b3R5cGUsai5fZmlyc3RQVD1qLl9sYXN0UGFyc2VkVHJhbnNmb3JtPWouX3RyYW5zZm9ybT1udWxsLGouX29uSW5pdFR3ZWVuPWZ1bmN0aW9uKGEsYixoLGope2lmKCFhLm5vZGVUeXBlKXJldHVybiExO3RoaXMuX3RhcmdldD1xPWEsdGhpcy5fdHdlZW49aCx0aGlzLl92YXJzPWIscj1qLGs9Yi5hdXRvUm91bmQsYz0hMSxkPWIuc3VmZml4TWFwfHxnLnN1ZmZpeE1hcCxlPSQoYSxcIlwiKSxmPXRoaXMuX292ZXJ3cml0ZVByb3BzO3ZhciBuLHAscyx0LHUsdix3LHgseixBPWEuc3R5bGU7aWYobCYmXCJcIj09PUEuekluZGV4JiYobj1fKGEsXCJ6SW5kZXhcIixlKSwoXCJhdXRvXCI9PT1ufHxcIlwiPT09bikmJnRoaXMuX2FkZExhenlTZXQoQSxcInpJbmRleFwiLDApKSxcInN0cmluZ1wiPT10eXBlb2YgYiYmKHQ9QS5jc3NUZXh0LG49Y2EoYSxlKSxBLmNzc1RleHQ9dCtcIjtcIitiLG49ZGEoYSxuLGNhKGEpKS5kaWZzLCFVJiZ5LnRlc3QoYikmJihuLm9wYWNpdHk9cGFyc2VGbG9hdChSZWdFeHAuJDEpKSxiPW4sQS5jc3NUZXh0PXQpLGIuY2xhc3NOYW1lP3RoaXMuX2ZpcnN0UFQ9cD1pLmNsYXNzTmFtZS5wYXJzZShhLGIuY2xhc3NOYW1lLFwiY2xhc3NOYW1lXCIsdGhpcyxudWxsLG51bGwsYik6dGhpcy5fZmlyc3RQVD1wPXRoaXMucGFyc2UoYSxiLG51bGwpLHRoaXMuX3RyYW5zZm9ybVR5cGUpe2Zvcih6PTM9PT10aGlzLl90cmFuc2Zvcm1UeXBlLENhP20mJihsPSEwLFwiXCI9PT1BLnpJbmRleCYmKHc9XyhhLFwiekluZGV4XCIsZSksKFwiYXV0b1wiPT09d3x8XCJcIj09PXcpJiZ0aGlzLl9hZGRMYXp5U2V0KEEsXCJ6SW5kZXhcIiwwKSksbyYmdGhpcy5fYWRkTGF6eVNldChBLFwiV2Via2l0QmFja2ZhY2VWaXNpYmlsaXR5XCIsdGhpcy5fdmFycy5XZWJraXRCYWNrZmFjZVZpc2liaWxpdHl8fCh6P1widmlzaWJsZVwiOlwiaGlkZGVuXCIpKSk6QS56b29tPTEscz1wO3MmJnMuX25leHQ7KXM9cy5fbmV4dDt4PW5ldyB0YShhLFwidHJhbnNmb3JtXCIsMCwwLG51bGwsMiksdGhpcy5fbGlua0NTU1AoeCxudWxsLHMpLHguc2V0UmF0aW89Q2E/VGE6U2EseC5kYXRhPXRoaXMuX3RyYW5zZm9ybXx8UmEoYSxlLCEwKSx4LnR3ZWVuPWgseC5wcj0tMSxmLnBvcCgpfWlmKGMpe2Zvcig7cDspe2Zvcih2PXAuX25leHQscz10O3MmJnMucHI+cC5wcjspcz1zLl9uZXh0OyhwLl9wcmV2PXM/cy5fcHJldjp1KT9wLl9wcmV2Ll9uZXh0PXA6dD1wLChwLl9uZXh0PXMpP3MuX3ByZXY9cDp1PXAscD12fXRoaXMuX2ZpcnN0UFQ9dH1yZXR1cm4hMH0sai5wYXJzZT1mdW5jdGlvbihhLGIsYyxmKXt2YXIgZyxoLGosbCxtLG4sbyxwLHMsdCx1PWEuc3R5bGU7Zm9yKGcgaW4gYil7aWYobj1iW2ddLFwiZnVuY3Rpb25cIj09dHlwZW9mIG4mJihuPW4ocixxKSksaD1pW2ddKWM9aC5wYXJzZShhLG4sZyx0aGlzLGMsZixiKTtlbHNle2lmKFwiLS1cIj09PWcuc3Vic3RyKDAsMikpe3RoaXMuX3R3ZWVuLl9wcm9wTG9va3VwW2ddPXRoaXMuX2FkZFR3ZWVuLmNhbGwodGhpcy5fdHdlZW4sYS5zdHlsZSxcInNldFByb3BlcnR5XCIsJChhKS5nZXRQcm9wZXJ0eVZhbHVlKGcpK1wiXCIsbitcIlwiLGcsITEsZyk7Y29udGludWV9bT1fKGEsZyxlKStcIlwiLHM9XCJzdHJpbmdcIj09dHlwZW9mIG4sXCJjb2xvclwiPT09Z3x8XCJmaWxsXCI9PT1nfHxcInN0cm9rZVwiPT09Z3x8LTEhPT1nLmluZGV4T2YoXCJDb2xvclwiKXx8cyYmQS50ZXN0KG4pPyhzfHwobj1uYShuKSxuPShuLmxlbmd0aD4zP1wicmdiYShcIjpcInJnYihcIikrbi5qb2luKFwiLFwiKStcIilcIiksYz12YSh1LGcsbSxuLCEwLFwidHJhbnNwYXJlbnRcIixjLDAsZikpOnMmJkoudGVzdChuKT9jPXZhKHUsZyxtLG4sITAsbnVsbCxjLDAsZik6KGo9cGFyc2VGbG9hdChtKSxvPWp8fDA9PT1qP20uc3Vic3RyKChqK1wiXCIpLmxlbmd0aCk6XCJcIiwoXCJcIj09PW18fFwiYXV0b1wiPT09bSkmJihcIndpZHRoXCI9PT1nfHxcImhlaWdodFwiPT09Zz8oaj1nYShhLGcsZSksbz1cInB4XCIpOlwibGVmdFwiPT09Z3x8XCJ0b3BcIj09PWc/KGo9YmEoYSxnLGUpLG89XCJweFwiKTooaj1cIm9wYWNpdHlcIiE9PWc/MDoxLG89XCJcIikpLHQ9cyYmXCI9XCI9PT1uLmNoYXJBdCgxKSx0PyhsPXBhcnNlSW50KG4uY2hhckF0KDApK1wiMVwiLDEwKSxuPW4uc3Vic3RyKDIpLGwqPXBhcnNlRmxvYXQobikscD1uLnJlcGxhY2UodyxcIlwiKSk6KGw9cGFyc2VGbG9hdChuKSxwPXM/bi5yZXBsYWNlKHcsXCJcIik6XCJcIiksXCJcIj09PXAmJihwPWcgaW4gZD9kW2ddOm8pLG49bHx8MD09PWw/KHQ/bCtqOmwpK3A6YltnXSxvIT09cCYmKFwiXCIhPT1wfHxcImxpbmVIZWlnaHRcIj09PWcpJiYobHx8MD09PWwpJiZqJiYoaj1hYShhLGcsaixvKSxcIiVcIj09PXA/KGovPWFhKGEsZywxMDAsXCIlXCIpLzEwMCxiLnN0cmljdFVuaXRzIT09ITAmJihtPWorXCIlXCIpKTpcImVtXCI9PT1wfHxcInJlbVwiPT09cHx8XCJ2d1wiPT09cHx8XCJ2aFwiPT09cD9qLz1hYShhLGcsMSxwKTpcInB4XCIhPT1wJiYobD1hYShhLGcsbCxwKSxwPVwicHhcIiksdCYmKGx8fDA9PT1sKSYmKG49bCtqK3ApKSx0JiYobCs9aiksIWomJjAhPT1qfHwhbCYmMCE9PWw/dm9pZCAwIT09dVtnXSYmKG58fG4rXCJcIiE9XCJOYU5cIiYmbnVsbCE9bik/KGM9bmV3IHRhKHUsZyxsfHxqfHwwLDAsYywtMSxnLCExLDAsbSxuKSxjLnhzMD1cIm5vbmVcIiE9PW58fFwiZGlzcGxheVwiIT09ZyYmLTE9PT1nLmluZGV4T2YoXCJTdHlsZVwiKT9uOm0pOlcoXCJpbnZhbGlkIFwiK2crXCIgdHdlZW4gdmFsdWU6IFwiK2JbZ10pOihjPW5ldyB0YSh1LGcsaixsLWosYywwLGcsayE9PSExJiYoXCJweFwiPT09cHx8XCJ6SW5kZXhcIj09PWcpLDAsbSxuKSxjLnhzMD1wKSl9ZiYmYyYmIWMucGx1Z2luJiYoYy5wbHVnaW49Zil9cmV0dXJuIGN9LGouc2V0UmF0aW89ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpcy5fZmlyc3RQVCxmPTFlLTY7aWYoMSE9PWF8fHRoaXMuX3R3ZWVuLl90aW1lIT09dGhpcy5fdHdlZW4uX2R1cmF0aW9uJiYwIT09dGhpcy5fdHdlZW4uX3RpbWUpaWYoYXx8dGhpcy5fdHdlZW4uX3RpbWUhPT10aGlzLl90d2Vlbi5fZHVyYXRpb24mJjAhPT10aGlzLl90d2Vlbi5fdGltZXx8dGhpcy5fdHdlZW4uX3Jhd1ByZXZUaW1lPT09LTFlLTYpZm9yKDtlOyl7aWYoYj1lLmMqYStlLnMsZS5yP2I9ZS5yKGIpOmY+YiYmYj4tZiYmKGI9MCksZS50eXBlKWlmKDE9PT1lLnR5cGUpaWYoZD1lLmwsMj09PWQpZS50W2UucF09ZS54czArYitlLnhzMStlLnhuMStlLnhzMjtlbHNlIGlmKDM9PT1kKWUudFtlLnBdPWUueHMwK2IrZS54czErZS54bjErZS54czIrZS54bjIrZS54czM7ZWxzZSBpZig0PT09ZCllLnRbZS5wXT1lLnhzMCtiK2UueHMxK2UueG4xK2UueHMyK2UueG4yK2UueHMzK2UueG4zK2UueHM0O2Vsc2UgaWYoNT09PWQpZS50W2UucF09ZS54czArYitlLnhzMStlLnhuMStlLnhzMitlLnhuMitlLnhzMytlLnhuMytlLnhzNCtlLnhuNCtlLnhzNTtlbHNle2ZvcihjPWUueHMwK2IrZS54czEsZD0xO2Q8ZS5sO2QrKyljKz1lW1wieG5cIitkXStlW1wieHNcIisoZCsxKV07ZS50W2UucF09Y31lbHNlLTE9PT1lLnR5cGU/ZS50W2UucF09ZS54czA6ZS5zZXRSYXRpbyYmZS5zZXRSYXRpbyhhKTtlbHNlIGUudFtlLnBdPWIrZS54czA7ZT1lLl9uZXh0fWVsc2UgZm9yKDtlOykyIT09ZS50eXBlP2UudFtlLnBdPWUuYjplLnNldFJhdGlvKGEpLGU9ZS5fbmV4dDtlbHNlIGZvcig7ZTspe2lmKDIhPT1lLnR5cGUpaWYoZS5yJiYtMSE9PWUudHlwZSlpZihiPWUucihlLnMrZS5jKSxlLnR5cGUpe2lmKDE9PT1lLnR5cGUpe2ZvcihkPWUubCxjPWUueHMwK2IrZS54czEsZD0xO2Q8ZS5sO2QrKyljKz1lW1wieG5cIitkXStlW1wieHNcIisoZCsxKV07ZS50W2UucF09Y319ZWxzZSBlLnRbZS5wXT1iK2UueHMwO2Vsc2UgZS50W2UucF09ZS5lO2Vsc2UgZS5zZXRSYXRpbyhhKTtlPWUuX25leHR9fSxqLl9lbmFibGVUcmFuc2Zvcm1zPWZ1bmN0aW9uKGEpe3RoaXMuX3RyYW5zZm9ybT10aGlzLl90cmFuc2Zvcm18fFJhKHRoaXMuX3RhcmdldCxlLCEwKSx0aGlzLl90cmFuc2Zvcm1UeXBlPXRoaXMuX3RyYW5zZm9ybS5zdmcmJkFhfHwhYSYmMyE9PXRoaXMuX3RyYW5zZm9ybVR5cGU/MjozfTt2YXIgWWE9ZnVuY3Rpb24oYSl7dGhpcy50W3RoaXMucF09dGhpcy5lLHRoaXMuZGF0YS5fbGlua0NTU1AodGhpcyx0aGlzLl9uZXh0LG51bGwsITApfTtqLl9hZGRMYXp5U2V0PWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9maXJzdFBUPW5ldyB0YShhLGIsMCwwLHRoaXMuX2ZpcnN0UFQsMik7ZC5lPWMsZC5zZXRSYXRpbz1ZYSxkLmRhdGE9dGhpc30sai5fbGlua0NTU1A9ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIGEmJihiJiYoYi5fcHJldj1hKSxhLl9uZXh0JiYoYS5fbmV4dC5fcHJldj1hLl9wcmV2KSxhLl9wcmV2P2EuX3ByZXYuX25leHQ9YS5fbmV4dDp0aGlzLl9maXJzdFBUPT09YSYmKHRoaXMuX2ZpcnN0UFQ9YS5fbmV4dCxkPSEwKSxjP2MuX25leHQ9YTpkfHxudWxsIT09dGhpcy5fZmlyc3RQVHx8KHRoaXMuX2ZpcnN0UFQ9YSksYS5fbmV4dD1iLGEuX3ByZXY9YyksYX0sai5fbW9kPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj10aGlzLl9maXJzdFBUO2I7KVwiZnVuY3Rpb25cIj09dHlwZW9mIGFbYi5wXSYmKGIucj1hW2IucF0pLGI9Yi5fbmV4dH0sai5fa2lsbD1mdW5jdGlvbihiKXt2YXIgYyxkLGUsZj1iO2lmKGIuYXV0b0FscGhhfHxiLmFscGhhKXtmPXt9O2ZvcihkIGluIGIpZltkXT1iW2RdO2Yub3BhY2l0eT0xLGYuYXV0b0FscGhhJiYoZi52aXNpYmlsaXR5PTEpfWZvcihiLmNsYXNzTmFtZSYmKGM9dGhpcy5fY2xhc3NOYW1lUFQpJiYoZT1jLnhmaXJzdCxlJiZlLl9wcmV2P3RoaXMuX2xpbmtDU1NQKGUuX3ByZXYsYy5fbmV4dCxlLl9wcmV2Ll9wcmV2KTplPT09dGhpcy5fZmlyc3RQVCYmKHRoaXMuX2ZpcnN0UFQ9Yy5fbmV4dCksYy5fbmV4dCYmdGhpcy5fbGlua0NTU1AoYy5fbmV4dCxjLl9uZXh0Ll9uZXh0LGUuX3ByZXYpLHRoaXMuX2NsYXNzTmFtZVBUPW51bGwpLGM9dGhpcy5fZmlyc3RQVDtjOyljLnBsdWdpbiYmYy5wbHVnaW4hPT1kJiZjLnBsdWdpbi5fa2lsbCYmKGMucGx1Z2luLl9raWxsKGIpLGQ9Yy5wbHVnaW4pLGM9Yy5fbmV4dDtyZXR1cm4gYS5wcm90b3R5cGUuX2tpbGwuY2FsbCh0aGlzLGYpfTt2YXIgWmE9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnO2lmKGEuc2xpY2UpZm9yKGU9YS5sZW5ndGg7LS1lPi0xOylaYShhW2VdLGIsYyk7ZWxzZSBmb3IoZD1hLmNoaWxkTm9kZXMsZT1kLmxlbmd0aDstLWU+LTE7KWY9ZFtlXSxnPWYudHlwZSxmLnN0eWxlJiYoYi5wdXNoKGNhKGYpKSxjJiZjLnB1c2goZikpLDEhPT1nJiY5IT09ZyYmMTEhPT1nfHwhZi5jaGlsZE5vZGVzLmxlbmd0aHx8WmEoZixiLGMpfTtyZXR1cm4gZy5jYXNjYWRlVG89ZnVuY3Rpb24oYSxjLGQpe3ZhciBlLGYsZyxoLGk9Yi50byhhLGMsZCksaj1baV0saz1bXSxsPVtdLG09W10sbj1iLl9pbnRlcm5hbHMucmVzZXJ2ZWRQcm9wcztmb3IoYT1pLl90YXJnZXRzfHxpLnRhcmdldCxaYShhLGssbSksaS5yZW5kZXIoYywhMCwhMCksWmEoYSxsKSxpLnJlbmRlcigwLCEwLCEwKSxpLl9lbmFibGVkKCEwKSxlPW0ubGVuZ3RoOy0tZT4tMTspaWYoZj1kYShtW2VdLGtbZV0sbFtlXSksZi5maXJzdE1QVCl7Zj1mLmRpZnM7Zm9yKGcgaW4gZCluW2ddJiYoZltnXT1kW2ddKTtoPXt9O2ZvcihnIGluIGYpaFtnXT1rW2VdW2ddO2oucHVzaChiLmZyb21UbyhtW2VdLGMsaCxmKSl9cmV0dXJuIGp9LGEuYWN0aXZhdGUoW2ddKSxnfSwhMCksZnVuY3Rpb24oKXt2YXIgYT1fZ3NTY29wZS5fZ3NEZWZpbmUucGx1Z2luKHtwcm9wTmFtZTpcInJvdW5kUHJvcHNcIix2ZXJzaW9uOlwiMS43LjBcIixwcmlvcml0eTotMSxBUEk6Mixpbml0OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdGhpcy5fdHdlZW49YywhMH19KSxiPWZ1bmN0aW9uKGEpe3ZhciBiPTE+YT9NYXRoLnBvdygxMCwoYStcIlwiKS5sZW5ndGgtMik6MTtyZXR1cm4gZnVuY3Rpb24oYyl7cmV0dXJuKE1hdGgucm91bmQoYy9hKSphKmJ8MCkvYn19LGM9ZnVuY3Rpb24oYSxiKXtmb3IoO2E7KWEuZnx8YS5ibG9ifHwoYS5tPWJ8fE1hdGgucm91bmQpLGE9YS5fbmV4dH0sZD1hLnByb3RvdHlwZTtkLl9vbkluaXRBbGxQcm9wcz1mdW5jdGlvbigpe3ZhciBhLGQsZSxmLGc9dGhpcy5fdHdlZW4saD1nLnZhcnMucm91bmRQcm9wcyxpPXt9LGo9Zy5fcHJvcExvb2t1cC5yb3VuZFByb3BzO2lmKFwib2JqZWN0XCIhPXR5cGVvZiBofHxoLnB1c2gpZm9yKFwic3RyaW5nXCI9PXR5cGVvZiBoJiYoaD1oLnNwbGl0KFwiLFwiKSksZT1oLmxlbmd0aDstLWU+LTE7KWlbaFtlXV09TWF0aC5yb3VuZDtlbHNlIGZvcihmIGluIGgpaVtmXT1iKGhbZl0pO2ZvcihmIGluIGkpZm9yKGE9Zy5fZmlyc3RQVDthOylkPWEuX25leHQsYS5wZz9hLnQuX21vZChpKTphLm49PT1mJiYoMj09PWEuZiYmYS50P2MoYS50Ll9maXJzdFBULGlbZl0pOih0aGlzLl9hZGQoYS50LGYsYS5zLGEuYyxpW2ZdKSxkJiYoZC5fcHJldj1hLl9wcmV2KSxhLl9wcmV2P2EuX3ByZXYuX25leHQ9ZDpnLl9maXJzdFBUPT09YSYmKGcuX2ZpcnN0UFQ9ZCksYS5fbmV4dD1hLl9wcmV2PW51bGwsZy5fcHJvcExvb2t1cFtmXT1qKSksYT1kO3JldHVybiExfSxkLl9hZGQ9ZnVuY3Rpb24oYSxiLGMsZCxlKXt0aGlzLl9hZGRUd2VlbihhLGIsYyxjK2QsYixlfHxNYXRoLnJvdW5kKSx0aGlzLl9vdmVyd3JpdGVQcm9wcy5wdXNoKGIpfX0oKSxmdW5jdGlvbigpe19nc1Njb3BlLl9nc0RlZmluZS5wbHVnaW4oe3Byb3BOYW1lOlwiYXR0clwiLEFQSToyLHZlcnNpb246XCIwLjYuMVwiLGluaXQ6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGUsZjtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLnNldEF0dHJpYnV0ZSlyZXR1cm4hMTtmb3IoZSBpbiBiKWY9YltlXSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBmJiYoZj1mKGQsYSkpLHRoaXMuX2FkZFR3ZWVuKGEsXCJzZXRBdHRyaWJ1dGVcIixhLmdldEF0dHJpYnV0ZShlKStcIlwiLGYrXCJcIixlLCExLGUpLHRoaXMuX292ZXJ3cml0ZVByb3BzLnB1c2goZSk7cmV0dXJuITB9fSl9KCksX2dzU2NvcGUuX2dzRGVmaW5lLnBsdWdpbih7cHJvcE5hbWU6XCJkaXJlY3Rpb25hbFJvdGF0aW9uXCIsdmVyc2lvbjpcIjAuMy4xXCIsQVBJOjIsaW5pdDpmdW5jdGlvbihhLGIsYyxkKXtcIm9iamVjdFwiIT10eXBlb2YgYiYmKGI9e3JvdGF0aW9uOmJ9KSx0aGlzLmZpbmFscz17fTt2YXIgZSxmLGcsaCxpLGosaz1iLnVzZVJhZGlhbnM9PT0hMD8yKk1hdGguUEk6MzYwLGw9MWUtNjtmb3IoZSBpbiBiKVwidXNlUmFkaWFuc1wiIT09ZSYmKGg9YltlXSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBoJiYoaD1oKGQsYSkpLGo9KGgrXCJcIikuc3BsaXQoXCJfXCIpLGY9alswXSxnPXBhcnNlRmxvYXQoXCJmdW5jdGlvblwiIT10eXBlb2YgYVtlXT9hW2VdOmFbZS5pbmRleE9mKFwic2V0XCIpfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBhW1wiZ2V0XCIrZS5zdWJzdHIoMyldP2U6XCJnZXRcIitlLnN1YnN0cigzKV0oKSksaD10aGlzLmZpbmFsc1tlXT1cInN0cmluZ1wiPT10eXBlb2YgZiYmXCI9XCI9PT1mLmNoYXJBdCgxKT9nK3BhcnNlSW50KGYuY2hhckF0KDApK1wiMVwiLDEwKSpOdW1iZXIoZi5zdWJzdHIoMikpOk51bWJlcihmKXx8MCxpPWgtZyxqLmxlbmd0aCYmKGY9ai5qb2luKFwiX1wiKSwtMSE9PWYuaW5kZXhPZihcInNob3J0XCIpJiYoaSU9ayxpIT09aSUoay8yKSYmKGk9MD5pP2krazppLWspKSwtMSE9PWYuaW5kZXhPZihcIl9jd1wiKSYmMD5pP2k9KGkrOTk5OTk5OTk5OSprKSVrLShpL2t8MCkqazotMSE9PWYuaW5kZXhPZihcImNjd1wiKSYmaT4wJiYoaT0oaS05OTk5OTk5OTk5KmspJWstKGkva3wwKSprKSksKGk+bHx8LWw+aSkmJih0aGlzLl9hZGRUd2VlbihhLGUsZyxnK2ksZSksdGhpcy5fb3ZlcndyaXRlUHJvcHMucHVzaChlKSkpO3JldHVybiEwfSxzZXQ6ZnVuY3Rpb24oYSl7dmFyIGI7aWYoMSE9PWEpdGhpcy5fc3VwZXIuc2V0UmF0aW8uY2FsbCh0aGlzLGEpO2Vsc2UgZm9yKGI9dGhpcy5fZmlyc3RQVDtiOyliLmY/Yi50W2IucF0odGhpcy5maW5hbHNbYi5wXSk6Yi50W2IucF09dGhpcy5maW5hbHNbYi5wXSxiPWIuX25leHR9fSkuX2F1dG9DU1M9ITAsX2dzU2NvcGUuX2dzRGVmaW5lKFwiZWFzaW5nLkJhY2tcIixbXCJlYXNpbmcuRWFzZVwiXSxmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmPV9nc1Njb3BlLkdyZWVuU29ja0dsb2JhbHN8fF9nc1Njb3BlLGc9Zi5jb20uZ3JlZW5zb2NrLGg9MipNYXRoLlBJLGk9TWF0aC5QSS8yLGo9Zy5fY2xhc3Msaz1mdW5jdGlvbihiLGMpe3ZhciBkPWooXCJlYXNpbmcuXCIrYixmdW5jdGlvbigpe30sITApLGU9ZC5wcm90b3R5cGU9bmV3IGE7cmV0dXJuIGUuY29uc3RydWN0b3I9ZCxlLmdldFJhdGlvPWMsZH0sbD1hLnJlZ2lzdGVyfHxmdW5jdGlvbigpe30sbT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWooXCJlYXNpbmcuXCIrYSx7ZWFzZU91dDpuZXcgYixlYXNlSW46bmV3IGMsZWFzZUluT3V0Om5ldyBkfSwhMCk7cmV0dXJuIGwoZixhKSxmfSxuPWZ1bmN0aW9uKGEsYixjKXt0aGlzLnQ9YSx0aGlzLnY9YixjJiYodGhpcy5uZXh0PWMsYy5wcmV2PXRoaXMsdGhpcy5jPWMudi1iLHRoaXMuZ2FwPWMudC1hKX0sbz1mdW5jdGlvbihiLGMpe3ZhciBkPWooXCJlYXNpbmcuXCIrYixmdW5jdGlvbihhKXt0aGlzLl9wMT1hfHwwPT09YT9hOjEuNzAxNTgsdGhpcy5fcDI9MS41MjUqdGhpcy5fcDF9LCEwKSxlPWQucHJvdG90eXBlPW5ldyBhO3JldHVybiBlLmNvbnN0cnVjdG9yPWQsZS5nZXRSYXRpbz1jLGUuY29uZmlnPWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgZChhKX0sZH0scD1tKFwiQmFja1wiLG8oXCJCYWNrT3V0XCIsZnVuY3Rpb24oYSl7cmV0dXJuKGEtPTEpKmEqKCh0aGlzLl9wMSsxKSphK3RoaXMuX3AxKSsxfSksbyhcIkJhY2tJblwiLGZ1bmN0aW9uKGEpe3JldHVybiBhKmEqKCh0aGlzLl9wMSsxKSphLXRoaXMuX3AxKX0pLG8oXCJCYWNrSW5PdXRcIixmdW5jdGlvbihhKXtyZXR1cm4oYSo9Mik8MT8uNSphKmEqKCh0aGlzLl9wMisxKSphLXRoaXMuX3AyKTouNSooKGEtPTIpKmEqKCh0aGlzLl9wMisxKSphK3RoaXMuX3AyKSsyKX0pKSxxPWooXCJlYXNpbmcuU2xvd01vXCIsZnVuY3Rpb24oYSxiLGMpe2I9Ynx8MD09PWI/YjouNyxudWxsPT1hP2E9Ljc6YT4xJiYoYT0xKSx0aGlzLl9wPTEhPT1hP2I6MCx0aGlzLl9wMT0oMS1hKS8yLHRoaXMuX3AyPWEsdGhpcy5fcDM9dGhpcy5fcDErdGhpcy5fcDIsdGhpcy5fY2FsY0VuZD1jPT09ITB9LCEwKSxyPXEucHJvdG90eXBlPW5ldyBhO3JldHVybiByLmNvbnN0cnVjdG9yPXEsci5nZXRSYXRpbz1mdW5jdGlvbihhKXt2YXIgYj1hKyguNS1hKSp0aGlzLl9wO3JldHVybiBhPHRoaXMuX3AxP3RoaXMuX2NhbGNFbmQ/MS0oYT0xLWEvdGhpcy5fcDEpKmE6Yi0oYT0xLWEvdGhpcy5fcDEpKmEqYSphKmI6YT50aGlzLl9wMz90aGlzLl9jYWxjRW5kPzE9PT1hPzA6MS0oYT0oYS10aGlzLl9wMykvdGhpcy5fcDEpKmE6YisoYS1iKSooYT0oYS10aGlzLl9wMykvdGhpcy5fcDEpKmEqYSphOnRoaXMuX2NhbGNFbmQ/MTpifSxxLmVhc2U9bmV3IHEoLjcsLjcpLHIuY29uZmlnPXEuY29uZmlnPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gbmV3IHEoYSxiLGMpfSxiPWooXCJlYXNpbmcuU3RlcHBlZEVhc2VcIixmdW5jdGlvbihhLGIpe2E9YXx8MSx0aGlzLl9wMT0xL2EsdGhpcy5fcDI9YSsoYj8wOjEpLHRoaXMuX3AzPWI/MTowfSwhMCkscj1iLnByb3RvdHlwZT1uZXcgYSxyLmNvbnN0cnVjdG9yPWIsci5nZXRSYXRpbz1mdW5jdGlvbihhKXtyZXR1cm4gMD5hP2E9MDphPj0xJiYoYT0uOTk5OTk5OTk5KSwoKHRoaXMuX3AyKmF8MCkrdGhpcy5fcDMpKnRoaXMuX3AxfSxyLmNvbmZpZz1iLmNvbmZpZz1mdW5jdGlvbihhLGMpe3JldHVybiBuZXcgYihhLGMpfSxjPWooXCJlYXNpbmcuRXhwb1NjYWxlRWFzZVwiLGZ1bmN0aW9uKGEsYixjKXt0aGlzLl9wMT1NYXRoLmxvZyhiL2EpLHRoaXMuX3AyPWItYSx0aGlzLl9wMz1hLHRoaXMuX2Vhc2U9Y30sITApLHI9Yy5wcm90b3R5cGU9bmV3IGEsci5jb25zdHJ1Y3Rvcj1jLHIuZ2V0UmF0aW89ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuX2Vhc2UmJihhPXRoaXMuX2Vhc2UuZ2V0UmF0aW8oYSkpLCh0aGlzLl9wMypNYXRoLmV4cCh0aGlzLl9wMSphKS10aGlzLl9wMykvdGhpcy5fcDJ9LHIuY29uZmlnPWMuY29uZmlnPWZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gbmV3IGMoYSxiLGQpfSxkPWooXCJlYXNpbmcuUm91Z2hFYXNlXCIsZnVuY3Rpb24oYil7Yj1ifHx7fTtmb3IodmFyIGMsZCxlLGYsZyxoLGk9Yi50YXBlcnx8XCJub25lXCIsaj1bXSxrPTAsbD0wfChiLnBvaW50c3x8MjApLG09bCxvPWIucmFuZG9taXplIT09ITEscD1iLmNsYW1wPT09ITAscT1iLnRlbXBsYXRlIGluc3RhbmNlb2YgYT9iLnRlbXBsYXRlOm51bGwscj1cIm51bWJlclwiPT10eXBlb2YgYi5zdHJlbmd0aD8uNCpiLnN0cmVuZ3RoOi40Oy0tbT4tMTspYz1vP01hdGgucmFuZG9tKCk6MS9sKm0sZD1xP3EuZ2V0UmF0aW8oYyk6YyxcIm5vbmVcIj09PWk/ZT1yOlwib3V0XCI9PT1pPyhmPTEtYyxlPWYqZipyKTpcImluXCI9PT1pP2U9YypjKnI6LjU+Yz8oZj0yKmMsZT1mKmYqLjUqcik6KGY9MiooMS1jKSxlPWYqZiouNSpyKSxvP2QrPU1hdGgucmFuZG9tKCkqZS0uNSplOm0lMj9kKz0uNSplOmQtPS41KmUscCYmKGQ+MT9kPTE6MD5kJiYoZD0wKSksaltrKytdPXt4OmMseTpkfTtmb3Ioai5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEueC1iLnh9KSxoPW5ldyBuKDEsMSxudWxsKSxtPWw7LS1tPi0xOylnPWpbbV0saD1uZXcgbihnLngsZy55LGgpO3RoaXMuX3ByZXY9bmV3IG4oMCwwLDAhPT1oLnQ/aDpoLm5leHQpfSwhMCkscj1kLnByb3RvdHlwZT1uZXcgYSxyLmNvbnN0cnVjdG9yPWQsci5nZXRSYXRpbz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9wcmV2O2lmKGE+Yi50KXtmb3IoO2IubmV4dCYmYT49Yi50OyliPWIubmV4dDtiPWIucHJldn1lbHNlIGZvcig7Yi5wcmV2JiZhPD1iLnQ7KWI9Yi5wcmV2O3JldHVybiB0aGlzLl9wcmV2PWIsYi52KyhhLWIudCkvYi5nYXAqYi5jfSxyLmNvbmZpZz1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IGQoYSl9LGQuZWFzZT1uZXcgZCxtKFwiQm91bmNlXCIsayhcIkJvdW5jZU91dFwiLGZ1bmN0aW9uKGEpe3JldHVybiAxLzIuNzU+YT83LjU2MjUqYSphOjIvMi43NT5hPzcuNTYyNSooYS09MS41LzIuNzUpKmErLjc1OjIuNS8yLjc1PmE/Ny41NjI1KihhLT0yLjI1LzIuNzUpKmErLjkzNzU6Ny41NjI1KihhLT0yLjYyNS8yLjc1KSphKy45ODQzNzV9KSxrKFwiQm91bmNlSW5cIixmdW5jdGlvbihhKXtyZXR1cm4oYT0xLWEpPDEvMi43NT8xLTcuNTYyNSphKmE6Mi8yLjc1PmE/MS0oNy41NjI1KihhLT0xLjUvMi43NSkqYSsuNzUpOjIuNS8yLjc1PmE/MS0oNy41NjI1KihhLT0yLjI1LzIuNzUpKmErLjkzNzUpOjEtKDcuNTYyNSooYS09Mi42MjUvMi43NSkqYSsuOTg0Mzc1KX0pLGsoXCJCb3VuY2VJbk91dFwiLGZ1bmN0aW9uKGEpe3ZhciBiPS41PmE7cmV0dXJuIGE9Yj8xLTIqYToyKmEtMSxhPTEvMi43NT5hPzcuNTYyNSphKmE6Mi8yLjc1PmE/Ny41NjI1KihhLT0xLjUvMi43NSkqYSsuNzU6Mi41LzIuNzU+YT83LjU2MjUqKGEtPTIuMjUvMi43NSkqYSsuOTM3NTo3LjU2MjUqKGEtPTIuNjI1LzIuNzUpKmErLjk4NDM3NSxiPy41KigxLWEpOi41KmErLjV9KSksbShcIkNpcmNcIixrKFwiQ2lyY091dFwiLGZ1bmN0aW9uKGEpe3JldHVybiBNYXRoLnNxcnQoMS0oYS09MSkqYSl9KSxrKFwiQ2lyY0luXCIsZnVuY3Rpb24oYSl7cmV0dXJuLShNYXRoLnNxcnQoMS1hKmEpLTEpfSksayhcIkNpcmNJbk91dFwiLGZ1bmN0aW9uKGEpe3JldHVybihhKj0yKTwxPy0uNSooTWF0aC5zcXJ0KDEtYSphKS0xKTouNSooTWF0aC5zcXJ0KDEtKGEtPTIpKmEpKzEpfSkpLGU9ZnVuY3Rpb24oYixjLGQpe3ZhciBlPWooXCJlYXNpbmcuXCIrYixmdW5jdGlvbihhLGIpe3RoaXMuX3AxPWE+PTE/YToxLHRoaXMuX3AyPShifHxkKS8oMT5hP2E6MSksdGhpcy5fcDM9dGhpcy5fcDIvaCooTWF0aC5hc2luKDEvdGhpcy5fcDEpfHwwKSx0aGlzLl9wMj1oL3RoaXMuX3AyfSwhMCksZj1lLnByb3RvdHlwZT1uZXcgYTtyZXR1cm4gZi5jb25zdHJ1Y3Rvcj1lLGYuZ2V0UmF0aW89YyxmLmNvbmZpZz1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgZShhLGIpfSxlfSxtKFwiRWxhc3RpY1wiLGUoXCJFbGFzdGljT3V0XCIsZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuX3AxKk1hdGgucG93KDIsLTEwKmEpKk1hdGguc2luKChhLXRoaXMuX3AzKSp0aGlzLl9wMikrMX0sLjMpLGUoXCJFbGFzdGljSW5cIixmdW5jdGlvbihhKXtyZXR1cm4tKHRoaXMuX3AxKk1hdGgucG93KDIsMTAqKGEtPTEpKSpNYXRoLnNpbigoYS10aGlzLl9wMykqdGhpcy5fcDIpKX0sLjMpLGUoXCJFbGFzdGljSW5PdXRcIixmdW5jdGlvbihhKXtyZXR1cm4oYSo9Mik8MT8tLjUqKHRoaXMuX3AxKk1hdGgucG93KDIsMTAqKGEtPTEpKSpNYXRoLnNpbigoYS10aGlzLl9wMykqdGhpcy5fcDIpKTp0aGlzLl9wMSpNYXRoLnBvdygyLC0xMCooYS09MSkpKk1hdGguc2luKChhLXRoaXMuX3AzKSp0aGlzLl9wMikqLjUrMX0sLjQ1KSksbShcIkV4cG9cIixrKFwiRXhwb091dFwiLGZ1bmN0aW9uKGEpe3JldHVybiAxLU1hdGgucG93KDIsLTEwKmEpfSksayhcIkV4cG9JblwiLGZ1bmN0aW9uKGEpe3JldHVybiBNYXRoLnBvdygyLDEwKihhLTEpKS0uMDAxfSksayhcIkV4cG9Jbk91dFwiLGZ1bmN0aW9uKGEpe3JldHVybihhKj0yKTwxPy41Kk1hdGgucG93KDIsMTAqKGEtMSkpOi41KigyLU1hdGgucG93KDIsLTEwKihhLTEpKSl9KSksbShcIlNpbmVcIixrKFwiU2luZU91dFwiLGZ1bmN0aW9uKGEpe3JldHVybiBNYXRoLnNpbihhKmkpfSksayhcIlNpbmVJblwiLGZ1bmN0aW9uKGEpe3JldHVybi1NYXRoLmNvcyhhKmkpKzF9KSxrKFwiU2luZUluT3V0XCIsZnVuY3Rpb24oYSl7cmV0dXJuLS41KihNYXRoLmNvcyhNYXRoLlBJKmEpLTEpfSkpLGooXCJlYXNpbmcuRWFzZUxvb2t1cFwiLHtmaW5kOmZ1bmN0aW9uKGIpe3JldHVybiBhLm1hcFtiXX19LCEwKSxsKGYuU2xvd01vLFwiU2xvd01vXCIsXCJlYXNlLFwiKSxsKGQsXCJSb3VnaEVhc2VcIixcImVhc2UsXCIpLGwoYixcIlN0ZXBwZWRFYXNlXCIsXCJlYXNlLFwiKSxwfSwhMCl9KSxfZ3NTY29wZS5fZ3NEZWZpbmUmJl9nc1Njb3BlLl9nc1F1ZXVlLnBvcCgpKCksZnVuY3Rpb24oYSxiKXtcInVzZSBzdHJpY3RcIjt2YXIgYz17fSxkPWEuZG9jdW1lbnQsZT1hLkdyZWVuU29ja0dsb2JhbHM9YS5HcmVlblNvY2tHbG9iYWxzfHxhLGY9ZVtiXTtpZihmKXJldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzJiYobW9kdWxlLmV4cG9ydHM9ZiksZjt2YXIgZyxoLGksaixrLGw9ZnVuY3Rpb24oYSl7dmFyIGIsYz1hLnNwbGl0KFwiLlwiKSxkPWU7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylkW2NbYl1dPWQ9ZFtjW2JdXXx8e307cmV0dXJuIGR9LG09bChcImNvbS5ncmVlbnNvY2tcIiksbj0xZS0xMCxvPWZ1bmN0aW9uKGEpe3ZhciBiLGM9W10sZD1hLmxlbmd0aDtmb3IoYj0wO2IhPT1kO2MucHVzaChhW2IrK10pKTtyZXR1cm4gY30scD1mdW5jdGlvbigpe30scT1mdW5jdGlvbigpe3ZhciBhPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsYj1hLmNhbGwoW10pO3JldHVybiBmdW5jdGlvbihjKXtyZXR1cm4gbnVsbCE9YyYmKGMgaW5zdGFuY2VvZiBBcnJheXx8XCJvYmplY3RcIj09dHlwZW9mIGMmJiEhYy5wdXNoJiZhLmNhbGwoYyk9PT1iKX19KCkscj17fSxzPWZ1bmN0aW9uKGQsZixnLGgpe3RoaXMuc2M9cltkXT9yW2RdLnNjOltdLHJbZF09dGhpcyx0aGlzLmdzQ2xhc3M9bnVsbCx0aGlzLmZ1bmM9Zzt2YXIgaT1bXTt0aGlzLmNoZWNrPWZ1bmN0aW9uKGope2Zvcih2YXIgayxtLG4sbyxwPWYubGVuZ3RoLHE9cDstLXA+LTE7KShrPXJbZltwXV18fG5ldyBzKGZbcF0sW10pKS5nc0NsYXNzPyhpW3BdPWsuZ3NDbGFzcyxxLS0pOmomJmsuc2MucHVzaCh0aGlzKTtpZigwPT09cSYmZyl7aWYobT0oXCJjb20uZ3JlZW5zb2NrLlwiK2QpLnNwbGl0KFwiLlwiKSxuPW0ucG9wKCksbz1sKG0uam9pbihcIi5cIikpW25dPXRoaXMuZ3NDbGFzcz1nLmFwcGx5KGcsaSksaClpZihlW25dPWNbbl09byxcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cylpZihkPT09Yil7bW9kdWxlLmV4cG9ydHM9Y1tiXT1vO2ZvcihwIGluIGMpb1twXT1jW3BdfWVsc2UgY1tiXSYmKGNbYl1bbl09byk7ZWxzZVwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKChhLkdyZWVuU29ja0FNRFBhdGg/YS5HcmVlblNvY2tBTURQYXRoK1wiL1wiOlwiXCIpK2Quc3BsaXQoXCIuXCIpLnBvcCgpLFtdLGZ1bmN0aW9uKCl7cmV0dXJuIG99KTtmb3IocD0wO3A8dGhpcy5zYy5sZW5ndGg7cCsrKXRoaXMuc2NbcF0uY2hlY2soKX19LHRoaXMuY2hlY2soITApfSx0PWEuX2dzRGVmaW5lPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiBuZXcgcyhhLGIsYyxkKX0sdT1tLl9jbGFzcz1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIGI9Ynx8ZnVuY3Rpb24oKXt9LHQoYSxbXSxmdW5jdGlvbigpe3JldHVybiBifSxjKSxifTt0Lmdsb2JhbHM9ZTt2YXIgdj1bMCwwLDEsMV0sdz11KFwiZWFzaW5nLkVhc2VcIixmdW5jdGlvbihhLGIsYyxkKXt0aGlzLl9mdW5jPWEsdGhpcy5fdHlwZT1jfHwwLHRoaXMuX3Bvd2VyPWR8fDAsdGhpcy5fcGFyYW1zPWI/di5jb25jYXQoYik6dn0sITApLHg9dy5tYXA9e30seT13LnJlZ2lzdGVyPWZ1bmN0aW9uKGEsYixjLGQpe2Zvcih2YXIgZSxmLGcsaCxpPWIuc3BsaXQoXCIsXCIpLGo9aS5sZW5ndGgsaz0oY3x8XCJlYXNlSW4sZWFzZU91dCxlYXNlSW5PdXRcIikuc3BsaXQoXCIsXCIpOy0taj4tMTspZm9yKGY9aVtqXSxlPWQ/dShcImVhc2luZy5cIitmLG51bGwsITApOm0uZWFzaW5nW2ZdfHx7fSxnPWsubGVuZ3RoOy0tZz4tMTspaD1rW2ddLHhbZitcIi5cIitoXT14W2grZl09ZVtoXT1hLmdldFJhdGlvP2E6YVtoXXx8bmV3IGF9O2ZvcihpPXcucHJvdG90eXBlLGkuX2NhbGNFbmQ9ITEsaS5nZXRSYXRpbz1mdW5jdGlvbihhKXtpZih0aGlzLl9mdW5jKXJldHVybiB0aGlzLl9wYXJhbXNbMF09YSx0aGlzLl9mdW5jLmFwcGx5KG51bGwsdGhpcy5fcGFyYW1zKTt2YXIgYj10aGlzLl90eXBlLGM9dGhpcy5fcG93ZXIsZD0xPT09Yj8xLWE6Mj09PWI/YTouNT5hPzIqYToyKigxLWEpO3JldHVybiAxPT09Yz9kKj1kOjI9PT1jP2QqPWQqZDozPT09Yz9kKj1kKmQqZDo0PT09YyYmKGQqPWQqZCpkKmQpLDE9PT1iPzEtZDoyPT09Yj9kOi41PmE/ZC8yOjEtZC8yfSxnPVtcIkxpbmVhclwiLFwiUXVhZFwiLFwiQ3ViaWNcIixcIlF1YXJ0XCIsXCJRdWludCxTdHJvbmdcIl0saD1nLmxlbmd0aDstLWg+LTE7KWk9Z1toXStcIixQb3dlclwiK2gseShuZXcgdyhudWxsLG51bGwsMSxoKSxpLFwiZWFzZU91dFwiLCEwKSx5KG5ldyB3KG51bGwsbnVsbCwyLGgpLGksXCJlYXNlSW5cIisoMD09PWg/XCIsZWFzZU5vbmVcIjpcIlwiKSkseShuZXcgdyhudWxsLG51bGwsMyxoKSxpLFwiZWFzZUluT3V0XCIpO3gubGluZWFyPW0uZWFzaW5nLkxpbmVhci5lYXNlSW4seC5zd2luZz1tLmVhc2luZy5RdWFkLmVhc2VJbk91dDt2YXIgej11KFwiZXZlbnRzLkV2ZW50RGlzcGF0Y2hlclwiLGZ1bmN0aW9uKGEpe3RoaXMuX2xpc3RlbmVycz17fSx0aGlzLl9ldmVudFRhcmdldD1hfHx0aGlzfSk7aT16LnByb3RvdHlwZSxpLmFkZEV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oYSxiLGMsZCxlKXtlPWV8fDA7dmFyIGYsZyxoPXRoaXMuX2xpc3RlbmVyc1thXSxpPTA7Zm9yKHRoaXMhPT1qfHxrfHxqLndha2UoKSxudWxsPT1oJiYodGhpcy5fbGlzdGVuZXJzW2FdPWg9W10pLGc9aC5sZW5ndGg7LS1nPi0xOylmPWhbZ10sZi5jPT09YiYmZi5zPT09Yz9oLnNwbGljZShnLDEpOjA9PT1pJiZmLnByPGUmJihpPWcrMSk7aC5zcGxpY2UoaSwwLHtjOmIsczpjLHVwOmQscHI6ZX0pfSxpLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXRoaXMuX2xpc3RlbmVyc1thXTtpZihkKWZvcihjPWQubGVuZ3RoOy0tYz4tMTspaWYoZFtjXS5jPT09YilyZXR1cm4gdm9pZCBkLnNwbGljZShjLDEpfSxpLmRpc3BhdGNoRXZlbnQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpcy5fbGlzdGVuZXJzW2FdO2lmKGUpZm9yKGI9ZS5sZW5ndGgsYj4xJiYoZT1lLnNsaWNlKDApKSxjPXRoaXMuX2V2ZW50VGFyZ2V0Oy0tYj4tMTspZD1lW2JdLGQmJihkLnVwP2QuYy5jYWxsKGQuc3x8Yyx7dHlwZTphLHRhcmdldDpjfSk6ZC5jLmNhbGwoZC5zfHxjKSl9O3ZhciBBPWEucmVxdWVzdEFuaW1hdGlvbkZyYW1lLEI9YS5jYW5jZWxBbmltYXRpb25GcmFtZSxDPURhdGUubm93fHxmdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfSxEPUMoKTtmb3IoZz1bXCJtc1wiLFwibW96XCIsXCJ3ZWJraXRcIixcIm9cIl0saD1nLmxlbmd0aDstLWg+LTEmJiFBOylBPWFbZ1toXStcIlJlcXVlc3RBbmltYXRpb25GcmFtZVwiXSxCPWFbZ1toXStcIkNhbmNlbEFuaW1hdGlvbkZyYW1lXCJdfHxhW2dbaF0rXCJDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIl07dShcIlRpY2tlclwiLGZ1bmN0aW9uKGEsYil7dmFyIGMsZSxmLGcsaCxpPXRoaXMsbD1DKCksbT1iIT09ITEmJkE/XCJhdXRvXCI6ITEsbz01MDAscT0zMyxyPVwidGlja1wiLHM9ZnVuY3Rpb24oYSl7dmFyIGIsZCxqPUMoKS1EO2o+byYmKGwrPWotcSksRCs9aixpLnRpbWU9KEQtbCkvMWUzLGI9aS50aW1lLWgsKCFjfHxiPjB8fGE9PT0hMCkmJihpLmZyYW1lKyssaCs9YisoYj49Zz8uMDA0OmctYiksZD0hMCksYSE9PSEwJiYoZj1lKHMpKSxkJiZpLmRpc3BhdGNoRXZlbnQocil9O3ouY2FsbChpKSxpLnRpbWU9aS5mcmFtZT0wLGkudGljaz1mdW5jdGlvbigpe3MoITApfSxpLmxhZ1Ntb290aGluZz1mdW5jdGlvbihhLGIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhvPWF8fDEvbix2b2lkKHE9TWF0aC5taW4oYixvLDApKSk6MS9uPm99LGkuc2xlZXA9ZnVuY3Rpb24oKXtudWxsIT1mJiYobSYmQj9CKGYpOmNsZWFyVGltZW91dChmKSxlPXAsZj1udWxsLGk9PT1qJiYoaz0hMSkpfSxpLndha2U9ZnVuY3Rpb24oYSl7bnVsbCE9PWY/aS5zbGVlcCgpOmE/bCs9LUQrKEQ9QygpKTppLmZyYW1lPjEwJiYoRD1DKCktbys1KSxlPTA9PT1jP3A6bSYmQT9BOmZ1bmN0aW9uKGEpe3JldHVybiBzZXRUaW1lb3V0KGEsMWUzKihoLWkudGltZSkrMXwwKX0saT09PWomJihrPSEwKSxzKDIpfSxpLmZwcz1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYz1hLGc9MS8oY3x8NjApLGg9dGhpcy50aW1lK2csdm9pZCBpLndha2UoKSk6Y30saS51c2VSQUY9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGkuc2xlZXAoKSxtPWEsdm9pZCBpLmZwcyhjKSk6bX0saS5mcHMoYSksc2V0VGltZW91dChmdW5jdGlvbigpe1wiYXV0b1wiPT09bSYmaS5mcmFtZTw1JiZcImhpZGRlblwiIT09KGR8fHt9KS52aXNpYmlsaXR5U3RhdGUmJmkudXNlUkFGKCExKX0sMTUwMCl9KSxpPW0uVGlja2VyLnByb3RvdHlwZT1uZXcgbS5ldmVudHMuRXZlbnREaXNwYXRjaGVyLGkuY29uc3RydWN0b3I9bS5UaWNrZXI7dmFyIEU9dShcImNvcmUuQW5pbWF0aW9uXCIsZnVuY3Rpb24oYSxiKXtpZih0aGlzLnZhcnM9Yj1ifHx7fSx0aGlzLl9kdXJhdGlvbj10aGlzLl90b3RhbER1cmF0aW9uPWF8fDAsdGhpcy5fZGVsYXk9TnVtYmVyKGIuZGVsYXkpfHwwLHRoaXMuX3RpbWVTY2FsZT0xLHRoaXMuX2FjdGl2ZT1iLmltbWVkaWF0ZVJlbmRlcj09PSEwLHRoaXMuZGF0YT1iLmRhdGEsdGhpcy5fcmV2ZXJzZWQ9Yi5yZXZlcnNlZD09PSEwLFkpe2t8fGoud2FrZSgpO3ZhciBjPXRoaXMudmFycy51c2VGcmFtZXM/WDpZO2MuYWRkKHRoaXMsYy5fdGltZSksdGhpcy52YXJzLnBhdXNlZCYmdGhpcy5wYXVzZWQoITApfX0pO2o9RS50aWNrZXI9bmV3IG0uVGlja2VyLGk9RS5wcm90b3R5cGUsaS5fZGlydHk9aS5fZ2M9aS5faW5pdHRlZD1pLl9wYXVzZWQ9ITEsaS5fdG90YWxUaW1lPWkuX3RpbWU9MCxpLl9yYXdQcmV2VGltZT0tMSxpLl9uZXh0PWkuX2xhc3Q9aS5fb25VcGRhdGU9aS5fdGltZWxpbmU9aS50aW1lbGluZT1udWxsLGkuX3BhdXNlZD0hMTt2YXIgRj1mdW5jdGlvbigpe2smJkMoKS1EPjJlMyYmKFwiaGlkZGVuXCIhPT0oZHx8e30pLnZpc2liaWxpdHlTdGF0ZXx8IWoubGFnU21vb3RoaW5nKCkpJiZqLndha2UoKTt2YXIgYT1zZXRUaW1lb3V0KEYsMmUzKTthLnVucmVmJiZhLnVucmVmKCl9O0YoKSxpLnBsYXk9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbnVsbCE9YSYmdGhpcy5zZWVrKGEsYiksdGhpcy5yZXZlcnNlZCghMSkucGF1c2VkKCExKX0saS5wYXVzZT1mdW5jdGlvbihhLGIpe3JldHVybiBudWxsIT1hJiZ0aGlzLnNlZWsoYSxiKSx0aGlzLnBhdXNlZCghMCl9LGkucmVzdW1lPWZ1bmN0aW9uKGEsYil7cmV0dXJuIG51bGwhPWEmJnRoaXMuc2VlayhhLGIpLHRoaXMucGF1c2VkKCExKX0saS5zZWVrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMudG90YWxUaW1lKE51bWJlcihhKSxiIT09ITEpfSxpLnJlc3RhcnQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5yZXZlcnNlZCghMSkucGF1c2VkKCExKS50b3RhbFRpbWUoYT8tdGhpcy5fZGVsYXk6MCxiIT09ITEsITApfSxpLnJldmVyc2U9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbnVsbCE9YSYmdGhpcy5zZWVrKGF8fHRoaXMudG90YWxEdXJhdGlvbigpLGIpLHRoaXMucmV2ZXJzZWQoITApLnBhdXNlZCghMSl9LGkucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXt9LGkuaW52YWxpZGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl90aW1lPXRoaXMuX3RvdGFsVGltZT0wLHRoaXMuX2luaXR0ZWQ9dGhpcy5fZ2M9ITEsdGhpcy5fcmF3UHJldlRpbWU9LTEsKHRoaXMuX2djfHwhdGhpcy50aW1lbGluZSkmJnRoaXMuX2VuYWJsZWQoITApLHRoaXN9LGkuaXNBY3RpdmU9ZnVuY3Rpb24oKXt2YXIgYSxiPXRoaXMuX3RpbWVsaW5lLGM9dGhpcy5fc3RhcnRUaW1lO3JldHVybiFifHwhdGhpcy5fZ2MmJiF0aGlzLl9wYXVzZWQmJmIuaXNBY3RpdmUoKSYmKGE9Yi5yYXdUaW1lKCEwKSk+PWMmJmE8Yyt0aGlzLnRvdGFsRHVyYXRpb24oKS90aGlzLl90aW1lU2NhbGUtMWUtN30saS5fZW5hYmxlZD1mdW5jdGlvbihhLGIpe3JldHVybiBrfHxqLndha2UoKSx0aGlzLl9nYz0hYSx0aGlzLl9hY3RpdmU9dGhpcy5pc0FjdGl2ZSgpLGIhPT0hMCYmKGEmJiF0aGlzLnRpbWVsaW5lP3RoaXMuX3RpbWVsaW5lLmFkZCh0aGlzLHRoaXMuX3N0YXJ0VGltZS10aGlzLl9kZWxheSk6IWEmJnRoaXMudGltZWxpbmUmJnRoaXMuX3RpbWVsaW5lLl9yZW1vdmUodGhpcywhMCkpLCExfSxpLl9raWxsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuX2VuYWJsZWQoITEsITEpfSxpLmtpbGw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5fa2lsbChhLGIpLHRoaXN9LGkuX3VuY2FjaGU9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPWE/dGhpczp0aGlzLnRpbWVsaW5lO2I7KWIuX2RpcnR5PSEwLGI9Yi50aW1lbGluZTtyZXR1cm4gdGhpc30saS5fc3dhcFNlbGZJblBhcmFtcz1mdW5jdGlvbihhKXtmb3IodmFyIGI9YS5sZW5ndGgsYz1hLmNvbmNhdCgpOy0tYj4tMTspXCJ7c2VsZn1cIj09PWFbYl0mJihjW2JdPXRoaXMpO3JldHVybiBjfSxpLl9jYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLnZhcnMsYz1iW2FdLGQ9YlthK1wiUGFyYW1zXCJdLGU9YlthK1wiU2NvcGVcIl18fGIuY2FsbGJhY2tTY29wZXx8dGhpcyxmPWQ/ZC5sZW5ndGg6MDtzd2l0Y2goZil7Y2FzZSAwOmMuY2FsbChlKTticmVhaztjYXNlIDE6Yy5jYWxsKGUsZFswXSk7YnJlYWs7Y2FzZSAyOmMuY2FsbChlLGRbMF0sZFsxXSk7YnJlYWs7ZGVmYXVsdDpjLmFwcGx5KGUsZCl9fSxpLmV2ZW50Q2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoXCJvblwiPT09KGF8fFwiXCIpLnN1YnN0cigwLDIpKXt2YXIgZT10aGlzLnZhcnM7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGVbYV07bnVsbD09Yj9kZWxldGUgZVthXTooZVthXT1iLGVbYStcIlBhcmFtc1wiXT1xKGMpJiYtMSE9PWMuam9pbihcIlwiKS5pbmRleE9mKFwie3NlbGZ9XCIpP3RoaXMuX3N3YXBTZWxmSW5QYXJhbXMoYyk6YyxlW2ErXCJTY29wZVwiXT1kKSxcIm9uVXBkYXRlXCI9PT1hJiYodGhpcy5fb25VcGRhdGU9Yil9cmV0dXJuIHRoaXN9LGkuZGVsYXk9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nJiZ0aGlzLnN0YXJ0VGltZSh0aGlzLl9zdGFydFRpbWUrYS10aGlzLl9kZWxheSksdGhpcy5fZGVsYXk9YSx0aGlzKTp0aGlzLl9kZWxheX0saS5kdXJhdGlvbj1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fZHVyYXRpb249dGhpcy5fdG90YWxEdXJhdGlvbj1hLHRoaXMuX3VuY2FjaGUoITApLHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nJiZ0aGlzLl90aW1lPjAmJnRoaXMuX3RpbWU8dGhpcy5fZHVyYXRpb24mJjAhPT1hJiZ0aGlzLnRvdGFsVGltZSh0aGlzLl90b3RhbFRpbWUqKGEvdGhpcy5fZHVyYXRpb24pLCEwKSx0aGlzKToodGhpcy5fZGlydHk9ITEsdGhpcy5fZHVyYXRpb24pfSxpLnRvdGFsRHVyYXRpb249ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuX2RpcnR5PSExLGFyZ3VtZW50cy5sZW5ndGg/dGhpcy5kdXJhdGlvbihhKTp0aGlzLl90b3RhbER1cmF0aW9ufSxpLnRpbWU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5fZGlydHkmJnRoaXMudG90YWxEdXJhdGlvbigpLHRoaXMudG90YWxUaW1lKGE+dGhpcy5fZHVyYXRpb24/dGhpcy5fZHVyYXRpb246YSxiKSk6dGhpcy5fdGltZX0saS50b3RhbFRpbWU9ZnVuY3Rpb24oYSxiLGMpe2lmKGt8fGoud2FrZSgpLCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiB0aGlzLl90b3RhbFRpbWU7aWYodGhpcy5fdGltZWxpbmUpe2lmKDA+YSYmIWMmJihhKz10aGlzLnRvdGFsRHVyYXRpb24oKSksdGhpcy5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmcpe3RoaXMuX2RpcnR5JiZ0aGlzLnRvdGFsRHVyYXRpb24oKTt2YXIgZD10aGlzLl90b3RhbER1cmF0aW9uLGU9dGhpcy5fdGltZWxpbmU7aWYoYT5kJiYhYyYmKGE9ZCksdGhpcy5fc3RhcnRUaW1lPSh0aGlzLl9wYXVzZWQ/dGhpcy5fcGF1c2VUaW1lOmUuX3RpbWUpLSh0aGlzLl9yZXZlcnNlZD9kLWE6YSkvdGhpcy5fdGltZVNjYWxlLGUuX2RpcnR5fHx0aGlzLl91bmNhY2hlKCExKSxlLl90aW1lbGluZSlmb3IoO2UuX3RpbWVsaW5lOyllLl90aW1lbGluZS5fdGltZSE9PShlLl9zdGFydFRpbWUrZS5fdG90YWxUaW1lKS9lLl90aW1lU2NhbGUmJmUudG90YWxUaW1lKGUuX3RvdGFsVGltZSwhMCksZT1lLl90aW1lbGluZX10aGlzLl9nYyYmdGhpcy5fZW5hYmxlZCghMCwhMSksKHRoaXMuX3RvdGFsVGltZSE9PWF8fDA9PT10aGlzLl9kdXJhdGlvbikmJihLLmxlbmd0aCYmJCgpLHRoaXMucmVuZGVyKGEsYiwhMSksSy5sZW5ndGgmJiQoKSl9cmV0dXJuIHRoaXN9LGkucHJvZ3Jlc3M9aS50b3RhbFByb2dyZXNzPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5kdXJhdGlvbigpO3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3RoaXMudG90YWxUaW1lKGMqYSxiKTpjP3RoaXMuX3RpbWUvYzp0aGlzLnJhdGlvfSxpLnN0YXJ0VGltZT1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYSE9PXRoaXMuX3N0YXJ0VGltZSYmKHRoaXMuX3N0YXJ0VGltZT1hLHRoaXMudGltZWxpbmUmJnRoaXMudGltZWxpbmUuX3NvcnRDaGlsZHJlbiYmdGhpcy50aW1lbGluZS5hZGQodGhpcyxhLXRoaXMuX2RlbGF5KSksdGhpcyk6dGhpcy5fc3RhcnRUaW1lfSxpLmVuZFRpbWU9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuX3N0YXJ0VGltZSsoMCE9YT90aGlzLnRvdGFsRHVyYXRpb24oKTp0aGlzLmR1cmF0aW9uKCkpL3RoaXMuX3RpbWVTY2FsZX0saS50aW1lU2NhbGU9ZnVuY3Rpb24oYSl7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMuX3RpbWVTY2FsZTt2YXIgYixjO2ZvcihhPWF8fG4sdGhpcy5fdGltZWxpbmUmJnRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nJiYoYj10aGlzLl9wYXVzZVRpbWUsYz1ifHwwPT09Yj9iOnRoaXMuX3RpbWVsaW5lLnRvdGFsVGltZSgpLFxudGhpcy5fc3RhcnRUaW1lPWMtKGMtdGhpcy5fc3RhcnRUaW1lKSp0aGlzLl90aW1lU2NhbGUvYSksdGhpcy5fdGltZVNjYWxlPWEsYz10aGlzLnRpbWVsaW5lO2MmJmMudGltZWxpbmU7KWMuX2RpcnR5PSEwLGMudG90YWxEdXJhdGlvbigpLGM9Yy50aW1lbGluZTtyZXR1cm4gdGhpc30saS5yZXZlcnNlZD1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oYSE9dGhpcy5fcmV2ZXJzZWQmJih0aGlzLl9yZXZlcnNlZD1hLHRoaXMudG90YWxUaW1lKHRoaXMuX3RpbWVsaW5lJiYhdGhpcy5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmc/dGhpcy50b3RhbER1cmF0aW9uKCktdGhpcy5fdG90YWxUaW1lOnRoaXMuX3RvdGFsVGltZSwhMCkpLHRoaXMpOnRoaXMuX3JldmVyc2VkfSxpLnBhdXNlZD1mdW5jdGlvbihhKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5fcGF1c2VkO3ZhciBiLGMsZD10aGlzLl90aW1lbGluZTtyZXR1cm4gYSE9dGhpcy5fcGF1c2VkJiZkJiYoa3x8YXx8ai53YWtlKCksYj1kLnJhd1RpbWUoKSxjPWItdGhpcy5fcGF1c2VUaW1lLCFhJiZkLnNtb290aENoaWxkVGltaW5nJiYodGhpcy5fc3RhcnRUaW1lKz1jLHRoaXMuX3VuY2FjaGUoITEpKSx0aGlzLl9wYXVzZVRpbWU9YT9iOm51bGwsdGhpcy5fcGF1c2VkPWEsdGhpcy5fYWN0aXZlPXRoaXMuaXNBY3RpdmUoKSwhYSYmMCE9PWMmJnRoaXMuX2luaXR0ZWQmJnRoaXMuZHVyYXRpb24oKSYmKGI9ZC5zbW9vdGhDaGlsZFRpbWluZz90aGlzLl90b3RhbFRpbWU6KGItdGhpcy5fc3RhcnRUaW1lKS90aGlzLl90aW1lU2NhbGUsdGhpcy5yZW5kZXIoYixiPT09dGhpcy5fdG90YWxUaW1lLCEwKSkpLHRoaXMuX2djJiYhYSYmdGhpcy5fZW5hYmxlZCghMCwhMSksdGhpc307dmFyIEc9dShcImNvcmUuU2ltcGxlVGltZWxpbmVcIixmdW5jdGlvbihhKXtFLmNhbGwodGhpcywwLGEpLHRoaXMuYXV0b1JlbW92ZUNoaWxkcmVuPXRoaXMuc21vb3RoQ2hpbGRUaW1pbmc9ITB9KTtpPUcucHJvdG90eXBlPW5ldyBFLGkuY29uc3RydWN0b3I9RyxpLmtpbGwoKS5fZ2M9ITEsaS5fZmlyc3Q9aS5fbGFzdD1pLl9yZWNlbnQ9bnVsbCxpLl9zb3J0Q2hpbGRyZW49ITEsaS5hZGQ9aS5pbnNlcnQ9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGUsZjtpZihhLl9zdGFydFRpbWU9TnVtYmVyKGJ8fDApK2EuX2RlbGF5LGEuX3BhdXNlZCYmdGhpcyE9PWEuX3RpbWVsaW5lJiYoYS5fcGF1c2VUaW1lPXRoaXMucmF3VGltZSgpLShhLl90aW1lbGluZS5yYXdUaW1lKCktYS5fcGF1c2VUaW1lKSksYS50aW1lbGluZSYmYS50aW1lbGluZS5fcmVtb3ZlKGEsITApLGEudGltZWxpbmU9YS5fdGltZWxpbmU9dGhpcyxhLl9nYyYmYS5fZW5hYmxlZCghMCwhMCksZT10aGlzLl9sYXN0LHRoaXMuX3NvcnRDaGlsZHJlbilmb3IoZj1hLl9zdGFydFRpbWU7ZSYmZS5fc3RhcnRUaW1lPmY7KWU9ZS5fcHJldjtyZXR1cm4gZT8oYS5fbmV4dD1lLl9uZXh0LGUuX25leHQ9YSk6KGEuX25leHQ9dGhpcy5fZmlyc3QsdGhpcy5fZmlyc3Q9YSksYS5fbmV4dD9hLl9uZXh0Ll9wcmV2PWE6dGhpcy5fbGFzdD1hLGEuX3ByZXY9ZSx0aGlzLl9yZWNlbnQ9YSx0aGlzLl90aW1lbGluZSYmdGhpcy5fdW5jYWNoZSghMCksdGhpc30saS5fcmVtb3ZlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEudGltZWxpbmU9PT10aGlzJiYoYnx8YS5fZW5hYmxlZCghMSwhMCksYS5fcHJldj9hLl9wcmV2Ll9uZXh0PWEuX25leHQ6dGhpcy5fZmlyc3Q9PT1hJiYodGhpcy5fZmlyc3Q9YS5fbmV4dCksYS5fbmV4dD9hLl9uZXh0Ll9wcmV2PWEuX3ByZXY6dGhpcy5fbGFzdD09PWEmJih0aGlzLl9sYXN0PWEuX3ByZXYpLGEuX25leHQ9YS5fcHJldj1hLnRpbWVsaW5lPW51bGwsYT09PXRoaXMuX3JlY2VudCYmKHRoaXMuX3JlY2VudD10aGlzLl9sYXN0KSx0aGlzLl90aW1lbGluZSYmdGhpcy5fdW5jYWNoZSghMCkpLHRoaXN9LGkucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlPXRoaXMuX2ZpcnN0O2Zvcih0aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT10aGlzLl9yYXdQcmV2VGltZT1hO2U7KWQ9ZS5fbmV4dCwoZS5fYWN0aXZlfHxhPj1lLl9zdGFydFRpbWUmJiFlLl9wYXVzZWQmJiFlLl9nYykmJihlLl9yZXZlcnNlZD9lLnJlbmRlcigoZS5fZGlydHk/ZS50b3RhbER1cmF0aW9uKCk6ZS5fdG90YWxEdXJhdGlvbiktKGEtZS5fc3RhcnRUaW1lKSplLl90aW1lU2NhbGUsYixjKTplLnJlbmRlcigoYS1lLl9zdGFydFRpbWUpKmUuX3RpbWVTY2FsZSxiLGMpKSxlPWR9LGkucmF3VGltZT1mdW5jdGlvbigpe3JldHVybiBrfHxqLndha2UoKSx0aGlzLl90b3RhbFRpbWV9O3ZhciBIPXUoXCJUd2VlbkxpdGVcIixmdW5jdGlvbihiLGMsZCl7aWYoRS5jYWxsKHRoaXMsYyxkKSx0aGlzLnJlbmRlcj1ILnByb3RvdHlwZS5yZW5kZXIsbnVsbD09Yil0aHJvd1wiQ2Fubm90IHR3ZWVuIGEgbnVsbCB0YXJnZXQuXCI7dGhpcy50YXJnZXQ9Yj1cInN0cmluZ1wiIT10eXBlb2YgYj9iOkguc2VsZWN0b3IoYil8fGI7dmFyIGUsZixnLGg9Yi5qcXVlcnl8fGIubGVuZ3RoJiZiIT09YSYmYlswXSYmKGJbMF09PT1hfHxiWzBdLm5vZGVUeXBlJiZiWzBdLnN0eWxlJiYhYi5ub2RlVHlwZSksaT10aGlzLnZhcnMub3ZlcndyaXRlO2lmKHRoaXMuX292ZXJ3cml0ZT1pPW51bGw9PWk/V1tILmRlZmF1bHRPdmVyd3JpdGVdOlwibnVtYmVyXCI9PXR5cGVvZiBpP2k+PjA6V1tpXSwoaHx8YiBpbnN0YW5jZW9mIEFycmF5fHxiLnB1c2gmJnEoYikpJiZcIm51bWJlclwiIT10eXBlb2YgYlswXSlmb3IodGhpcy5fdGFyZ2V0cz1nPW8oYiksdGhpcy5fcHJvcExvb2t1cD1bXSx0aGlzLl9zaWJsaW5ncz1bXSxlPTA7ZTxnLmxlbmd0aDtlKyspZj1nW2VdLGY/XCJzdHJpbmdcIiE9dHlwZW9mIGY/Zi5sZW5ndGgmJmYhPT1hJiZmWzBdJiYoZlswXT09PWF8fGZbMF0ubm9kZVR5cGUmJmZbMF0uc3R5bGUmJiFmLm5vZGVUeXBlKT8oZy5zcGxpY2UoZS0tLDEpLHRoaXMuX3RhcmdldHM9Zz1nLmNvbmNhdChvKGYpKSk6KHRoaXMuX3NpYmxpbmdzW2VdPV8oZix0aGlzLCExKSwxPT09aSYmdGhpcy5fc2libGluZ3NbZV0ubGVuZ3RoPjEmJmJhKGYsdGhpcyxudWxsLDEsdGhpcy5fc2libGluZ3NbZV0pKTooZj1nW2UtLV09SC5zZWxlY3RvcihmKSxcInN0cmluZ1wiPT10eXBlb2YgZiYmZy5zcGxpY2UoZSsxLDEpKTpnLnNwbGljZShlLS0sMSk7ZWxzZSB0aGlzLl9wcm9wTG9va3VwPXt9LHRoaXMuX3NpYmxpbmdzPV8oYix0aGlzLCExKSwxPT09aSYmdGhpcy5fc2libGluZ3MubGVuZ3RoPjEmJmJhKGIsdGhpcyxudWxsLDEsdGhpcy5fc2libGluZ3MpOyh0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyfHwwPT09YyYmMD09PXRoaXMuX2RlbGF5JiZ0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyIT09ITEpJiYodGhpcy5fdGltZT0tbix0aGlzLnJlbmRlcihNYXRoLm1pbigwLC10aGlzLl9kZWxheSkpKX0sITApLEk9ZnVuY3Rpb24oYil7cmV0dXJuIGImJmIubGVuZ3RoJiZiIT09YSYmYlswXSYmKGJbMF09PT1hfHxiWzBdLm5vZGVUeXBlJiZiWzBdLnN0eWxlJiYhYi5ub2RlVHlwZSl9LEo9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXt9O2ZvcihjIGluIGEpVltjXXx8YyBpbiBiJiZcInRyYW5zZm9ybVwiIT09YyYmXCJ4XCIhPT1jJiZcInlcIiE9PWMmJlwid2lkdGhcIiE9PWMmJlwiaGVpZ2h0XCIhPT1jJiZcImNsYXNzTmFtZVwiIT09YyYmXCJib3JkZXJcIiE9PWN8fCEoIVNbY118fFNbY10mJlNbY10uX2F1dG9DU1MpfHwoZFtjXT1hW2NdLGRlbGV0ZSBhW2NdKTthLmNzcz1kfTtpPUgucHJvdG90eXBlPW5ldyBFLGkuY29uc3RydWN0b3I9SCxpLmtpbGwoKS5fZ2M9ITEsaS5yYXRpbz0wLGkuX2ZpcnN0UFQ9aS5fdGFyZ2V0cz1pLl9vdmVyd3JpdHRlblByb3BzPWkuX3N0YXJ0QXQ9bnVsbCxpLl9ub3RpZnlQbHVnaW5zT2ZFbmFibGVkPWkuX2xhenk9ITEsSC52ZXJzaW9uPVwiMi4wLjFcIixILmRlZmF1bHRFYXNlPWkuX2Vhc2U9bmV3IHcobnVsbCxudWxsLDEsMSksSC5kZWZhdWx0T3ZlcndyaXRlPVwiYXV0b1wiLEgudGlja2VyPWosSC5hdXRvU2xlZXA9MTIwLEgubGFnU21vb3RoaW5nPWZ1bmN0aW9uKGEsYil7ai5sYWdTbW9vdGhpbmcoYSxiKX0sSC5zZWxlY3Rvcj1hLiR8fGEualF1ZXJ5fHxmdW5jdGlvbihiKXt2YXIgYz1hLiR8fGEualF1ZXJ5O3JldHVybiBjPyhILnNlbGVjdG9yPWMsYyhiKSk6KGR8fChkPWEuZG9jdW1lbnQpLGQ/ZC5xdWVyeVNlbGVjdG9yQWxsP2QucXVlcnlTZWxlY3RvckFsbChiKTpkLmdldEVsZW1lbnRCeUlkKFwiI1wiPT09Yi5jaGFyQXQoMCk/Yi5zdWJzdHIoMSk6Yik6Yil9O3ZhciBLPVtdLEw9e30sTT0vKD86KC18LT18XFwrPSk/XFxkKlxcLj9cXGQqKD86ZVtcXC0rXT9cXGQrKT8pWzAtOV0vZ2ksTj0vW1xcKy1dPS0/W1xcLlxcZF0vLE89ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGM9dGhpcy5fZmlyc3RQVCxkPTFlLTY7YzspYj1jLmJsb2I/MT09PWEmJm51bGwhPXRoaXMuZW5kP3RoaXMuZW5kOmE/dGhpcy5qb2luKFwiXCIpOnRoaXMuc3RhcnQ6Yy5jKmErYy5zLGMubT9iPWMubS5jYWxsKHRoaXMuX3R3ZWVuLGIsdGhpcy5fdGFyZ2V0fHxjLnQsdGhpcy5fdHdlZW4pOmQ+YiYmYj4tZCYmIWMuYmxvYiYmKGI9MCksYy5mP2MuZnA/Yy50W2MucF0oYy5mcCxiKTpjLnRbYy5wXShiKTpjLnRbYy5wXT1iLGM9Yy5fbmV4dH0sUD1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZSxmLGcsaCxpLGosayxsPVtdLG09MCxuPVwiXCIsbz0wO2ZvcihsLnN0YXJ0PWEsbC5lbmQ9YixhPWxbMF09YStcIlwiLGI9bFsxXT1iK1wiXCIsYyYmKGMobCksYT1sWzBdLGI9bFsxXSksbC5sZW5ndGg9MCxlPWEubWF0Y2goTSl8fFtdLGY9Yi5tYXRjaChNKXx8W10sZCYmKGQuX25leHQ9bnVsbCxkLmJsb2I9MSxsLl9maXJzdFBUPWwuX2FwcGx5UFQ9ZCksaT1mLmxlbmd0aCxoPTA7aT5oO2grKylrPWZbaF0saj1iLnN1YnN0cihtLGIuaW5kZXhPZihrLG0pLW0pLG4rPWp8fCFoP2o6XCIsXCIsbSs9ai5sZW5ndGgsbz9vPShvKzEpJTU6XCJyZ2JhKFwiPT09ai5zdWJzdHIoLTUpJiYobz0xKSxrPT09ZVtoXXx8ZS5sZW5ndGg8PWg/bis9azoobiYmKGwucHVzaChuKSxuPVwiXCIpLGc9cGFyc2VGbG9hdChlW2hdKSxsLnB1c2goZyksbC5fZmlyc3RQVD17X25leHQ6bC5fZmlyc3RQVCx0OmwscDpsLmxlbmd0aC0xLHM6ZyxjOihcIj1cIj09PWsuY2hhckF0KDEpP3BhcnNlSW50KGsuY2hhckF0KDApK1wiMVwiLDEwKSpwYXJzZUZsb2F0KGsuc3Vic3RyKDIpKTpwYXJzZUZsb2F0KGspLWcpfHwwLGY6MCxtOm8mJjQ+bz9NYXRoLnJvdW5kOjB9KSxtKz1rLmxlbmd0aDtyZXR1cm4gbis9Yi5zdWJzdHIobSksbiYmbC5wdXNoKG4pLGwuc2V0UmF0aW89TyxOLnRlc3QoYikmJihsLmVuZD1udWxsKSxsfSxRPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxpKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkJiYoZD1kKGl8fDAsYSkpO3ZhciBqLGs9dHlwZW9mIGFbYl0sbD1cImZ1bmN0aW9uXCIhPT1rP1wiXCI6Yi5pbmRleE9mKFwic2V0XCIpfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBhW1wiZ2V0XCIrYi5zdWJzdHIoMyldP2I6XCJnZXRcIitiLnN1YnN0cigzKSxtPVwiZ2V0XCIhPT1jP2M6bD9nP2FbbF0oZyk6YVtsXSgpOmFbYl0sbj1cInN0cmluZ1wiPT10eXBlb2YgZCYmXCI9XCI9PT1kLmNoYXJBdCgxKSxvPXt0OmEscDpiLHM6bSxmOlwiZnVuY3Rpb25cIj09PWsscGc6MCxuOmV8fGIsbTpmP1wiZnVuY3Rpb25cIj09dHlwZW9mIGY/ZjpNYXRoLnJvdW5kOjAscHI6MCxjOm4/cGFyc2VJbnQoZC5jaGFyQXQoMCkrXCIxXCIsMTApKnBhcnNlRmxvYXQoZC5zdWJzdHIoMikpOnBhcnNlRmxvYXQoZCktbXx8MH07cmV0dXJuKFwibnVtYmVyXCIhPXR5cGVvZiBtfHxcIm51bWJlclwiIT10eXBlb2YgZCYmIW4pJiYoZ3x8aXNOYU4obSl8fCFuJiZpc05hTihkKXx8XCJib29sZWFuXCI9PXR5cGVvZiBtfHxcImJvb2xlYW5cIj09dHlwZW9mIGQ/KG8uZnA9ZyxqPVAobSxuP3BhcnNlRmxvYXQoby5zKStvLmMrKG8ucytcIlwiKS5yZXBsYWNlKC9bMC05XFwtXFwuXS9nLFwiXCIpOmQsaHx8SC5kZWZhdWx0U3RyaW5nRmlsdGVyLG8pLG89e3Q6aixwOlwic2V0UmF0aW9cIixzOjAsYzoxLGY6MixwZzowLG46ZXx8YixwcjowLG06MH0pOihvLnM9cGFyc2VGbG9hdChtKSxufHwoby5jPXBhcnNlRmxvYXQoZCktby5zfHwwKSkpLG8uYz8oKG8uX25leHQ9dGhpcy5fZmlyc3RQVCkmJihvLl9uZXh0Ll9wcmV2PW8pLHRoaXMuX2ZpcnN0UFQ9byxvKTp2b2lkIDB9LFI9SC5faW50ZXJuYWxzPXtpc0FycmF5OnEsaXNTZWxlY3RvcjpJLGxhenlUd2VlbnM6SyxibG9iRGlmOlB9LFM9SC5fcGx1Z2lucz17fSxUPVIudHdlZW5Mb29rdXA9e30sVT0wLFY9Ui5yZXNlcnZlZFByb3BzPXtlYXNlOjEsZGVsYXk6MSxvdmVyd3JpdGU6MSxvbkNvbXBsZXRlOjEsb25Db21wbGV0ZVBhcmFtczoxLG9uQ29tcGxldGVTY29wZToxLHVzZUZyYW1lczoxLHJ1bkJhY2t3YXJkczoxLHN0YXJ0QXQ6MSxvblVwZGF0ZToxLG9uVXBkYXRlUGFyYW1zOjEsb25VcGRhdGVTY29wZToxLG9uU3RhcnQ6MSxvblN0YXJ0UGFyYW1zOjEsb25TdGFydFNjb3BlOjEsb25SZXZlcnNlQ29tcGxldGU6MSxvblJldmVyc2VDb21wbGV0ZVBhcmFtczoxLG9uUmV2ZXJzZUNvbXBsZXRlU2NvcGU6MSxvblJlcGVhdDoxLG9uUmVwZWF0UGFyYW1zOjEsb25SZXBlYXRTY29wZToxLGVhc2VQYXJhbXM6MSx5b3lvOjEsaW1tZWRpYXRlUmVuZGVyOjEscmVwZWF0OjEscmVwZWF0RGVsYXk6MSxkYXRhOjEscGF1c2VkOjEscmV2ZXJzZWQ6MSxhdXRvQ1NTOjEsbGF6eToxLG9uT3ZlcndyaXRlOjEsY2FsbGJhY2tTY29wZToxLHN0cmluZ0ZpbHRlcjoxLGlkOjEseW95b0Vhc2U6MX0sVz17bm9uZTowLGFsbDoxLGF1dG86Mixjb25jdXJyZW50OjMsYWxsT25TdGFydDo0LHByZWV4aXN0aW5nOjUsXCJ0cnVlXCI6MSxcImZhbHNlXCI6MH0sWD1FLl9yb290RnJhbWVzVGltZWxpbmU9bmV3IEcsWT1FLl9yb290VGltZWxpbmU9bmV3IEcsWj0zMCwkPVIubGF6eVJlbmRlcj1mdW5jdGlvbigpe3ZhciBhLGI9Sy5sZW5ndGg7Zm9yKEw9e307LS1iPi0xOylhPUtbYl0sYSYmYS5fbGF6eSE9PSExJiYoYS5yZW5kZXIoYS5fbGF6eVswXSxhLl9sYXp5WzFdLCEwKSxhLl9sYXp5PSExKTtLLmxlbmd0aD0wfTtZLl9zdGFydFRpbWU9ai50aW1lLFguX3N0YXJ0VGltZT1qLmZyYW1lLFkuX2FjdGl2ZT1YLl9hY3RpdmU9ITAsc2V0VGltZW91dCgkLDEpLEUuX3VwZGF0ZVJvb3Q9SC5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgYSxiLGM7aWYoSy5sZW5ndGgmJiQoKSxZLnJlbmRlcigoai50aW1lLVkuX3N0YXJ0VGltZSkqWS5fdGltZVNjYWxlLCExLCExKSxYLnJlbmRlcigoai5mcmFtZS1YLl9zdGFydFRpbWUpKlguX3RpbWVTY2FsZSwhMSwhMSksSy5sZW5ndGgmJiQoKSxqLmZyYW1lPj1aKXtaPWouZnJhbWUrKHBhcnNlSW50KEguYXV0b1NsZWVwLDEwKXx8MTIwKTtmb3IoYyBpbiBUKXtmb3IoYj1UW2NdLnR3ZWVucyxhPWIubGVuZ3RoOy0tYT4tMTspYlthXS5fZ2MmJmIuc3BsaWNlKGEsMSk7MD09PWIubGVuZ3RoJiZkZWxldGUgVFtjXX1pZihjPVkuX2ZpcnN0LCghY3x8Yy5fcGF1c2VkKSYmSC5hdXRvU2xlZXAmJiFYLl9maXJzdCYmMT09PWouX2xpc3RlbmVycy50aWNrLmxlbmd0aCl7Zm9yKDtjJiZjLl9wYXVzZWQ7KWM9Yy5fbmV4dDtjfHxqLnNsZWVwKCl9fX0sai5hZGRFdmVudExpc3RlbmVyKFwidGlja1wiLEUuX3VwZGF0ZVJvb3QpO3ZhciBfPWZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9YS5fZ3NUd2VlbklEO2lmKFRbZnx8KGEuX2dzVHdlZW5JRD1mPVwidFwiK1UrKyldfHwoVFtmXT17dGFyZ2V0OmEsdHdlZW5zOltdfSksYiYmKGQ9VFtmXS50d2VlbnMsZFtlPWQubGVuZ3RoXT1iLGMpKWZvcig7LS1lPi0xOylkW2VdPT09YiYmZC5zcGxpY2UoZSwxKTtyZXR1cm4gVFtmXS50d2VlbnN9LGFhPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZz1hLnZhcnMub25PdmVyd3JpdGU7cmV0dXJuIGcmJihlPWcoYSxiLGMsZCkpLGc9SC5vbk92ZXJ3cml0ZSxnJiYoZj1nKGEsYixjLGQpKSxlIT09ITEmJmYhPT0hMX0sYmE9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZixnLGgsaTtpZigxPT09ZHx8ZD49NCl7Zm9yKGk9ZS5sZW5ndGgsZj0wO2k+ZjtmKyspaWYoKGg9ZVtmXSkhPT1iKWguX2djfHxoLl9raWxsKG51bGwsYSxiKSYmKGc9ITApO2Vsc2UgaWYoNT09PWQpYnJlYWs7cmV0dXJuIGd9dmFyIGosaz1iLl9zdGFydFRpbWUrbixsPVtdLG09MCxvPTA9PT1iLl9kdXJhdGlvbjtmb3IoZj1lLmxlbmd0aDstLWY+LTE7KShoPWVbZl0pPT09Ynx8aC5fZ2N8fGguX3BhdXNlZHx8KGguX3RpbWVsaW5lIT09Yi5fdGltZWxpbmU/KGo9anx8Y2EoYiwwLG8pLDA9PT1jYShoLGosbykmJihsW20rK109aCkpOmguX3N0YXJ0VGltZTw9ayYmaC5fc3RhcnRUaW1lK2gudG90YWxEdXJhdGlvbigpL2guX3RpbWVTY2FsZT5rJiYoKG98fCFoLl9pbml0dGVkKSYmay1oLl9zdGFydFRpbWU8PTJlLTEwfHwobFttKytdPWgpKSk7Zm9yKGY9bTstLWY+LTE7KWlmKGg9bFtmXSwyPT09ZCYmaC5fa2lsbChjLGEsYikmJihnPSEwKSwyIT09ZHx8IWguX2ZpcnN0UFQmJmguX2luaXR0ZWQpe2lmKDIhPT1kJiYhYWEoaCxiKSljb250aW51ZTtoLl9lbmFibGVkKCExLCExKSYmKGc9ITApfXJldHVybiBnfSxjYT1mdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPWEuX3RpbWVsaW5lLGU9ZC5fdGltZVNjYWxlLGY9YS5fc3RhcnRUaW1lO2QuX3RpbWVsaW5lOyl7aWYoZis9ZC5fc3RhcnRUaW1lLGUqPWQuX3RpbWVTY2FsZSxkLl9wYXVzZWQpcmV0dXJuLTEwMDtkPWQuX3RpbWVsaW5lfXJldHVybiBmLz1lLGY+Yj9mLWI6YyYmZj09PWJ8fCFhLl9pbml0dGVkJiYyKm4+Zi1iP246KGYrPWEudG90YWxEdXJhdGlvbigpL2EuX3RpbWVTY2FsZS9lKT5iK24/MDpmLWItbn07aS5faW5pdD1mdW5jdGlvbigpe3ZhciBhLGIsYyxkLGUsZixnPXRoaXMudmFycyxoPXRoaXMuX292ZXJ3cml0dGVuUHJvcHMsaT10aGlzLl9kdXJhdGlvbixqPSEhZy5pbW1lZGlhdGVSZW5kZXIsaz1nLmVhc2U7aWYoZy5zdGFydEF0KXt0aGlzLl9zdGFydEF0JiYodGhpcy5fc3RhcnRBdC5yZW5kZXIoLTEsITApLHRoaXMuX3N0YXJ0QXQua2lsbCgpKSxlPXt9O2ZvcihkIGluIGcuc3RhcnRBdCllW2RdPWcuc3RhcnRBdFtkXTtpZihlLmRhdGE9XCJpc1N0YXJ0XCIsZS5vdmVyd3JpdGU9ITEsZS5pbW1lZGlhdGVSZW5kZXI9ITAsZS5sYXp5PWomJmcubGF6eSE9PSExLGUuc3RhcnRBdD1lLmRlbGF5PW51bGwsZS5vblVwZGF0ZT1nLm9uVXBkYXRlLGUub25VcGRhdGVQYXJhbXM9Zy5vblVwZGF0ZVBhcmFtcyxlLm9uVXBkYXRlU2NvcGU9Zy5vblVwZGF0ZVNjb3BlfHxnLmNhbGxiYWNrU2NvcGV8fHRoaXMsdGhpcy5fc3RhcnRBdD1ILnRvKHRoaXMudGFyZ2V0fHx7fSwwLGUpLGopaWYodGhpcy5fdGltZT4wKXRoaXMuX3N0YXJ0QXQ9bnVsbDtlbHNlIGlmKDAhPT1pKXJldHVybn1lbHNlIGlmKGcucnVuQmFja3dhcmRzJiYwIT09aSlpZih0aGlzLl9zdGFydEF0KXRoaXMuX3N0YXJ0QXQucmVuZGVyKC0xLCEwKSx0aGlzLl9zdGFydEF0LmtpbGwoKSx0aGlzLl9zdGFydEF0PW51bGw7ZWxzZXswIT09dGhpcy5fdGltZSYmKGo9ITEpLGM9e307Zm9yKGQgaW4gZylWW2RdJiZcImF1dG9DU1NcIiE9PWR8fChjW2RdPWdbZF0pO2lmKGMub3ZlcndyaXRlPTAsYy5kYXRhPVwiaXNGcm9tU3RhcnRcIixjLmxhenk9aiYmZy5sYXp5IT09ITEsYy5pbW1lZGlhdGVSZW5kZXI9aix0aGlzLl9zdGFydEF0PUgudG8odGhpcy50YXJnZXQsMCxjKSxqKXtpZigwPT09dGhpcy5fdGltZSlyZXR1cm59ZWxzZSB0aGlzLl9zdGFydEF0Ll9pbml0KCksdGhpcy5fc3RhcnRBdC5fZW5hYmxlZCghMSksdGhpcy52YXJzLmltbWVkaWF0ZVJlbmRlciYmKHRoaXMuX3N0YXJ0QXQ9bnVsbCl9aWYodGhpcy5fZWFzZT1rPWs/ayBpbnN0YW5jZW9mIHc/azpcImZ1bmN0aW9uXCI9PXR5cGVvZiBrP25ldyB3KGssZy5lYXNlUGFyYW1zKTp4W2tdfHxILmRlZmF1bHRFYXNlOkguZGVmYXVsdEVhc2UsZy5lYXNlUGFyYW1zIGluc3RhbmNlb2YgQXJyYXkmJmsuY29uZmlnJiYodGhpcy5fZWFzZT1rLmNvbmZpZy5hcHBseShrLGcuZWFzZVBhcmFtcykpLHRoaXMuX2Vhc2VUeXBlPXRoaXMuX2Vhc2UuX3R5cGUsdGhpcy5fZWFzZVBvd2VyPXRoaXMuX2Vhc2UuX3Bvd2VyLHRoaXMuX2ZpcnN0UFQ9bnVsbCx0aGlzLl90YXJnZXRzKWZvcihmPXRoaXMuX3RhcmdldHMubGVuZ3RoLGE9MDtmPmE7YSsrKXRoaXMuX2luaXRQcm9wcyh0aGlzLl90YXJnZXRzW2FdLHRoaXMuX3Byb3BMb29rdXBbYV09e30sdGhpcy5fc2libGluZ3NbYV0saD9oW2FdOm51bGwsYSkmJihiPSEwKTtlbHNlIGI9dGhpcy5faW5pdFByb3BzKHRoaXMudGFyZ2V0LHRoaXMuX3Byb3BMb29rdXAsdGhpcy5fc2libGluZ3MsaCwwKTtpZihiJiZILl9vblBsdWdpbkV2ZW50KFwiX29uSW5pdEFsbFByb3BzXCIsdGhpcyksaCYmKHRoaXMuX2ZpcnN0UFR8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXMudGFyZ2V0JiZ0aGlzLl9lbmFibGVkKCExLCExKSksZy5ydW5CYWNrd2FyZHMpZm9yKGM9dGhpcy5fZmlyc3RQVDtjOyljLnMrPWMuYyxjLmM9LWMuYyxjPWMuX25leHQ7dGhpcy5fb25VcGRhdGU9Zy5vblVwZGF0ZSx0aGlzLl9pbml0dGVkPSEwfSxpLl9pbml0UHJvcHM9ZnVuY3Rpb24oYixjLGQsZSxmKXt2YXIgZyxoLGksaixrLGw7aWYobnVsbD09YilyZXR1cm4hMTtMW2IuX2dzVHdlZW5JRF0mJiQoKSx0aGlzLnZhcnMuY3NzfHxiLnN0eWxlJiZiIT09YSYmYi5ub2RlVHlwZSYmUy5jc3MmJnRoaXMudmFycy5hdXRvQ1NTIT09ITEmJkoodGhpcy52YXJzLGIpO2ZvcihnIGluIHRoaXMudmFycylpZihsPXRoaXMudmFyc1tnXSxWW2ddKWwmJihsIGluc3RhbmNlb2YgQXJyYXl8fGwucHVzaCYmcShsKSkmJi0xIT09bC5qb2luKFwiXCIpLmluZGV4T2YoXCJ7c2VsZn1cIikmJih0aGlzLnZhcnNbZ109bD10aGlzLl9zd2FwU2VsZkluUGFyYW1zKGwsdGhpcykpO2Vsc2UgaWYoU1tnXSYmKGo9bmV3IFNbZ10pLl9vbkluaXRUd2VlbihiLHRoaXMudmFyc1tnXSx0aGlzLGYpKXtmb3IodGhpcy5fZmlyc3RQVD1rPXtfbmV4dDp0aGlzLl9maXJzdFBULHQ6aixwOlwic2V0UmF0aW9cIixzOjAsYzoxLGY6MSxuOmcscGc6MSxwcjpqLl9wcmlvcml0eSxtOjB9LGg9ai5fb3ZlcndyaXRlUHJvcHMubGVuZ3RoOy0taD4tMTspY1tqLl9vdmVyd3JpdGVQcm9wc1toXV09dGhpcy5fZmlyc3RQVDsoai5fcHJpb3JpdHl8fGouX29uSW5pdEFsbFByb3BzKSYmKGk9ITApLChqLl9vbkRpc2FibGV8fGouX29uRW5hYmxlKSYmKHRoaXMuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQ9ITApLGsuX25leHQmJihrLl9uZXh0Ll9wcmV2PWspfWVsc2UgY1tnXT1RLmNhbGwodGhpcyxiLGcsXCJnZXRcIixsLGcsMCxudWxsLHRoaXMudmFycy5zdHJpbmdGaWx0ZXIsZik7cmV0dXJuIGUmJnRoaXMuX2tpbGwoZSxiKT90aGlzLl9pbml0UHJvcHMoYixjLGQsZSxmKTp0aGlzLl9vdmVyd3JpdGU+MSYmdGhpcy5fZmlyc3RQVCYmZC5sZW5ndGg+MSYmYmEoYix0aGlzLGMsdGhpcy5fb3ZlcndyaXRlLGQpPyh0aGlzLl9raWxsKGMsYiksdGhpcy5faW5pdFByb3BzKGIsYyxkLGUsZikpOih0aGlzLl9maXJzdFBUJiYodGhpcy52YXJzLmxhenkhPT0hMSYmdGhpcy5fZHVyYXRpb258fHRoaXMudmFycy5sYXp5JiYhdGhpcy5fZHVyYXRpb24pJiYoTFtiLl9nc1R3ZWVuSURdPSEwKSxpKX0saS5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnLGg9dGhpcy5fdGltZSxpPXRoaXMuX2R1cmF0aW9uLGo9dGhpcy5fcmF3UHJldlRpbWU7aWYoYT49aS0xZS03JiZhPj0wKXRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPWksdGhpcy5yYXRpbz10aGlzLl9lYXNlLl9jYWxjRW5kP3RoaXMuX2Vhc2UuZ2V0UmF0aW8oMSk6MSx0aGlzLl9yZXZlcnNlZHx8KGQ9ITAsZT1cIm9uQ29tcGxldGVcIixjPWN8fHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiksMD09PWkmJih0aGlzLl9pbml0dGVkfHwhdGhpcy52YXJzLmxhenl8fGMpJiYodGhpcy5fc3RhcnRUaW1lPT09dGhpcy5fdGltZWxpbmUuX2R1cmF0aW9uJiYoYT0wKSwoMD5qfHwwPj1hJiZhPj0tMWUtN3x8aj09PW4mJlwiaXNQYXVzZVwiIT09dGhpcy5kYXRhKSYmaiE9PWEmJihjPSEwLGo+biYmKGU9XCJvblJldmVyc2VDb21wbGV0ZVwiKSksdGhpcy5fcmF3UHJldlRpbWU9Zz0hYnx8YXx8aj09PWE/YTpuKTtlbHNlIGlmKDFlLTc+YSl0aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT0wLHRoaXMucmF0aW89dGhpcy5fZWFzZS5fY2FsY0VuZD90aGlzLl9lYXNlLmdldFJhdGlvKDApOjAsKDAhPT1ofHwwPT09aSYmaj4wKSYmKGU9XCJvblJldmVyc2VDb21wbGV0ZVwiLGQ9dGhpcy5fcmV2ZXJzZWQpLDA+YSYmKHRoaXMuX2FjdGl2ZT0hMSwwPT09aSYmKHRoaXMuX2luaXR0ZWR8fCF0aGlzLnZhcnMubGF6eXx8YykmJihqPj0wJiYoaiE9PW58fFwiaXNQYXVzZVwiIT09dGhpcy5kYXRhKSYmKGM9ITApLHRoaXMuX3Jhd1ByZXZUaW1lPWc9IWJ8fGF8fGo9PT1hP2E6bikpLCghdGhpcy5faW5pdHRlZHx8dGhpcy5fc3RhcnRBdCYmdGhpcy5fc3RhcnRBdC5wcm9ncmVzcygpKSYmKGM9ITApO2Vsc2UgaWYodGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9YSx0aGlzLl9lYXNlVHlwZSl7dmFyIGs9YS9pLGw9dGhpcy5fZWFzZVR5cGUsbT10aGlzLl9lYXNlUG93ZXI7KDE9PT1sfHwzPT09bCYmaz49LjUpJiYoaz0xLWspLDM9PT1sJiYoayo9MiksMT09PW0/ayo9azoyPT09bT9rKj1rKms6Mz09PW0/ayo9ayprKms6ND09PW0mJihrKj1rKmsqayprKSwxPT09bD90aGlzLnJhdGlvPTEtazoyPT09bD90aGlzLnJhdGlvPWs6LjU+YS9pP3RoaXMucmF0aW89ay8yOnRoaXMucmF0aW89MS1rLzJ9ZWxzZSB0aGlzLnJhdGlvPXRoaXMuX2Vhc2UuZ2V0UmF0aW8oYS9pKTtpZih0aGlzLl90aW1lIT09aHx8Yyl7aWYoIXRoaXMuX2luaXR0ZWQpe2lmKHRoaXMuX2luaXQoKSwhdGhpcy5faW5pdHRlZHx8dGhpcy5fZ2MpcmV0dXJuO2lmKCFjJiZ0aGlzLl9maXJzdFBUJiYodGhpcy52YXJzLmxhenkhPT0hMSYmdGhpcy5fZHVyYXRpb258fHRoaXMudmFycy5sYXp5JiYhdGhpcy5fZHVyYXRpb24pKXJldHVybiB0aGlzLl90aW1lPXRoaXMuX3RvdGFsVGltZT1oLHRoaXMuX3Jhd1ByZXZUaW1lPWosSy5wdXNoKHRoaXMpLHZvaWQodGhpcy5fbGF6eT1bYSxiXSk7dGhpcy5fdGltZSYmIWQ/dGhpcy5yYXRpbz10aGlzLl9lYXNlLmdldFJhdGlvKHRoaXMuX3RpbWUvaSk6ZCYmdGhpcy5fZWFzZS5fY2FsY0VuZCYmKHRoaXMucmF0aW89dGhpcy5fZWFzZS5nZXRSYXRpbygwPT09dGhpcy5fdGltZT8wOjEpKX1mb3IodGhpcy5fbGF6eSE9PSExJiYodGhpcy5fbGF6eT0hMSksdGhpcy5fYWN0aXZlfHwhdGhpcy5fcGF1c2VkJiZ0aGlzLl90aW1lIT09aCYmYT49MCYmKHRoaXMuX2FjdGl2ZT0hMCksMD09PWgmJih0aGlzLl9zdGFydEF0JiYoYT49MD90aGlzLl9zdGFydEF0LnJlbmRlcihhLCEwLGMpOmV8fChlPVwiX2R1bW15R1NcIikpLHRoaXMudmFycy5vblN0YXJ0JiYoMCE9PXRoaXMuX3RpbWV8fDA9PT1pKSYmKGJ8fHRoaXMuX2NhbGxiYWNrKFwib25TdGFydFwiKSkpLGY9dGhpcy5fZmlyc3RQVDtmOylmLmY/Zi50W2YucF0oZi5jKnRoaXMucmF0aW8rZi5zKTpmLnRbZi5wXT1mLmMqdGhpcy5yYXRpbytmLnMsZj1mLl9uZXh0O3RoaXMuX29uVXBkYXRlJiYoMD5hJiZ0aGlzLl9zdGFydEF0JiZhIT09LTFlLTQmJnRoaXMuX3N0YXJ0QXQucmVuZGVyKGEsITAsYyksYnx8KHRoaXMuX3RpbWUhPT1ofHxkfHxjKSYmdGhpcy5fY2FsbGJhY2soXCJvblVwZGF0ZVwiKSksZSYmKCF0aGlzLl9nY3x8YykmJigwPmEmJnRoaXMuX3N0YXJ0QXQmJiF0aGlzLl9vblVwZGF0ZSYmYSE9PS0xZS00JiZ0aGlzLl9zdGFydEF0LnJlbmRlcihhLCEwLGMpLGQmJih0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX2VuYWJsZWQoITEsITEpLHRoaXMuX2FjdGl2ZT0hMSksIWImJnRoaXMudmFyc1tlXSYmdGhpcy5fY2FsbGJhY2soZSksMD09PWkmJnRoaXMuX3Jhd1ByZXZUaW1lPT09biYmZyE9PW4mJih0aGlzLl9yYXdQcmV2VGltZT0wKSl9fSxpLl9raWxsPWZ1bmN0aW9uKGEsYixjKXtpZihcImFsbFwiPT09YSYmKGE9bnVsbCksbnVsbD09YSYmKG51bGw9PWJ8fGI9PT10aGlzLnRhcmdldCkpcmV0dXJuIHRoaXMuX2xhenk9ITEsdGhpcy5fZW5hYmxlZCghMSwhMSk7Yj1cInN0cmluZ1wiIT10eXBlb2YgYj9ifHx0aGlzLl90YXJnZXRzfHx0aGlzLnRhcmdldDpILnNlbGVjdG9yKGIpfHxiO3ZhciBkLGUsZixnLGgsaSxqLGssbCxtPWMmJnRoaXMuX3RpbWUmJmMuX3N0YXJ0VGltZT09PXRoaXMuX3N0YXJ0VGltZSYmdGhpcy5fdGltZWxpbmU9PT1jLl90aW1lbGluZTtpZigocShiKXx8SShiKSkmJlwibnVtYmVyXCIhPXR5cGVvZiBiWzBdKWZvcihkPWIubGVuZ3RoOy0tZD4tMTspdGhpcy5fa2lsbChhLGJbZF0sYykmJihpPSEwKTtlbHNle2lmKHRoaXMuX3RhcmdldHMpe2ZvcihkPXRoaXMuX3RhcmdldHMubGVuZ3RoOy0tZD4tMTspaWYoYj09PXRoaXMuX3RhcmdldHNbZF0pe2g9dGhpcy5fcHJvcExvb2t1cFtkXXx8e30sdGhpcy5fb3ZlcndyaXR0ZW5Qcm9wcz10aGlzLl9vdmVyd3JpdHRlblByb3BzfHxbXSxlPXRoaXMuX292ZXJ3cml0dGVuUHJvcHNbZF09YT90aGlzLl9vdmVyd3JpdHRlblByb3BzW2RdfHx7fTpcImFsbFwiO2JyZWFrfX1lbHNle2lmKGIhPT10aGlzLnRhcmdldClyZXR1cm4hMTtoPXRoaXMuX3Byb3BMb29rdXAsZT10aGlzLl9vdmVyd3JpdHRlblByb3BzPWE/dGhpcy5fb3ZlcndyaXR0ZW5Qcm9wc3x8e306XCJhbGxcIn1pZihoKXtpZihqPWF8fGgsaz1hIT09ZSYmXCJhbGxcIiE9PWUmJmEhPT1oJiYoXCJvYmplY3RcIiE9dHlwZW9mIGF8fCFhLl90ZW1wS2lsbCksYyYmKEgub25PdmVyd3JpdGV8fHRoaXMudmFycy5vbk92ZXJ3cml0ZSkpe2ZvcihmIGluIGopaFtmXSYmKGx8fChsPVtdKSxsLnB1c2goZikpO2lmKChsfHwhYSkmJiFhYSh0aGlzLGMsYixsKSlyZXR1cm4hMX1mb3IoZiBpbiBqKShnPWhbZl0pJiYobSYmKGcuZj9nLnRbZy5wXShnLnMpOmcudFtnLnBdPWcucyxpPSEwKSxnLnBnJiZnLnQuX2tpbGwoaikmJihpPSEwKSxnLnBnJiYwIT09Zy50Ll9vdmVyd3JpdGVQcm9wcy5sZW5ndGh8fChnLl9wcmV2P2cuX3ByZXYuX25leHQ9Zy5fbmV4dDpnPT09dGhpcy5fZmlyc3RQVCYmKHRoaXMuX2ZpcnN0UFQ9Zy5fbmV4dCksZy5fbmV4dCYmKGcuX25leHQuX3ByZXY9Zy5fcHJldiksZy5fbmV4dD1nLl9wcmV2PW51bGwpLGRlbGV0ZSBoW2ZdKSxrJiYoZVtmXT0xKTshdGhpcy5fZmlyc3RQVCYmdGhpcy5faW5pdHRlZCYmdGhpcy5fZW5hYmxlZCghMSwhMSl9fXJldHVybiBpfSxpLmludmFsaWRhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbm90aWZ5UGx1Z2luc09mRW5hYmxlZCYmSC5fb25QbHVnaW5FdmVudChcIl9vbkRpc2FibGVcIix0aGlzKSx0aGlzLl9maXJzdFBUPXRoaXMuX292ZXJ3cml0dGVuUHJvcHM9dGhpcy5fc3RhcnRBdD10aGlzLl9vblVwZGF0ZT1udWxsLHRoaXMuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQ9dGhpcy5fYWN0aXZlPXRoaXMuX2xhenk9ITEsdGhpcy5fcHJvcExvb2t1cD10aGlzLl90YXJnZXRzP3t9OltdLEUucHJvdG90eXBlLmludmFsaWRhdGUuY2FsbCh0aGlzKSx0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyJiYodGhpcy5fdGltZT0tbix0aGlzLnJlbmRlcihNYXRoLm1pbigwLC10aGlzLl9kZWxheSkpKSx0aGlzfSxpLl9lbmFibGVkPWZ1bmN0aW9uKGEsYil7aWYoa3x8ai53YWtlKCksYSYmdGhpcy5fZ2Mpe3ZhciBjLGQ9dGhpcy5fdGFyZ2V0cztpZihkKWZvcihjPWQubGVuZ3RoOy0tYz4tMTspdGhpcy5fc2libGluZ3NbY109XyhkW2NdLHRoaXMsITApO2Vsc2UgdGhpcy5fc2libGluZ3M9Xyh0aGlzLnRhcmdldCx0aGlzLCEwKX1yZXR1cm4gRS5wcm90b3R5cGUuX2VuYWJsZWQuY2FsbCh0aGlzLGEsYiksdGhpcy5fbm90aWZ5UGx1Z2luc09mRW5hYmxlZCYmdGhpcy5fZmlyc3RQVD9ILl9vblBsdWdpbkV2ZW50KGE/XCJfb25FbmFibGVcIjpcIl9vbkRpc2FibGVcIix0aGlzKTohMX0sSC50bz1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIG5ldyBIKGEsYixjKX0sSC5mcm9tPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYy5ydW5CYWNrd2FyZHM9ITAsYy5pbW1lZGlhdGVSZW5kZXI9MCE9Yy5pbW1lZGlhdGVSZW5kZXIsbmV3IEgoYSxiLGMpfSxILmZyb21Ubz1mdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gZC5zdGFydEF0PWMsZC5pbW1lZGlhdGVSZW5kZXI9MCE9ZC5pbW1lZGlhdGVSZW5kZXImJjAhPWMuaW1tZWRpYXRlUmVuZGVyLG5ldyBIKGEsYixkKX0sSC5kZWxheWVkQ2FsbD1mdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBuZXcgSChiLDAse2RlbGF5OmEsb25Db21wbGV0ZTpiLG9uQ29tcGxldGVQYXJhbXM6YyxjYWxsYmFja1Njb3BlOmQsb25SZXZlcnNlQ29tcGxldGU6YixvblJldmVyc2VDb21wbGV0ZVBhcmFtczpjLGltbWVkaWF0ZVJlbmRlcjohMSxsYXp5OiExLHVzZUZyYW1lczplLG92ZXJ3cml0ZTowfSl9LEguc2V0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBIKGEsMCxiKX0sSC5nZXRUd2VlbnNPZj1mdW5jdGlvbihhLGIpe2lmKG51bGw9PWEpcmV0dXJuW107YT1cInN0cmluZ1wiIT10eXBlb2YgYT9hOkguc2VsZWN0b3IoYSl8fGE7dmFyIGMsZCxlLGY7aWYoKHEoYSl8fEkoYSkpJiZcIm51bWJlclwiIT10eXBlb2YgYVswXSl7Zm9yKGM9YS5sZW5ndGgsZD1bXTstLWM+LTE7KWQ9ZC5jb25jYXQoSC5nZXRUd2VlbnNPZihhW2NdLGIpKTtmb3IoYz1kLmxlbmd0aDstLWM+LTE7KWZvcihmPWRbY10sZT1jOy0tZT4tMTspZj09PWRbZV0mJmQuc3BsaWNlKGMsMSl9ZWxzZSBpZihhLl9nc1R3ZWVuSUQpZm9yKGQ9XyhhKS5jb25jYXQoKSxjPWQubGVuZ3RoOy0tYz4tMTspKGRbY10uX2djfHxiJiYhZFtjXS5pc0FjdGl2ZSgpKSYmZC5zcGxpY2UoYywxKTtyZXR1cm4gZHx8W119LEgua2lsbFR3ZWVuc09mPUgua2lsbERlbGF5ZWRDYWxsc1RvPWZ1bmN0aW9uKGEsYixjKXtcIm9iamVjdFwiPT10eXBlb2YgYiYmKGM9YixiPSExKTtmb3IodmFyIGQ9SC5nZXRUd2VlbnNPZihhLGIpLGU9ZC5sZW5ndGg7LS1lPi0xOylkW2VdLl9raWxsKGMsYSl9O3ZhciBkYT11KFwicGx1Z2lucy5Ud2VlblBsdWdpblwiLGZ1bmN0aW9uKGEsYil7dGhpcy5fb3ZlcndyaXRlUHJvcHM9KGF8fFwiXCIpLnNwbGl0KFwiLFwiKSx0aGlzLl9wcm9wTmFtZT10aGlzLl9vdmVyd3JpdGVQcm9wc1swXSx0aGlzLl9wcmlvcml0eT1ifHwwLHRoaXMuX3N1cGVyPWRhLnByb3RvdHlwZX0sITApO2lmKGk9ZGEucHJvdG90eXBlLGRhLnZlcnNpb249XCIxLjE5LjBcIixkYS5BUEk9MixpLl9maXJzdFBUPW51bGwsaS5fYWRkVHdlZW49USxpLnNldFJhdGlvPU8saS5fa2lsbD1mdW5jdGlvbihhKXt2YXIgYixjPXRoaXMuX292ZXJ3cml0ZVByb3BzLGQ9dGhpcy5fZmlyc3RQVDtpZihudWxsIT1hW3RoaXMuX3Byb3BOYW1lXSl0aGlzLl9vdmVyd3JpdGVQcm9wcz1bXTtlbHNlIGZvcihiPWMubGVuZ3RoOy0tYj4tMTspbnVsbCE9YVtjW2JdXSYmYy5zcGxpY2UoYiwxKTtmb3IoO2Q7KW51bGwhPWFbZC5uXSYmKGQuX25leHQmJihkLl9uZXh0Ll9wcmV2PWQuX3ByZXYpLGQuX3ByZXY/KGQuX3ByZXYuX25leHQ9ZC5fbmV4dCxkLl9wcmV2PW51bGwpOnRoaXMuX2ZpcnN0UFQ9PT1kJiYodGhpcy5fZmlyc3RQVD1kLl9uZXh0KSksZD1kLl9uZXh0O3JldHVybiExfSxpLl9tb2Q9aS5fcm91bmRQcm9wcz1mdW5jdGlvbihhKXtmb3IodmFyIGIsYz10aGlzLl9maXJzdFBUO2M7KWI9YVt0aGlzLl9wcm9wTmFtZV18fG51bGwhPWMubiYmYVtjLm4uc3BsaXQodGhpcy5fcHJvcE5hbWUrXCJfXCIpLmpvaW4oXCJcIildLGImJlwiZnVuY3Rpb25cIj09dHlwZW9mIGImJigyPT09Yy5mP2MudC5fYXBwbHlQVC5tPWI6Yy5tPWIpLGM9Yy5fbmV4dH0sSC5fb25QbHVnaW5FdmVudD1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGcsaD1iLl9maXJzdFBUO2lmKFwiX29uSW5pdEFsbFByb3BzXCI9PT1hKXtmb3IoO2g7KXtmb3IoZz1oLl9uZXh0LGQ9ZTtkJiZkLnByPmgucHI7KWQ9ZC5fbmV4dDsoaC5fcHJldj1kP2QuX3ByZXY6Zik/aC5fcHJldi5fbmV4dD1oOmU9aCwoaC5fbmV4dD1kKT9kLl9wcmV2PWg6Zj1oLGg9Z31oPWIuX2ZpcnN0UFQ9ZX1mb3IoO2g7KWgucGcmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGgudFthXSYmaC50W2FdKCkmJihjPSEwKSxoPWguX25leHQ7cmV0dXJuIGN9LGRhLmFjdGl2YXRlPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1hLmxlbmd0aDstLWI+LTE7KWFbYl0uQVBJPT09ZGEuQVBJJiYoU1sobmV3IGFbYl0pLl9wcm9wTmFtZV09YVtiXSk7cmV0dXJuITB9LHQucGx1Z2luPWZ1bmN0aW9uKGEpe2lmKCEoYSYmYS5wcm9wTmFtZSYmYS5pbml0JiZhLkFQSSkpdGhyb3dcImlsbGVnYWwgcGx1Z2luIGRlZmluaXRpb24uXCI7dmFyIGIsYz1hLnByb3BOYW1lLGQ9YS5wcmlvcml0eXx8MCxlPWEub3ZlcndyaXRlUHJvcHMsZj17aW5pdDpcIl9vbkluaXRUd2VlblwiLHNldDpcInNldFJhdGlvXCIsa2lsbDpcIl9raWxsXCIscm91bmQ6XCJfbW9kXCIsbW9kOlwiX21vZFwiLGluaXRBbGw6XCJfb25Jbml0QWxsUHJvcHNcIn0sZz11KFwicGx1Z2lucy5cIitjLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Muc3Vic3RyKDEpK1wiUGx1Z2luXCIsZnVuY3Rpb24oKXtkYS5jYWxsKHRoaXMsYyxkKSx0aGlzLl9vdmVyd3JpdGVQcm9wcz1lfHxbXX0sYS5nbG9iYWw9PT0hMCksaD1nLnByb3RvdHlwZT1uZXcgZGEoYyk7aC5jb25zdHJ1Y3Rvcj1nLGcuQVBJPWEuQVBJO2ZvcihiIGluIGYpXCJmdW5jdGlvblwiPT10eXBlb2YgYVtiXSYmKGhbZltiXV09YVtiXSk7cmV0dXJuIGcudmVyc2lvbj1hLnZlcnNpb24sZGEuYWN0aXZhdGUoW2ddKSxnfSxnPWEuX2dzUXVldWUpe2ZvcihoPTA7aDxnLmxlbmd0aDtoKyspZ1toXSgpO2ZvcihpIGluIHIpcltpXS5mdW5jfHxhLmNvbnNvbGUubG9nKFwiR1NBUCBlbmNvdW50ZXJlZCBtaXNzaW5nIGRlcGVuZGVuY3k6IFwiK2kpfWs9ITF9KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDp0aGlzfHx3aW5kb3csXCJUd2Vlbk1heFwiKTsiLCIvKiFcbiAqIFZFUlNJT046IDIuMC4xXG4gKiBEQVRFOiAyMDE4LTA1LTMwXG4gKiBVUERBVEVTIEFORCBET0NTIEFUOiBodHRwOi8vZ3JlZW5zb2NrLmNvbVxuICpcbiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwOC0yMDE4LCBHcmVlblNvY2suIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIHdvcmsgaXMgc3ViamVjdCB0byB0aGUgdGVybXMgYXQgaHR0cDovL2dyZWVuc29jay5jb20vc3RhbmRhcmQtbGljZW5zZSBvciBmb3JcbiAqIENsdWIgR3JlZW5Tb2NrIG1lbWJlcnMsIHRoZSBzb2Z0d2FyZSBhZ3JlZW1lbnQgdGhhdCB3YXMgaXNzdWVkIHdpdGggeW91ciBtZW1iZXJzaGlwLlxuICogXG4gKiBAYXV0aG9yOiBKYWNrIERveWxlLCBqYWNrQGdyZWVuc29jay5jb21cbiAqL1xudmFyIF9nc1Njb3BlPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDp0aGlzfHx3aW5kb3c7KF9nc1Njb3BlLl9nc1F1ZXVlfHwoX2dzU2NvcGUuX2dzUXVldWU9W10pKS5wdXNoKGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7X2dzU2NvcGUuX2dzRGVmaW5lKFwiVGltZWxpbmVNYXhcIixbXCJUaW1lbGluZUxpdGVcIixcIlR3ZWVuTGl0ZVwiLFwiZWFzaW5nLkVhc2VcIl0sZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWZ1bmN0aW9uKGIpe2EuY2FsbCh0aGlzLGIpLHRoaXMuX3JlcGVhdD10aGlzLnZhcnMucmVwZWF0fHwwLHRoaXMuX3JlcGVhdERlbGF5PXRoaXMudmFycy5yZXBlYXREZWxheXx8MCx0aGlzLl9jeWNsZT0wLHRoaXMuX3lveW89dGhpcy52YXJzLnlveW89PT0hMCx0aGlzLl9kaXJ0eT0hMH0sZT0xZS0xMCxmPWIuX2ludGVybmFscyxnPWYubGF6eVR3ZWVucyxoPWYubGF6eVJlbmRlcixpPV9nc1Njb3BlLl9nc0RlZmluZS5nbG9iYWxzLGo9bmV3IGMobnVsbCxudWxsLDEsMCksaz1kLnByb3RvdHlwZT1uZXcgYTtyZXR1cm4gay5jb25zdHJ1Y3Rvcj1kLGsua2lsbCgpLl9nYz0hMSxkLnZlcnNpb249XCIyLjAuMVwiLGsuaW52YWxpZGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl95b3lvPXRoaXMudmFycy55b3lvPT09ITAsdGhpcy5fcmVwZWF0PXRoaXMudmFycy5yZXBlYXR8fDAsdGhpcy5fcmVwZWF0RGVsYXk9dGhpcy52YXJzLnJlcGVhdERlbGF5fHwwLHRoaXMuX3VuY2FjaGUoITApLGEucHJvdG90eXBlLmludmFsaWRhdGUuY2FsbCh0aGlzKX0say5hZGRDYWxsYmFjaz1mdW5jdGlvbihhLGMsZCxlKXtyZXR1cm4gdGhpcy5hZGQoYi5kZWxheWVkQ2FsbCgwLGEsZCxlKSxjKX0say5yZW1vdmVDYWxsYmFjaz1mdW5jdGlvbihhLGIpe2lmKGEpaWYobnVsbD09Yil0aGlzLl9raWxsKG51bGwsYSk7ZWxzZSBmb3IodmFyIGM9dGhpcy5nZXRUd2VlbnNPZihhLCExKSxkPWMubGVuZ3RoLGU9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChiKTstLWQ+LTE7KWNbZF0uX3N0YXJ0VGltZT09PWUmJmNbZF0uX2VuYWJsZWQoITEsITEpO3JldHVybiB0aGlzfSxrLnJlbW92ZVBhdXNlPWZ1bmN0aW9uKGIpe3JldHVybiB0aGlzLnJlbW92ZUNhbGxiYWNrKGEuX2ludGVybmFscy5wYXVzZUNhbGxiYWNrLGIpfSxrLnR3ZWVuVG89ZnVuY3Rpb24oYSxjKXtjPWN8fHt9O3ZhciBkLGUsZixnPXtlYXNlOmosdXNlRnJhbWVzOnRoaXMudXNlc0ZyYW1lcygpLGltbWVkaWF0ZVJlbmRlcjohMSxsYXp5OiExfSxoPWMucmVwZWF0JiZpLlR3ZWVuTWF4fHxiO2ZvcihlIGluIGMpZ1tlXT1jW2VdO3JldHVybiBnLnRpbWU9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChhKSxkPU1hdGguYWJzKE51bWJlcihnLnRpbWUpLXRoaXMuX3RpbWUpL3RoaXMuX3RpbWVTY2FsZXx8LjAwMSxmPW5ldyBoKHRoaXMsZCxnKSxnLm9uU3RhcnQ9ZnVuY3Rpb24oKXtmLnRhcmdldC5wYXVzZWQoITApLGYudmFycy50aW1lPT09Zi50YXJnZXQudGltZSgpfHxkIT09Zi5kdXJhdGlvbigpfHxmLmlzRnJvbVRvfHxmLmR1cmF0aW9uKE1hdGguYWJzKGYudmFycy50aW1lLWYudGFyZ2V0LnRpbWUoKSkvZi50YXJnZXQuX3RpbWVTY2FsZSkucmVuZGVyKGYudGltZSgpLCEwLCEwKSxjLm9uU3RhcnQmJmMub25TdGFydC5hcHBseShjLm9uU3RhcnRTY29wZXx8Yy5jYWxsYmFja1Njb3BlfHxmLGMub25TdGFydFBhcmFtc3x8W10pfSxmfSxrLnR3ZWVuRnJvbVRvPWZ1bmN0aW9uKGEsYixjKXtjPWN8fHt9LGE9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChhKSxjLnN0YXJ0QXQ9e29uQ29tcGxldGU6dGhpcy5zZWVrLG9uQ29tcGxldGVQYXJhbXM6W2FdLGNhbGxiYWNrU2NvcGU6dGhpc30sYy5pbW1lZGlhdGVSZW5kZXI9Yy5pbW1lZGlhdGVSZW5kZXIhPT0hMTt2YXIgZD10aGlzLnR3ZWVuVG8oYixjKTtyZXR1cm4gZC5pc0Zyb21Ubz0xLGQuZHVyYXRpb24oTWF0aC5hYnMoZC52YXJzLnRpbWUtYSkvdGhpcy5fdGltZVNjYWxlfHwuMDAxKX0say5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe3RoaXMuX2djJiZ0aGlzLl9lbmFibGVkKCEwLCExKTt2YXIgZCxmLGksaixrLGwsbSxuLG89dGhpcy5fdGltZSxwPXRoaXMuX2RpcnR5P3RoaXMudG90YWxEdXJhdGlvbigpOnRoaXMuX3RvdGFsRHVyYXRpb24scT10aGlzLl9kdXJhdGlvbixyPXRoaXMuX3RvdGFsVGltZSxzPXRoaXMuX3N0YXJ0VGltZSx0PXRoaXMuX3RpbWVTY2FsZSx1PXRoaXMuX3Jhd1ByZXZUaW1lLHY9dGhpcy5fcGF1c2VkLHc9dGhpcy5fY3ljbGU7aWYobyE9PXRoaXMuX3RpbWUmJihhKz10aGlzLl90aW1lLW8pLGE+PXAtMWUtNyYmYT49MCl0aGlzLl9sb2NrZWR8fCh0aGlzLl90b3RhbFRpbWU9cCx0aGlzLl9jeWNsZT10aGlzLl9yZXBlYXQpLHRoaXMuX3JldmVyc2VkfHx0aGlzLl9oYXNQYXVzZWRDaGlsZCgpfHwoZj0hMCxqPVwib25Db21wbGV0ZVwiLGs9ISF0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4sMD09PXRoaXMuX2R1cmF0aW9uJiYoMD49YSYmYT49LTFlLTd8fDA+dXx8dT09PWUpJiZ1IT09YSYmdGhpcy5fZmlyc3QmJihrPSEwLHU+ZSYmKGo9XCJvblJldmVyc2VDb21wbGV0ZVwiKSkpLHRoaXMuX3Jhd1ByZXZUaW1lPXRoaXMuX2R1cmF0aW9ufHwhYnx8YXx8dGhpcy5fcmF3UHJldlRpbWU9PT1hP2E6ZSx0aGlzLl95b3lvJiYwIT09KDEmdGhpcy5fY3ljbGUpP3RoaXMuX3RpbWU9YT0wOih0aGlzLl90aW1lPXEsYT1xKzFlLTQpO2Vsc2UgaWYoMWUtNz5hKWlmKHRoaXMuX2xvY2tlZHx8KHRoaXMuX3RvdGFsVGltZT10aGlzLl9jeWNsZT0wKSx0aGlzLl90aW1lPTAsKDAhPT1vfHwwPT09cSYmdSE9PWUmJih1PjB8fDA+YSYmdT49MCkmJiF0aGlzLl9sb2NrZWQpJiYoaj1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIsZj10aGlzLl9yZXZlcnNlZCksMD5hKXRoaXMuX2FjdGl2ZT0hMSx0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX3JldmVyc2VkPyhrPWY9ITAsaj1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIpOnU+PTAmJnRoaXMuX2ZpcnN0JiYoaz0hMCksdGhpcy5fcmF3UHJldlRpbWU9YTtlbHNle2lmKHRoaXMuX3Jhd1ByZXZUaW1lPXF8fCFifHxhfHx0aGlzLl9yYXdQcmV2VGltZT09PWE/YTplLDA9PT1hJiZmKWZvcihkPXRoaXMuX2ZpcnN0O2QmJjA9PT1kLl9zdGFydFRpbWU7KWQuX2R1cmF0aW9ufHwoZj0hMSksZD1kLl9uZXh0O2E9MCx0aGlzLl9pbml0dGVkfHwoaz0hMCl9ZWxzZSBpZigwPT09cSYmMD51JiYoaz0hMCksdGhpcy5fdGltZT10aGlzLl9yYXdQcmV2VGltZT1hLHRoaXMuX2xvY2tlZHx8KHRoaXMuX3RvdGFsVGltZT1hLDAhPT10aGlzLl9yZXBlYXQmJihsPXErdGhpcy5fcmVwZWF0RGVsYXksdGhpcy5fY3ljbGU9dGhpcy5fdG90YWxUaW1lL2w+PjAsMCE9PXRoaXMuX2N5Y2xlJiZ0aGlzLl9jeWNsZT09PXRoaXMuX3RvdGFsVGltZS9sJiZhPj1yJiZ0aGlzLl9jeWNsZS0tLHRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lLXRoaXMuX2N5Y2xlKmwsdGhpcy5feW95byYmMCE9PSgxJnRoaXMuX2N5Y2xlKSYmKHRoaXMuX3RpbWU9cS10aGlzLl90aW1lKSx0aGlzLl90aW1lPnE/KHRoaXMuX3RpbWU9cSxhPXErMWUtNCk6dGhpcy5fdGltZTwwP3RoaXMuX3RpbWU9YT0wOmE9dGhpcy5fdGltZSkpLHRoaXMuX2hhc1BhdXNlJiYhdGhpcy5fZm9yY2luZ1BsYXloZWFkJiYhYil7aWYoYT10aGlzLl90aW1lLGE+PW98fHRoaXMuX3JlcGVhdCYmdyE9PXRoaXMuX2N5Y2xlKWZvcihkPXRoaXMuX2ZpcnN0O2QmJmQuX3N0YXJ0VGltZTw9YSYmIW07KWQuX2R1cmF0aW9ufHxcImlzUGF1c2VcIiE9PWQuZGF0YXx8ZC5yYXRpb3x8MD09PWQuX3N0YXJ0VGltZSYmMD09PXRoaXMuX3Jhd1ByZXZUaW1lfHwobT1kKSxkPWQuX25leHQ7ZWxzZSBmb3IoZD10aGlzLl9sYXN0O2QmJmQuX3N0YXJ0VGltZT49YSYmIW07KWQuX2R1cmF0aW9ufHxcImlzUGF1c2VcIj09PWQuZGF0YSYmZC5fcmF3UHJldlRpbWU+MCYmKG09ZCksZD1kLl9wcmV2O20mJm0uX3N0YXJ0VGltZTxxJiYodGhpcy5fdGltZT1hPW0uX3N0YXJ0VGltZSx0aGlzLl90b3RhbFRpbWU9YSt0aGlzLl9jeWNsZSoodGhpcy5fdG90YWxEdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSkpfWlmKHRoaXMuX2N5Y2xlIT09dyYmIXRoaXMuX2xvY2tlZCl7dmFyIHg9dGhpcy5feW95byYmMCE9PSgxJncpLHk9eD09PSh0aGlzLl95b3lvJiYwIT09KDEmdGhpcy5fY3ljbGUpKSx6PXRoaXMuX3RvdGFsVGltZSxBPXRoaXMuX2N5Y2xlLEI9dGhpcy5fcmF3UHJldlRpbWUsQz10aGlzLl90aW1lO2lmKHRoaXMuX3RvdGFsVGltZT13KnEsdGhpcy5fY3ljbGU8dz94PSF4OnRoaXMuX3RvdGFsVGltZSs9cSx0aGlzLl90aW1lPW8sdGhpcy5fcmF3UHJldlRpbWU9MD09PXE/dS0xZS00OnUsdGhpcy5fY3ljbGU9dyx0aGlzLl9sb2NrZWQ9ITAsbz14PzA6cSx0aGlzLnJlbmRlcihvLGIsMD09PXEpLGJ8fHRoaXMuX2djfHx0aGlzLnZhcnMub25SZXBlYXQmJih0aGlzLl9jeWNsZT1BLHRoaXMuX2xvY2tlZD0hMSx0aGlzLl9jYWxsYmFjayhcIm9uUmVwZWF0XCIpKSxvIT09dGhpcy5fdGltZSlyZXR1cm47aWYoeSYmKHRoaXMuX2N5Y2xlPXcsdGhpcy5fbG9ja2VkPSEwLG89eD9xKzFlLTQ6LTFlLTQsdGhpcy5yZW5kZXIobywhMCwhMSkpLHRoaXMuX2xvY2tlZD0hMSx0aGlzLl9wYXVzZWQmJiF2KXJldHVybjt0aGlzLl90aW1lPUMsdGhpcy5fdG90YWxUaW1lPXosdGhpcy5fY3ljbGU9QSx0aGlzLl9yYXdQcmV2VGltZT1CfWlmKCEodGhpcy5fdGltZSE9PW8mJnRoaXMuX2ZpcnN0fHxjfHxrfHxtKSlyZXR1cm4gdm9pZChyIT09dGhpcy5fdG90YWxUaW1lJiZ0aGlzLl9vblVwZGF0ZSYmKGJ8fHRoaXMuX2NhbGxiYWNrKFwib25VcGRhdGVcIikpKTtpZih0aGlzLl9pbml0dGVkfHwodGhpcy5faW5pdHRlZD0hMCksdGhpcy5fYWN0aXZlfHwhdGhpcy5fcGF1c2VkJiZ0aGlzLl90b3RhbFRpbWUhPT1yJiZhPjAmJih0aGlzLl9hY3RpdmU9ITApLDA9PT1yJiZ0aGlzLnZhcnMub25TdGFydCYmKDA9PT10aGlzLl90b3RhbFRpbWUmJnRoaXMuX3RvdGFsRHVyYXRpb258fGJ8fHRoaXMuX2NhbGxiYWNrKFwib25TdGFydFwiKSksbj10aGlzLl90aW1lLG4+PW8pZm9yKGQ9dGhpcy5fZmlyc3Q7ZCYmKGk9ZC5fbmV4dCxuPT09dGhpcy5fdGltZSYmKCF0aGlzLl9wYXVzZWR8fHYpKTspKGQuX2FjdGl2ZXx8ZC5fc3RhcnRUaW1lPD10aGlzLl90aW1lJiYhZC5fcGF1c2VkJiYhZC5fZ2MpJiYobT09PWQmJnRoaXMucGF1c2UoKSxkLl9yZXZlcnNlZD9kLnJlbmRlcigoZC5fZGlydHk/ZC50b3RhbER1cmF0aW9uKCk6ZC5fdG90YWxEdXJhdGlvbiktKGEtZC5fc3RhcnRUaW1lKSpkLl90aW1lU2NhbGUsYixjKTpkLnJlbmRlcigoYS1kLl9zdGFydFRpbWUpKmQuX3RpbWVTY2FsZSxiLGMpKSxkPWk7ZWxzZSBmb3IoZD10aGlzLl9sYXN0O2QmJihpPWQuX3ByZXYsbj09PXRoaXMuX3RpbWUmJighdGhpcy5fcGF1c2VkfHx2KSk7KXtpZihkLl9hY3RpdmV8fGQuX3N0YXJ0VGltZTw9byYmIWQuX3BhdXNlZCYmIWQuX2djKXtpZihtPT09ZCl7Zm9yKG09ZC5fcHJldjttJiZtLmVuZFRpbWUoKT50aGlzLl90aW1lOyltLnJlbmRlcihtLl9yZXZlcnNlZD9tLnRvdGFsRHVyYXRpb24oKS0oYS1tLl9zdGFydFRpbWUpKm0uX3RpbWVTY2FsZTooYS1tLl9zdGFydFRpbWUpKm0uX3RpbWVTY2FsZSxiLGMpLG09bS5fcHJldjttPW51bGwsdGhpcy5wYXVzZSgpfWQuX3JldmVyc2VkP2QucmVuZGVyKChkLl9kaXJ0eT9kLnRvdGFsRHVyYXRpb24oKTpkLl90b3RhbER1cmF0aW9uKS0oYS1kLl9zdGFydFRpbWUpKmQuX3RpbWVTY2FsZSxiLGMpOmQucmVuZGVyKChhLWQuX3N0YXJ0VGltZSkqZC5fdGltZVNjYWxlLGIsYyl9ZD1pfXRoaXMuX29uVXBkYXRlJiYoYnx8KGcubGVuZ3RoJiZoKCksdGhpcy5fY2FsbGJhY2soXCJvblVwZGF0ZVwiKSkpLGomJih0aGlzLl9sb2NrZWR8fHRoaXMuX2djfHwocz09PXRoaXMuX3N0YXJ0VGltZXx8dCE9PXRoaXMuX3RpbWVTY2FsZSkmJigwPT09dGhpcy5fdGltZXx8cD49dGhpcy50b3RhbER1cmF0aW9uKCkpJiYoZiYmKGcubGVuZ3RoJiZoKCksdGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuJiZ0aGlzLl9lbmFibGVkKCExLCExKSx0aGlzLl9hY3RpdmU9ITEpLCFiJiZ0aGlzLnZhcnNbal0mJnRoaXMuX2NhbGxiYWNrKGopKSl9LGsuZ2V0QWN0aXZlPWZ1bmN0aW9uKGEsYixjKXtudWxsPT1hJiYoYT0hMCksbnVsbD09YiYmKGI9ITApLG51bGw9PWMmJihjPSExKTt2YXIgZCxlLGY9W10sZz10aGlzLmdldENoaWxkcmVuKGEsYixjKSxoPTAsaT1nLmxlbmd0aDtmb3IoZD0wO2k+ZDtkKyspZT1nW2RdLGUuaXNBY3RpdmUoKSYmKGZbaCsrXT1lKTtyZXR1cm4gZn0say5nZXRMYWJlbEFmdGVyPWZ1bmN0aW9uKGEpe2F8fDAhPT1hJiYoYT10aGlzLl90aW1lKTt2YXIgYixjPXRoaXMuZ2V0TGFiZWxzQXJyYXkoKSxkPWMubGVuZ3RoO2ZvcihiPTA7ZD5iO2IrKylpZihjW2JdLnRpbWU+YSlyZXR1cm4gY1tiXS5uYW1lO3JldHVybiBudWxsfSxrLmdldExhYmVsQmVmb3JlPWZ1bmN0aW9uKGEpe251bGw9PWEmJihhPXRoaXMuX3RpbWUpO2Zvcih2YXIgYj10aGlzLmdldExhYmVsc0FycmF5KCksYz1iLmxlbmd0aDstLWM+LTE7KWlmKGJbY10udGltZTxhKXJldHVybiBiW2NdLm5hbWU7cmV0dXJuIG51bGx9LGsuZ2V0TGFiZWxzQXJyYXk9ZnVuY3Rpb24oKXt2YXIgYSxiPVtdLGM9MDtmb3IoYSBpbiB0aGlzLl9sYWJlbHMpYltjKytdPXt0aW1lOnRoaXMuX2xhYmVsc1thXSxuYW1lOmF9O3JldHVybiBiLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS50aW1lLWIudGltZX0pLGJ9LGsuaW52YWxpZGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb2NrZWQ9ITEsYS5wcm90b3R5cGUuaW52YWxpZGF0ZS5jYWxsKHRoaXMpfSxrLnByb2dyZXNzPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/dGhpcy50b3RhbFRpbWUodGhpcy5kdXJhdGlvbigpKih0aGlzLl95b3lvJiYwIT09KDEmdGhpcy5fY3ljbGUpPzEtYTphKSt0aGlzLl9jeWNsZSoodGhpcy5fZHVyYXRpb24rdGhpcy5fcmVwZWF0RGVsYXkpLGIpOnRoaXMuX3RpbWUvdGhpcy5kdXJhdGlvbigpfHwwfSxrLnRvdGFsUHJvZ3Jlc3M9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLnRvdGFsVGltZSh0aGlzLnRvdGFsRHVyYXRpb24oKSphLGIpOnRoaXMuX3RvdGFsVGltZS90aGlzLnRvdGFsRHVyYXRpb24oKXx8MH0say50b3RhbER1cmF0aW9uPWZ1bmN0aW9uKGIpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPy0xIT09dGhpcy5fcmVwZWF0JiZiP3RoaXMudGltZVNjYWxlKHRoaXMudG90YWxEdXJhdGlvbigpL2IpOnRoaXM6KHRoaXMuX2RpcnR5JiYoYS5wcm90b3R5cGUudG90YWxEdXJhdGlvbi5jYWxsKHRoaXMpLHRoaXMuX3RvdGFsRHVyYXRpb249LTE9PT10aGlzLl9yZXBlYXQ/OTk5OTk5OTk5OTk5OnRoaXMuX2R1cmF0aW9uKih0aGlzLl9yZXBlYXQrMSkrdGhpcy5fcmVwZWF0RGVsYXkqdGhpcy5fcmVwZWF0KSx0aGlzLl90b3RhbER1cmF0aW9uKX0say50aW1lPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2RpcnR5JiZ0aGlzLnRvdGFsRHVyYXRpb24oKSxhPnRoaXMuX2R1cmF0aW9uJiYoYT10aGlzLl9kdXJhdGlvbiksdGhpcy5feW95byYmMCE9PSgxJnRoaXMuX2N5Y2xlKT9hPXRoaXMuX2R1cmF0aW9uLWErdGhpcy5fY3ljbGUqKHRoaXMuX2R1cmF0aW9uK3RoaXMuX3JlcGVhdERlbGF5KTowIT09dGhpcy5fcmVwZWF0JiYoYSs9dGhpcy5fY3ljbGUqKHRoaXMuX2R1cmF0aW9uK3RoaXMuX3JlcGVhdERlbGF5KSksdGhpcy50b3RhbFRpbWUoYSxiKSk6dGhpcy5fdGltZX0say5yZXBlYXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3JlcGVhdD1hLHRoaXMuX3VuY2FjaGUoITApKTp0aGlzLl9yZXBlYXR9LGsucmVwZWF0RGVsYXk9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3JlcGVhdERlbGF5PWEsdGhpcy5fdW5jYWNoZSghMCkpOnRoaXMuX3JlcGVhdERlbGF5fSxrLnlveW89ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX3lveW89YSx0aGlzKTp0aGlzLl95b3lvfSxrLmN1cnJlbnRMYWJlbD1mdW5jdGlvbihhKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLnNlZWsoYSwhMCk6dGhpcy5nZXRMYWJlbEJlZm9yZSh0aGlzLl90aW1lKzFlLTgpfSxkfSwhMCksX2dzU2NvcGUuX2dzRGVmaW5lKFwiVGltZWxpbmVMaXRlXCIsW1wiY29yZS5BbmltYXRpb25cIixcImNvcmUuU2ltcGxlVGltZWxpbmVcIixcIlR3ZWVuTGl0ZVwiXSxmdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZnVuY3Rpb24oYSl7Yi5jYWxsKHRoaXMsYSksdGhpcy5fbGFiZWxzPXt9LHRoaXMuYXV0b1JlbW92ZUNoaWxkcmVuPXRoaXMudmFycy5hdXRvUmVtb3ZlQ2hpbGRyZW49PT0hMCx0aGlzLnNtb290aENoaWxkVGltaW5nPXRoaXMudmFycy5zbW9vdGhDaGlsZFRpbWluZz09PSEwLHRoaXMuX3NvcnRDaGlsZHJlbj0hMCx0aGlzLl9vblVwZGF0ZT10aGlzLnZhcnMub25VcGRhdGU7dmFyIGMsZCxlPXRoaXMudmFycztmb3IoZCBpbiBlKWM9ZVtkXSxpKGMpJiYtMSE9PWMuam9pbihcIlwiKS5pbmRleE9mKFwie3NlbGZ9XCIpJiYoZVtkXT10aGlzLl9zd2FwU2VsZkluUGFyYW1zKGMpKTtpKGUudHdlZW5zKSYmdGhpcy5hZGQoZS50d2VlbnMsMCxlLmFsaWduLGUuc3RhZ2dlcil9LGU9MWUtMTAsZj1jLl9pbnRlcm5hbHMsZz1kLl9pbnRlcm5hbHM9e30saD1mLmlzU2VsZWN0b3IsaT1mLmlzQXJyYXksaj1mLmxhenlUd2VlbnMsaz1mLmxhenlSZW5kZXIsbD1fZ3NTY29wZS5fZ3NEZWZpbmUuZ2xvYmFscyxtPWZ1bmN0aW9uKGEpe3ZhciBiLGM9e307Zm9yKGIgaW4gYSljW2JdPWFbYl07cmV0dXJuIGN9LG49ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1hLmN5Y2xlO2ZvcihkIGluIGYpZT1mW2RdLGFbZF09XCJmdW5jdGlvblwiPT10eXBlb2YgZT9lKGMsYltjXSk6ZVtjJWUubGVuZ3RoXTtkZWxldGUgYS5jeWNsZX0sbz1nLnBhdXNlQ2FsbGJhY2s9ZnVuY3Rpb24oKXt9LHA9ZnVuY3Rpb24oYSl7dmFyIGIsYz1bXSxkPWEubGVuZ3RoO2ZvcihiPTA7YiE9PWQ7Yy5wdXNoKGFbYisrXSkpO3JldHVybiBjfSxxPWQucHJvdG90eXBlPW5ldyBiO3JldHVybiBkLnZlcnNpb249XCIyLjAuMVwiLHEuY29uc3RydWN0b3I9ZCxxLmtpbGwoKS5fZ2M9cS5fZm9yY2luZ1BsYXloZWFkPXEuX2hhc1BhdXNlPSExLHEudG89ZnVuY3Rpb24oYSxiLGQsZSl7dmFyIGY9ZC5yZXBlYXQmJmwuVHdlZW5NYXh8fGM7cmV0dXJuIGI/dGhpcy5hZGQobmV3IGYoYSxiLGQpLGUpOnRoaXMuc2V0KGEsZCxlKX0scS5mcm9tPWZ1bmN0aW9uKGEsYixkLGUpe3JldHVybiB0aGlzLmFkZCgoZC5yZXBlYXQmJmwuVHdlZW5NYXh8fGMpLmZyb20oYSxiLGQpLGUpfSxxLmZyb21Ubz1mdW5jdGlvbihhLGIsZCxlLGYpe3ZhciBnPWUucmVwZWF0JiZsLlR3ZWVuTWF4fHxjO3JldHVybiBiP3RoaXMuYWRkKGcuZnJvbVRvKGEsYixkLGUpLGYpOnRoaXMuc2V0KGEsZSxmKX0scS5zdGFnZ2VyVG89ZnVuY3Rpb24oYSxiLGUsZixnLGksaixrKXt2YXIgbCxvLHE9bmV3IGQoe29uQ29tcGxldGU6aSxvbkNvbXBsZXRlUGFyYW1zOmosY2FsbGJhY2tTY29wZTprLHNtb290aENoaWxkVGltaW5nOnRoaXMuc21vb3RoQ2hpbGRUaW1pbmd9KSxyPWUuY3ljbGU7Zm9yKFwic3RyaW5nXCI9PXR5cGVvZiBhJiYoYT1jLnNlbGVjdG9yKGEpfHxhKSxhPWF8fFtdLGgoYSkmJihhPXAoYSkpLGY9Znx8MCwwPmYmJihhPXAoYSksYS5yZXZlcnNlKCksZio9LTEpLG89MDtvPGEubGVuZ3RoO28rKylsPW0oZSksbC5zdGFydEF0JiYobC5zdGFydEF0PW0obC5zdGFydEF0KSxsLnN0YXJ0QXQuY3ljbGUmJm4obC5zdGFydEF0LGEsbykpLHImJihuKGwsYSxvKSxudWxsIT1sLmR1cmF0aW9uJiYoYj1sLmR1cmF0aW9uLGRlbGV0ZSBsLmR1cmF0aW9uKSkscS50byhhW29dLGIsbCxvKmYpO3JldHVybiB0aGlzLmFkZChxLGcpfSxxLnN0YWdnZXJGcm9tPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCl7cmV0dXJuIGMuaW1tZWRpYXRlUmVuZGVyPTAhPWMuaW1tZWRpYXRlUmVuZGVyLGMucnVuQmFja3dhcmRzPSEwLHRoaXMuc3RhZ2dlclRvKGEsYixjLGQsZSxmLGcsaCl9LHEuc3RhZ2dlckZyb21Ubz1mdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsaSl7cmV0dXJuIGQuc3RhcnRBdD1jLGQuaW1tZWRpYXRlUmVuZGVyPTAhPWQuaW1tZWRpYXRlUmVuZGVyJiYwIT1jLmltbWVkaWF0ZVJlbmRlcix0aGlzLnN0YWdnZXJUbyhhLGIsZCxlLGYsZyxoLGkpfSxxLmNhbGw9ZnVuY3Rpb24oYSxiLGQsZSl7cmV0dXJuIHRoaXMuYWRkKGMuZGVsYXllZENhbGwoMCxhLGIsZCksZSl9LHEuc2V0PWZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gZD10aGlzLl9wYXJzZVRpbWVPckxhYmVsKGQsMCwhMCksbnVsbD09Yi5pbW1lZGlhdGVSZW5kZXImJihiLmltbWVkaWF0ZVJlbmRlcj1kPT09dGhpcy5fdGltZSYmIXRoaXMuX3BhdXNlZCksdGhpcy5hZGQobmV3IGMoYSwwLGIpLGQpfSxkLmV4cG9ydFJvb3Q9ZnVuY3Rpb24oYSxiKXthPWF8fHt9LG51bGw9PWEuc21vb3RoQ2hpbGRUaW1pbmcmJihhLnNtb290aENoaWxkVGltaW5nPSEwKTt2YXIgZSxmLGcsaCxpPW5ldyBkKGEpLGo9aS5fdGltZWxpbmU7Zm9yKG51bGw9PWImJihiPSEwKSxqLl9yZW1vdmUoaSwhMCksaS5fc3RhcnRUaW1lPTAsaS5fcmF3UHJldlRpbWU9aS5fdGltZT1pLl90b3RhbFRpbWU9ai5fdGltZSxnPWouX2ZpcnN0O2c7KWg9Zy5fbmV4dCxiJiZnIGluc3RhbmNlb2YgYyYmZy50YXJnZXQ9PT1nLnZhcnMub25Db21wbGV0ZXx8KGY9Zy5fc3RhcnRUaW1lLWcuX2RlbGF5LDA+ZiYmKGU9MSksaS5hZGQoZyxmKSksZz1oO3JldHVybiBqLmFkZChpLDApLGUmJmkudG90YWxEdXJhdGlvbigpLGl9LHEuYWRkPWZ1bmN0aW9uKGUsZixnLGgpe3ZhciBqLGssbCxtLG4sbztpZihcIm51bWJlclwiIT10eXBlb2YgZiYmKGY9dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChmLDAsITAsZSkpLCEoZSBpbnN0YW5jZW9mIGEpKXtpZihlIGluc3RhbmNlb2YgQXJyYXl8fGUmJmUucHVzaCYmaShlKSl7Zm9yKGc9Z3x8XCJub3JtYWxcIixoPWh8fDAsaj1mLGs9ZS5sZW5ndGgsbD0wO2s+bDtsKyspaShtPWVbbF0pJiYobT1uZXcgZCh7dHdlZW5zOm19KSksdGhpcy5hZGQobSxqKSxcInN0cmluZ1wiIT10eXBlb2YgbSYmXCJmdW5jdGlvblwiIT10eXBlb2YgbSYmKFwic2VxdWVuY2VcIj09PWc/aj1tLl9zdGFydFRpbWUrbS50b3RhbER1cmF0aW9uKCkvbS5fdGltZVNjYWxlOlwic3RhcnRcIj09PWcmJihtLl9zdGFydFRpbWUtPW0uZGVsYXkoKSkpLGorPWg7cmV0dXJuIHRoaXMuX3VuY2FjaGUoITApfWlmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiB0aGlzLmFkZExhYmVsKGUsZik7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvd1wiQ2Fubm90IGFkZCBcIitlK1wiIGludG8gdGhlIHRpbWVsaW5lOyBpdCBpcyBub3QgYSB0d2VlbiwgdGltZWxpbmUsIGZ1bmN0aW9uLCBvciBzdHJpbmcuXCI7ZT1jLmRlbGF5ZWRDYWxsKDAsZSl9aWYoYi5wcm90b3R5cGUuYWRkLmNhbGwodGhpcyxlLGYpLGUuX3RpbWUmJmUucmVuZGVyKCh0aGlzLnJhd1RpbWUoKS1lLl9zdGFydFRpbWUpKmUuX3RpbWVTY2FsZSwhMSwhMSksKHRoaXMuX2djfHx0aGlzLl90aW1lPT09dGhpcy5fZHVyYXRpb24pJiYhdGhpcy5fcGF1c2VkJiZ0aGlzLl9kdXJhdGlvbjx0aGlzLmR1cmF0aW9uKCkpZm9yKG49dGhpcyxvPW4ucmF3VGltZSgpPmUuX3N0YXJ0VGltZTtuLl90aW1lbGluZTspbyYmbi5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmc/bi50b3RhbFRpbWUobi5fdG90YWxUaW1lLCEwKTpuLl9nYyYmbi5fZW5hYmxlZCghMCwhMSksbj1uLl90aW1lbGluZTtyZXR1cm4gdGhpc30scS5yZW1vdmU9ZnVuY3Rpb24oYil7aWYoYiBpbnN0YW5jZW9mIGEpe3RoaXMuX3JlbW92ZShiLCExKTt2YXIgYz1iLl90aW1lbGluZT1iLnZhcnMudXNlRnJhbWVzP2EuX3Jvb3RGcmFtZXNUaW1lbGluZTphLl9yb290VGltZWxpbmU7cmV0dXJuIGIuX3N0YXJ0VGltZT0oYi5fcGF1c2VkP2IuX3BhdXNlVGltZTpjLl90aW1lKS0oYi5fcmV2ZXJzZWQ/Yi50b3RhbER1cmF0aW9uKCktYi5fdG90YWxUaW1lOmIuX3RvdGFsVGltZSkvYi5fdGltZVNjYWxlLHRoaXN9aWYoYiBpbnN0YW5jZW9mIEFycmF5fHxiJiZiLnB1c2gmJmkoYikpe2Zvcih2YXIgZD1iLmxlbmd0aDstLWQ+LTE7KXRoaXMucmVtb3ZlKGJbZF0pO3JldHVybiB0aGlzfXJldHVyblwic3RyaW5nXCI9PXR5cGVvZiBiP3RoaXMucmVtb3ZlTGFiZWwoYik6dGhpcy5raWxsKG51bGwsYil9LHEuX3JlbW92ZT1mdW5jdGlvbihhLGMpe2IucHJvdG90eXBlLl9yZW1vdmUuY2FsbCh0aGlzLGEsYyk7dmFyIGQ9dGhpcy5fbGFzdDtyZXR1cm4gZD90aGlzLl90aW1lPnRoaXMuZHVyYXRpb24oKSYmKHRoaXMuX3RpbWU9dGhpcy5fZHVyYXRpb24sdGhpcy5fdG90YWxUaW1lPXRoaXMuX3RvdGFsRHVyYXRpb24pOnRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lPXRoaXMuX2R1cmF0aW9uPXRoaXMuX3RvdGFsRHVyYXRpb249MCx0aGlzfSxxLmFwcGVuZD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmFkZChhLHRoaXMuX3BhcnNlVGltZU9yTGFiZWwobnVsbCxiLCEwLGEpKX0scS5pbnNlcnQ9cS5pbnNlcnRNdWx0aXBsZT1mdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5hZGQoYSxifHwwLGMsZCl9LHEuYXBwZW5kTXVsdGlwbGU9ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHRoaXMuYWRkKGEsdGhpcy5fcGFyc2VUaW1lT3JMYWJlbChudWxsLGIsITAsYSksYyxkKX0scS5hZGRMYWJlbD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLl9sYWJlbHNbYV09dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChiKSx0aGlzfSxxLmFkZFBhdXNlPWZ1bmN0aW9uKGEsYixkLGUpe3ZhciBmPWMuZGVsYXllZENhbGwoMCxvLGQsZXx8dGhpcyk7cmV0dXJuIGYudmFycy5vbkNvbXBsZXRlPWYudmFycy5vblJldmVyc2VDb21wbGV0ZT1iLGYuZGF0YT1cImlzUGF1c2VcIix0aGlzLl9oYXNQYXVzZT0hMCx0aGlzLmFkZChmLGEpfSxxLnJlbW92ZUxhYmVsPWZ1bmN0aW9uKGEpe3JldHVybiBkZWxldGUgdGhpcy5fbGFiZWxzW2FdLHRoaXN9LHEuZ2V0TGFiZWxUaW1lPWZ1bmN0aW9uKGEpe3JldHVybiBudWxsIT10aGlzLl9sYWJlbHNbYV0/dGhpcy5fbGFiZWxzW2FdOi0xfSxxLl9wYXJzZVRpbWVPckxhYmVsPWZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmLGc7aWYoZSBpbnN0YW5jZW9mIGEmJmUudGltZWxpbmU9PT10aGlzKXRoaXMucmVtb3ZlKGUpO2Vsc2UgaWYoZSYmKGUgaW5zdGFuY2VvZiBBcnJheXx8ZS5wdXNoJiZpKGUpKSlmb3IoZz1lLmxlbmd0aDstLWc+LTE7KWVbZ11pbnN0YW5jZW9mIGEmJmVbZ10udGltZWxpbmU9PT10aGlzJiZ0aGlzLnJlbW92ZShlW2ddKTtpZihmPVwibnVtYmVyXCIhPXR5cGVvZiBifHxjP3RoaXMuZHVyYXRpb24oKT45OTk5OTk5OTk5OT90aGlzLnJlY2VudCgpLmVuZFRpbWUoITEpOnRoaXMuX2R1cmF0aW9uOjAsXCJzdHJpbmdcIj09dHlwZW9mIGMpcmV0dXJuIHRoaXMuX3BhcnNlVGltZU9yTGFiZWwoYyxkJiZcIm51bWJlclwiPT10eXBlb2YgYiYmbnVsbD09dGhpcy5fbGFiZWxzW2NdP2ItZjowLGQpO2lmKGM9Y3x8MCxcInN0cmluZ1wiIT10eXBlb2YgYnx8IWlzTmFOKGIpJiZudWxsPT10aGlzLl9sYWJlbHNbYl0pbnVsbD09YiYmKGI9Zik7ZWxzZXtpZihnPWIuaW5kZXhPZihcIj1cIiksLTE9PT1nKXJldHVybiBudWxsPT10aGlzLl9sYWJlbHNbYl0/ZD90aGlzLl9sYWJlbHNbYl09ZitjOmM6dGhpcy5fbGFiZWxzW2JdK2M7Yz1wYXJzZUludChiLmNoYXJBdChnLTEpK1wiMVwiLDEwKSpOdW1iZXIoYi5zdWJzdHIoZysxKSksYj1nPjE/dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChiLnN1YnN0cigwLGctMSksMCxkKTpmfXJldHVybiBOdW1iZXIoYikrY30scS5zZWVrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMudG90YWxUaW1lKFwibnVtYmVyXCI9PXR5cGVvZiBhP2E6dGhpcy5fcGFyc2VUaW1lT3JMYWJlbChhKSxiIT09ITEpfSxxLnN0b3A9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXVzZWQoITApfSxxLmdvdG9BbmRQbGF5PWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMucGxheShhLGIpfSxxLmdvdG9BbmRTdG9wPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMucGF1c2UoYSxiKX0scS5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe3RoaXMuX2djJiZ0aGlzLl9lbmFibGVkKCEwLCExKTt2YXIgZCxmLGcsaCxpLGwsbSxuPXRoaXMuX2RpcnR5P3RoaXMudG90YWxEdXJhdGlvbigpOnRoaXMuX3RvdGFsRHVyYXRpb24sbz10aGlzLl90aW1lLHA9dGhpcy5fc3RhcnRUaW1lLHE9dGhpcy5fdGltZVNjYWxlLHI9dGhpcy5fcGF1c2VkO2lmKGE+PW4tMWUtNyYmYT49MCl0aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT1uLHRoaXMuX3JldmVyc2VkfHx0aGlzLl9oYXNQYXVzZWRDaGlsZCgpfHwoZj0hMCxoPVwib25Db21wbGV0ZVwiLGk9ISF0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4sMD09PXRoaXMuX2R1cmF0aW9uJiYoMD49YSYmYT49LTFlLTd8fHRoaXMuX3Jhd1ByZXZUaW1lPDB8fHRoaXMuX3Jhd1ByZXZUaW1lPT09ZSkmJnRoaXMuX3Jhd1ByZXZUaW1lIT09YSYmdGhpcy5fZmlyc3QmJihpPSEwLHRoaXMuX3Jhd1ByZXZUaW1lPmUmJihoPVwib25SZXZlcnNlQ29tcGxldGVcIikpKSx0aGlzLl9yYXdQcmV2VGltZT10aGlzLl9kdXJhdGlvbnx8IWJ8fGF8fHRoaXMuX3Jhd1ByZXZUaW1lPT09YT9hOmUsYT1uKzFlLTQ7ZWxzZSBpZigxZS03PmEpaWYodGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9MCwoMCE9PW98fDA9PT10aGlzLl9kdXJhdGlvbiYmdGhpcy5fcmF3UHJldlRpbWUhPT1lJiYodGhpcy5fcmF3UHJldlRpbWU+MHx8MD5hJiZ0aGlzLl9yYXdQcmV2VGltZT49MCkpJiYoaD1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIsZj10aGlzLl9yZXZlcnNlZCksMD5hKXRoaXMuX2FjdGl2ZT0hMSx0aGlzLl90aW1lbGluZS5hdXRvUmVtb3ZlQ2hpbGRyZW4mJnRoaXMuX3JldmVyc2VkPyhpPWY9ITAsaD1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIpOnRoaXMuX3Jhd1ByZXZUaW1lPj0wJiZ0aGlzLl9maXJzdCYmKGk9ITApLHRoaXMuX3Jhd1ByZXZUaW1lPWE7ZWxzZXtpZih0aGlzLl9yYXdQcmV2VGltZT10aGlzLl9kdXJhdGlvbnx8IWJ8fGF8fHRoaXMuX3Jhd1ByZXZUaW1lPT09YT9hOmUsMD09PWEmJmYpZm9yKGQ9dGhpcy5fZmlyc3Q7ZCYmMD09PWQuX3N0YXJ0VGltZTspZC5fZHVyYXRpb258fChmPSExKSxkPWQuX25leHQ7YT0wLHRoaXMuX2luaXR0ZWR8fChpPSEwKX1lbHNle2lmKHRoaXMuX2hhc1BhdXNlJiYhdGhpcy5fZm9yY2luZ1BsYXloZWFkJiYhYil7aWYoYT49bylmb3IoZD10aGlzLl9maXJzdDtkJiZkLl9zdGFydFRpbWU8PWEmJiFsOylkLl9kdXJhdGlvbnx8XCJpc1BhdXNlXCIhPT1kLmRhdGF8fGQucmF0aW98fDA9PT1kLl9zdGFydFRpbWUmJjA9PT10aGlzLl9yYXdQcmV2VGltZXx8KGw9ZCksZD1kLl9uZXh0O2Vsc2UgZm9yKGQ9dGhpcy5fbGFzdDtkJiZkLl9zdGFydFRpbWU+PWEmJiFsOylkLl9kdXJhdGlvbnx8XCJpc1BhdXNlXCI9PT1kLmRhdGEmJmQuX3Jhd1ByZXZUaW1lPjAmJihsPWQpLGQ9ZC5fcHJldjtsJiYodGhpcy5fdGltZT1hPWwuX3N0YXJ0VGltZSx0aGlzLl90b3RhbFRpbWU9YSt0aGlzLl9jeWNsZSoodGhpcy5fdG90YWxEdXJhdGlvbit0aGlzLl9yZXBlYXREZWxheSkpfXRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPXRoaXMuX3Jhd1ByZXZUaW1lPWF9aWYodGhpcy5fdGltZSE9PW8mJnRoaXMuX2ZpcnN0fHxjfHxpfHxsKXtpZih0aGlzLl9pbml0dGVkfHwodGhpcy5faW5pdHRlZD0hMCksdGhpcy5fYWN0aXZlfHwhdGhpcy5fcGF1c2VkJiZ0aGlzLl90aW1lIT09byYmYT4wJiYodGhpcy5fYWN0aXZlPSEwKSwwPT09byYmdGhpcy52YXJzLm9uU3RhcnQmJigwPT09dGhpcy5fdGltZSYmdGhpcy5fZHVyYXRpb258fGJ8fHRoaXMuX2NhbGxiYWNrKFwib25TdGFydFwiKSksbT10aGlzLl90aW1lLG0+PW8pZm9yKGQ9dGhpcy5fZmlyc3Q7ZCYmKGc9ZC5fbmV4dCxtPT09dGhpcy5fdGltZSYmKCF0aGlzLl9wYXVzZWR8fHIpKTspKGQuX2FjdGl2ZXx8ZC5fc3RhcnRUaW1lPD1tJiYhZC5fcGF1c2VkJiYhZC5fZ2MpJiYobD09PWQmJnRoaXMucGF1c2UoKSxkLl9yZXZlcnNlZD9kLnJlbmRlcigoZC5fZGlydHk/ZC50b3RhbER1cmF0aW9uKCk6ZC5fdG90YWxEdXJhdGlvbiktKGEtZC5fc3RhcnRUaW1lKSpkLl90aW1lU2NhbGUsYixjKTpkLnJlbmRlcigoYS1kLl9zdGFydFRpbWUpKmQuX3RpbWVTY2FsZSxiLGMpKSxkPWc7ZWxzZSBmb3IoZD10aGlzLl9sYXN0O2QmJihnPWQuX3ByZXYsbT09PXRoaXMuX3RpbWUmJighdGhpcy5fcGF1c2VkfHxyKSk7KXtpZihkLl9hY3RpdmV8fGQuX3N0YXJ0VGltZTw9byYmIWQuX3BhdXNlZCYmIWQuX2djKXtpZihsPT09ZCl7Zm9yKGw9ZC5fcHJldjtsJiZsLmVuZFRpbWUoKT50aGlzLl90aW1lOylsLnJlbmRlcihsLl9yZXZlcnNlZD9sLnRvdGFsRHVyYXRpb24oKS0oYS1sLl9zdGFydFRpbWUpKmwuX3RpbWVTY2FsZTooYS1sLl9zdGFydFRpbWUpKmwuX3RpbWVTY2FsZSxiLGMpLGw9bC5fcHJldjtsPW51bGwsdGhpcy5wYXVzZSgpfWQuX3JldmVyc2VkP2QucmVuZGVyKChkLl9kaXJ0eT9kLnRvdGFsRHVyYXRpb24oKTpkLl90b3RhbER1cmF0aW9uKS0oYS1kLl9zdGFydFRpbWUpKmQuX3RpbWVTY2FsZSxiLGMpOmQucmVuZGVyKChhLWQuX3N0YXJ0VGltZSkqZC5fdGltZVNjYWxlLGIsYyl9ZD1nfXRoaXMuX29uVXBkYXRlJiYoYnx8KGoubGVuZ3RoJiZrKCksdGhpcy5fY2FsbGJhY2soXCJvblVwZGF0ZVwiKSkpLGgmJih0aGlzLl9nY3x8KHA9PT10aGlzLl9zdGFydFRpbWV8fHEhPT10aGlzLl90aW1lU2NhbGUpJiYoMD09PXRoaXMuX3RpbWV8fG4+PXRoaXMudG90YWxEdXJhdGlvbigpKSYmKGYmJihqLmxlbmd0aCYmaygpLHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiYmdGhpcy5fZW5hYmxlZCghMSwhMSksdGhpcy5fYWN0aXZlPSExKSwhYiYmdGhpcy52YXJzW2hdJiZ0aGlzLl9jYWxsYmFjayhoKSkpfX0scS5faGFzUGF1c2VkQ2hpbGQ9ZnVuY3Rpb24oKXtmb3IodmFyIGE9dGhpcy5fZmlyc3Q7YTspe2lmKGEuX3BhdXNlZHx8YSBpbnN0YW5jZW9mIGQmJmEuX2hhc1BhdXNlZENoaWxkKCkpcmV0dXJuITA7YT1hLl9uZXh0fXJldHVybiExfSxxLmdldENoaWxkcmVuPWZ1bmN0aW9uKGEsYixkLGUpe2U9ZXx8LTk5OTk5OTk5OTk7Zm9yKHZhciBmPVtdLGc9dGhpcy5fZmlyc3QsaD0wO2c7KWcuX3N0YXJ0VGltZTxlfHwoZyBpbnN0YW5jZW9mIGM/YiE9PSExJiYoZltoKytdPWcpOihkIT09ITEmJihmW2grK109ZyksYSE9PSExJiYoZj1mLmNvbmNhdChnLmdldENoaWxkcmVuKCEwLGIsZCkpLGg9Zi5sZW5ndGgpKSksZz1nLl9uZXh0O3JldHVybiBmfSxxLmdldFR3ZWVuc09mPWZ1bmN0aW9uKGEsYil7dmFyIGQsZSxmPXRoaXMuX2djLGc9W10saD0wO2ZvcihmJiZ0aGlzLl9lbmFibGVkKCEwLCEwKSxkPWMuZ2V0VHdlZW5zT2YoYSksZT1kLmxlbmd0aDstLWU+LTE7KShkW2VdLnRpbWVsaW5lPT09dGhpc3x8YiYmdGhpcy5fY29udGFpbnMoZFtlXSkpJiYoZ1toKytdPWRbZV0pO3JldHVybiBmJiZ0aGlzLl9lbmFibGVkKCExLCEwKSxnfSxxLnJlY2VudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWNlbnR9LHEuX2NvbnRhaW5zPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1hLnRpbWVsaW5lO2I7KXtpZihiPT09dGhpcylyZXR1cm4hMDtiPWIudGltZWxpbmV9cmV0dXJuITF9LHEuc2hpZnRDaGlsZHJlbj1mdW5jdGlvbihhLGIsYyl7Yz1jfHwwO2Zvcih2YXIgZCxlPXRoaXMuX2ZpcnN0LGY9dGhpcy5fbGFiZWxzO2U7KWUuX3N0YXJ0VGltZT49YyYmKGUuX3N0YXJ0VGltZSs9YSksZT1lLl9uZXh0O2lmKGIpZm9yKGQgaW4gZilmW2RdPj1jJiYoZltkXSs9YSk7cmV0dXJuIHRoaXMuX3VuY2FjaGUoITApfSxxLl9raWxsPWZ1bmN0aW9uKGEsYil7aWYoIWEmJiFiKXJldHVybiB0aGlzLl9lbmFibGVkKCExLCExKTtmb3IodmFyIGM9Yj90aGlzLmdldFR3ZWVuc09mKGIpOnRoaXMuZ2V0Q2hpbGRyZW4oITAsITAsITEpLGQ9Yy5sZW5ndGgsZT0hMTstLWQ+LTE7KWNbZF0uX2tpbGwoYSxiKSYmKGU9ITApO3JldHVybiBlfSxxLmNsZWFyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZ2V0Q2hpbGRyZW4oITEsITAsITApLGM9Yi5sZW5ndGg7Zm9yKHRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lPTA7LS1jPi0xOyliW2NdLl9lbmFibGVkKCExLCExKTtyZXR1cm4gYSE9PSExJiYodGhpcy5fbGFiZWxzPXt9KSx0aGlzLl91bmNhY2hlKCEwKX0scS5pbnZhbGlkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciBiPXRoaXMuX2ZpcnN0O2I7KWIuaW52YWxpZGF0ZSgpLGI9Yi5fbmV4dDtyZXR1cm4gYS5wcm90b3R5cGUuaW52YWxpZGF0ZS5jYWxsKHRoaXMpfSxxLl9lbmFibGVkPWZ1bmN0aW9uKGEsYyl7aWYoYT09PXRoaXMuX2djKWZvcih2YXIgZD10aGlzLl9maXJzdDtkOylkLl9lbmFibGVkKGEsITApLGQ9ZC5fbmV4dDtyZXR1cm4gYi5wcm90b3R5cGUuX2VuYWJsZWQuY2FsbCh0aGlzLGEsYyl9LHEudG90YWxUaW1lPWZ1bmN0aW9uKGIsYyxkKXt0aGlzLl9mb3JjaW5nUGxheWhlYWQ9ITA7dmFyIGU9YS5wcm90b3R5cGUudG90YWxUaW1lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5fZm9yY2luZ1BsYXloZWFkPSExLGV9LHEuZHVyYXRpb249ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KDAhPT10aGlzLmR1cmF0aW9uKCkmJjAhPT1hJiZ0aGlzLnRpbWVTY2FsZSh0aGlzLl9kdXJhdGlvbi9hKSx0aGlzKToodGhpcy5fZGlydHkmJnRoaXMudG90YWxEdXJhdGlvbigpLHRoaXMuX2R1cmF0aW9uKX0scS50b3RhbER1cmF0aW9uPWZ1bmN0aW9uKGEpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXtpZih0aGlzLl9kaXJ0eSl7Zm9yKHZhciBiLGMsZD0wLGU9dGhpcy5fbGFzdCxmPTk5OTk5OTk5OTk5OTtlOyliPWUuX3ByZXYsZS5fZGlydHkmJmUudG90YWxEdXJhdGlvbigpLGUuX3N0YXJ0VGltZT5mJiZ0aGlzLl9zb3J0Q2hpbGRyZW4mJiFlLl9wYXVzZWQmJiF0aGlzLl9jYWxjdWxhdGluZ0R1cmF0aW9uPyh0aGlzLl9jYWxjdWxhdGluZ0R1cmF0aW9uPTEsdGhpcy5hZGQoZSxlLl9zdGFydFRpbWUtZS5fZGVsYXkpLHRoaXMuX2NhbGN1bGF0aW5nRHVyYXRpb249MCk6Zj1lLl9zdGFydFRpbWUsZS5fc3RhcnRUaW1lPDAmJiFlLl9wYXVzZWQmJihkLT1lLl9zdGFydFRpbWUsdGhpcy5fdGltZWxpbmUuc21vb3RoQ2hpbGRUaW1pbmcmJih0aGlzLl9zdGFydFRpbWUrPWUuX3N0YXJ0VGltZS90aGlzLl90aW1lU2NhbGUsdGhpcy5fdGltZS09ZS5fc3RhcnRUaW1lLHRoaXMuX3RvdGFsVGltZS09ZS5fc3RhcnRUaW1lLHRoaXMuX3Jhd1ByZXZUaW1lLT1lLl9zdGFydFRpbWUpLHRoaXMuc2hpZnRDaGlsZHJlbigtZS5fc3RhcnRUaW1lLCExLC05OTk5OTk5OTk5KSxmPTApLGM9ZS5fc3RhcnRUaW1lK2UuX3RvdGFsRHVyYXRpb24vZS5fdGltZVNjYWxlLGM+ZCYmKGQ9YyksZT1iO3RoaXMuX2R1cmF0aW9uPXRoaXMuX3RvdGFsRHVyYXRpb249ZCx0aGlzLl9kaXJ0eT0hMX1yZXR1cm4gdGhpcy5fdG90YWxEdXJhdGlvbn1yZXR1cm4gYSYmdGhpcy50b3RhbER1cmF0aW9uKCk/dGhpcy50aW1lU2NhbGUodGhpcy5fdG90YWxEdXJhdGlvbi9hKTp0aGlzfSxxLnBhdXNlZD1mdW5jdGlvbihiKXtpZighYilmb3IodmFyIGM9dGhpcy5fZmlyc3QsZD10aGlzLl90aW1lO2M7KWMuX3N0YXJ0VGltZT09PWQmJlwiaXNQYXVzZVwiPT09Yy5kYXRhJiYoYy5fcmF3UHJldlRpbWU9MCksYz1jLl9uZXh0O3JldHVybiBhLnByb3RvdHlwZS5wYXVzZWQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxxLnVzZXNGcmFtZXM9ZnVuY3Rpb24oKXtmb3IodmFyIGI9dGhpcy5fdGltZWxpbmU7Yi5fdGltZWxpbmU7KWI9Yi5fdGltZWxpbmU7cmV0dXJuIGI9PT1hLl9yb290RnJhbWVzVGltZWxpbmV9LHEucmF3VGltZT1mdW5jdGlvbihhKXtyZXR1cm4gYSYmKHRoaXMuX3BhdXNlZHx8dGhpcy5fcmVwZWF0JiZ0aGlzLnRpbWUoKT4wJiZ0aGlzLnRvdGFsUHJvZ3Jlc3MoKTwxKT90aGlzLl90b3RhbFRpbWUlKHRoaXMuX2R1cmF0aW9uK3RoaXMuX3JlcGVhdERlbGF5KTp0aGlzLl9wYXVzZWQ/dGhpcy5fdG90YWxUaW1lOih0aGlzLl90aW1lbGluZS5yYXdUaW1lKGEpLXRoaXMuX3N0YXJ0VGltZSkqdGhpcy5fdGltZVNjYWxlfSxkfSwhMCl9KSxfZ3NTY29wZS5fZ3NEZWZpbmUmJl9nc1Njb3BlLl9nc1F1ZXVlLnBvcCgpKCksZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGI9ZnVuY3Rpb24oKXtyZXR1cm4oX2dzU2NvcGUuR3JlZW5Tb2NrR2xvYmFsc3x8X2dzU2NvcGUpW2FdfTtcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz8ocmVxdWlyZShcIi4vVHdlZW5MaXRlLm1pbi5qc1wiKSxtb2R1bGUuZXhwb3J0cz1iKCkpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKFtcIlR3ZWVuTGl0ZVwiXSxiKX0oXCJUaW1lbGluZU1heFwiKTsiLCIvKiFcbiAqIFZFUlNJT046IDIuMC4xXG4gKiBEQVRFOiAyMDE4LTA1LTMwXG4gKiBVUERBVEVTIEFORCBET0NTIEFUOiBodHRwOi8vZ3JlZW5zb2NrLmNvbVxuICpcbiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwOC0yMDE4LCBHcmVlblNvY2suIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIHdvcmsgaXMgc3ViamVjdCB0byB0aGUgdGVybXMgYXQgaHR0cDovL2dyZWVuc29jay5jb20vc3RhbmRhcmQtbGljZW5zZSBvciBmb3JcbiAqIENsdWIgR3JlZW5Tb2NrIG1lbWJlcnMsIHRoZSBzb2Z0d2FyZSBhZ3JlZW1lbnQgdGhhdCB3YXMgaXNzdWVkIHdpdGggeW91ciBtZW1iZXJzaGlwLlxuICogXG4gKiBAYXV0aG9yOiBKYWNrIERveWxlLCBqYWNrQGdyZWVuc29jay5jb21cbiAqL1xuIWZ1bmN0aW9uKGEsYil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGM9e30sZD1hLmRvY3VtZW50LGU9YS5HcmVlblNvY2tHbG9iYWxzPWEuR3JlZW5Tb2NrR2xvYmFsc3x8YSxmPWVbYl07aWYoZilyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cyYmKG1vZHVsZS5leHBvcnRzPWYpLGY7dmFyIGcsaCxpLGosayxsPWZ1bmN0aW9uKGEpe3ZhciBiLGM9YS5zcGxpdChcIi5cIiksZD1lO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspZFtjW2JdXT1kPWRbY1tiXV18fHt9O3JldHVybiBkfSxtPWwoXCJjb20uZ3JlZW5zb2NrXCIpLG49MWUtMTAsbz1mdW5jdGlvbihhKXt2YXIgYixjPVtdLGQ9YS5sZW5ndGg7Zm9yKGI9MDtiIT09ZDtjLnB1c2goYVtiKytdKSk7cmV0dXJuIGN9LHA9ZnVuY3Rpb24oKXt9LHE9ZnVuY3Rpb24oKXt2YXIgYT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLGI9YS5jYWxsKFtdKTtyZXR1cm4gZnVuY3Rpb24oYyl7cmV0dXJuIG51bGwhPWMmJihjIGluc3RhbmNlb2YgQXJyYXl8fFwib2JqZWN0XCI9PXR5cGVvZiBjJiYhIWMucHVzaCYmYS5jYWxsKGMpPT09Yil9fSgpLHI9e30scz1mdW5jdGlvbihkLGYsZyxoKXt0aGlzLnNjPXJbZF0/cltkXS5zYzpbXSxyW2RdPXRoaXMsdGhpcy5nc0NsYXNzPW51bGwsdGhpcy5mdW5jPWc7dmFyIGk9W107dGhpcy5jaGVjaz1mdW5jdGlvbihqKXtmb3IodmFyIGssbSxuLG8scD1mLmxlbmd0aCxxPXA7LS1wPi0xOykoaz1yW2ZbcF1dfHxuZXcgcyhmW3BdLFtdKSkuZ3NDbGFzcz8oaVtwXT1rLmdzQ2xhc3MscS0tKTpqJiZrLnNjLnB1c2godGhpcyk7aWYoMD09PXEmJmcpe2lmKG09KFwiY29tLmdyZWVuc29jay5cIitkKS5zcGxpdChcIi5cIiksbj1tLnBvcCgpLG89bChtLmpvaW4oXCIuXCIpKVtuXT10aGlzLmdzQ2xhc3M9Zy5hcHBseShnLGkpLGgpaWYoZVtuXT1jW25dPW8sXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHMpaWYoZD09PWIpe21vZHVsZS5leHBvcnRzPWNbYl09bztmb3IocCBpbiBjKW9bcF09Y1twXX1lbHNlIGNbYl0mJihjW2JdW25dPW8pO2Vsc2VcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQmJmRlZmluZSgoYS5HcmVlblNvY2tBTURQYXRoP2EuR3JlZW5Tb2NrQU1EUGF0aCtcIi9cIjpcIlwiKStkLnNwbGl0KFwiLlwiKS5wb3AoKSxbXSxmdW5jdGlvbigpe3JldHVybiBvfSk7Zm9yKHA9MDtwPHRoaXMuc2MubGVuZ3RoO3ArKyl0aGlzLnNjW3BdLmNoZWNrKCl9fSx0aGlzLmNoZWNrKCEwKX0sdD1hLl9nc0RlZmluZT1mdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gbmV3IHMoYSxiLGMsZCl9LHU9bS5fY2xhc3M9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBiPWJ8fGZ1bmN0aW9uKCl7fSx0KGEsW10sZnVuY3Rpb24oKXtyZXR1cm4gYn0sYyksYn07dC5nbG9iYWxzPWU7dmFyIHY9WzAsMCwxLDFdLHc9dShcImVhc2luZy5FYXNlXCIsZnVuY3Rpb24oYSxiLGMsZCl7dGhpcy5fZnVuYz1hLHRoaXMuX3R5cGU9Y3x8MCx0aGlzLl9wb3dlcj1kfHwwLHRoaXMuX3BhcmFtcz1iP3YuY29uY2F0KGIpOnZ9LCEwKSx4PXcubWFwPXt9LHk9dy5yZWdpc3Rlcj1mdW5jdGlvbihhLGIsYyxkKXtmb3IodmFyIGUsZixnLGgsaT1iLnNwbGl0KFwiLFwiKSxqPWkubGVuZ3RoLGs9KGN8fFwiZWFzZUluLGVhc2VPdXQsZWFzZUluT3V0XCIpLnNwbGl0KFwiLFwiKTstLWo+LTE7KWZvcihmPWlbal0sZT1kP3UoXCJlYXNpbmcuXCIrZixudWxsLCEwKTptLmVhc2luZ1tmXXx8e30sZz1rLmxlbmd0aDstLWc+LTE7KWg9a1tnXSx4W2YrXCIuXCIraF09eFtoK2ZdPWVbaF09YS5nZXRSYXRpbz9hOmFbaF18fG5ldyBhfTtmb3IoaT13LnByb3RvdHlwZSxpLl9jYWxjRW5kPSExLGkuZ2V0UmF0aW89ZnVuY3Rpb24oYSl7aWYodGhpcy5fZnVuYylyZXR1cm4gdGhpcy5fcGFyYW1zWzBdPWEsdGhpcy5fZnVuYy5hcHBseShudWxsLHRoaXMuX3BhcmFtcyk7dmFyIGI9dGhpcy5fdHlwZSxjPXRoaXMuX3Bvd2VyLGQ9MT09PWI/MS1hOjI9PT1iP2E6LjU+YT8yKmE6MiooMS1hKTtyZXR1cm4gMT09PWM/ZCo9ZDoyPT09Yz9kKj1kKmQ6Mz09PWM/ZCo9ZCpkKmQ6ND09PWMmJihkKj1kKmQqZCpkKSwxPT09Yj8xLWQ6Mj09PWI/ZDouNT5hP2QvMjoxLWQvMn0sZz1bXCJMaW5lYXJcIixcIlF1YWRcIixcIkN1YmljXCIsXCJRdWFydFwiLFwiUXVpbnQsU3Ryb25nXCJdLGg9Zy5sZW5ndGg7LS1oPi0xOylpPWdbaF0rXCIsUG93ZXJcIitoLHkobmV3IHcobnVsbCxudWxsLDEsaCksaSxcImVhc2VPdXRcIiwhMCkseShuZXcgdyhudWxsLG51bGwsMixoKSxpLFwiZWFzZUluXCIrKDA9PT1oP1wiLGVhc2VOb25lXCI6XCJcIikpLHkobmV3IHcobnVsbCxudWxsLDMsaCksaSxcImVhc2VJbk91dFwiKTt4LmxpbmVhcj1tLmVhc2luZy5MaW5lYXIuZWFzZUluLHguc3dpbmc9bS5lYXNpbmcuUXVhZC5lYXNlSW5PdXQ7dmFyIHo9dShcImV2ZW50cy5FdmVudERpc3BhdGNoZXJcIixmdW5jdGlvbihhKXt0aGlzLl9saXN0ZW5lcnM9e30sdGhpcy5fZXZlbnRUYXJnZXQ9YXx8dGhpc30pO2k9ei5wcm90b3R5cGUsaS5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGEsYixjLGQsZSl7ZT1lfHwwO3ZhciBmLGcsaD10aGlzLl9saXN0ZW5lcnNbYV0saT0wO2Zvcih0aGlzIT09anx8a3x8ai53YWtlKCksbnVsbD09aCYmKHRoaXMuX2xpc3RlbmVyc1thXT1oPVtdKSxnPWgubGVuZ3RoOy0tZz4tMTspZj1oW2ddLGYuYz09PWImJmYucz09PWM/aC5zcGxpY2UoZywxKTowPT09aSYmZi5wcjxlJiYoaT1nKzEpO2guc3BsaWNlKGksMCx7YzpiLHM6Yyx1cDpkLHByOmV9KX0saS5yZW1vdmVFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD10aGlzLl9saXN0ZW5lcnNbYV07aWYoZClmb3IoYz1kLmxlbmd0aDstLWM+LTE7KWlmKGRbY10uYz09PWIpcmV0dXJuIHZvaWQgZC5zcGxpY2UoYywxKX0saS5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlPXRoaXMuX2xpc3RlbmVyc1thXTtpZihlKWZvcihiPWUubGVuZ3RoLGI+MSYmKGU9ZS5zbGljZSgwKSksYz10aGlzLl9ldmVudFRhcmdldDstLWI+LTE7KWQ9ZVtiXSxkJiYoZC51cD9kLmMuY2FsbChkLnN8fGMse3R5cGU6YSx0YXJnZXQ6Y30pOmQuYy5jYWxsKGQuc3x8YykpfTt2YXIgQT1hLnJlcXVlc3RBbmltYXRpb25GcmFtZSxCPWEuY2FuY2VsQW5pbWF0aW9uRnJhbWUsQz1EYXRlLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKX0sRD1DKCk7Zm9yKGc9W1wibXNcIixcIm1velwiLFwid2Via2l0XCIsXCJvXCJdLGg9Zy5sZW5ndGg7LS1oPi0xJiYhQTspQT1hW2dbaF0rXCJSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIl0sQj1hW2dbaF0rXCJDYW5jZWxBbmltYXRpb25GcmFtZVwiXXx8YVtnW2hdK1wiQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCJdO3UoXCJUaWNrZXJcIixmdW5jdGlvbihhLGIpe3ZhciBjLGUsZixnLGgsaT10aGlzLGw9QygpLG09YiE9PSExJiZBP1wiYXV0b1wiOiExLG89NTAwLHE9MzMscj1cInRpY2tcIixzPWZ1bmN0aW9uKGEpe3ZhciBiLGQsaj1DKCktRDtqPm8mJihsKz1qLXEpLEQrPWosaS50aW1lPShELWwpLzFlMyxiPWkudGltZS1oLCghY3x8Yj4wfHxhPT09ITApJiYoaS5mcmFtZSsrLGgrPWIrKGI+PWc/LjAwNDpnLWIpLGQ9ITApLGEhPT0hMCYmKGY9ZShzKSksZCYmaS5kaXNwYXRjaEV2ZW50KHIpfTt6LmNhbGwoaSksaS50aW1lPWkuZnJhbWU9MCxpLnRpY2s9ZnVuY3Rpb24oKXtzKCEwKX0saS5sYWdTbW9vdGhpbmc9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8obz1hfHwxL24sdm9pZChxPU1hdGgubWluKGIsbywwKSkpOjEvbj5vfSxpLnNsZWVwPWZ1bmN0aW9uKCl7bnVsbCE9ZiYmKG0mJkI/QihmKTpjbGVhclRpbWVvdXQoZiksZT1wLGY9bnVsbCxpPT09aiYmKGs9ITEpKX0saS53YWtlPWZ1bmN0aW9uKGEpe251bGwhPT1mP2kuc2xlZXAoKTphP2wrPS1EKyhEPUMoKSk6aS5mcmFtZT4xMCYmKEQ9QygpLW8rNSksZT0wPT09Yz9wOm0mJkE/QTpmdW5jdGlvbihhKXtyZXR1cm4gc2V0VGltZW91dChhLDFlMyooaC1pLnRpbWUpKzF8MCl9LGk9PT1qJiYoaz0hMCkscygyKX0saS5mcHM9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGM9YSxnPTEvKGN8fDYwKSxoPXRoaXMudGltZStnLHZvaWQgaS53YWtlKCkpOmN9LGkudXNlUkFGPWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpLnNsZWVwKCksbT1hLHZvaWQgaS5mcHMoYykpOm19LGkuZnBzKGEpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcImF1dG9cIj09PW0mJmkuZnJhbWU8NSYmXCJoaWRkZW5cIiE9PShkfHx7fSkudmlzaWJpbGl0eVN0YXRlJiZpLnVzZVJBRighMSl9LDE1MDApfSksaT1tLlRpY2tlci5wcm90b3R5cGU9bmV3IG0uZXZlbnRzLkV2ZW50RGlzcGF0Y2hlcixpLmNvbnN0cnVjdG9yPW0uVGlja2VyO3ZhciBFPXUoXCJjb3JlLkFuaW1hdGlvblwiLGZ1bmN0aW9uKGEsYil7aWYodGhpcy52YXJzPWI9Ynx8e30sdGhpcy5fZHVyYXRpb249dGhpcy5fdG90YWxEdXJhdGlvbj1hfHwwLHRoaXMuX2RlbGF5PU51bWJlcihiLmRlbGF5KXx8MCx0aGlzLl90aW1lU2NhbGU9MSx0aGlzLl9hY3RpdmU9Yi5pbW1lZGlhdGVSZW5kZXI9PT0hMCx0aGlzLmRhdGE9Yi5kYXRhLHRoaXMuX3JldmVyc2VkPWIucmV2ZXJzZWQ9PT0hMCxZKXtrfHxqLndha2UoKTt2YXIgYz10aGlzLnZhcnMudXNlRnJhbWVzP1g6WTtjLmFkZCh0aGlzLGMuX3RpbWUpLHRoaXMudmFycy5wYXVzZWQmJnRoaXMucGF1c2VkKCEwKX19KTtqPUUudGlja2VyPW5ldyBtLlRpY2tlcixpPUUucHJvdG90eXBlLGkuX2RpcnR5PWkuX2djPWkuX2luaXR0ZWQ9aS5fcGF1c2VkPSExLGkuX3RvdGFsVGltZT1pLl90aW1lPTAsaS5fcmF3UHJldlRpbWU9LTEsaS5fbmV4dD1pLl9sYXN0PWkuX29uVXBkYXRlPWkuX3RpbWVsaW5lPWkudGltZWxpbmU9bnVsbCxpLl9wYXVzZWQ9ITE7dmFyIEY9ZnVuY3Rpb24oKXtrJiZDKCktRD4yZTMmJihcImhpZGRlblwiIT09KGR8fHt9KS52aXNpYmlsaXR5U3RhdGV8fCFqLmxhZ1Ntb290aGluZygpKSYmai53YWtlKCk7dmFyIGE9c2V0VGltZW91dChGLDJlMyk7YS51bnJlZiYmYS51bnJlZigpfTtGKCksaS5wbGF5PWZ1bmN0aW9uKGEsYil7cmV0dXJuIG51bGwhPWEmJnRoaXMuc2VlayhhLGIpLHRoaXMucmV2ZXJzZWQoITEpLnBhdXNlZCghMSl9LGkucGF1c2U9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbnVsbCE9YSYmdGhpcy5zZWVrKGEsYiksdGhpcy5wYXVzZWQoITApfSxpLnJlc3VtZT1mdW5jdGlvbihhLGIpe3JldHVybiBudWxsIT1hJiZ0aGlzLnNlZWsoYSxiKSx0aGlzLnBhdXNlZCghMSl9LGkuc2Vlaz1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLnRvdGFsVGltZShOdW1iZXIoYSksYiE9PSExKX0saS5yZXN0YXJ0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMucmV2ZXJzZWQoITEpLnBhdXNlZCghMSkudG90YWxUaW1lKGE/LXRoaXMuX2RlbGF5OjAsYiE9PSExLCEwKX0saS5yZXZlcnNlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIG51bGwhPWEmJnRoaXMuc2VlayhhfHx0aGlzLnRvdGFsRHVyYXRpb24oKSxiKSx0aGlzLnJldmVyc2VkKCEwKS5wYXVzZWQoITEpfSxpLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7fSxpLmludmFsaWRhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGltZT10aGlzLl90b3RhbFRpbWU9MCx0aGlzLl9pbml0dGVkPXRoaXMuX2djPSExLHRoaXMuX3Jhd1ByZXZUaW1lPS0xLCh0aGlzLl9nY3x8IXRoaXMudGltZWxpbmUpJiZ0aGlzLl9lbmFibGVkKCEwKSx0aGlzfSxpLmlzQWN0aXZlPWZ1bmN0aW9uKCl7dmFyIGEsYj10aGlzLl90aW1lbGluZSxjPXRoaXMuX3N0YXJ0VGltZTtyZXR1cm4hYnx8IXRoaXMuX2djJiYhdGhpcy5fcGF1c2VkJiZiLmlzQWN0aXZlKCkmJihhPWIucmF3VGltZSghMCkpPj1jJiZhPGMrdGhpcy50b3RhbER1cmF0aW9uKCkvdGhpcy5fdGltZVNjYWxlLTFlLTd9LGkuX2VuYWJsZWQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga3x8ai53YWtlKCksdGhpcy5fZ2M9IWEsdGhpcy5fYWN0aXZlPXRoaXMuaXNBY3RpdmUoKSxiIT09ITAmJihhJiYhdGhpcy50aW1lbGluZT90aGlzLl90aW1lbGluZS5hZGQodGhpcyx0aGlzLl9zdGFydFRpbWUtdGhpcy5fZGVsYXkpOiFhJiZ0aGlzLnRpbWVsaW5lJiZ0aGlzLl90aW1lbGluZS5fcmVtb3ZlKHRoaXMsITApKSwhMX0saS5fa2lsbD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLl9lbmFibGVkKCExLCExKX0saS5raWxsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuX2tpbGwoYSxiKSx0aGlzfSxpLl91bmNhY2hlPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1hP3RoaXM6dGhpcy50aW1lbGluZTtiOyliLl9kaXJ0eT0hMCxiPWIudGltZWxpbmU7cmV0dXJuIHRoaXN9LGkuX3N3YXBTZWxmSW5QYXJhbXM9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPWEubGVuZ3RoLGM9YS5jb25jYXQoKTstLWI+LTE7KVwie3NlbGZ9XCI9PT1hW2JdJiYoY1tiXT10aGlzKTtyZXR1cm4gY30saS5fY2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy52YXJzLGM9YlthXSxkPWJbYStcIlBhcmFtc1wiXSxlPWJbYStcIlNjb3BlXCJdfHxiLmNhbGxiYWNrU2NvcGV8fHRoaXMsZj1kP2QubGVuZ3RoOjA7c3dpdGNoKGYpe2Nhc2UgMDpjLmNhbGwoZSk7YnJlYWs7Y2FzZSAxOmMuY2FsbChlLGRbMF0pO2JyZWFrO2Nhc2UgMjpjLmNhbGwoZSxkWzBdLGRbMV0pO2JyZWFrO2RlZmF1bHQ6Yy5hcHBseShlLGQpfX0saS5ldmVudENhbGxiYWNrPWZ1bmN0aW9uKGEsYixjLGQpe2lmKFwib25cIj09PShhfHxcIlwiKS5zdWJzdHIoMCwyKSl7dmFyIGU9dGhpcy52YXJzO2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBlW2FdO251bGw9PWI/ZGVsZXRlIGVbYV06KGVbYV09YixlW2ErXCJQYXJhbXNcIl09cShjKSYmLTEhPT1jLmpvaW4oXCJcIikuaW5kZXhPZihcIntzZWxmfVwiKT90aGlzLl9zd2FwU2VsZkluUGFyYW1zKGMpOmMsZVthK1wiU2NvcGVcIl09ZCksXCJvblVwZGF0ZVwiPT09YSYmKHRoaXMuX29uVXBkYXRlPWIpfXJldHVybiB0aGlzfSxpLmRlbGF5PWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyh0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZyYmdGhpcy5zdGFydFRpbWUodGhpcy5fc3RhcnRUaW1lK2EtdGhpcy5fZGVsYXkpLHRoaXMuX2RlbGF5PWEsdGhpcyk6dGhpcy5fZGVsYXl9LGkuZHVyYXRpb249ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2R1cmF0aW9uPXRoaXMuX3RvdGFsRHVyYXRpb249YSx0aGlzLl91bmNhY2hlKCEwKSx0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZyYmdGhpcy5fdGltZT4wJiZ0aGlzLl90aW1lPHRoaXMuX2R1cmF0aW9uJiYwIT09YSYmdGhpcy50b3RhbFRpbWUodGhpcy5fdG90YWxUaW1lKihhL3RoaXMuX2R1cmF0aW9uKSwhMCksdGhpcyk6KHRoaXMuX2RpcnR5PSExLHRoaXMuX2R1cmF0aW9uKX0saS50b3RhbER1cmF0aW9uPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLl9kaXJ0eT0hMSxhcmd1bWVudHMubGVuZ3RoP3RoaXMuZHVyYXRpb24oYSk6dGhpcy5fdG90YWxEdXJhdGlvbn0saS50aW1lPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2RpcnR5JiZ0aGlzLnRvdGFsRHVyYXRpb24oKSx0aGlzLnRvdGFsVGltZShhPnRoaXMuX2R1cmF0aW9uP3RoaXMuX2R1cmF0aW9uOmEsYikpOnRoaXMuX3RpbWV9LGkudG90YWxUaW1lPWZ1bmN0aW9uKGEsYixjKXtpZihrfHxqLndha2UoKSwhYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5fdG90YWxUaW1lO2lmKHRoaXMuX3RpbWVsaW5lKXtpZigwPmEmJiFjJiYoYSs9dGhpcy50b3RhbER1cmF0aW9uKCkpLHRoaXMuX3RpbWVsaW5lLnNtb290aENoaWxkVGltaW5nKXt0aGlzLl9kaXJ0eSYmdGhpcy50b3RhbER1cmF0aW9uKCk7dmFyIGQ9dGhpcy5fdG90YWxEdXJhdGlvbixlPXRoaXMuX3RpbWVsaW5lO2lmKGE+ZCYmIWMmJihhPWQpLHRoaXMuX3N0YXJ0VGltZT0odGhpcy5fcGF1c2VkP3RoaXMuX3BhdXNlVGltZTplLl90aW1lKS0odGhpcy5fcmV2ZXJzZWQ/ZC1hOmEpL3RoaXMuX3RpbWVTY2FsZSxlLl9kaXJ0eXx8dGhpcy5fdW5jYWNoZSghMSksZS5fdGltZWxpbmUpZm9yKDtlLl90aW1lbGluZTspZS5fdGltZWxpbmUuX3RpbWUhPT0oZS5fc3RhcnRUaW1lK2UuX3RvdGFsVGltZSkvZS5fdGltZVNjYWxlJiZlLnRvdGFsVGltZShlLl90b3RhbFRpbWUsITApLGU9ZS5fdGltZWxpbmV9dGhpcy5fZ2MmJnRoaXMuX2VuYWJsZWQoITAsITEpLCh0aGlzLl90b3RhbFRpbWUhPT1hfHwwPT09dGhpcy5fZHVyYXRpb24pJiYoSy5sZW5ndGgmJiQoKSx0aGlzLnJlbmRlcihhLGIsITEpLEsubGVuZ3RoJiYkKCkpfXJldHVybiB0aGlzfSxpLnByb2dyZXNzPWkudG90YWxQcm9ncmVzcz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZHVyYXRpb24oKTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90aGlzLnRvdGFsVGltZShjKmEsYik6Yz90aGlzLl90aW1lL2M6dGhpcy5yYXRpb30saS5zdGFydFRpbWU9ZnVuY3Rpb24oYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGEhPT10aGlzLl9zdGFydFRpbWUmJih0aGlzLl9zdGFydFRpbWU9YSx0aGlzLnRpbWVsaW5lJiZ0aGlzLnRpbWVsaW5lLl9zb3J0Q2hpbGRyZW4mJnRoaXMudGltZWxpbmUuYWRkKHRoaXMsYS10aGlzLl9kZWxheSkpLHRoaXMpOnRoaXMuX3N0YXJ0VGltZX0saS5lbmRUaW1lPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLl9zdGFydFRpbWUrKDAhPWE/dGhpcy50b3RhbER1cmF0aW9uKCk6dGhpcy5kdXJhdGlvbigpKS90aGlzLl90aW1lU2NhbGV9LGkudGltZVNjYWxlPWZ1bmN0aW9uKGEpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiB0aGlzLl90aW1lU2NhbGU7dmFyIGIsYztmb3IoYT1hfHxuLHRoaXMuX3RpbWVsaW5lJiZ0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZyYmKGI9dGhpcy5fcGF1c2VUaW1lLGM9Ynx8MD09PWI/Yjp0aGlzLl90aW1lbGluZS50b3RhbFRpbWUoKSx0aGlzLl9zdGFydFRpbWU9Yy0oYy10aGlzLl9zdGFydFRpbWUpKnRoaXMuX3RpbWVTY2FsZS9hKSx0aGlzLl90aW1lU2NhbGU9YSxjPXRoaXMudGltZWxpbmU7YyYmYy50aW1lbGluZTspYy5fZGlydHk9ITAsYy50b3RhbER1cmF0aW9uKCksYz1jLnRpbWVsaW5lO3JldHVybiB0aGlzfSxpLnJldmVyc2VkPWZ1bmN0aW9uKGEpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhhIT10aGlzLl9yZXZlcnNlZCYmKHRoaXMuX3JldmVyc2VkPWEsdGhpcy50b3RhbFRpbWUodGhpcy5fdGltZWxpbmUmJiF0aGlzLl90aW1lbGluZS5zbW9vdGhDaGlsZFRpbWluZz90aGlzLnRvdGFsRHVyYXRpb24oKS10aGlzLl90b3RhbFRpbWU6dGhpcy5fdG90YWxUaW1lLCEwKSksdGhpcyk6dGhpcy5fcmV2ZXJzZWR9LGkucGF1c2VkPWZ1bmN0aW9uKGEpe2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiB0aGlzLl9wYXVzZWQ7dmFyIGIsYyxkPXRoaXMuX3RpbWVsaW5lO3JldHVybiBhIT10aGlzLl9wYXVzZWQmJmQmJihrfHxhfHxqLndha2UoKSxiPWQucmF3VGltZSgpLGM9Yi10aGlzLl9wYXVzZVRpbWUsIWEmJmQuc21vb3RoQ2hpbGRUaW1pbmcmJih0aGlzLl9zdGFydFRpbWUrPWMsdGhpcy5fdW5jYWNoZSghMSkpLHRoaXMuX3BhdXNlVGltZT1hP2I6bnVsbCx0aGlzLl9wYXVzZWQ9YSx0aGlzLl9hY3RpdmU9dGhpcy5pc0FjdGl2ZSgpLCFhJiYwIT09YyYmdGhpcy5faW5pdHRlZCYmdGhpcy5kdXJhdGlvbigpJiYoYj1kLnNtb290aENoaWxkVGltaW5nP3RoaXMuX3RvdGFsVGltZTooYi10aGlzLl9zdGFydFRpbWUpL3RoaXMuX3RpbWVTY2FsZSx0aGlzLnJlbmRlcihiLGI9PT10aGlzLl90b3RhbFRpbWUsITApKSksdGhpcy5fZ2MmJiFhJiZ0aGlzLl9lbmFibGVkKCEwLCExKSx0aGlzfTt2YXIgRz11KFwiY29yZS5TaW1wbGVUaW1lbGluZVwiLGZ1bmN0aW9uKGEpe0UuY2FsbCh0aGlzLDAsYSksdGhpcy5hdXRvUmVtb3ZlQ2hpbGRyZW49dGhpcy5zbW9vdGhDaGlsZFRpbWluZz0hMH0pO2k9Ry5wcm90b3R5cGU9bmV3IEUsaS5jb25zdHJ1Y3Rvcj1HLGkua2lsbCgpLl9nYz0hMSxpLl9maXJzdD1pLl9sYXN0PWkuX3JlY2VudD1udWxsLGkuX3NvcnRDaGlsZHJlbj0hMSxpLmFkZD1pLmluc2VydD1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZSxmO2lmKGEuX3N0YXJ0VGltZT1OdW1iZXIoYnx8MCkrYS5fZGVsYXksYS5fcGF1c2VkJiZ0aGlzIT09YS5fdGltZWxpbmUmJihhLl9wYXVzZVRpbWU9dGhpcy5yYXdUaW1lKCktKGEuX3RpbWVsaW5lLnJhd1RpbWUoKS1hLl9wYXVzZVRpbWUpKSxhLnRpbWVsaW5lJiZhLnRpbWVsaW5lLl9yZW1vdmUoYSwhMCksYS50aW1lbGluZT1hLl90aW1lbGluZT10aGlzLGEuX2djJiZhLl9lbmFibGVkKCEwLCEwKSxlPXRoaXMuX2xhc3QsdGhpcy5fc29ydENoaWxkcmVuKWZvcihmPWEuX3N0YXJ0VGltZTtlJiZlLl9zdGFydFRpbWU+ZjspZT1lLl9wcmV2O3JldHVybiBlPyhhLl9uZXh0PWUuX25leHQsZS5fbmV4dD1hKTooYS5fbmV4dD10aGlzLl9maXJzdCx0aGlzLl9maXJzdD1hKSxhLl9uZXh0P2EuX25leHQuX3ByZXY9YTp0aGlzLl9sYXN0PWEsYS5fcHJldj1lLHRoaXMuX3JlY2VudD1hLHRoaXMuX3RpbWVsaW5lJiZ0aGlzLl91bmNhY2hlKCEwKSx0aGlzfSxpLl9yZW1vdmU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS50aW1lbGluZT09PXRoaXMmJihifHxhLl9lbmFibGVkKCExLCEwKSxhLl9wcmV2P2EuX3ByZXYuX25leHQ9YS5fbmV4dDp0aGlzLl9maXJzdD09PWEmJih0aGlzLl9maXJzdD1hLl9uZXh0KSxhLl9uZXh0P2EuX25leHQuX3ByZXY9YS5fcHJldjp0aGlzLl9sYXN0PT09YSYmKHRoaXMuX2xhc3Q9YS5fcHJldiksYS5fbmV4dD1hLl9wcmV2PWEudGltZWxpbmU9bnVsbCxhPT09dGhpcy5fcmVjZW50JiYodGhpcy5fcmVjZW50PXRoaXMuX2xhc3QpLHRoaXMuX3RpbWVsaW5lJiZ0aGlzLl91bmNhY2hlKCEwKSksdGhpc30saS5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGU9dGhpcy5fZmlyc3Q7Zm9yKHRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPXRoaXMuX3Jhd1ByZXZUaW1lPWE7ZTspZD1lLl9uZXh0LChlLl9hY3RpdmV8fGE+PWUuX3N0YXJ0VGltZSYmIWUuX3BhdXNlZCYmIWUuX2djKSYmKGUuX3JldmVyc2VkP2UucmVuZGVyKChlLl9kaXJ0eT9lLnRvdGFsRHVyYXRpb24oKTplLl90b3RhbER1cmF0aW9uKS0oYS1lLl9zdGFydFRpbWUpKmUuX3RpbWVTY2FsZSxiLGMpOmUucmVuZGVyKChhLWUuX3N0YXJ0VGltZSkqZS5fdGltZVNjYWxlLGIsYykpLGU9ZH0saS5yYXdUaW1lPWZ1bmN0aW9uKCl7cmV0dXJuIGt8fGoud2FrZSgpLHRoaXMuX3RvdGFsVGltZX07dmFyIEg9dShcIlR3ZWVuTGl0ZVwiLGZ1bmN0aW9uKGIsYyxkKXtpZihFLmNhbGwodGhpcyxjLGQpLHRoaXMucmVuZGVyPUgucHJvdG90eXBlLnJlbmRlcixudWxsPT1iKXRocm93XCJDYW5ub3QgdHdlZW4gYSBudWxsIHRhcmdldC5cIjt0aGlzLnRhcmdldD1iPVwic3RyaW5nXCIhPXR5cGVvZiBiP2I6SC5zZWxlY3RvcihiKXx8Yjt2YXIgZSxmLGcsaD1iLmpxdWVyeXx8Yi5sZW5ndGgmJmIhPT1hJiZiWzBdJiYoYlswXT09PWF8fGJbMF0ubm9kZVR5cGUmJmJbMF0uc3R5bGUmJiFiLm5vZGVUeXBlKSxpPXRoaXMudmFycy5vdmVyd3JpdGU7aWYodGhpcy5fb3ZlcndyaXRlPWk9bnVsbD09aT9XW0guZGVmYXVsdE92ZXJ3cml0ZV06XCJudW1iZXJcIj09dHlwZW9mIGk/aT4+MDpXW2ldLChofHxiIGluc3RhbmNlb2YgQXJyYXl8fGIucHVzaCYmcShiKSkmJlwibnVtYmVyXCIhPXR5cGVvZiBiWzBdKWZvcih0aGlzLl90YXJnZXRzPWc9byhiKSx0aGlzLl9wcm9wTG9va3VwPVtdLHRoaXMuX3NpYmxpbmdzPVtdLGU9MDtlPGcubGVuZ3RoO2UrKylmPWdbZV0sZj9cInN0cmluZ1wiIT10eXBlb2YgZj9mLmxlbmd0aCYmZiE9PWEmJmZbMF0mJihmWzBdPT09YXx8ZlswXS5ub2RlVHlwZSYmZlswXS5zdHlsZSYmIWYubm9kZVR5cGUpPyhnLnNwbGljZShlLS0sMSksdGhpcy5fdGFyZ2V0cz1nPWcuY29uY2F0KG8oZikpKToodGhpcy5fc2libGluZ3NbZV09XyhmLHRoaXMsITEpLDE9PT1pJiZ0aGlzLl9zaWJsaW5nc1tlXS5sZW5ndGg+MSYmYmEoZix0aGlzLG51bGwsMSx0aGlzLl9zaWJsaW5nc1tlXSkpOihmPWdbZS0tXT1ILnNlbGVjdG9yKGYpLFwic3RyaW5nXCI9PXR5cGVvZiBmJiZnLnNwbGljZShlKzEsMSkpOmcuc3BsaWNlKGUtLSwxKTtlbHNlIHRoaXMuX3Byb3BMb29rdXA9e30sdGhpcy5fc2libGluZ3M9XyhiLHRoaXMsITEpLDE9PT1pJiZ0aGlzLl9zaWJsaW5ncy5sZW5ndGg+MSYmYmEoYix0aGlzLG51bGwsMSx0aGlzLl9zaWJsaW5ncyk7KHRoaXMudmFycy5pbW1lZGlhdGVSZW5kZXJ8fDA9PT1jJiYwPT09dGhpcy5fZGVsYXkmJnRoaXMudmFycy5pbW1lZGlhdGVSZW5kZXIhPT0hMSkmJih0aGlzLl90aW1lPS1uLHRoaXMucmVuZGVyKE1hdGgubWluKDAsLXRoaXMuX2RlbGF5KSkpfSwhMCksST1mdW5jdGlvbihiKXtyZXR1cm4gYiYmYi5sZW5ndGgmJmIhPT1hJiZiWzBdJiYoYlswXT09PWF8fGJbMF0ubm9kZVR5cGUmJmJbMF0uc3R5bGUmJiFiLm5vZGVUeXBlKX0sSj1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9e307Zm9yKGMgaW4gYSlWW2NdfHxjIGluIGImJlwidHJhbnNmb3JtXCIhPT1jJiZcInhcIiE9PWMmJlwieVwiIT09YyYmXCJ3aWR0aFwiIT09YyYmXCJoZWlnaHRcIiE9PWMmJlwiY2xhc3NOYW1lXCIhPT1jJiZcImJvcmRlclwiIT09Y3x8ISghU1tjXXx8U1tjXSYmU1tjXS5fYXV0b0NTUyl8fChkW2NdPWFbY10sZGVsZXRlIGFbY10pO2EuY3NzPWR9O2k9SC5wcm90b3R5cGU9bmV3IEUsaS5jb25zdHJ1Y3Rvcj1ILGkua2lsbCgpLl9nYz0hMSxpLnJhdGlvPTAsaS5fZmlyc3RQVD1pLl90YXJnZXRzPWkuX292ZXJ3cml0dGVuUHJvcHM9aS5fc3RhcnRBdD1udWxsLGkuX25vdGlmeVBsdWdpbnNPZkVuYWJsZWQ9aS5fbGF6eT0hMSxILnZlcnNpb249XCIyLjAuMVwiLEguZGVmYXVsdEVhc2U9aS5fZWFzZT1uZXcgdyhudWxsLG51bGwsMSwxKSxILmRlZmF1bHRPdmVyd3JpdGU9XCJhdXRvXCIsSC50aWNrZXI9aixILmF1dG9TbGVlcD0xMjAsSC5sYWdTbW9vdGhpbmc9ZnVuY3Rpb24oYSxiKXtqLmxhZ1Ntb290aGluZyhhLGIpfSxILnNlbGVjdG9yPWEuJHx8YS5qUXVlcnl8fGZ1bmN0aW9uKGIpe3ZhciBjPWEuJHx8YS5qUXVlcnk7cmV0dXJuIGM/KEguc2VsZWN0b3I9YyxjKGIpKTooZHx8KGQ9YS5kb2N1bWVudCksZD9kLnF1ZXJ5U2VsZWN0b3JBbGw/ZC5xdWVyeVNlbGVjdG9yQWxsKGIpOmQuZ2V0RWxlbWVudEJ5SWQoXCIjXCI9PT1iLmNoYXJBdCgwKT9iLnN1YnN0cigxKTpiKTpiKX07dmFyIEs9W10sTD17fSxNPS8oPzooLXwtPXxcXCs9KT9cXGQqXFwuP1xcZCooPzplW1xcLStdP1xcZCspPylbMC05XS9naSxOPS9bXFwrLV09LT9bXFwuXFxkXS8sTz1mdW5jdGlvbihhKXtmb3IodmFyIGIsYz10aGlzLl9maXJzdFBULGQ9MWUtNjtjOyliPWMuYmxvYj8xPT09YSYmbnVsbCE9dGhpcy5lbmQ/dGhpcy5lbmQ6YT90aGlzLmpvaW4oXCJcIik6dGhpcy5zdGFydDpjLmMqYStjLnMsYy5tP2I9Yy5tLmNhbGwodGhpcy5fdHdlZW4sYix0aGlzLl90YXJnZXR8fGMudCx0aGlzLl90d2Vlbik6ZD5iJiZiPi1kJiYhYy5ibG9iJiYoYj0wKSxjLmY/Yy5mcD9jLnRbYy5wXShjLmZwLGIpOmMudFtjLnBdKGIpOmMudFtjLnBdPWIsYz1jLl9uZXh0fSxQPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZyxoLGksaixrLGw9W10sbT0wLG49XCJcIixvPTA7Zm9yKGwuc3RhcnQ9YSxsLmVuZD1iLGE9bFswXT1hK1wiXCIsYj1sWzFdPWIrXCJcIixjJiYoYyhsKSxhPWxbMF0sYj1sWzFdKSxsLmxlbmd0aD0wLGU9YS5tYXRjaChNKXx8W10sZj1iLm1hdGNoKE0pfHxbXSxkJiYoZC5fbmV4dD1udWxsLGQuYmxvYj0xLGwuX2ZpcnN0UFQ9bC5fYXBwbHlQVD1kKSxpPWYubGVuZ3RoLGg9MDtpPmg7aCsrKWs9ZltoXSxqPWIuc3Vic3RyKG0sYi5pbmRleE9mKGssbSktbSksbis9anx8IWg/ajpcIixcIixtKz1qLmxlbmd0aCxvP289KG8rMSklNTpcInJnYmEoXCI9PT1qLnN1YnN0cigtNSkmJihvPTEpLGs9PT1lW2hdfHxlLmxlbmd0aDw9aD9uKz1rOihuJiYobC5wdXNoKG4pLG49XCJcIiksZz1wYXJzZUZsb2F0KGVbaF0pLGwucHVzaChnKSxsLl9maXJzdFBUPXtfbmV4dDpsLl9maXJzdFBULHQ6bCxwOmwubGVuZ3RoLTEsczpnLGM6KFwiPVwiPT09ay5jaGFyQXQoMSk/cGFyc2VJbnQoay5jaGFyQXQoMCkrXCIxXCIsMTApKnBhcnNlRmxvYXQoay5zdWJzdHIoMikpOnBhcnNlRmxvYXQoayktZyl8fDAsZjowLG06byYmND5vP01hdGgucm91bmQ6MH0pLG0rPWsubGVuZ3RoO3JldHVybiBuKz1iLnN1YnN0cihtKSxuJiZsLnB1c2gobiksbC5zZXRSYXRpbz1PLE4udGVzdChiKSYmKGwuZW5kPW51bGwpLGx9LFE9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGkpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGQmJihkPWQoaXx8MCxhKSk7dmFyIGosaz10eXBlb2YgYVtiXSxsPVwiZnVuY3Rpb25cIiE9PWs/XCJcIjpiLmluZGV4T2YoXCJzZXRcIil8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGFbXCJnZXRcIitiLnN1YnN0cigzKV0/YjpcImdldFwiK2Iuc3Vic3RyKDMpLG09XCJnZXRcIiE9PWM/YzpsP2c/YVtsXShnKTphW2xdKCk6YVtiXSxuPVwic3RyaW5nXCI9PXR5cGVvZiBkJiZcIj1cIj09PWQuY2hhckF0KDEpLG89e3Q6YSxwOmIsczptLGY6XCJmdW5jdGlvblwiPT09ayxwZzowLG46ZXx8YixtOmY/XCJmdW5jdGlvblwiPT10eXBlb2YgZj9mOk1hdGgucm91bmQ6MCxwcjowLGM6bj9wYXJzZUludChkLmNoYXJBdCgwKStcIjFcIiwxMCkqcGFyc2VGbG9hdChkLnN1YnN0cigyKSk6cGFyc2VGbG9hdChkKS1tfHwwfTtyZXR1cm4oXCJudW1iZXJcIiE9dHlwZW9mIG18fFwibnVtYmVyXCIhPXR5cGVvZiBkJiYhbikmJihnfHxpc05hTihtKXx8IW4mJmlzTmFOKGQpfHxcImJvb2xlYW5cIj09dHlwZW9mIG18fFwiYm9vbGVhblwiPT10eXBlb2YgZD8oby5mcD1nLGo9UChtLG4/cGFyc2VGbG9hdChvLnMpK28uYysoby5zK1wiXCIpLnJlcGxhY2UoL1swLTlcXC1cXC5dL2csXCJcIik6ZCxofHxILmRlZmF1bHRTdHJpbmdGaWx0ZXIsbyksbz17dDpqLHA6XCJzZXRSYXRpb1wiLHM6MCxjOjEsZjoyLHBnOjAsbjplfHxiLHByOjAsbTowfSk6KG8ucz1wYXJzZUZsb2F0KG0pLG58fChvLmM9cGFyc2VGbG9hdChkKS1vLnN8fDApKSksby5jPygoby5fbmV4dD10aGlzLl9maXJzdFBUKSYmKG8uX25leHQuX3ByZXY9byksdGhpcy5fZmlyc3RQVD1vLG8pOnZvaWQgMH0sUj1ILl9pbnRlcm5hbHM9e2lzQXJyYXk6cSxpc1NlbGVjdG9yOkksbGF6eVR3ZWVuczpLLGJsb2JEaWY6UH0sUz1ILl9wbHVnaW5zPXt9LFQ9Ui50d2Vlbkxvb2t1cD17fSxVPTAsVj1SLnJlc2VydmVkUHJvcHM9e2Vhc2U6MSxkZWxheToxLG92ZXJ3cml0ZToxLG9uQ29tcGxldGU6MSxvbkNvbXBsZXRlUGFyYW1zOjEsb25Db21wbGV0ZVNjb3BlOjEsdXNlRnJhbWVzOjEscnVuQmFja3dhcmRzOjEsc3RhcnRBdDoxLG9uVXBkYXRlOjEsb25VcGRhdGVQYXJhbXM6MSxvblVwZGF0ZVNjb3BlOjEsb25TdGFydDoxLG9uU3RhcnRQYXJhbXM6MSxvblN0YXJ0U2NvcGU6MSxvblJldmVyc2VDb21wbGV0ZToxLG9uUmV2ZXJzZUNvbXBsZXRlUGFyYW1zOjEsb25SZXZlcnNlQ29tcGxldGVTY29wZToxLG9uUmVwZWF0OjEsb25SZXBlYXRQYXJhbXM6MSxvblJlcGVhdFNjb3BlOjEsZWFzZVBhcmFtczoxLHlveW86MSxpbW1lZGlhdGVSZW5kZXI6MSxyZXBlYXQ6MSxyZXBlYXREZWxheToxLGRhdGE6MSxwYXVzZWQ6MSxyZXZlcnNlZDoxLGF1dG9DU1M6MSxsYXp5OjEsb25PdmVyd3JpdGU6MSxjYWxsYmFja1Njb3BlOjEsc3RyaW5nRmlsdGVyOjEsaWQ6MSx5b3lvRWFzZToxfSxXPXtub25lOjAsYWxsOjEsYXV0bzoyLGNvbmN1cnJlbnQ6MyxhbGxPblN0YXJ0OjQscHJlZXhpc3Rpbmc6NSxcInRydWVcIjoxLFwiZmFsc2VcIjowfSxYPUUuX3Jvb3RGcmFtZXNUaW1lbGluZT1uZXcgRyxZPUUuX3Jvb3RUaW1lbGluZT1uZXcgRyxaPTMwLCQ9Ui5sYXp5UmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGEsYj1LLmxlbmd0aDtmb3IoTD17fTstLWI+LTE7KWE9S1tiXSxhJiZhLl9sYXp5IT09ITEmJihhLnJlbmRlcihhLl9sYXp5WzBdLGEuX2xhenlbMV0sITApLGEuX2xhenk9ITEpO0subGVuZ3RoPTB9O1kuX3N0YXJ0VGltZT1qLnRpbWUsWC5fc3RhcnRUaW1lPWouZnJhbWUsWS5fYWN0aXZlPVguX2FjdGl2ZT0hMCxzZXRUaW1lb3V0KCQsMSksRS5fdXBkYXRlUm9vdD1ILnJlbmRlcj1mdW5jdGlvbigpe3ZhciBhLGIsYztpZihLLmxlbmd0aCYmJCgpLFkucmVuZGVyKChqLnRpbWUtWS5fc3RhcnRUaW1lKSpZLl90aW1lU2NhbGUsITEsITEpLFgucmVuZGVyKChqLmZyYW1lLVguX3N0YXJ0VGltZSkqWC5fdGltZVNjYWxlLCExLCExKSxLLmxlbmd0aCYmJCgpLGouZnJhbWU+PVope1o9ai5mcmFtZSsocGFyc2VJbnQoSC5hdXRvU2xlZXAsMTApfHwxMjApO2ZvcihjIGluIFQpe2ZvcihiPVRbY10udHdlZW5zLGE9Yi5sZW5ndGg7LS1hPi0xOyliW2FdLl9nYyYmYi5zcGxpY2UoYSwxKTswPT09Yi5sZW5ndGgmJmRlbGV0ZSBUW2NdfWlmKGM9WS5fZmlyc3QsKCFjfHxjLl9wYXVzZWQpJiZILmF1dG9TbGVlcCYmIVguX2ZpcnN0JiYxPT09ai5fbGlzdGVuZXJzLnRpY2subGVuZ3RoKXtmb3IoO2MmJmMuX3BhdXNlZDspYz1jLl9uZXh0O2N8fGouc2xlZXAoKX19fSxqLmFkZEV2ZW50TGlzdGVuZXIoXCJ0aWNrXCIsRS5fdXBkYXRlUm9vdCk7dmFyIF89ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1hLl9nc1R3ZWVuSUQ7aWYoVFtmfHwoYS5fZ3NUd2VlbklEPWY9XCJ0XCIrVSsrKV18fChUW2ZdPXt0YXJnZXQ6YSx0d2VlbnM6W119KSxiJiYoZD1UW2ZdLnR3ZWVucyxkW2U9ZC5sZW5ndGhdPWIsYykpZm9yKDstLWU+LTE7KWRbZV09PT1iJiZkLnNwbGljZShlLDEpO3JldHVybiBUW2ZdLnR3ZWVuc30sYWE9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGUsZixnPWEudmFycy5vbk92ZXJ3cml0ZTtyZXR1cm4gZyYmKGU9ZyhhLGIsYyxkKSksZz1ILm9uT3ZlcndyaXRlLGcmJihmPWcoYSxiLGMsZCkpLGUhPT0hMSYmZiE9PSExfSxiYT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmLGcsaCxpO2lmKDE9PT1kfHxkPj00KXtmb3IoaT1lLmxlbmd0aCxmPTA7aT5mO2YrKylpZigoaD1lW2ZdKSE9PWIpaC5fZ2N8fGguX2tpbGwobnVsbCxhLGIpJiYoZz0hMCk7ZWxzZSBpZig1PT09ZClicmVhaztyZXR1cm4gZ312YXIgaixrPWIuX3N0YXJ0VGltZStuLGw9W10sbT0wLG89MD09PWIuX2R1cmF0aW9uO2ZvcihmPWUubGVuZ3RoOy0tZj4tMTspKGg9ZVtmXSk9PT1ifHxoLl9nY3x8aC5fcGF1c2VkfHwoaC5fdGltZWxpbmUhPT1iLl90aW1lbGluZT8oaj1qfHxjYShiLDAsbyksMD09PWNhKGgsaixvKSYmKGxbbSsrXT1oKSk6aC5fc3RhcnRUaW1lPD1rJiZoLl9zdGFydFRpbWUraC50b3RhbER1cmF0aW9uKCkvaC5fdGltZVNjYWxlPmsmJigob3x8IWguX2luaXR0ZWQpJiZrLWguX3N0YXJ0VGltZTw9MmUtMTB8fChsW20rK109aCkpKTtmb3IoZj1tOy0tZj4tMTspaWYoaD1sW2ZdLDI9PT1kJiZoLl9raWxsKGMsYSxiKSYmKGc9ITApLDIhPT1kfHwhaC5fZmlyc3RQVCYmaC5faW5pdHRlZCl7aWYoMiE9PWQmJiFhYShoLGIpKWNvbnRpbnVlO2guX2VuYWJsZWQoITEsITEpJiYoZz0hMCl9cmV0dXJuIGd9LGNhPWZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YS5fdGltZWxpbmUsZT1kLl90aW1lU2NhbGUsZj1hLl9zdGFydFRpbWU7ZC5fdGltZWxpbmU7KXtpZihmKz1kLl9zdGFydFRpbWUsZSo9ZC5fdGltZVNjYWxlLGQuX3BhdXNlZClyZXR1cm4tMTAwO2Q9ZC5fdGltZWxpbmV9cmV0dXJuIGYvPWUsZj5iP2YtYjpjJiZmPT09Ynx8IWEuX2luaXR0ZWQmJjIqbj5mLWI/bjooZis9YS50b3RhbER1cmF0aW9uKCkvYS5fdGltZVNjYWxlL2UpPmIrbj8wOmYtYi1ufTtpLl9pbml0PWZ1bmN0aW9uKCl7dmFyIGEsYixjLGQsZSxmLGc9dGhpcy52YXJzLGg9dGhpcy5fb3ZlcndyaXR0ZW5Qcm9wcyxpPXRoaXMuX2R1cmF0aW9uLGo9ISFnLmltbWVkaWF0ZVJlbmRlcixrPWcuZWFzZTtpZihnLnN0YXJ0QXQpe3RoaXMuX3N0YXJ0QXQmJih0aGlzLl9zdGFydEF0LnJlbmRlcigtMSwhMCksdGhpcy5fc3RhcnRBdC5raWxsKCkpLGU9e307Zm9yKGQgaW4gZy5zdGFydEF0KWVbZF09Zy5zdGFydEF0W2RdO2lmKGUuZGF0YT1cImlzU3RhcnRcIixlLm92ZXJ3cml0ZT0hMSxlLmltbWVkaWF0ZVJlbmRlcj0hMCxlLmxhenk9aiYmZy5sYXp5IT09ITEsZS5zdGFydEF0PWUuZGVsYXk9bnVsbCxlLm9uVXBkYXRlPWcub25VcGRhdGUsZS5vblVwZGF0ZVBhcmFtcz1nLm9uVXBkYXRlUGFyYW1zLGUub25VcGRhdGVTY29wZT1nLm9uVXBkYXRlU2NvcGV8fGcuY2FsbGJhY2tTY29wZXx8dGhpcyx0aGlzLl9zdGFydEF0PUgudG8odGhpcy50YXJnZXR8fHt9LDAsZSksailpZih0aGlzLl90aW1lPjApdGhpcy5fc3RhcnRBdD1udWxsO2Vsc2UgaWYoMCE9PWkpcmV0dXJufWVsc2UgaWYoZy5ydW5CYWNrd2FyZHMmJjAhPT1pKWlmKHRoaXMuX3N0YXJ0QXQpdGhpcy5fc3RhcnRBdC5yZW5kZXIoLTEsITApLHRoaXMuX3N0YXJ0QXQua2lsbCgpLHRoaXMuX3N0YXJ0QXQ9bnVsbDtlbHNlezAhPT10aGlzLl90aW1lJiYoaj0hMSksYz17fTtmb3IoZCBpbiBnKVZbZF0mJlwiYXV0b0NTU1wiIT09ZHx8KGNbZF09Z1tkXSk7aWYoYy5vdmVyd3JpdGU9MCxjLmRhdGE9XCJpc0Zyb21TdGFydFwiLGMubGF6eT1qJiZnLmxhenkhPT0hMSxjLmltbWVkaWF0ZVJlbmRlcj1qLHRoaXMuX3N0YXJ0QXQ9SC50byh0aGlzLnRhcmdldCwwLGMpLGope2lmKDA9PT10aGlzLl90aW1lKXJldHVybn1lbHNlIHRoaXMuX3N0YXJ0QXQuX2luaXQoKSx0aGlzLl9zdGFydEF0Ll9lbmFibGVkKCExKSx0aGlzLnZhcnMuaW1tZWRpYXRlUmVuZGVyJiYodGhpcy5fc3RhcnRBdD1udWxsKX1pZih0aGlzLl9lYXNlPWs9az9rIGluc3RhbmNlb2Ygdz9rOlwiZnVuY3Rpb25cIj09dHlwZW9mIGs/bmV3IHcoayxnLmVhc2VQYXJhbXMpOnhba118fEguZGVmYXVsdEVhc2U6SC5kZWZhdWx0RWFzZSxnLmVhc2VQYXJhbXMgaW5zdGFuY2VvZiBBcnJheSYmay5jb25maWcmJih0aGlzLl9lYXNlPWsuY29uZmlnLmFwcGx5KGssZy5lYXNlUGFyYW1zKSksdGhpcy5fZWFzZVR5cGU9dGhpcy5fZWFzZS5fdHlwZSx0aGlzLl9lYXNlUG93ZXI9dGhpcy5fZWFzZS5fcG93ZXIsdGhpcy5fZmlyc3RQVD1udWxsLHRoaXMuX3RhcmdldHMpZm9yKGY9dGhpcy5fdGFyZ2V0cy5sZW5ndGgsYT0wO2Y+YTthKyspdGhpcy5faW5pdFByb3BzKHRoaXMuX3RhcmdldHNbYV0sdGhpcy5fcHJvcExvb2t1cFthXT17fSx0aGlzLl9zaWJsaW5nc1thXSxoP2hbYV06bnVsbCxhKSYmKGI9ITApO2Vsc2UgYj10aGlzLl9pbml0UHJvcHModGhpcy50YXJnZXQsdGhpcy5fcHJvcExvb2t1cCx0aGlzLl9zaWJsaW5ncyxoLDApO2lmKGImJkguX29uUGx1Z2luRXZlbnQoXCJfb25Jbml0QWxsUHJvcHNcIix0aGlzKSxoJiYodGhpcy5fZmlyc3RQVHx8XCJmdW5jdGlvblwiIT10eXBlb2YgdGhpcy50YXJnZXQmJnRoaXMuX2VuYWJsZWQoITEsITEpKSxnLnJ1bkJhY2t3YXJkcylmb3IoYz10aGlzLl9maXJzdFBUO2M7KWMucys9Yy5jLGMuYz0tYy5jLGM9Yy5fbmV4dDt0aGlzLl9vblVwZGF0ZT1nLm9uVXBkYXRlLHRoaXMuX2luaXR0ZWQ9ITB9LGkuX2luaXRQcm9wcz1mdW5jdGlvbihiLGMsZCxlLGYpe3ZhciBnLGgsaSxqLGssbDtpZihudWxsPT1iKXJldHVybiExO0xbYi5fZ3NUd2VlbklEXSYmJCgpLHRoaXMudmFycy5jc3N8fGIuc3R5bGUmJmIhPT1hJiZiLm5vZGVUeXBlJiZTLmNzcyYmdGhpcy52YXJzLmF1dG9DU1MhPT0hMSYmSih0aGlzLnZhcnMsYik7Zm9yKGcgaW4gdGhpcy52YXJzKWlmKGw9dGhpcy52YXJzW2ddLFZbZ10pbCYmKGwgaW5zdGFuY2VvZiBBcnJheXx8bC5wdXNoJiZxKGwpKSYmLTEhPT1sLmpvaW4oXCJcIikuaW5kZXhPZihcIntzZWxmfVwiKSYmKHRoaXMudmFyc1tnXT1sPXRoaXMuX3N3YXBTZWxmSW5QYXJhbXMobCx0aGlzKSk7ZWxzZSBpZihTW2ddJiYoaj1uZXcgU1tnXSkuX29uSW5pdFR3ZWVuKGIsdGhpcy52YXJzW2ddLHRoaXMsZikpe2Zvcih0aGlzLl9maXJzdFBUPWs9e19uZXh0OnRoaXMuX2ZpcnN0UFQsdDpqLHA6XCJzZXRSYXRpb1wiLHM6MCxjOjEsZjoxLG46ZyxwZzoxLHByOmouX3ByaW9yaXR5LG06MH0saD1qLl9vdmVyd3JpdGVQcm9wcy5sZW5ndGg7LS1oPi0xOyljW2ouX292ZXJ3cml0ZVByb3BzW2hdXT10aGlzLl9maXJzdFBUOyhqLl9wcmlvcml0eXx8ai5fb25Jbml0QWxsUHJvcHMpJiYoaT0hMCksKGouX29uRGlzYWJsZXx8ai5fb25FbmFibGUpJiYodGhpcy5fbm90aWZ5UGx1Z2luc09mRW5hYmxlZD0hMCksay5fbmV4dCYmKGsuX25leHQuX3ByZXY9ayl9ZWxzZSBjW2ddPVEuY2FsbCh0aGlzLGIsZyxcImdldFwiLGwsZywwLG51bGwsdGhpcy52YXJzLnN0cmluZ0ZpbHRlcixmKTtyZXR1cm4gZSYmdGhpcy5fa2lsbChlLGIpP3RoaXMuX2luaXRQcm9wcyhiLGMsZCxlLGYpOnRoaXMuX292ZXJ3cml0ZT4xJiZ0aGlzLl9maXJzdFBUJiZkLmxlbmd0aD4xJiZiYShiLHRoaXMsYyx0aGlzLl9vdmVyd3JpdGUsZCk/KHRoaXMuX2tpbGwoYyxiKSx0aGlzLl9pbml0UHJvcHMoYixjLGQsZSxmKSk6KHRoaXMuX2ZpcnN0UFQmJih0aGlzLnZhcnMubGF6eSE9PSExJiZ0aGlzLl9kdXJhdGlvbnx8dGhpcy52YXJzLmxhenkmJiF0aGlzLl9kdXJhdGlvbikmJihMW2IuX2dzVHdlZW5JRF09ITApLGkpfSxpLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmLGcsaD10aGlzLl90aW1lLGk9dGhpcy5fZHVyYXRpb24saj10aGlzLl9yYXdQcmV2VGltZTtpZihhPj1pLTFlLTcmJmE+PTApdGhpcy5fdG90YWxUaW1lPXRoaXMuX3RpbWU9aSx0aGlzLnJhdGlvPXRoaXMuX2Vhc2UuX2NhbGNFbmQ/dGhpcy5fZWFzZS5nZXRSYXRpbygxKToxLHRoaXMuX3JldmVyc2VkfHwoZD0hMCxlPVwib25Db21wbGV0ZVwiLGM9Y3x8dGhpcy5fdGltZWxpbmUuYXV0b1JlbW92ZUNoaWxkcmVuKSwwPT09aSYmKHRoaXMuX2luaXR0ZWR8fCF0aGlzLnZhcnMubGF6eXx8YykmJih0aGlzLl9zdGFydFRpbWU9PT10aGlzLl90aW1lbGluZS5fZHVyYXRpb24mJihhPTApLCgwPmp8fDA+PWEmJmE+PS0xZS03fHxqPT09biYmXCJpc1BhdXNlXCIhPT10aGlzLmRhdGEpJiZqIT09YSYmKGM9ITAsaj5uJiYoZT1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIpKSx0aGlzLl9yYXdQcmV2VGltZT1nPSFifHxhfHxqPT09YT9hOm4pO2Vsc2UgaWYoMWUtNz5hKXRoaXMuX3RvdGFsVGltZT10aGlzLl90aW1lPTAsdGhpcy5yYXRpbz10aGlzLl9lYXNlLl9jYWxjRW5kP3RoaXMuX2Vhc2UuZ2V0UmF0aW8oMCk6MCwoMCE9PWh8fDA9PT1pJiZqPjApJiYoZT1cIm9uUmV2ZXJzZUNvbXBsZXRlXCIsZD10aGlzLl9yZXZlcnNlZCksMD5hJiYodGhpcy5fYWN0aXZlPSExLDA9PT1pJiYodGhpcy5faW5pdHRlZHx8IXRoaXMudmFycy5sYXp5fHxjKSYmKGo+PTAmJihqIT09bnx8XCJpc1BhdXNlXCIhPT10aGlzLmRhdGEpJiYoYz0hMCksdGhpcy5fcmF3UHJldlRpbWU9Zz0hYnx8YXx8aj09PWE/YTpuKSksKCF0aGlzLl9pbml0dGVkfHx0aGlzLl9zdGFydEF0JiZ0aGlzLl9zdGFydEF0LnByb2dyZXNzKCkpJiYoYz0hMCk7ZWxzZSBpZih0aGlzLl90b3RhbFRpbWU9dGhpcy5fdGltZT1hLHRoaXMuX2Vhc2VUeXBlKXt2YXIgaz1hL2ksbD10aGlzLl9lYXNlVHlwZSxtPXRoaXMuX2Vhc2VQb3dlcjsoMT09PWx8fDM9PT1sJiZrPj0uNSkmJihrPTEtayksMz09PWwmJihrKj0yKSwxPT09bT9rKj1rOjI9PT1tP2sqPWsqazozPT09bT9rKj1rKmsqazo0PT09bSYmKGsqPWsqayprKmspLDE9PT1sP3RoaXMucmF0aW89MS1rOjI9PT1sP3RoaXMucmF0aW89azouNT5hL2k/dGhpcy5yYXRpbz1rLzI6dGhpcy5yYXRpbz0xLWsvMn1lbHNlIHRoaXMucmF0aW89dGhpcy5fZWFzZS5nZXRSYXRpbyhhL2kpO2lmKHRoaXMuX3RpbWUhPT1ofHxjKXtpZighdGhpcy5faW5pdHRlZCl7aWYodGhpcy5faW5pdCgpLCF0aGlzLl9pbml0dGVkfHx0aGlzLl9nYylyZXR1cm47aWYoIWMmJnRoaXMuX2ZpcnN0UFQmJih0aGlzLnZhcnMubGF6eSE9PSExJiZ0aGlzLl9kdXJhdGlvbnx8dGhpcy52YXJzLmxhenkmJiF0aGlzLl9kdXJhdGlvbikpcmV0dXJuIHRoaXMuX3RpbWU9dGhpcy5fdG90YWxUaW1lPWgsdGhpcy5fcmF3UHJldlRpbWU9aixLLnB1c2godGhpcyksdm9pZCh0aGlzLl9sYXp5PVthLGJdKTt0aGlzLl90aW1lJiYhZD90aGlzLnJhdGlvPXRoaXMuX2Vhc2UuZ2V0UmF0aW8odGhpcy5fdGltZS9pKTpkJiZ0aGlzLl9lYXNlLl9jYWxjRW5kJiYodGhpcy5yYXRpbz10aGlzLl9lYXNlLmdldFJhdGlvKDA9PT10aGlzLl90aW1lPzA6MSkpfWZvcih0aGlzLl9sYXp5IT09ITEmJih0aGlzLl9sYXp5PSExKSx0aGlzLl9hY3RpdmV8fCF0aGlzLl9wYXVzZWQmJnRoaXMuX3RpbWUhPT1oJiZhPj0wJiYodGhpcy5fYWN0aXZlPSEwKSwwPT09aCYmKHRoaXMuX3N0YXJ0QXQmJihhPj0wP3RoaXMuX3N0YXJ0QXQucmVuZGVyKGEsITAsYyk6ZXx8KGU9XCJfZHVtbXlHU1wiKSksdGhpcy52YXJzLm9uU3RhcnQmJigwIT09dGhpcy5fdGltZXx8MD09PWkpJiYoYnx8dGhpcy5fY2FsbGJhY2soXCJvblN0YXJ0XCIpKSksZj10aGlzLl9maXJzdFBUO2Y7KWYuZj9mLnRbZi5wXShmLmMqdGhpcy5yYXRpbytmLnMpOmYudFtmLnBdPWYuYyp0aGlzLnJhdGlvK2YucyxmPWYuX25leHQ7dGhpcy5fb25VcGRhdGUmJigwPmEmJnRoaXMuX3N0YXJ0QXQmJmEhPT0tMWUtNCYmdGhpcy5fc3RhcnRBdC5yZW5kZXIoYSwhMCxjKSxifHwodGhpcy5fdGltZSE9PWh8fGR8fGMpJiZ0aGlzLl9jYWxsYmFjayhcIm9uVXBkYXRlXCIpKSxlJiYoIXRoaXMuX2djfHxjKSYmKDA+YSYmdGhpcy5fc3RhcnRBdCYmIXRoaXMuX29uVXBkYXRlJiZhIT09LTFlLTQmJnRoaXMuX3N0YXJ0QXQucmVuZGVyKGEsITAsYyksZCYmKHRoaXMuX3RpbWVsaW5lLmF1dG9SZW1vdmVDaGlsZHJlbiYmdGhpcy5fZW5hYmxlZCghMSwhMSksdGhpcy5fYWN0aXZlPSExKSwhYiYmdGhpcy52YXJzW2VdJiZ0aGlzLl9jYWxsYmFjayhlKSwwPT09aSYmdGhpcy5fcmF3UHJldlRpbWU9PT1uJiZnIT09biYmKHRoaXMuX3Jhd1ByZXZUaW1lPTApKX19LGkuX2tpbGw9ZnVuY3Rpb24oYSxiLGMpe2lmKFwiYWxsXCI9PT1hJiYoYT1udWxsKSxudWxsPT1hJiYobnVsbD09Ynx8Yj09PXRoaXMudGFyZ2V0KSlyZXR1cm4gdGhpcy5fbGF6eT0hMSx0aGlzLl9lbmFibGVkKCExLCExKTtiPVwic3RyaW5nXCIhPXR5cGVvZiBiP2J8fHRoaXMuX3RhcmdldHN8fHRoaXMudGFyZ2V0Okguc2VsZWN0b3IoYil8fGI7dmFyIGQsZSxmLGcsaCxpLGosayxsLG09YyYmdGhpcy5fdGltZSYmYy5fc3RhcnRUaW1lPT09dGhpcy5fc3RhcnRUaW1lJiZ0aGlzLl90aW1lbGluZT09PWMuX3RpbWVsaW5lO2lmKChxKGIpfHxJKGIpKSYmXCJudW1iZXJcIiE9dHlwZW9mIGJbMF0pZm9yKGQ9Yi5sZW5ndGg7LS1kPi0xOyl0aGlzLl9raWxsKGEsYltkXSxjKSYmKGk9ITApO2Vsc2V7aWYodGhpcy5fdGFyZ2V0cyl7Zm9yKGQ9dGhpcy5fdGFyZ2V0cy5sZW5ndGg7LS1kPi0xOylpZihiPT09dGhpcy5fdGFyZ2V0c1tkXSl7aD10aGlzLl9wcm9wTG9va3VwW2RdfHx7fSx0aGlzLl9vdmVyd3JpdHRlblByb3BzPXRoaXMuX292ZXJ3cml0dGVuUHJvcHN8fFtdLGU9dGhpcy5fb3ZlcndyaXR0ZW5Qcm9wc1tkXT1hP3RoaXMuX292ZXJ3cml0dGVuUHJvcHNbZF18fHt9OlwiYWxsXCI7YnJlYWt9fWVsc2V7aWYoYiE9PXRoaXMudGFyZ2V0KXJldHVybiExO2g9dGhpcy5fcHJvcExvb2t1cCxlPXRoaXMuX292ZXJ3cml0dGVuUHJvcHM9YT90aGlzLl9vdmVyd3JpdHRlblByb3BzfHx7fTpcImFsbFwifWlmKGgpe2lmKGo9YXx8aCxrPWEhPT1lJiZcImFsbFwiIT09ZSYmYSE9PWgmJihcIm9iamVjdFwiIT10eXBlb2YgYXx8IWEuX3RlbXBLaWxsKSxjJiYoSC5vbk92ZXJ3cml0ZXx8dGhpcy52YXJzLm9uT3ZlcndyaXRlKSl7Zm9yKGYgaW4gailoW2ZdJiYobHx8KGw9W10pLGwucHVzaChmKSk7aWYoKGx8fCFhKSYmIWFhKHRoaXMsYyxiLGwpKXJldHVybiExfWZvcihmIGluIGopKGc9aFtmXSkmJihtJiYoZy5mP2cudFtnLnBdKGcucyk6Zy50W2cucF09Zy5zLGk9ITApLGcucGcmJmcudC5fa2lsbChqKSYmKGk9ITApLGcucGcmJjAhPT1nLnQuX292ZXJ3cml0ZVByb3BzLmxlbmd0aHx8KGcuX3ByZXY/Zy5fcHJldi5fbmV4dD1nLl9uZXh0Omc9PT10aGlzLl9maXJzdFBUJiYodGhpcy5fZmlyc3RQVD1nLl9uZXh0KSxnLl9uZXh0JiYoZy5fbmV4dC5fcHJldj1nLl9wcmV2KSxnLl9uZXh0PWcuX3ByZXY9bnVsbCksZGVsZXRlIGhbZl0pLGsmJihlW2ZdPTEpOyF0aGlzLl9maXJzdFBUJiZ0aGlzLl9pbml0dGVkJiZ0aGlzLl9lbmFibGVkKCExLCExKX19cmV0dXJuIGl9LGkuaW52YWxpZGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ub3RpZnlQbHVnaW5zT2ZFbmFibGVkJiZILl9vblBsdWdpbkV2ZW50KFwiX29uRGlzYWJsZVwiLHRoaXMpLHRoaXMuX2ZpcnN0UFQ9dGhpcy5fb3ZlcndyaXR0ZW5Qcm9wcz10aGlzLl9zdGFydEF0PXRoaXMuX29uVXBkYXRlPW51bGwsdGhpcy5fbm90aWZ5UGx1Z2luc09mRW5hYmxlZD10aGlzLl9hY3RpdmU9dGhpcy5fbGF6eT0hMSx0aGlzLl9wcm9wTG9va3VwPXRoaXMuX3RhcmdldHM/e306W10sRS5wcm90b3R5cGUuaW52YWxpZGF0ZS5jYWxsKHRoaXMpLHRoaXMudmFycy5pbW1lZGlhdGVSZW5kZXImJih0aGlzLl90aW1lPS1uLHRoaXMucmVuZGVyKE1hdGgubWluKDAsLXRoaXMuX2RlbGF5KSkpLHRoaXN9LGkuX2VuYWJsZWQ9ZnVuY3Rpb24oYSxiKXtpZihrfHxqLndha2UoKSxhJiZ0aGlzLl9nYyl7dmFyIGMsZD10aGlzLl90YXJnZXRzO2lmKGQpZm9yKGM9ZC5sZW5ndGg7LS1jPi0xOyl0aGlzLl9zaWJsaW5nc1tjXT1fKGRbY10sdGhpcywhMCk7ZWxzZSB0aGlzLl9zaWJsaW5ncz1fKHRoaXMudGFyZ2V0LHRoaXMsITApfXJldHVybiBFLnByb3RvdHlwZS5fZW5hYmxlZC5jYWxsKHRoaXMsYSxiKSx0aGlzLl9ub3RpZnlQbHVnaW5zT2ZFbmFibGVkJiZ0aGlzLl9maXJzdFBUP0guX29uUGx1Z2luRXZlbnQoYT9cIl9vbkVuYWJsZVwiOlwiX29uRGlzYWJsZVwiLHRoaXMpOiExfSxILnRvPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gbmV3IEgoYSxiLGMpfSxILmZyb209ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBjLnJ1bkJhY2t3YXJkcz0hMCxjLmltbWVkaWF0ZVJlbmRlcj0wIT1jLmltbWVkaWF0ZVJlbmRlcixuZXcgSChhLGIsYyl9LEguZnJvbVRvPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiBkLnN0YXJ0QXQ9YyxkLmltbWVkaWF0ZVJlbmRlcj0wIT1kLmltbWVkaWF0ZVJlbmRlciYmMCE9Yy5pbW1lZGlhdGVSZW5kZXIsbmV3IEgoYSxiLGQpfSxILmRlbGF5ZWRDYWxsPWZ1bmN0aW9uKGEsYixjLGQsZSl7cmV0dXJuIG5ldyBIKGIsMCx7ZGVsYXk6YSxvbkNvbXBsZXRlOmIsb25Db21wbGV0ZVBhcmFtczpjLGNhbGxiYWNrU2NvcGU6ZCxvblJldmVyc2VDb21wbGV0ZTpiLG9uUmV2ZXJzZUNvbXBsZXRlUGFyYW1zOmMsaW1tZWRpYXRlUmVuZGVyOiExLGxhenk6ITEsdXNlRnJhbWVzOmUsb3ZlcndyaXRlOjB9KX0sSC5zZXQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IEgoYSwwLGIpfSxILmdldFR3ZWVuc09mPWZ1bmN0aW9uKGEsYil7aWYobnVsbD09YSlyZXR1cm5bXTthPVwic3RyaW5nXCIhPXR5cGVvZiBhP2E6SC5zZWxlY3RvcihhKXx8YTt2YXIgYyxkLGUsZjtpZigocShhKXx8SShhKSkmJlwibnVtYmVyXCIhPXR5cGVvZiBhWzBdKXtmb3IoYz1hLmxlbmd0aCxkPVtdOy0tYz4tMTspZD1kLmNvbmNhdChILmdldFR3ZWVuc09mKGFbY10sYikpO2ZvcihjPWQubGVuZ3RoOy0tYz4tMTspZm9yKGY9ZFtjXSxlPWM7LS1lPi0xOylmPT09ZFtlXSYmZC5zcGxpY2UoYywxKX1lbHNlIGlmKGEuX2dzVHdlZW5JRClmb3IoZD1fKGEpLmNvbmNhdCgpLGM9ZC5sZW5ndGg7LS1jPi0xOykoZFtjXS5fZ2N8fGImJiFkW2NdLmlzQWN0aXZlKCkpJiZkLnNwbGljZShjLDEpO3JldHVybiBkfHxbXX0sSC5raWxsVHdlZW5zT2Y9SC5raWxsRGVsYXllZENhbGxzVG89ZnVuY3Rpb24oYSxiLGMpe1wib2JqZWN0XCI9PXR5cGVvZiBiJiYoYz1iLGI9ITEpO2Zvcih2YXIgZD1ILmdldFR3ZWVuc09mKGEsYiksZT1kLmxlbmd0aDstLWU+LTE7KWRbZV0uX2tpbGwoYyxhKX07dmFyIGRhPXUoXCJwbHVnaW5zLlR3ZWVuUGx1Z2luXCIsZnVuY3Rpb24oYSxiKXt0aGlzLl9vdmVyd3JpdGVQcm9wcz0oYXx8XCJcIikuc3BsaXQoXCIsXCIpLHRoaXMuX3Byb3BOYW1lPXRoaXMuX292ZXJ3cml0ZVByb3BzWzBdLHRoaXMuX3ByaW9yaXR5PWJ8fDAsdGhpcy5fc3VwZXI9ZGEucHJvdG90eXBlfSwhMCk7aWYoaT1kYS5wcm90b3R5cGUsZGEudmVyc2lvbj1cIjEuMTkuMFwiLGRhLkFQST0yLGkuX2ZpcnN0UFQ9bnVsbCxpLl9hZGRUd2Vlbj1RLGkuc2V0UmF0aW89TyxpLl9raWxsPWZ1bmN0aW9uKGEpe3ZhciBiLGM9dGhpcy5fb3ZlcndyaXRlUHJvcHMsZD10aGlzLl9maXJzdFBUO2lmKG51bGwhPWFbdGhpcy5fcHJvcE5hbWVdKXRoaXMuX292ZXJ3cml0ZVByb3BzPVtdO2Vsc2UgZm9yKGI9Yy5sZW5ndGg7LS1iPi0xOyludWxsIT1hW2NbYl1dJiZjLnNwbGljZShiLDEpO2Zvcig7ZDspbnVsbCE9YVtkLm5dJiYoZC5fbmV4dCYmKGQuX25leHQuX3ByZXY9ZC5fcHJldiksZC5fcHJldj8oZC5fcHJldi5fbmV4dD1kLl9uZXh0LGQuX3ByZXY9bnVsbCk6dGhpcy5fZmlyc3RQVD09PWQmJih0aGlzLl9maXJzdFBUPWQuX25leHQpKSxkPWQuX25leHQ7cmV0dXJuITF9LGkuX21vZD1pLl9yb3VuZFByb3BzPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPXRoaXMuX2ZpcnN0UFQ7YzspYj1hW3RoaXMuX3Byb3BOYW1lXXx8bnVsbCE9Yy5uJiZhW2Mubi5zcGxpdCh0aGlzLl9wcm9wTmFtZStcIl9cIikuam9pbihcIlwiKV0sYiYmXCJmdW5jdGlvblwiPT10eXBlb2YgYiYmKDI9PT1jLmY/Yy50Ll9hcHBseVBULm09YjpjLm09YiksYz1jLl9uZXh0fSxILl9vblBsdWdpbkV2ZW50PWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsZyxoPWIuX2ZpcnN0UFQ7aWYoXCJfb25Jbml0QWxsUHJvcHNcIj09PWEpe2Zvcig7aDspe2ZvcihnPWguX25leHQsZD1lO2QmJmQucHI+aC5wcjspZD1kLl9uZXh0OyhoLl9wcmV2PWQ/ZC5fcHJldjpmKT9oLl9wcmV2Ll9uZXh0PWg6ZT1oLChoLl9uZXh0PWQpP2QuX3ByZXY9aDpmPWgsaD1nfWg9Yi5fZmlyc3RQVD1lfWZvcig7aDspaC5wZyYmXCJmdW5jdGlvblwiPT10eXBlb2YgaC50W2FdJiZoLnRbYV0oKSYmKGM9ITApLGg9aC5fbmV4dDtyZXR1cm4gY30sZGEuYWN0aXZhdGU9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPWEubGVuZ3RoOy0tYj4tMTspYVtiXS5BUEk9PT1kYS5BUEkmJihTWyhuZXcgYVtiXSkuX3Byb3BOYW1lXT1hW2JdKTtyZXR1cm4hMH0sdC5wbHVnaW49ZnVuY3Rpb24oYSl7aWYoIShhJiZhLnByb3BOYW1lJiZhLmluaXQmJmEuQVBJKSl0aHJvd1wiaWxsZWdhbCBwbHVnaW4gZGVmaW5pdGlvbi5cIjt2YXIgYixjPWEucHJvcE5hbWUsZD1hLnByaW9yaXR5fHwwLGU9YS5vdmVyd3JpdGVQcm9wcyxmPXtpbml0OlwiX29uSW5pdFR3ZWVuXCIsc2V0Olwic2V0UmF0aW9cIixraWxsOlwiX2tpbGxcIixyb3VuZDpcIl9tb2RcIixtb2Q6XCJfbW9kXCIsaW5pdEFsbDpcIl9vbkluaXRBbGxQcm9wc1wifSxnPXUoXCJwbHVnaW5zLlwiK2MuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYy5zdWJzdHIoMSkrXCJQbHVnaW5cIixmdW5jdGlvbigpe2RhLmNhbGwodGhpcyxjLGQpLHRoaXMuX292ZXJ3cml0ZVByb3BzPWV8fFtdfSxhLmdsb2JhbD09PSEwKSxoPWcucHJvdG90eXBlPW5ldyBkYShjKTtoLmNvbnN0cnVjdG9yPWcsZy5BUEk9YS5BUEk7Zm9yKGIgaW4gZilcImZ1bmN0aW9uXCI9PXR5cGVvZiBhW2JdJiYoaFtmW2JdXT1hW2JdKTtyZXR1cm4gZy52ZXJzaW9uPWEudmVyc2lvbixkYS5hY3RpdmF0ZShbZ10pLGd9LGc9YS5fZ3NRdWV1ZSl7Zm9yKGg9MDtoPGcubGVuZ3RoO2grKylnW2hdKCk7Zm9yKGkgaW4gcilyW2ldLmZ1bmN8fGEuY29uc29sZS5sb2coXCJHU0FQIGVuY291bnRlcmVkIG1pc3NpbmcgZGVwZW5kZW5jeTogXCIraSl9az0hMX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOnRoaXN8fHdpbmRvdyxcIlR3ZWVuTGl0ZVwiKTsiLCJpbXBvcnQgVHdlZW5NYXggZnJvbSAnZ3NhcC9zcmMvbWluaWZpZWQvVHdlZW5NYXgubWluJztcclxuaW1wb3J0IFRpbWVsaW5lTWF4IGZyb20gJ2dzYXAvc3JjL21pbmlmaWVkL1RpbWVsaW5lTWF4Lm1pbic7XHJcbmltcG9ydCBTY3JvbGxNYWdpYyBmcm9tICdzY3JvbGxtYWdpYy9zY3JvbGxtYWdpYy9taW5pZmllZC9TY3JvbGxNYWdpYy5taW4nO1xyXG5pbXBvcnQgJ3Njcm9sbG1hZ2ljL3Njcm9sbG1hZ2ljL21pbmlmaWVkL3BsdWdpbnMvYW5pbWF0aW9uLmdzYXAubWluJztcclxuXHJcbmltcG9ydCAnLi9qcXVlcnkuaW5wdXRtYXNrLmJ1bmRsZSc7XHJcbmltcG9ydCAnLi9qcXVlcnkuZmFuY3lib3gubWluJztcclxuXHJcbmltcG9ydCAnLi9qcy1tYWdpYyc7XHJcblxyXG52YXIgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuXHJcbiQoJy5odW0nKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgdmFyIG5hdiA9ICQoJy5uYXYtd3JhcCcpO1xyXG4gICAgbmF2LmFuaW1hdGUoe1xyXG4gICAgICAgIFwidG9wXCIgOiBcIjBcIixcclxuICAgICAgICBcImJvdHRvbVwiIDogXCIwXCJcclxuICAgIH0sIDMwMCk7XHJcbiAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ2ZpeGVkJyk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gY2xvc2VOYXZNZW51ICgpe1xyXG4gICAgdmFyIG5hdiA9ICQoJy5uYXYtd3JhcCcpO1xyXG4gICAgbmF2LmFuaW1hdGUoe1xyXG4gICAgICAgIFwidG9wXCIgOiBcIi0xNTAlXCIsXHJcbiAgICAgICAgXCJib3R0b21cIiA6IFwiMTUwJVwiXHJcbiAgICB9LCAzMDApO1xyXG4gICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdmaXhlZCcpOyAgICBcclxufVxyXG5cclxuJCgnLm5hdi1tb2ItY2xvc2UnKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgY2xvc2VOYXZNZW51KCk7XHJcbn0pO1xyXG5cclxuJCgnLm5hdiBhJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcclxuICAgIGNsb3NlTmF2TWVudSgpO1xyXG59KTtcclxuXHJcbiQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKXtcclxuICAgIHZhciBuYXYgPSAkKCcubmF2Jyk7XHJcbiAgICBpZigkKCcucGFnZScpLmhhc0NsYXNzKCdmaXhlZCcpICYmIHdpbmRvdy5pbm5lcldpZHRoID4gOTkyKXtcclxuICAgICAgICAkKCcucGFnZScpLnJlbW92ZUNsYXNzKCdmaXhlZCcpO1xyXG4gICAgICAgIG5hdi5jc3Moe2JvdHRvbTogXCIxNTAlXCIsIHRvcDogXCItMTUwJVwifSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuXHJcbnZhciBidXlFbGVtZW50cyA9IDE2O1xyXG5pZih3aW5kb3dXaWR0aCA8IDQ4MCl7XHJcbiAgICBidXlFbGVtZW50cyA9IDE0O1xyXG59XHJcbmlmKHdpbmRvd1dpZHRoIDwgOTkyICYmIHdpbmRvd1dpZHRoID4gNzY3KXtcclxuICAgIGJ1eUVsZW1lbnRzID0gMTI7XHJcbn1cclxuXHJcbnZhciBibG9nRWxlbWVudHMgPSA5O1xyXG5cclxuaWYod2luZG93V2lkdGggPCA5OTIgJiYgd2luZG93V2lkdGggPiA3Njcpe1xyXG4gICAgYmxvZ0VsZW1lbnRzID0gMTI7XHJcbn1cclxuXHJcbnZhciBidXlJdGVtcyA9ICQoXCIuYnV5LWdyaWQgLml0ZW0td3JhcFwiKS5sZW5ndGg7XHJcbiQoXCIuYnV5LWdyaWQgLml0ZW0td3JhcDpub3QoOmx0KFwiK2J1eUVsZW1lbnRzK1wiKSlcIikuaGlkZSgpO1xyXG5pZihidXlJdGVtcyA8PSBidXlFbGVtZW50cyl7XHJcbiAgICAkKFwiLmJ1eSAjYnV5LW1vcmVcIikuaGlkZSgpO1xyXG59XHJcbnZhciBibG9nSXRlbXMgPSAkKFwiLm5ld3MtZ3JpZCAuaXRlbS13cmFwXCIpLmxlbmd0aDtcclxuJChcIi5uZXdzLWdyaWQgLml0ZW0td3JhcDpub3QoOmx0KFwiK2Jsb2dFbGVtZW50cytcIikpXCIpLmhpZGUoKTtcclxuaWYoYmxvZ0l0ZW1zIDw9IGJsb2dFbGVtZW50cyl7XHJcbiAgICAkKFwiLm5ld3MgI25ld3MtbW9yZVwiKS5oaWRlKCk7XHJcbn1cclxuXHJcblxyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpe1xyXG4gICAgXHJcblxyXG5cclxuICAgIGlmKCQoJy5jb250YWN0cy1tYXAnKS5sZW5ndGggPiAwKXtcclxuICAgICAgICBpbml0TWFwKCk7XHJcbiAgICB9XHJcbiAgICBcclxuXHJcbn0pO1xyXG5cclxuJChcIi5idXkgI2J1eS1tb3JlXCIpLmNsaWNrKGZ1bmN0aW9uIChlKXtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0dmFyIGl0ZW1zID0gJChcIi5idXktZ3JpZCAuaXRlbS13cmFwOmhpZGRlblwiKS5sZW5ndGg7XHJcblx0aWYgKGl0ZW1zID4gYnV5RWxlbWVudHMpIHtcclxuXHRcdCQoXCIuYnV5LWdyaWQgLml0ZW0td3JhcDpoaWRkZW46bHQoXCIrYnV5RWxlbWVudHMrXCIpXCIpLmZhZGVJbig5MDApO1xyXG5cdH1lbHNlIGlmKGl0ZW1zIDw9IGJ1eUVsZW1lbnRzKXtcclxuXHRcdCQoXCIuYnV5LWdyaWQgLml0ZW0td3JhcDpoaWRkZW46bHQoXCIrYnV5RWxlbWVudHMrXCIpXCIpLmZhZGVJbig5MDApO1xyXG5cdFx0JChcIi5idXkgI2J1eS1tb3JlXCIpLmhpZGUoKTtcclxuXHR9XHJcbn0pO1xyXG5cclxuJChcIi5uZXdzICNuZXdzLW1vcmVcIikuY2xpY2soZnVuY3Rpb24gKGUpe1xyXG5cdGUucHJldmVudERlZmF1bHQoKTtcclxuXHR2YXIgaXRlbXMgPSAkKFwiLm5ld3MtZ3JpZCAuaXRlbS13cmFwOmhpZGRlblwiKS5sZW5ndGg7XHJcblx0aWYgKGl0ZW1zID4gYmxvZ0VsZW1lbnRzKSB7XHJcblx0XHQkKFwiLm5ld3MtZ3JpZCAuaXRlbS13cmFwOmhpZGRlbjpsdChcIitibG9nRWxlbWVudHMrXCIpXCIpLmZhZGVJbig5MDApO1xyXG5cdH1lbHNlIGlmKGl0ZW1zIDw9IGJsb2dFbGVtZW50cyl7XHJcblx0XHQkKFwiLm5ld3MtZ3JpZCAuaXRlbS13cmFwOmhpZGRlbjpsdChcIitibG9nRWxlbWVudHMrXCIpXCIpLmZhZGVJbig5MDApO1xyXG5cdFx0JChcIi5uZXdzICNuZXdzLW1vcmVcIikuaGlkZSgpO1xyXG5cdH1cclxufSk7XHJcblxyXG5mdW5jdGlvbiBpbml0TWFwKCkge1xyXG4gICAgdmFyIG1hcElkID0gJ2NvbnRhY3RzTWFwJztcclxuICAgIHZhciBtYXBzSWQgPSBcIiNcIiArIG1hcElkO1xyXG4gICAgdmFyIGxhdCA9ICQobWFwc0lkKS5kYXRhKCdsYXQnKTtcclxuICAgIHZhciBsbmcgPSAkKG1hcHNJZCkuZGF0YSgnbG5nJyk7XHJcbiAgICB2YXIgem9vbSA9ICQobWFwc0lkKS5kYXRhKCd6b29tJyk7XHJcbiAgICB2YXIgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuICAgIHZhciB1bHVydSA9IHtsYXQ6IGxhdCwgbG5nOiBsbmd9O1xyXG4gICAgdmFyIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWFwSWQpLCB7XHJcbiAgICAgIHpvb206IHpvb20sXHJcbiAgICAgIGNlbnRlcjogdWx1cnUsXHJcbiAgICAgIGRpc2FibGVEZWZhdWx0VUk6IHRydWUsXHJcbiAgICB9KTtcclxuICBcclxuICAgIHZhciBpY29ucyA9IFwiaW1nL2ljb25zL3BsYWNlMi5wbmdcIjtcclxuICBcclxuICAgIHZhciBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcclxuICAgICAgcG9zaXRpb246IHVsdXJ1LFxyXG4gICAgICBtYXA6IG1hcCxcclxuICAgICAgLy8gaWNvbjogaWNvbnNcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuXHJcbiQoIFwiLmZvcm0taW5wdXQsIC5mb3JtLXRleHRhcmVhXCIgKS5lYWNoKGZ1bmN0aW9uKCBpbmRleCApIHtcclxuICAgIGxldCBlbCA9ICQodGhpcyk7XHJcbiAgICBpZihlbC5oYXNDbGFzcyhcIndwY2Y3LXZhbGlkYXRlcy1hcy1yZXF1aXJlZFwiKSl7XHJcbiAgICAgICAgbGV0IHBsYWNlaG9sZGVyID0gZWwuYXR0cigncGxhY2Vob2xkZXInKTtcclxuICAgICAgICBwbGFjZWhvbGRlciArPSBcIipcIjtcclxuICAgICAgICBlbC5hdHRyKCdwbGFjZWhvbGRlcicsIHBsYWNlaG9sZGVyKTtcclxuICAgIH1cclxufSk7XHJcblxyXG5cclxuJCgnaW5wdXRbdHlwZT10ZWxdJykuaW5wdXRtYXNrKHtcclxuICAgIG1hc2s6IFwiKzcgKDk5OSkgOTk5IDk5IDk5XCIsXHJcbiAgICBwbGFjZWhvbGRlcjogXCItXCIsXHJcbiAgICBzaG93TWFza09uSG92ZXI6IGZhbHNlLFxyXG59KTtcclxuXHJcblxyXG52YXIgd3BjZjdFbG0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCAnLmNvbnRhY3RzLWZvcm0nICk7XHJcbiAgICAgICAgXHJcbndwY2Y3RWxtLmFkZEV2ZW50TGlzdGVuZXIoICd3cGNmN21haWxzZW50JywgZnVuY3Rpb24oIGV2ZW50ICkge1xyXG4gICAgJC5mYW5jeWJveC5vcGVuKCc8ZGl2IGNsYXNzPVwidGhhbmtzXCI+PGgyPtCh0L/QsNGB0LjQsdC+ITwvaDI+PHA+0JLQsNGI0LAg0LfQsNGP0LLQutCwINC/0YDQuNC90Y/RgtCwINC4INCyINGB0LrQvtGA0L7QvCDQstGA0LXQvNC10L3QuCDRgSDQktCw0LzQuCDRgdCy0Y/QttC10YLRgdGPINC90LDRiCDQvNC10L3QtdC00LbQtdGAITwvcD48L2Rpdj4nKTtcclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IFxyXG4gICAgICAgICQuZmFuY3lib3guY2xvc2UoKTtcclxuICAgIH0sIDIwMDApOyAgICAgIFxyXG59LCBmYWxzZSApO1xyXG53cGNmN0VsbS5hZGRFdmVudExpc3RlbmVyKCAnd3BjZjdtYWlsZmFpbGVkJywgZnVuY3Rpb24oIGV2ZW50ICkge1xyXG4gICAgJC5mYW5jeWJveC5vcGVuKCc8ZGl2IGNsYXNzPVwidGhhbmtzXCI+PGgyPtCe0YjQuNCx0LrQsCE8L2gyPjxwPtCf0L7Qv9GA0L7QsdGD0LnRgtC1INC30LDQv9C+0LvQvdC40YLRjCDRhNC+0YDQvNGDINC/0L7QstGC0L7RgNC90L4hPC9wPjwvZGl2PicpO1xyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsgXHJcbiAgICAgICAgJC5mYW5jeWJveC5jbG9zZSgpO1xyXG4gICAgfSwgMjAwMCk7ICBcclxufSwgZmFsc2UgKTsiLCIvKiEgU2Nyb2xsTWFnaWMgdjIuMC41IHwgKGMpIDIwMTUgSmFuIFBhZXBrZSAoQGphbnBhZXBrZSkgfCBsaWNlbnNlICYgaW5mbzogaHR0cDovL3Njcm9sbG1hZ2ljLmlvICovXG5cbiFmdW5jdGlvbihlLG4pe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wiU2Nyb2xsTWFnaWNcIixcIlR3ZWVuTWF4XCIsXCJUaW1lbGluZU1heFwiXSxuKTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz8ocmVxdWlyZShcImdzYXBcIiksbihyZXF1aXJlKFwic2Nyb2xsbWFnaWNcIiksVHdlZW5NYXgsVGltZWxpbmVNYXgpKTpuKGUuU2Nyb2xsTWFnaWN8fGUualF1ZXJ5JiZlLmpRdWVyeS5TY3JvbGxNYWdpYyxlLlR3ZWVuTWF4fHxlLlR3ZWVuTGl0ZSxlLlRpbWVsaW5lTWF4fHxlLlRpbWVsaW5lTGl0ZSl9KHRoaXMsZnVuY3Rpb24oZSxuLHIpe1widXNlIHN0cmljdFwiO2UuU2NlbmUuYWRkT3B0aW9uKFwidHdlZW5DaGFuZ2VzXCIsITEsZnVuY3Rpb24oZSl7cmV0dXJuISFlfSksZS5TY2VuZS5leHRlbmQoZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXM7dC5vbihcInByb2dyZXNzLnBsdWdpbl9nc2FwXCIsZnVuY3Rpb24oKXtpKCl9KSx0Lm9uKFwiZGVzdHJveS5wbHVnaW5fZ3NhcFwiLGZ1bmN0aW9uKGUpe3QucmVtb3ZlVHdlZW4oZS5yZXNldCl9KTt2YXIgaT1mdW5jdGlvbigpe2lmKGUpe3ZhciBuPXQucHJvZ3Jlc3MoKSxyPXQuc3RhdGUoKTtlLnJlcGVhdCYmLTE9PT1lLnJlcGVhdCgpP1wiRFVSSU5HXCI9PT1yJiZlLnBhdXNlZCgpP2UucGxheSgpOlwiRFVSSU5HXCI9PT1yfHxlLnBhdXNlZCgpfHxlLnBhdXNlKCk6biE9ZS5wcm9ncmVzcygpJiYoMD09PXQuZHVyYXRpb24oKT9uPjA/ZS5wbGF5KCk6ZS5yZXZlcnNlKCk6dC50d2VlbkNoYW5nZXMoKSYmZS50d2VlblRvP2UudHdlZW5UbyhuKmUuZHVyYXRpb24oKSk6ZS5wcm9ncmVzcyhuKS5wYXVzZSgpKX19O3Quc2V0VHdlZW49ZnVuY3Rpb24obyxhLHMpe3ZhciB1O2FyZ3VtZW50cy5sZW5ndGg+MSYmKGFyZ3VtZW50cy5sZW5ndGg8MyYmKHM9YSxhPTEpLG89bi50byhvLGEscykpO3RyeXt1PXI/bmV3IHIoe3Ntb290aENoaWxkVGltaW5nOiEwfSkuYWRkKG8pOm8sdS5wYXVzZSgpfWNhdGNoKGUpe3JldHVybiB0fXJldHVybiBlJiZ0LnJlbW92ZVR3ZWVuKCksZT11LG8ucmVwZWF0JiYtMT09PW8ucmVwZWF0KCkmJihlLnJlcGVhdCgtMSksZS55b3lvKG8ueW95bygpKSksaSgpLHR9LHQucmVtb3ZlVHdlZW49ZnVuY3Rpb24obil7cmV0dXJuIGUmJihuJiZlLnByb2dyZXNzKDApLnBhdXNlKCksZS5raWxsKCksZT12b2lkIDApLHR9fSl9KTsiLCIvKiFcclxuKiBqcXVlcnkuaW5wdXRtYXNrLmJ1bmRsZS5qc1xyXG4qIGh0dHBzOi8vZ2l0aHViLmNvbS9Sb2JpbkhlcmJvdHMvSW5wdXRtYXNrXHJcbiogQ29weXJpZ2h0IChjKSAyMDEwIC0gMjAxNyBSb2JpbiBIZXJib3RzXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIChodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocClcclxuKiBWZXJzaW9uOiAzLjMuMTFcclxuKi9cclxuXHJcbiFmdW5jdGlvbihtb2R1bGVzKSB7XHJcbiAgICBmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XHJcbiAgICAgICAgaWYgKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSByZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcclxuICAgICAgICB2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XHJcbiAgICAgICAgICAgIGk6IG1vZHVsZUlkLFxyXG4gICAgICAgICAgICBsOiAhMSxcclxuICAgICAgICAgICAgZXhwb3J0czoge31cclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSwgXHJcbiAgICAgICAgbW9kdWxlLmwgPSAhMCwgbW9kdWxlLmV4cG9ydHM7XHJcbiAgICB9XHJcbiAgICB2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xyXG4gICAgX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcywgX193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcywgX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XHJcbiAgICAgICAgX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpIHx8IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITEsXHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6ICEwLFxyXG4gICAgICAgICAgICBnZXQ6IGdldHRlclxyXG4gICAgICAgIH0pO1xyXG4gICAgfSwgX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XHJcbiAgICAgICAgdmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbW9kdWxlLmRlZmF1bHQ7XHJcbiAgICAgICAgfSA6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbW9kdWxlO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIFwiYVwiLCBnZXR0ZXIpLCBnZXR0ZXI7XHJcbiAgICB9LCBfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTtcclxuICAgIH0sIF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCIsIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMyk7XHJcbn0oWyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XHJcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XHJcbiAgICAhZnVuY3Rpb24oZmFjdG9yeSkge1xyXG4gICAgICAgIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbIF9fd2VicGFja19yZXF1aXJlX18oMikgXSwgdm9pZCAwICE9PSAoX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIChfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18gPSBmYWN0b3J5KSA/IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXy5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSA6IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXykgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xyXG4gICAgfShmdW5jdGlvbigkKSB7XHJcbiAgICAgICAgcmV0dXJuICQ7XHJcbiAgICB9KTtcclxufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuICAgIHZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fLCBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24ob2JqKSB7XHJcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBvYmo7XHJcbiAgICB9IDogZnVuY3Rpb24ob2JqKSB7XHJcbiAgICAgICAgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcclxuICAgIH07XHJcbiAgICAhZnVuY3Rpb24oZmFjdG9yeSkge1xyXG4gICAgICAgIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbIF9fd2VicGFja19yZXF1aXJlX18oMCksIF9fd2VicGFja19yZXF1aXJlX18oMTApLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDExKSBdLCBcclxuICAgICAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgKF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9IGZhY3RvcnkpID8gX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XHJcbiAgICB9KGZ1bmN0aW9uKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIElucHV0bWFzayhhbGlhcywgb3B0aW9ucywgaW50ZXJuYWwpIHtcclxuICAgICAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIElucHV0bWFzaykpIHJldHVybiBuZXcgSW5wdXRtYXNrKGFsaWFzLCBvcHRpb25zLCBpbnRlcm5hbCk7XHJcbiAgICAgICAgICAgIHRoaXMuZWwgPSB1bmRlZmluZWQsIHRoaXMuZXZlbnRzID0ge30sIHRoaXMubWFza3NldCA9IHVuZGVmaW5lZCwgdGhpcy5yZWZyZXNoVmFsdWUgPSAhMSwgXHJcbiAgICAgICAgICAgICEwICE9PSBpbnRlcm5hbCAmJiAoJC5pc1BsYWluT2JqZWN0KGFsaWFzKSA/IG9wdGlvbnMgPSBhbGlhcyA6IChvcHRpb25zID0gb3B0aW9ucyB8fCB7fSkuYWxpYXMgPSBhbGlhcywgXHJcbiAgICAgICAgICAgIHRoaXMub3B0cyA9ICQuZXh0ZW5kKCEwLCB7fSwgdGhpcy5kZWZhdWx0cywgb3B0aW9ucyksIHRoaXMubm9NYXNrc0NhY2hlID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlZmluaXRpb25zICE9PSB1bmRlZmluZWQsIFxyXG4gICAgICAgICAgICB0aGlzLnVzZXJPcHRpb25zID0gb3B0aW9ucyB8fCB7fSwgdGhpcy5pc1JUTCA9IHRoaXMub3B0cy5udW1lcmljSW5wdXQsIHJlc29sdmVBbGlhcyh0aGlzLm9wdHMuYWxpYXMsIG9wdGlvbnMsIHRoaXMub3B0cykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiByZXNvbHZlQWxpYXMoYWxpYXNTdHIsIG9wdGlvbnMsIG9wdHMpIHtcclxuICAgICAgICAgICAgdmFyIGFsaWFzRGVmaW5pdGlvbiA9IElucHV0bWFzay5wcm90b3R5cGUuYWxpYXNlc1thbGlhc1N0cl07XHJcbiAgICAgICAgICAgIHJldHVybiBhbGlhc0RlZmluaXRpb24gPyAoYWxpYXNEZWZpbml0aW9uLmFsaWFzICYmIHJlc29sdmVBbGlhcyhhbGlhc0RlZmluaXRpb24uYWxpYXMsIHVuZGVmaW5lZCwgb3B0cyksIFxyXG4gICAgICAgICAgICAkLmV4dGVuZCghMCwgb3B0cywgYWxpYXNEZWZpbml0aW9uKSwgJC5leHRlbmQoITAsIG9wdHMsIG9wdGlvbnMpLCAhMCkgOiAobnVsbCA9PT0gb3B0cy5tYXNrICYmIChvcHRzLm1hc2sgPSBhbGlhc1N0ciksIFxyXG4gICAgICAgICAgICAhMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIGdlbmVyYXRlTWFza1NldChvcHRzLCBub2NhY2hlKSB7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdlbmVyYXRlTWFzayhtYXNrLCBtZXRhZGF0YSwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlZ2V4TWFzayA9ICExO1xyXG4gICAgICAgICAgICAgICAgaWYgKG51bGwgIT09IG1hc2sgJiYgXCJcIiAhPT0gbWFzayB8fCAoKHJlZ2V4TWFzayA9IG51bGwgIT09IG9wdHMucmVnZXgpID8gbWFzayA9IChtYXNrID0gb3B0cy5yZWdleCkucmVwbGFjZSgvXihcXF4pKC4qKShcXCQpJC8sIFwiJDJcIikgOiAocmVnZXhNYXNrID0gITAsIFxyXG4gICAgICAgICAgICAgICAgbWFzayA9IFwiLipcIikpLCAxID09PSBtYXNrLmxlbmd0aCAmJiAhMSA9PT0gb3B0cy5ncmVlZHkgJiYgMCAhPT0gb3B0cy5yZXBlYXQgJiYgKG9wdHMucGxhY2Vob2xkZXIgPSBcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICBvcHRzLnJlcGVhdCA+IDAgfHwgXCIqXCIgPT09IG9wdHMucmVwZWF0IHx8IFwiK1wiID09PSBvcHRzLnJlcGVhdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXBlYXRTdGFydCA9IFwiKlwiID09PSBvcHRzLnJlcGVhdCA/IDAgOiBcIitcIiA9PT0gb3B0cy5yZXBlYXQgPyAxIDogb3B0cy5yZXBlYXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFzayA9IG9wdHMuZ3JvdXBtYXJrZXIuc3RhcnQgKyBtYXNrICsgb3B0cy5ncm91cG1hcmtlci5lbmQgKyBvcHRzLnF1YW50aWZpZXJtYXJrZXIuc3RhcnQgKyByZXBlYXRTdGFydCArIFwiLFwiICsgb3B0cy5yZXBlYXQgKyBvcHRzLnF1YW50aWZpZXJtYXJrZXIuZW5kO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIG1hc2tzZXREZWZpbml0aW9uLCBtYXNrZGVmS2V5ID0gcmVnZXhNYXNrID8gXCJyZWdleF9cIiArIG9wdHMucmVnZXggOiBvcHRzLm51bWVyaWNJbnB1dCA/IG1hc2suc3BsaXQoXCJcIikucmV2ZXJzZSgpLmpvaW4oXCJcIikgOiBtYXNrO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIElucHV0bWFzay5wcm90b3R5cGUubWFza3NDYWNoZVttYXNrZGVmS2V5XSA9PT0gdW5kZWZpbmVkIHx8ICEwID09PSBub2NhY2hlID8gKG1hc2tzZXREZWZpbml0aW9uID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hc2s6IG1hc2ssXHJcbiAgICAgICAgICAgICAgICAgICAgbWFza1Rva2VuOiBJbnB1dG1hc2sucHJvdG90eXBlLmFuYWx5c2VNYXNrKG1hc2ssIHJlZ2V4TWFzaywgb3B0cyksXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsaWRQb3NpdGlvbnM6IHt9LFxyXG4gICAgICAgICAgICAgICAgICAgIF9idWZmZXI6IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgICAgICAgICBidWZmZXI6IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgICAgICAgICB0ZXN0czoge30sXHJcbiAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGE6IG1ldGFkYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgIG1hc2tMZW5ndGg6IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICAgICAgfSwgITAgIT09IG5vY2FjaGUgJiYgKElucHV0bWFzay5wcm90b3R5cGUubWFza3NDYWNoZVttYXNrZGVmS2V5XSA9IG1hc2tzZXREZWZpbml0aW9uLCBcclxuICAgICAgICAgICAgICAgIG1hc2tzZXREZWZpbml0aW9uID0gJC5leHRlbmQoITAsIHt9LCBJbnB1dG1hc2sucHJvdG90eXBlLm1hc2tzQ2FjaGVbbWFza2RlZktleV0pKSkgOiBtYXNrc2V0RGVmaW5pdGlvbiA9ICQuZXh0ZW5kKCEwLCB7fSwgSW5wdXRtYXNrLnByb3RvdHlwZS5tYXNrc0NhY2hlW21hc2tkZWZLZXldKSwgXHJcbiAgICAgICAgICAgICAgICBtYXNrc2V0RGVmaW5pdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoJC5pc0Z1bmN0aW9uKG9wdHMubWFzaykgJiYgKG9wdHMubWFzayA9IG9wdHMubWFzayhvcHRzKSksICQuaXNBcnJheShvcHRzLm1hc2spKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAob3B0cy5tYXNrLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBvcHRzLmtlZXBTdGF0aWMgPSBudWxsID09PSBvcHRzLmtlZXBTdGF0aWMgfHwgb3B0cy5rZWVwU3RhdGljO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbHRNYXNrID0gb3B0cy5ncm91cG1hcmtlci5zdGFydDtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJC5lYWNoKG9wdHMubnVtZXJpY0lucHV0ID8gb3B0cy5tYXNrLnJldmVyc2UoKSA6IG9wdHMubWFzaywgZnVuY3Rpb24obmR4LCBtc2spIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWx0TWFzay5sZW5ndGggPiAxICYmIChhbHRNYXNrICs9IG9wdHMuZ3JvdXBtYXJrZXIuZW5kICsgb3B0cy5hbHRlcm5hdG9ybWFya2VyICsgb3B0cy5ncm91cG1hcmtlci5zdGFydCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtc2subWFzayA9PT0gdW5kZWZpbmVkIHx8ICQuaXNGdW5jdGlvbihtc2subWFzaykgPyBhbHRNYXNrICs9IG1zayA6IGFsdE1hc2sgKz0gbXNrLm1hc2s7XHJcbiAgICAgICAgICAgICAgICAgICAgfSksIGFsdE1hc2sgKz0gb3B0cy5ncm91cG1hcmtlci5lbmQsIGdlbmVyYXRlTWFzayhhbHRNYXNrLCBvcHRzLm1hc2ssIG9wdHMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgb3B0cy5tYXNrID0gb3B0cy5tYXNrLnBvcCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBvcHRzLm1hc2sgJiYgb3B0cy5tYXNrLm1hc2sgIT09IHVuZGVmaW5lZCAmJiAhJC5pc0Z1bmN0aW9uKG9wdHMubWFzay5tYXNrKSA/IGdlbmVyYXRlTWFzayhvcHRzLm1hc2subWFzaywgb3B0cy5tYXNrLCBvcHRzKSA6IGdlbmVyYXRlTWFzayhvcHRzLm1hc2ssIG9wdHMubWFzaywgb3B0cyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIG1hc2tTY29wZShhY3Rpb25PYmosIG1hc2tzZXQsIG9wdHMpIHtcclxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0TWFza1RlbXBsYXRlKGJhc2VPbklucHV0LCBtaW5pbWFsUG9zLCBpbmNsdWRlTW9kZSkge1xyXG4gICAgICAgICAgICAgICAgbWluaW1hbFBvcyA9IG1pbmltYWxQb3MgfHwgMDtcclxuICAgICAgICAgICAgICAgIHZhciBuZHhJbnRsenIsIHRlc3QsIHRlc3RQb3MsIG1hc2tUZW1wbGF0ZSA9IFtdLCBwb3MgPSAwLCBsdnAgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgZG8ge1xyXG4gICAgICAgICAgICAgICAgICAgICEwID09PSBiYXNlT25JbnB1dCAmJiBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSA/ICh0ZXN0ID0gKHRlc3RQb3MgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSkubWF0Y2gsIFxyXG4gICAgICAgICAgICAgICAgICAgIG5keEludGx6ciA9IHRlc3RQb3MubG9jYXRvci5zbGljZSgpLCBtYXNrVGVtcGxhdGUucHVzaCghMCA9PT0gaW5jbHVkZU1vZGUgPyB0ZXN0UG9zLmlucHV0IDogITEgPT09IGluY2x1ZGVNb2RlID8gdGVzdC5uYXRpdmVEZWYgOiBnZXRQbGFjZWhvbGRlcihwb3MsIHRlc3QpKSkgOiAodGVzdCA9ICh0ZXN0UG9zID0gZ2V0VGVzdFRlbXBsYXRlKHBvcywgbmR4SW50bHpyLCBwb3MgLSAxKSkubWF0Y2gsIFxyXG4gICAgICAgICAgICAgICAgICAgIG5keEludGx6ciA9IHRlc3RQb3MubG9jYXRvci5zbGljZSgpLCAoITEgPT09IG9wdHMuaml0TWFza2luZyB8fCBwb3MgPCBsdnAgfHwgXCJudW1iZXJcIiA9PSB0eXBlb2Ygb3B0cy5qaXRNYXNraW5nICYmIGlzRmluaXRlKG9wdHMuaml0TWFza2luZykgJiYgb3B0cy5qaXRNYXNraW5nID4gcG9zKSAmJiBtYXNrVGVtcGxhdGUucHVzaCghMSA9PT0gaW5jbHVkZU1vZGUgPyB0ZXN0Lm5hdGl2ZURlZiA6IGdldFBsYWNlaG9sZGVyKHBvcywgdGVzdCkpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcG9zKys7XHJcbiAgICAgICAgICAgICAgICB9IHdoaWxlICgobWF4TGVuZ3RoID09PSB1bmRlZmluZWQgfHwgcG9zIDwgbWF4TGVuZ3RoKSAmJiAobnVsbCAhPT0gdGVzdC5mbiB8fCBcIlwiICE9PSB0ZXN0LmRlZikgfHwgbWluaW1hbFBvcyA+IHBvcyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJcIiA9PT0gbWFza1RlbXBsYXRlW21hc2tUZW1wbGF0ZS5sZW5ndGggLSAxXSAmJiBtYXNrVGVtcGxhdGUucG9wKCksIGdldE1hc2tTZXQoKS5tYXNrTGVuZ3RoID0gcG9zICsgMSwgXHJcbiAgICAgICAgICAgICAgICBtYXNrVGVtcGxhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0TWFza1NldCgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBtYXNrc2V0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlc2V0TWFza1NldChzb2Z0KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWFza3NldCA9IGdldE1hc2tTZXQoKTtcclxuICAgICAgICAgICAgICAgIG1hc2tzZXQuYnVmZmVyID0gdW5kZWZpbmVkLCAhMCAhPT0gc29mdCAmJiAobWFza3NldC52YWxpZFBvc2l0aW9ucyA9IHt9LCBtYXNrc2V0LnAgPSAwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRMYXN0VmFsaWRQb3NpdGlvbihjbG9zZXN0VG8sIHN0cmljdCwgdmFsaWRQb3NpdGlvbnMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBiZWZvcmUgPSAtMSwgYWZ0ZXIgPSAtMSwgdmFsaWRzID0gdmFsaWRQb3NpdGlvbnMgfHwgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zO1xyXG4gICAgICAgICAgICAgICAgY2xvc2VzdFRvID09PSB1bmRlZmluZWQgJiYgKGNsb3Nlc3RUbyA9IC0xKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIHBvc05keCBpbiB2YWxpZHMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcHNOZHggPSBwYXJzZUludChwb3NOZHgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbGlkc1twc05keF0gJiYgKHN0cmljdCB8fCAhMCAhPT0gdmFsaWRzW3BzTmR4XS5nZW5lcmF0ZWRJbnB1dCkgJiYgKHBzTmR4IDw9IGNsb3Nlc3RUbyAmJiAoYmVmb3JlID0gcHNOZHgpLCBcclxuICAgICAgICAgICAgICAgICAgICBwc05keCA+PSBjbG9zZXN0VG8gJiYgKGFmdGVyID0gcHNOZHgpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiAtMSAhPT0gYmVmb3JlICYmIGNsb3Nlc3RUbyAtIGJlZm9yZSA+IDEgfHwgYWZ0ZXIgPCBjbG9zZXN0VG8gPyBiZWZvcmUgOiBhZnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBzdHJpcFZhbGlkUG9zaXRpb25zKHN0YXJ0LCBlbmQsIG5vY2hlY2ssIHN0cmljdCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGksIHN0YXJ0UG9zID0gc3RhcnQsIHBvc2l0aW9uc0Nsb25lID0gJC5leHRlbmQoITAsIHt9LCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMpLCBuZWVkc1ZhbGlkYXRpb24gPSAhMTtcclxuICAgICAgICAgICAgICAgIGZvciAoZ2V0TWFza1NldCgpLnAgPSBzdGFydCwgaSA9IGVuZCAtIDE7IGkgPj0gc3RhcnRQb3M7IGktLSkgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldICE9PSB1bmRlZmluZWQgJiYgKCEwICE9PSBub2NoZWNrICYmICghZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldLm1hdGNoLm9wdGlvbmFsaXR5ICYmIGZ1bmN0aW9uKHBvcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwb3NNYXRjaCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3NNYXRjaCAhPT0gdW5kZWZpbmVkICYmIG51bGwgPT09IHBvc01hdGNoLm1hdGNoLmZuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcmV2TWF0Y2ggPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zIC0gMV0sIG5leHRNYXRjaCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MgKyAxXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByZXZNYXRjaCAhPT0gdW5kZWZpbmVkICYmIG5leHRNYXRjaCAhPT0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gITE7XHJcbiAgICAgICAgICAgICAgICB9KGkpIHx8ICExID09PSBvcHRzLmNhbkNsZWFyUG9zaXRpb24oZ2V0TWFza1NldCgpLCBpLCBnZXRMYXN0VmFsaWRQb3NpdGlvbigpLCBzdHJpY3QsIG9wdHMpKSB8fCBkZWxldGUgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldKTtcclxuICAgICAgICAgICAgICAgIGZvciAocmVzZXRNYXNrU2V0KCEwKSwgaSA9IHN0YXJ0UG9zICsgMTsgaSA8PSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpOyApIHtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKDtnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbc3RhcnRQb3NdICE9PSB1bmRlZmluZWQ7ICkgc3RhcnRQb3MrKztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaSA8IHN0YXJ0UG9zICYmIChpID0gc3RhcnRQb3MgKyAxKSwgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldID09PSB1bmRlZmluZWQgJiYgaXNNYXNrKGkpKSBpKys7IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdCA9IGdldFRlc3RUZW1wbGF0ZShpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgITEgPT09IG5lZWRzVmFsaWRhdGlvbiAmJiBwb3NpdGlvbnNDbG9uZVtzdGFydFBvc10gJiYgcG9zaXRpb25zQ2xvbmVbc3RhcnRQb3NdLm1hdGNoLmRlZiA9PT0gdC5tYXRjaC5kZWYgPyAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3N0YXJ0UG9zXSA9ICQuZXh0ZW5kKCEwLCB7fSwgcG9zaXRpb25zQ2xvbmVbc3RhcnRQb3NdKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tzdGFydFBvc10uaW5wdXQgPSB0LmlucHV0LCBkZWxldGUgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgaSsrKSA6IHBvc2l0aW9uQ2FuTWF0Y2hEZWZpbml0aW9uKHN0YXJ0UG9zLCB0Lm1hdGNoLmRlZikgPyAhMSAhPT0gaXNWYWxpZChzdGFydFBvcywgdC5pbnB1dCB8fCBnZXRQbGFjZWhvbGRlcihpKSwgITApICYmIChkZWxldGUgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgaSsrLCBuZWVkc1ZhbGlkYXRpb24gPSAhMCkgOiBpc01hc2soaSkgfHwgKGkrKywgc3RhcnRQb3MtLSksIHN0YXJ0UG9zKys7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmVzZXRNYXNrU2V0KCEwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBkZXRlcm1pbmVUZXN0VGVtcGxhdGUodGVzdHMsIGd1ZXNzTmV4dEJlc3QpIHtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIHRlc3RQb3MsIHRlc3RQb3NpdGlvbnMgPSB0ZXN0cywgbHZwID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSwgbHZUZXN0ID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2x2cF0gfHwgZ2V0VGVzdHMoMClbMF0sIGx2VGVzdEFsdEFyciA9IGx2VGVzdC5hbHRlcm5hdGlvbiAhPT0gdW5kZWZpbmVkID8gbHZUZXN0LmxvY2F0b3JbbHZUZXN0LmFsdGVybmF0aW9uXS50b1N0cmluZygpLnNwbGl0KFwiLFwiKSA6IFtdLCBuZHggPSAwOyBuZHggPCB0ZXN0UG9zaXRpb25zLmxlbmd0aCAmJiAoISgodGVzdFBvcyA9IHRlc3RQb3NpdGlvbnNbbmR4XSkubWF0Y2ggJiYgKG9wdHMuZ3JlZWR5ICYmICEwICE9PSB0ZXN0UG9zLm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllciB8fCAoITEgPT09IHRlc3RQb3MubWF0Y2gub3B0aW9uYWxpdHkgfHwgITEgPT09IHRlc3RQb3MubWF0Y2gubmV3QmxvY2tNYXJrZXIpICYmICEwICE9PSB0ZXN0UG9zLm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllcikgJiYgKGx2VGVzdC5hbHRlcm5hdGlvbiA9PT0gdW5kZWZpbmVkIHx8IGx2VGVzdC5hbHRlcm5hdGlvbiAhPT0gdGVzdFBvcy5hbHRlcm5hdGlvbiB8fCB0ZXN0UG9zLmxvY2F0b3JbbHZUZXN0LmFsdGVybmF0aW9uXSAhPT0gdW5kZWZpbmVkICYmIGNoZWNrQWx0ZXJuYXRpb25NYXRjaCh0ZXN0UG9zLmxvY2F0b3JbbHZUZXN0LmFsdGVybmF0aW9uXS50b1N0cmluZygpLnNwbGl0KFwiLFwiKSwgbHZUZXN0QWx0QXJyKSkpIHx8ICEwID09PSBndWVzc05leHRCZXN0ICYmIChudWxsICE9PSB0ZXN0UG9zLm1hdGNoLmZuIHx8IC9bMC05YS1iQS1aXS8udGVzdCh0ZXN0UG9zLm1hdGNoLmRlZikpKTsgbmR4KyspIDtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0ZXN0UG9zO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldFRlc3RUZW1wbGF0ZShwb3MsIG5keEludGx6ciwgdHN0UHMpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSB8fCBkZXRlcm1pbmVUZXN0VGVtcGxhdGUoZ2V0VGVzdHMocG9zLCBuZHhJbnRsenIgPyBuZHhJbnRsenIuc2xpY2UoKSA6IG5keEludGx6ciwgdHN0UHMpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRUZXN0KHBvcykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdID8gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10gOiBnZXRUZXN0cyhwb3MpWzBdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHBvc2l0aW9uQ2FuTWF0Y2hEZWZpbml0aW9uKHBvcywgZGVmKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB2YWxpZCA9ICExLCB0ZXN0cyA9IGdldFRlc3RzKHBvcyksIHRuZHggPSAwOyB0bmR4IDwgdGVzdHMubGVuZ3RoOyB0bmR4KyspIGlmICh0ZXN0c1t0bmR4XS5tYXRjaCAmJiB0ZXN0c1t0bmR4XS5tYXRjaC5kZWYgPT09IGRlZikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbGlkID0gITA7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsaWQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0VGVzdHMocG9zLCBuZHhJbnRsenIsIHRzdFBzKSB7XHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiByZXNvbHZlVGVzdEZyb21Ub2tlbihtYXNrVG9rZW4sIG5keEluaXRpYWxpemVyLCBsb29wTmR4LCBxdWFudGlmaWVyUmVjdXJzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZU1hdGNoKG1hdGNoLCBsb29wTmR4LCBxdWFudGlmaWVyUmVjdXJzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBpc0ZpcnN0TWF0Y2gobGF0ZXN0TWF0Y2gsIHRva2VuR3JvdXApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaXJzdE1hdGNoID0gMCA9PT0gJC5pbkFycmF5KGxhdGVzdE1hdGNoLCB0b2tlbkdyb3VwLm1hdGNoZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZpcnN0TWF0Y2ggfHwgJC5lYWNoKHRva2VuR3JvdXAubWF0Y2hlcywgZnVuY3Rpb24obmR4LCBtYXRjaCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghMCA9PT0gbWF0Y2guaXNRdWFudGlmaWVyICYmIChmaXJzdE1hdGNoID0gaXNGaXJzdE1hdGNoKGxhdGVzdE1hdGNoLCB0b2tlbkdyb3VwLm1hdGNoZXNbbmR4IC0gMV0pKSkgcmV0dXJuICExO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGZpcnN0TWF0Y2g7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gcmVzb2x2ZU5keEluaXRpYWxpemVyKHBvcywgYWx0ZXJuYXRlTmR4LCB0YXJnZXRBbHRlcm5hdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJlc3RNYXRjaCwgaW5kZXhQb3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3BvcyAtIDFdICYmIHRhcmdldEFsdGVybmF0aW9uICYmIGdldE1hc2tTZXQoKS50ZXN0c1twb3NdKSBmb3IgKHZhciB2cEFsdGVybmF0aW9uID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3BvcyAtIDFdLmxvY2F0b3IsIHRwQWx0ZXJuYXRpb24gPSBnZXRNYXNrU2V0KCkudGVzdHNbcG9zXVswXS5sb2NhdG9yLCBpID0gMDsgaSA8IHRhcmdldEFsdGVybmF0aW9uOyBpKyspIGlmICh2cEFsdGVybmF0aW9uW2ldICE9PSB0cEFsdGVybmF0aW9uW2ldKSByZXR1cm4gdnBBbHRlcm5hdGlvbi5zbGljZSh0YXJnZXRBbHRlcm5hdGlvbiArIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChnZXRNYXNrU2V0KCkudGVzdHNbcG9zXSB8fCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSkgJiYgJC5lYWNoKGdldE1hc2tTZXQoKS50ZXN0c1twb3NdIHx8IFsgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10gXSwgZnVuY3Rpb24obmR4LCBsbW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFsdGVybmF0aW9uID0gdGFyZ2V0QWx0ZXJuYXRpb24gIT09IHVuZGVmaW5lZCA/IHRhcmdldEFsdGVybmF0aW9uIDogbG1udC5hbHRlcm5hdGlvbiwgbmR4UG9zID0gbG1udC5sb2NhdG9yW2FsdGVybmF0aW9uXSAhPT0gdW5kZWZpbmVkID8gbG1udC5sb2NhdG9yW2FsdGVybmF0aW9uXS50b1N0cmluZygpLmluZGV4T2YoYWx0ZXJuYXRlTmR4KSA6IC0xO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChpbmRleFBvcyA9PT0gdW5kZWZpbmVkIHx8IG5keFBvcyA8IGluZGV4UG9zKSAmJiAtMSAhPT0gbmR4UG9zICYmIChiZXN0TWF0Y2ggPSBsbW50LCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleFBvcyA9IG5keFBvcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgYmVzdE1hdGNoID8gYmVzdE1hdGNoLmxvY2F0b3Iuc2xpY2UoKHRhcmdldEFsdGVybmF0aW9uICE9PSB1bmRlZmluZWQgPyB0YXJnZXRBbHRlcm5hdGlvbiA6IGJlc3RNYXRjaC5hbHRlcm5hdGlvbikgKyAxKSA6IHRhcmdldEFsdGVybmF0aW9uICE9PSB1bmRlZmluZWQgPyByZXNvbHZlTmR4SW5pdGlhbGl6ZXIocG9zLCBhbHRlcm5hdGVOZHgpIDogdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9zID4gMWU0KSB0aHJvdyBcIklucHV0bWFzazogVGhlcmUgaXMgcHJvYmFibHkgYW4gZXJyb3IgaW4geW91ciBtYXNrIGRlZmluaXRpb24gb3IgaW4gdGhlIGNvZGUuIENyZWF0ZSBhbiBpc3N1ZSBvbiBnaXRodWIgd2l0aCBhbiBleGFtcGxlIG9mIHRoZSBtYXNrIHlvdSBhcmUgdXNpbmcuIFwiICsgZ2V0TWFza1NldCgpLm1hc2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9zID09PSBwb3MgJiYgbWF0Y2gubWF0Y2hlcyA9PT0gdW5kZWZpbmVkKSByZXR1cm4gbWF0Y2hlcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoOiBtYXRjaCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0b3I6IGxvb3BOZHgucmV2ZXJzZSgpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Q6IGNhY2hlRGVwZW5kZW5jeVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSwgITA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaC5tYXRjaGVzICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaC5pc0dyb3VwICYmIHF1YW50aWZpZXJSZWN1cnNlICE9PSBtYXRjaCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCA9IGhhbmRsZU1hdGNoKG1hc2tUb2tlbi5tYXRjaGVzWyQuaW5BcnJheShtYXRjaCwgbWFza1Rva2VuLm1hdGNoZXMpICsgMV0sIGxvb3BOZHgpKSByZXR1cm4gITA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1hdGNoLmlzT3B0aW9uYWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgb3B0aW9uYWxUb2tlbiA9IG1hdGNoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCA9IHJlc29sdmVUZXN0RnJvbVRva2VuKG1hdGNoLCBuZHhJbml0aWFsaXplciwgbG9vcE5keCwgcXVhbnRpZmllclJlY3Vyc2UpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXRlc3RNYXRjaCA9IG1hdGNoZXNbbWF0Y2hlcy5sZW5ndGggLSAxXS5tYXRjaCwgIWlzRmlyc3RNYXRjaChsYXRlc3RNYXRjaCwgb3B0aW9uYWxUb2tlbikpIHJldHVybiAhMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0U3RvcCA9ICEwLCB0ZXN0UG9zID0gcG9zO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobWF0Y2guaXNBbHRlcm5hdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hbHRNYXRjaGVzLCBhbHRlcm5hdGVUb2tlbiA9IG1hdGNoLCBtYWx0ZXJuYXRlTWF0Y2hlcyA9IFtdLCBjdXJyZW50TWF0Y2hlcyA9IG1hdGNoZXMuc2xpY2UoKSwgbG9vcE5keENudCA9IGxvb3BOZHgubGVuZ3RoLCBhbHRJbmRleCA9IG5keEluaXRpYWxpemVyLmxlbmd0aCA+IDAgPyBuZHhJbml0aWFsaXplci5zaGlmdCgpIDogLTE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC0xID09PSBhbHRJbmRleCB8fCBcInN0cmluZ1wiID09IHR5cGVvZiBhbHRJbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYW1uZHgsIGN1cnJlbnRQb3MgPSB0ZXN0UG9zLCBuZHhJbml0aWFsaXplckNsb25lID0gbmR4SW5pdGlhbGl6ZXIuc2xpY2UoKSwgYWx0SW5kZXhBcnIgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIGFsdEluZGV4KSBhbHRJbmRleEFyciA9IGFsdEluZGV4LnNwbGl0KFwiLFwiKTsgZWxzZSBmb3IgKGFtbmR4ID0gMDsgYW1uZHggPCBhbHRlcm5hdGVUb2tlbi5tYXRjaGVzLmxlbmd0aDsgYW1uZHgrKykgYWx0SW5kZXhBcnIucHVzaChhbW5keCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG5keCA9IDA7IG5keCA8IGFsdEluZGV4QXJyLmxlbmd0aDsgbmR4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhbW5keCA9IHBhcnNlSW50KGFsdEluZGV4QXJyW25keF0pLCBtYXRjaGVzID0gW10sIG5keEluaXRpYWxpemVyID0gcmVzb2x2ZU5keEluaXRpYWxpemVyKHRlc3RQb3MsIGFtbmR4LCBsb29wTmR4Q250KSB8fCBuZHhJbml0aWFsaXplckNsb25lLnNsaWNlKCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgITAgIT09IChtYXRjaCA9IGhhbmRsZU1hdGNoKGFsdGVybmF0ZVRva2VuLm1hdGNoZXNbYW1uZHhdIHx8IG1hc2tUb2tlbi5tYXRjaGVzW2FtbmR4XSwgWyBhbW5keCBdLmNvbmNhdChsb29wTmR4KSwgcXVhbnRpZmllclJlY3Vyc2UpIHx8IG1hdGNoKSAmJiBtYXRjaCAhPT0gdW5kZWZpbmVkICYmIGFsdEluZGV4QXJyW2FsdEluZGV4QXJyLmxlbmd0aCAtIDFdIDwgYWx0ZXJuYXRlVG9rZW4ubWF0Y2hlcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbnRuZHggPSAkLmluQXJyYXkobWF0Y2gsIG1hc2tUb2tlbi5tYXRjaGVzKSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFza1Rva2VuLm1hdGNoZXMubGVuZ3RoID4gbnRuZHggJiYgKG1hdGNoID0gaGFuZGxlTWF0Y2gobWFza1Rva2VuLm1hdGNoZXNbbnRuZHhdLCBbIG50bmR4IF0uY29uY2F0KGxvb3BOZHguc2xpY2UoMSwgbG9vcE5keC5sZW5ndGgpKSwgcXVhbnRpZmllclJlY3Vyc2UpKSAmJiAoYWx0SW5kZXhBcnIucHVzaChudG5keC50b1N0cmluZygpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKG1hdGNoZXMsIGZ1bmN0aW9uKG5keCwgbG1udCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsbW50LmFsdGVybmF0aW9uID0gbG9vcE5keC5sZW5ndGggLSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hbHRNYXRjaGVzID0gbWF0Y2hlcy5zbGljZSgpLCB0ZXN0UG9zID0gY3VycmVudFBvcywgbWF0Y2hlcyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbmR4MSA9IDA7IG5keDEgPCBtYWx0TWF0Y2hlcy5sZW5ndGg7IG5keDErKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhbHRNYXRjaCA9IG1hbHRNYXRjaGVzW25keDFdLCBkcm9wTWF0Y2ggPSAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHRNYXRjaC5hbHRlcm5hdGlvbiA9IGFsdE1hdGNoLmFsdGVybmF0aW9uIHx8IGxvb3BOZHhDbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbmR4MiA9IDA7IG5keDIgPCBtYWx0ZXJuYXRlTWF0Y2hlcy5sZW5ndGg7IG5keDIrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWx0TWF0Y2gyID0gbWFsdGVybmF0ZU1hdGNoZXNbbmR4Ml07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcInN0cmluZ1wiICE9IHR5cGVvZiBhbHRJbmRleCB8fCAtMSAhPT0gJC5pbkFycmF5KGFsdE1hdGNoLmxvY2F0b3JbYWx0TWF0Y2guYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCksIGFsdEluZGV4QXJyKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZ1bmN0aW9uKHNvdXJjZSwgdGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNvdXJjZS5tYXRjaC5uYXRpdmVEZWYgPT09IHRhcmdldC5tYXRjaC5uYXRpdmVEZWYgfHwgc291cmNlLm1hdGNoLmRlZiA9PT0gdGFyZ2V0Lm1hdGNoLm5hdGl2ZURlZiB8fCBzb3VyY2UubWF0Y2gubmF0aXZlRGVmID09PSB0YXJnZXQubWF0Y2guZGVmO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfShhbHRNYXRjaCwgYWx0TWF0Y2gyKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyb3BNYXRjaCA9ICEwLCBhbHRNYXRjaC5hbHRlcm5hdGlvbiA9PT0gYWx0TWF0Y2gyLmFsdGVybmF0aW9uICYmIC0xID09PSBhbHRNYXRjaDIubG9jYXRvclthbHRNYXRjaDIuYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCkuaW5kZXhPZihhbHRNYXRjaC5sb2NhdG9yW2FsdE1hdGNoLmFsdGVybmF0aW9uXSkgJiYgKGFsdE1hdGNoMi5sb2NhdG9yW2FsdE1hdGNoMi5hbHRlcm5hdGlvbl0gPSBhbHRNYXRjaDIubG9jYXRvclthbHRNYXRjaDIuYWx0ZXJuYXRpb25dICsgXCIsXCIgKyBhbHRNYXRjaC5sb2NhdG9yW2FsdE1hdGNoLmFsdGVybmF0aW9uXSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0TWF0Y2gyLmFsdGVybmF0aW9uID0gYWx0TWF0Y2guYWx0ZXJuYXRpb24pLCBhbHRNYXRjaC5tYXRjaC5uYXRpdmVEZWYgPT09IGFsdE1hdGNoMi5tYXRjaC5kZWYgJiYgKGFsdE1hdGNoLmxvY2F0b3JbYWx0TWF0Y2guYWx0ZXJuYXRpb25dID0gYWx0TWF0Y2gyLmxvY2F0b3JbYWx0TWF0Y2gyLmFsdGVybmF0aW9uXSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFsdGVybmF0ZU1hdGNoZXMuc3BsaWNlKG1hbHRlcm5hdGVNYXRjaGVzLmluZGV4T2YoYWx0TWF0Y2gyKSwgMSwgYWx0TWF0Y2gpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhbHRNYXRjaC5tYXRjaC5kZWYgPT09IGFsdE1hdGNoMi5tYXRjaC5kZWYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcm9wTWF0Y2ggPSAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmdW5jdGlvbihzb3VyY2UsIHRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsID09PSBzb3VyY2UubWF0Y2guZm4gJiYgbnVsbCAhPT0gdGFyZ2V0Lm1hdGNoLmZuICYmIHRhcmdldC5tYXRjaC5mbi50ZXN0KHNvdXJjZS5tYXRjaC5kZWYsIGdldE1hc2tTZXQoKSwgcG9zLCAhMSwgb3B0cywgITEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfShhbHRNYXRjaCwgYWx0TWF0Y2gyKSB8fCBmdW5jdGlvbihzb3VyY2UsIHRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsICE9PSBzb3VyY2UubWF0Y2guZm4gJiYgbnVsbCAhPT0gdGFyZ2V0Lm1hdGNoLmZuICYmIHRhcmdldC5tYXRjaC5mbi50ZXN0KHNvdXJjZS5tYXRjaC5kZWYucmVwbGFjZSgvW1xcW1xcXV0vZywgXCJcIiksIGdldE1hc2tTZXQoKSwgcG9zLCAhMSwgb3B0cywgITEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfShhbHRNYXRjaCwgYWx0TWF0Y2gyKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdE1hdGNoLmFsdGVybmF0aW9uID09PSBhbHRNYXRjaDIuYWx0ZXJuYXRpb24gJiYgLTEgPT09IGFsdE1hdGNoLmxvY2F0b3JbYWx0TWF0Y2guYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCkuaW5kZXhPZihhbHRNYXRjaDIubG9jYXRvclthbHRNYXRjaDIuYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCkuc3BsaXQoXCJcIilbMF0pICYmIChhbHRNYXRjaC5uYSA9IGFsdE1hdGNoLm5hIHx8IGFsdE1hdGNoLmxvY2F0b3JbYWx0TWF0Y2guYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0xID09PSBhbHRNYXRjaC5uYS5pbmRleE9mKGFsdE1hdGNoLmxvY2F0b3JbYWx0TWF0Y2guYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCkuc3BsaXQoXCJcIilbMF0pICYmIChhbHRNYXRjaC5uYSA9IGFsdE1hdGNoLm5hICsgXCIsXCIgKyBhbHRNYXRjaC5sb2NhdG9yW2FsdE1hdGNoMi5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIlwiKVswXSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyb3BNYXRjaCA9ICEwLCBhbHRNYXRjaC5sb2NhdG9yW2FsdE1hdGNoLmFsdGVybmF0aW9uXSA9IGFsdE1hdGNoMi5sb2NhdG9yW2FsdE1hdGNoMi5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIlwiKVswXSArIFwiLFwiICsgYWx0TWF0Y2gubG9jYXRvclthbHRNYXRjaC5hbHRlcm5hdGlvbl0sIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hbHRlcm5hdGVNYXRjaGVzLnNwbGljZShtYWx0ZXJuYXRlTWF0Y2hlcy5pbmRleE9mKGFsdE1hdGNoMiksIDAsIGFsdE1hdGNoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJvcE1hdGNoIHx8IG1hbHRlcm5hdGVNYXRjaGVzLnB1c2goYWx0TWF0Y2gpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic3RyaW5nXCIgPT0gdHlwZW9mIGFsdEluZGV4ICYmIChtYWx0ZXJuYXRlTWF0Y2hlcyA9ICQubWFwKG1hbHRlcm5hdGVNYXRjaGVzLCBmdW5jdGlvbihsbW50LCBuZHgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc0Zpbml0ZShuZHgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFsdGVybmF0aW9uID0gbG1udC5hbHRlcm5hdGlvbiwgYWx0TG9jQXJyID0gbG1udC5sb2NhdG9yW2FsdGVybmF0aW9uXS50b1N0cmluZygpLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsbW50LmxvY2F0b3JbYWx0ZXJuYXRpb25dID0gdW5kZWZpbmVkLCBsbW50LmFsdGVybmF0aW9uID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGFsbmR4ID0gMDsgYWxuZHggPCBhbHRMb2NBcnIubGVuZ3RoOyBhbG5keCsrKSAtMSAhPT0gJC5pbkFycmF5KGFsdExvY0FyclthbG5keF0sIGFsdEluZGV4QXJyKSAmJiAobG1udC5sb2NhdG9yW2FsdGVybmF0aW9uXSAhPT0gdW5kZWZpbmVkID8gKGxtbnQubG9jYXRvclthbHRlcm5hdGlvbl0gKz0gXCIsXCIsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxtbnQubG9jYXRvclthbHRlcm5hdGlvbl0gKz0gYWx0TG9jQXJyW2FsbmR4XSkgOiBsbW50LmxvY2F0b3JbYWx0ZXJuYXRpb25dID0gcGFyc2VJbnQoYWx0TG9jQXJyW2FsbmR4XSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxtbnQuYWx0ZXJuYXRpb24gPSBhbHRlcm5hdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxtbnQubG9jYXRvclthbHRlcm5hdGlvbl0gIT09IHVuZGVmaW5lZCkgcmV0dXJuIGxtbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSwgbWF0Y2hlcyA9IGN1cnJlbnRNYXRjaGVzLmNvbmNhdChtYWx0ZXJuYXRlTWF0Y2hlcyksIHRlc3RQb3MgPSBwb3MsIGluc2VydFN0b3AgPSBtYXRjaGVzLmxlbmd0aCA+IDAsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaCA9IG1hbHRlcm5hdGVNYXRjaGVzLmxlbmd0aCA+IDAsIG5keEluaXRpYWxpemVyID0gbmR4SW5pdGlhbGl6ZXJDbG9uZS5zbGljZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBtYXRjaCA9IGhhbmRsZU1hdGNoKGFsdGVybmF0ZVRva2VuLm1hdGNoZXNbYWx0SW5kZXhdIHx8IG1hc2tUb2tlbi5tYXRjaGVzW2FsdEluZGV4XSwgWyBhbHRJbmRleCBdLmNvbmNhdChsb29wTmR4KSwgcXVhbnRpZmllclJlY3Vyc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCkgcmV0dXJuICEwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtYXRjaC5pc1F1YW50aWZpZXIgJiYgcXVhbnRpZmllclJlY3Vyc2UgIT09IG1hc2tUb2tlbi5tYXRjaGVzWyQuaW5BcnJheShtYXRjaCwgbWFza1Rva2VuLm1hdGNoZXMpIC0gMV0pIGZvciAodmFyIHF0ID0gbWF0Y2gsIHFuZHggPSBuZHhJbml0aWFsaXplci5sZW5ndGggPiAwID8gbmR4SW5pdGlhbGl6ZXIuc2hpZnQoKSA6IDA7IHFuZHggPCAoaXNOYU4ocXQucXVhbnRpZmllci5tYXgpID8gcW5keCArIDEgOiBxdC5xdWFudGlmaWVyLm1heCkgJiYgdGVzdFBvcyA8PSBwb3M7IHFuZHgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0b2tlbkdyb3VwID0gbWFza1Rva2VuLm1hdGNoZXNbJC5pbkFycmF5KHF0LCBtYXNrVG9rZW4ubWF0Y2hlcykgLSAxXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2ggPSBoYW5kbGVNYXRjaCh0b2tlbkdyb3VwLCBbIHFuZHggXS5jb25jYXQobG9vcE5keCksIHRva2VuR3JvdXApKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXRlc3RNYXRjaCA9IG1hdGNoZXNbbWF0Y2hlcy5sZW5ndGggLSAxXS5tYXRjaCwgbGF0ZXN0TWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyID0gcW5keCA+IHF0LnF1YW50aWZpZXIubWluIC0gMSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzRmlyc3RNYXRjaChsYXRlc3RNYXRjaCwgdG9rZW5Hcm91cCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxbmR4ID4gcXQucXVhbnRpZmllci5taW4gLSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0U3RvcCA9ICEwLCB0ZXN0UG9zID0gcG9zO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1hdGNoID0gcmVzb2x2ZVRlc3RGcm9tVG9rZW4obWF0Y2gsIG5keEluaXRpYWxpemVyLCBsb29wTmR4LCBxdWFudGlmaWVyUmVjdXJzZSkpIHJldHVybiAhMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHRlc3RQb3MrKztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgdG5keCA9IG5keEluaXRpYWxpemVyLmxlbmd0aCA+IDAgPyBuZHhJbml0aWFsaXplci5zaGlmdCgpIDogMDsgdG5keCA8IG1hc2tUb2tlbi5tYXRjaGVzLmxlbmd0aDsgdG5keCsrKSBpZiAoITAgIT09IG1hc2tUb2tlbi5tYXRjaGVzW3RuZHhdLmlzUXVhbnRpZmllcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSBoYW5kbGVNYXRjaChtYXNrVG9rZW4ubWF0Y2hlc1t0bmR4XSwgWyB0bmR4IF0uY29uY2F0KGxvb3BOZHgpLCBxdWFudGlmaWVyUmVjdXJzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiB0ZXN0UG9zID09PSBwb3MpIHJldHVybiBtYXRjaDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRlc3RQb3MgPiBwb3MpIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGZpbHRlclRlc3RzKHRlc3RzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMua2VlcFN0YXRpYyAmJiBwb3MgPiAwICYmIHRlc3RzLmxlbmd0aCA+IDEgKyAoXCJcIiA9PT0gdGVzdHNbdGVzdHMubGVuZ3RoIC0gMV0ubWF0Y2guZGVmID8gMSA6IDApICYmICEwICE9PSB0ZXN0c1swXS5tYXRjaC5vcHRpb25hbGl0eSAmJiAhMCAhPT0gdGVzdHNbMF0ubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyICYmIG51bGwgPT09IHRlc3RzWzBdLm1hdGNoLmZuICYmICEvWzAtOWEtYkEtWl0vLnRlc3QodGVzdHNbMF0ubWF0Y2guZGVmKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3BvcyAtIDFdID09PSB1bmRlZmluZWQpIHJldHVybiBbIGRldGVybWluZVRlc3RUZW1wbGF0ZSh0ZXN0cykgXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MgLSAxXS5hbHRlcm5hdGlvbiA9PT0gdGVzdHNbMF0uYWx0ZXJuYXRpb24pIHJldHVybiBbIGRldGVybWluZVRlc3RUZW1wbGF0ZSh0ZXN0cykgXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MgLSAxXSkgcmV0dXJuIFsgZGV0ZXJtaW5lVGVzdFRlbXBsYXRlKHRlc3RzKSBdO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGVzdHM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2YXIgbGF0ZXN0TWF0Y2gsIG1hc2tUb2tlbnMgPSBnZXRNYXNrU2V0KCkubWFza1Rva2VuLCB0ZXN0UG9zID0gbmR4SW50bHpyID8gdHN0UHMgOiAwLCBuZHhJbml0aWFsaXplciA9IG5keEludGx6ciA/IG5keEludGx6ci5zbGljZSgpIDogWyAwIF0sIG1hdGNoZXMgPSBbXSwgaW5zZXJ0U3RvcCA9ICExLCBjYWNoZURlcGVuZGVuY3kgPSBuZHhJbnRsenIgPyBuZHhJbnRsenIuam9pbihcIlwiKSA6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICBpZiAocG9zID4gLTEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobmR4SW50bHpyID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgdGVzdCwgcHJldmlvdXNQb3MgPSBwb3MgLSAxOyAodGVzdCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twcmV2aW91c1Bvc10gfHwgZ2V0TWFza1NldCgpLnRlc3RzW3ByZXZpb3VzUG9zXSkgPT09IHVuZGVmaW5lZCAmJiBwcmV2aW91c1BvcyA+IC0xOyApIHByZXZpb3VzUG9zLS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3QgIT09IHVuZGVmaW5lZCAmJiBwcmV2aW91c1BvcyA+IC0xICYmIChuZHhJbml0aWFsaXplciA9IGZ1bmN0aW9uKHRlc3RzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbG9jYXRvciA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQuaXNBcnJheSh0ZXN0cykgfHwgKHRlc3RzID0gWyB0ZXN0cyBdKSwgdGVzdHMubGVuZ3RoID4gMCAmJiAodGVzdHNbMF0uYWx0ZXJuYXRpb24gPT09IHVuZGVmaW5lZCA/IDAgPT09IChsb2NhdG9yID0gZGV0ZXJtaW5lVGVzdFRlbXBsYXRlKHRlc3RzLnNsaWNlKCkpLmxvY2F0b3Iuc2xpY2UoKSkubGVuZ3RoICYmIChsb2NhdG9yID0gdGVzdHNbMF0ubG9jYXRvci5zbGljZSgpKSA6ICQuZWFjaCh0ZXN0cywgZnVuY3Rpb24obmR4LCB0c3QpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJcIiAhPT0gdHN0LmRlZikgaWYgKDAgPT09IGxvY2F0b3IubGVuZ3RoKSBsb2NhdG9yID0gdHN0LmxvY2F0b3Iuc2xpY2UoKTsgZWxzZSBmb3IgKHZhciBpID0gMDsgaSA8IGxvY2F0b3IubGVuZ3RoOyBpKyspIHRzdC5sb2NhdG9yW2ldICYmIC0xID09PSBsb2NhdG9yW2ldLnRvU3RyaW5nKCkuaW5kZXhPZih0c3QubG9jYXRvcltpXSkgJiYgKGxvY2F0b3JbaV0gKz0gXCIsXCIgKyB0c3QubG9jYXRvcltpXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSksIGxvY2F0b3I7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0odGVzdCksIGNhY2hlRGVwZW5kZW5jeSA9IG5keEluaXRpYWxpemVyLmpvaW4oXCJcIiksIHRlc3RQb3MgPSBwcmV2aW91c1Bvcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChnZXRNYXNrU2V0KCkudGVzdHNbcG9zXSAmJiBnZXRNYXNrU2V0KCkudGVzdHNbcG9zXVswXS5jZCA9PT0gY2FjaGVEZXBlbmRlbmN5KSByZXR1cm4gZmlsdGVyVGVzdHMoZ2V0TWFza1NldCgpLnRlc3RzW3Bvc10pO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG10bmR4ID0gbmR4SW5pdGlhbGl6ZXIuc2hpZnQoKTsgbXRuZHggPCBtYXNrVG9rZW5zLmxlbmd0aCAmJiAhKHJlc29sdmVUZXN0RnJvbVRva2VuKG1hc2tUb2tlbnNbbXRuZHhdLCBuZHhJbml0aWFsaXplciwgWyBtdG5keCBdKSAmJiB0ZXN0UG9zID09PSBwb3MgfHwgdGVzdFBvcyA+IHBvcyk7IG10bmR4KyspIDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiAoMCA9PT0gbWF0Y2hlcy5sZW5ndGggfHwgaW5zZXJ0U3RvcCkgJiYgbWF0Y2hlcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBtYXRjaDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbjogbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsaXR5OiAhMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzaW5nOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWY6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBsb2NhdG9yOiBbXSxcclxuICAgICAgICAgICAgICAgICAgICBjZDogY2FjaGVEZXBlbmRlbmN5XHJcbiAgICAgICAgICAgICAgICB9KSwgbmR4SW50bHpyICE9PSB1bmRlZmluZWQgJiYgZ2V0TWFza1NldCgpLnRlc3RzW3Bvc10gPyBmaWx0ZXJUZXN0cygkLmV4dGVuZCghMCwgW10sIG1hdGNoZXMpKSA6IChnZXRNYXNrU2V0KCkudGVzdHNbcG9zXSA9ICQuZXh0ZW5kKCEwLCBbXSwgbWF0Y2hlcyksIFxyXG4gICAgICAgICAgICAgICAgZmlsdGVyVGVzdHMoZ2V0TWFza1NldCgpLnRlc3RzW3Bvc10pKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRCdWZmZXJUZW1wbGF0ZSgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBnZXRNYXNrU2V0KCkuX2J1ZmZlciA9PT0gdW5kZWZpbmVkICYmIChnZXRNYXNrU2V0KCkuX2J1ZmZlciA9IGdldE1hc2tUZW1wbGF0ZSghMSwgMSksIFxyXG4gICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLmJ1ZmZlciA9PT0gdW5kZWZpbmVkICYmIChnZXRNYXNrU2V0KCkuYnVmZmVyID0gZ2V0TWFza1NldCgpLl9idWZmZXIuc2xpY2UoKSkpLCBcclxuICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS5fYnVmZmVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldEJ1ZmZlcihub0NhY2hlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0TWFza1NldCgpLmJ1ZmZlciAhPT0gdW5kZWZpbmVkICYmICEwICE9PSBub0NhY2hlIHx8IChnZXRNYXNrU2V0KCkuYnVmZmVyID0gZ2V0TWFza1RlbXBsYXRlKCEwLCBnZXRMYXN0VmFsaWRQb3NpdGlvbigpLCAhMCkpLCBcclxuICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS5idWZmZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gcmVmcmVzaEZyb21CdWZmZXIoc3RhcnQsIGVuZCwgYnVmZmVyKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaSwgcDtcclxuICAgICAgICAgICAgICAgIGlmICghMCA9PT0gc3RhcnQpIHJlc2V0TWFza1NldCgpLCBzdGFydCA9IDAsIGVuZCA9IGJ1ZmZlci5sZW5ndGg7IGVsc2UgZm9yIChpID0gc3RhcnQ7IGkgPCBlbmQ7IGkrKykgZGVsZXRlIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXTtcclxuICAgICAgICAgICAgICAgIGZvciAocCA9IHN0YXJ0LCBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkrKykgaWYgKHJlc2V0TWFza1NldCghMCksIGJ1ZmZlcltpXSAhPT0gb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbFJlc3VsdCA9IGlzVmFsaWQocCwgYnVmZmVyW2ldLCAhMCwgITApO1xyXG4gICAgICAgICAgICAgICAgICAgICExICE9PSB2YWxSZXN1bHQgJiYgKHJlc2V0TWFza1NldCghMCksIHAgPSB2YWxSZXN1bHQuY2FyZXQgIT09IHVuZGVmaW5lZCA/IHZhbFJlc3VsdC5jYXJldCA6IHZhbFJlc3VsdC5wb3MgKyAxKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBjYXNpbmcoZWxlbSwgdGVzdCwgcG9zKSB7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG9wdHMuY2FzaW5nIHx8IHRlc3QuY2FzaW5nKSB7XHJcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJ1cHBlclwiOlxyXG4gICAgICAgICAgICAgICAgICAgIGVsZW0gPSBlbGVtLnRvVXBwZXJDYXNlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgICAgICBjYXNlIFwibG93ZXJcIjpcclxuICAgICAgICAgICAgICAgICAgICBlbGVtID0gZWxlbS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgY2FzZSBcInRpdGxlXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvc0JlZm9yZSA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MgLSAxXTtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtID0gMCA9PT0gcG9zIHx8IHBvc0JlZm9yZSAmJiBwb3NCZWZvcmUuaW5wdXQgPT09IFN0cmluZy5mcm9tQ2hhckNvZGUoSW5wdXRtYXNrLmtleUNvZGUuU1BBQ0UpID8gZWxlbS50b1VwcGVyQ2FzZSgpIDogZWxlbS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJC5pc0Z1bmN0aW9uKG9wdHMuY2FzaW5nKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MucHVzaChnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMpLCBlbGVtID0gb3B0cy5jYXNpbmcuYXBwbHkodGhpcywgYXJncyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gY2hlY2tBbHRlcm5hdGlvbk1hdGNoKGFsdEFycjEsIGFsdEFycjIsIG5hKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBuYU5keCwgYWx0QXJyQyA9IG9wdHMuZ3JlZWR5ID8gYWx0QXJyMiA6IGFsdEFycjIuc2xpY2UoMCwgMSksIGlzTWF0Y2ggPSAhMSwgbmFBcnIgPSBuYSAhPT0gdW5kZWZpbmVkID8gbmEuc3BsaXQoXCIsXCIpIDogW10sIGkgPSAwOyBpIDwgbmFBcnIubGVuZ3RoOyBpKyspIC0xICE9PSAobmFOZHggPSBhbHRBcnIxLmluZGV4T2YobmFBcnJbaV0pKSAmJiBhbHRBcnIxLnNwbGljZShuYU5keCwgMSk7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBhbG5keCA9IDA7IGFsbmR4IDwgYWx0QXJyMS5sZW5ndGg7IGFsbmR4KyspIGlmICgtMSAhPT0gJC5pbkFycmF5KGFsdEFycjFbYWxuZHhdLCBhbHRBcnJDKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlzTWF0Y2ggPSAhMDtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBpc01hdGNoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGlzVmFsaWQocG9zLCBjLCBzdHJpY3QsIGZyb21TZXRWYWxpZCwgZnJvbUFsdGVybmF0ZSwgdmFsaWRhdGVPbmx5KSB7XHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBpc1NlbGVjdGlvbihwb3NPYmopIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZWN0aW9uID0gaXNSVEwgPyBwb3NPYmouYmVnaW4gLSBwb3NPYmouZW5kID4gMSB8fCBwb3NPYmouYmVnaW4gLSBwb3NPYmouZW5kID09IDEgOiBwb3NPYmouZW5kIC0gcG9zT2JqLmJlZ2luID4gMSB8fCBwb3NPYmouZW5kIC0gcG9zT2JqLmJlZ2luID09IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGlvbiAmJiAwID09PSBwb3NPYmouYmVnaW4gJiYgcG9zT2JqLmVuZCA9PT0gZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggPyBcImZ1bGxcIiA6IHNlbGVjdGlvbjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIF9pc1ZhbGlkKHBvc2l0aW9uLCBjLCBzdHJpY3QpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcnNsdCA9ICExO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkLmVhY2goZ2V0VGVzdHMocG9zaXRpb24pLCBmdW5jdGlvbihuZHgsIHRzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciB0ZXN0ID0gdHN0Lm1hdGNoLCBsb29wZW5kID0gYyA/IDEgOiAwLCBjaHJzID0gXCJcIiwgaSA9IHRlc3QuY2FyZGluYWxpdHk7IGkgPiBsb29wZW5kOyBpLS0pIGNocnMgKz0gZ2V0QnVmZmVyRWxlbWVudChwb3NpdGlvbiAtIChpIC0gMSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYyAmJiAoY2hycyArPSBjKSwgZ2V0QnVmZmVyKCEwKSwgITEgIT09IChyc2x0ID0gbnVsbCAhPSB0ZXN0LmZuID8gdGVzdC5mbi50ZXN0KGNocnMsIGdldE1hc2tTZXQoKSwgcG9zaXRpb24sIHN0cmljdCwgb3B0cywgaXNTZWxlY3Rpb24ocG9zKSkgOiAoYyA9PT0gdGVzdC5kZWYgfHwgYyA9PT0gb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyKSAmJiBcIlwiICE9PSB0ZXN0LmRlZiAmJiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjOiBnZXRQbGFjZWhvbGRlcihwb3NpdGlvbiwgdGVzdCwgITApIHx8IHRlc3QuZGVmLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3NpdGlvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsZW0gPSByc2x0LmMgIT09IHVuZGVmaW5lZCA/IHJzbHQuYyA6IGM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtID0gZWxlbSA9PT0gb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyICYmIG51bGwgPT09IHRlc3QuZm4gPyBnZXRQbGFjZWhvbGRlcihwb3NpdGlvbiwgdGVzdCwgITApIHx8IHRlc3QuZGVmIDogZWxlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWxpZGF0ZWRQb3MgPSBwb3NpdGlvbiwgcG9zc2libGVNb2RpZmllZEJ1ZmZlciA9IGdldEJ1ZmZlcigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJzbHQucmVtb3ZlICE9PSB1bmRlZmluZWQgJiYgKCQuaXNBcnJheShyc2x0LnJlbW92ZSkgfHwgKHJzbHQucmVtb3ZlID0gWyByc2x0LnJlbW92ZSBdKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2gocnNsdC5yZW1vdmUuc29ydChmdW5jdGlvbihhLCBiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGIgLSBhO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGZ1bmN0aW9uKG5keCwgbG1udCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmlwVmFsaWRQb3NpdGlvbnMobG1udCwgbG1udCArIDEsICEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSwgcnNsdC5pbnNlcnQgIT09IHVuZGVmaW5lZCAmJiAoJC5pc0FycmF5KHJzbHQuaW5zZXJ0KSB8fCAocnNsdC5pbnNlcnQgPSBbIHJzbHQuaW5zZXJ0IF0pLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQuZWFjaChyc2x0Lmluc2VydC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYSAtIGI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgZnVuY3Rpb24obmR4LCBsbW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZChsbW50LnBvcywgbG1udC5jLCAhMCwgZnJvbVNldFZhbGlkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSwgcnNsdC5yZWZyZXNoRnJvbUJ1ZmZlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWZyZXNoID0gcnNsdC5yZWZyZXNoRnJvbUJ1ZmZlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVmcmVzaEZyb21CdWZmZXIoITAgPT09IHJlZnJlc2ggPyByZWZyZXNoIDogcmVmcmVzaC5zdGFydCwgcmVmcmVzaC5lbmQsIHBvc3NpYmxlTW9kaWZpZWRCdWZmZXIpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByc2x0LnBvcyA9PT0gdW5kZWZpbmVkICYmIHJzbHQuYyA9PT0gdW5kZWZpbmVkKSByZXR1cm4gcnNsdC5wb3MgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHZhbGlkYXRlZFBvcyA9IHJzbHQucG9zICE9PSB1bmRlZmluZWQgPyByc2x0LnBvcyA6IHBvc2l0aW9uKSAhPT0gcG9zaXRpb24pIHJldHVybiByc2x0ID0gJC5leHRlbmQocnNsdCwgaXNWYWxpZCh2YWxpZGF0ZWRQb3MsIGVsZW0sICEwLCBmcm9tU2V0VmFsaWQpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgITE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCEwICE9PSByc2x0ICYmIHJzbHQucG9zICE9PSB1bmRlZmluZWQgJiYgcnNsdC5wb3MgIT09IHBvc2l0aW9uICYmICh2YWxpZGF0ZWRQb3MgPSByc2x0LnBvcywgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoRnJvbUJ1ZmZlcihwb3NpdGlvbiwgdmFsaWRhdGVkUG9zLCBnZXRCdWZmZXIoKS5zbGljZSgpKSwgdmFsaWRhdGVkUG9zICE9PSBwb3NpdGlvbikpIHJldHVybiByc2x0ID0gJC5leHRlbmQocnNsdCwgaXNWYWxpZCh2YWxpZGF0ZWRQb3MsIGVsZW0sICEwKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgITE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCEwID09PSByc2x0IHx8IHJzbHQucG9zICE9PSB1bmRlZmluZWQgfHwgcnNsdC5jICE9PSB1bmRlZmluZWQpICYmIChuZHggPiAwICYmIHJlc2V0TWFza1NldCghMCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFsaWRQb3NpdGlvbih2YWxpZGF0ZWRQb3MsICQuZXh0ZW5kKHt9LCB0c3QsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogY2FzaW5nKGVsZW0sIHRlc3QsIHZhbGlkYXRlZFBvcylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBmcm9tU2V0VmFsaWQsIGlzU2VsZWN0aW9uKHBvcykpIHx8IChyc2x0ID0gITEpLCAhMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KSwgcnNsdDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHNldFZhbGlkUG9zaXRpb24ocG9zLCB2YWxpZFRlc3QsIGZyb21TZXRWYWxpZCwgaXNTZWxlY3Rpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNTZWxlY3Rpb24gfHwgb3B0cy5pbnNlcnRNb2RlICYmIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdICE9PSB1bmRlZmluZWQgJiYgZnJvbVNldFZhbGlkID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGksIHBvc2l0aW9uc0Nsb25lID0gJC5leHRlbmQoITAsIHt9LCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMpLCBsdnAgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbih1bmRlZmluZWQsICEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gcG9zOyBpIDw9IGx2cDsgaSsrKSBkZWxldGUgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSA9ICQuZXh0ZW5kKCEwLCB7fSwgdmFsaWRUZXN0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGosIHZhbGlkID0gITAsIHZwcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucywgbmVlZHNWYWxpZGF0aW9uID0gITEsIGluaXRpYWxMZW5ndGggPSBnZXRNYXNrU2V0KCkubWFza0xlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gaiA9IHBvczsgaSA8PSBsdnA7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHQgPSBwb3NpdGlvbnNDbG9uZVtpXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ICE9PSB1bmRlZmluZWQpIGZvciAodmFyIHBvc01hdGNoID0gajsgcG9zTWF0Y2ggPCBnZXRNYXNrU2V0KCkubWFza0xlbmd0aCAmJiAobnVsbCA9PT0gdC5tYXRjaC5mbiAmJiB2cHNbaV0gJiYgKCEwID09PSB2cHNbaV0ubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyIHx8ICEwID09PSB2cHNbaV0ubWF0Y2gub3B0aW9uYWxpdHkpIHx8IG51bGwgIT0gdC5tYXRjaC5mbik7ICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb3NNYXRjaCsrLCAhMSA9PT0gbmVlZHNWYWxpZGF0aW9uICYmIHBvc2l0aW9uc0Nsb25lW3Bvc01hdGNoXSAmJiBwb3NpdGlvbnNDbG9uZVtwb3NNYXRjaF0ubWF0Y2guZGVmID09PSB0Lm1hdGNoLmRlZikgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc01hdGNoXSA9ICQuZXh0ZW5kKCEwLCB7fSwgcG9zaXRpb25zQ2xvbmVbcG9zTWF0Y2hdKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc01hdGNoXS5pbnB1dCA9IHQuaW5wdXQsIGZpbGxNaXNzaW5nTm9uTWFzayhwb3NNYXRjaCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGogPSBwb3NNYXRjaCwgdmFsaWQgPSAhMDsgZWxzZSBpZiAocG9zaXRpb25DYW5NYXRjaERlZmluaXRpb24ocG9zTWF0Y2gsIHQubWF0Y2guZGVmKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gaXNWYWxpZChwb3NNYXRjaCwgdC5pbnB1dCwgITAsICEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWQgPSAhMSAhPT0gcmVzdWx0LCBqID0gcmVzdWx0LmNhcmV0IHx8IHJlc3VsdC5pbnNlcnQgPyBnZXRMYXN0VmFsaWRQb3NpdGlvbigpIDogcG9zTWF0Y2gsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZWVkc1ZhbGlkYXRpb24gPSAhMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCEodmFsaWQgPSAhMCA9PT0gdC5nZW5lcmF0ZWRJbnB1dCkgJiYgcG9zTWF0Y2ggPj0gZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggLSAxKSBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggPCBpbml0aWFsTGVuZ3RoICYmIChnZXRNYXNrU2V0KCkubWFza0xlbmd0aCA9IGluaXRpYWxMZW5ndGgpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZCkgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbGlkKSBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zID0gJC5leHRlbmQoITAsIHt9LCBwb3NpdGlvbnNDbG9uZSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNldE1hc2tTZXQoITApLCAhMTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10gPSAkLmV4dGVuZCghMCwge30sIHZhbGlkVGVzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc2V0TWFza1NldCghMCksICEwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZmlsbE1pc3NpbmdOb25NYXNrKG1hc2tQb3MpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwbmR4ID0gbWFza1BvcyAtIDE7IHBuZHggPiAtMSAmJiAhZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3BuZHhdOyBwbmR4LS0pIDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdGVzdFRlbXBsYXRlLCB0ZXN0c0Zyb21Qb3M7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChwbmR4Kys7IHBuZHggPCBtYXNrUG9zOyBwbmR4KyspIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twbmR4XSA9PT0gdW5kZWZpbmVkICYmICghMSA9PT0gb3B0cy5qaXRNYXNraW5nIHx8IG9wdHMuaml0TWFza2luZyA+IHBuZHgpICYmIChcIlwiID09PSAodGVzdHNGcm9tUG9zID0gZ2V0VGVzdHMocG5keCwgZ2V0VGVzdFRlbXBsYXRlKHBuZHggLSAxKS5sb2NhdG9yLCBwbmR4IC0gMSkuc2xpY2UoKSlbdGVzdHNGcm9tUG9zLmxlbmd0aCAtIDFdLm1hdGNoLmRlZiAmJiB0ZXN0c0Zyb21Qb3MucG9wKCksIFxyXG4gICAgICAgICAgICAgICAgICAgICh0ZXN0VGVtcGxhdGUgPSBkZXRlcm1pbmVUZXN0VGVtcGxhdGUodGVzdHNGcm9tUG9zKSkgJiYgKHRlc3RUZW1wbGF0ZS5tYXRjaC5kZWYgPT09IG9wdHMucmFkaXhQb2ludERlZmluaXRpb25TeW1ib2wgfHwgIWlzTWFzayhwbmR4LCAhMCkgfHwgJC5pbkFycmF5KG9wdHMucmFkaXhQb2ludCwgZ2V0QnVmZmVyKCkpIDwgcG5keCAmJiB0ZXN0VGVtcGxhdGUubWF0Y2guZm4gJiYgdGVzdFRlbXBsYXRlLm1hdGNoLmZuLnRlc3QoZ2V0UGxhY2Vob2xkZXIocG5keCksIGdldE1hc2tTZXQoKSwgcG5keCwgITEsIG9wdHMpKSAmJiAhMSAhPT0gKHJlc3VsdCA9IF9pc1ZhbGlkKHBuZHgsIGdldFBsYWNlaG9sZGVyKHBuZHgsIHRlc3RUZW1wbGF0ZS5tYXRjaCwgITApIHx8IChudWxsID09IHRlc3RUZW1wbGF0ZS5tYXRjaC5mbiA/IHRlc3RUZW1wbGF0ZS5tYXRjaC5kZWYgOiBcIlwiICE9PSBnZXRQbGFjZWhvbGRlcihwbmR4KSA/IGdldFBsYWNlaG9sZGVyKHBuZHgpIDogZ2V0QnVmZmVyKClbcG5keF0pLCAhMCkpICYmIChnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcmVzdWx0LnBvcyB8fCBwbmR4XS5nZW5lcmF0ZWRJbnB1dCA9ICEwKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzdHJpY3QgPSAhMCA9PT0gc3RyaWN0O1xyXG4gICAgICAgICAgICAgICAgdmFyIG1hc2tQb3MgPSBwb3M7XHJcbiAgICAgICAgICAgICAgICBwb3MuYmVnaW4gIT09IHVuZGVmaW5lZCAmJiAobWFza1BvcyA9IGlzUlRMICYmICFpc1NlbGVjdGlvbihwb3MpID8gcG9zLmVuZCA6IHBvcy5iZWdpbik7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gITAsIHBvc2l0aW9uc0Nsb25lID0gJC5leHRlbmQoITAsIHt9LCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihvcHRzLnByZVZhbGlkYXRpb24pICYmICFzdHJpY3QgJiYgITAgIT09IGZyb21TZXRWYWxpZCAmJiAhMCAhPT0gdmFsaWRhdGVPbmx5ICYmIChyZXN1bHQgPSBvcHRzLnByZVZhbGlkYXRpb24oZ2V0QnVmZmVyKCksIG1hc2tQb3MsIGMsIGlzU2VsZWN0aW9uKHBvcyksIG9wdHMpKSwgXHJcbiAgICAgICAgICAgICAgICAhMCA9PT0gcmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGxNaXNzaW5nTm9uTWFzayhtYXNrUG9zKSwgaXNTZWxlY3Rpb24ocG9zKSAmJiAoaGFuZGxlUmVtb3ZlKHVuZGVmaW5lZCwgSW5wdXRtYXNrLmtleUNvZGUuREVMRVRFLCBwb3MsICEwLCAhMCksIFxyXG4gICAgICAgICAgICAgICAgICAgIG1hc2tQb3MgPSBnZXRNYXNrU2V0KCkucCksIG1hc2tQb3MgPCBnZXRNYXNrU2V0KCkubWFza0xlbmd0aCAmJiAobWF4TGVuZ3RoID09PSB1bmRlZmluZWQgfHwgbWFza1BvcyA8IG1heExlbmd0aCkgJiYgKHJlc3VsdCA9IF9pc1ZhbGlkKG1hc2tQb3MsIGMsIHN0cmljdCksIFxyXG4gICAgICAgICAgICAgICAgICAgICghc3RyaWN0IHx8ICEwID09PSBmcm9tU2V0VmFsaWQpICYmICExID09PSByZXN1bHQgJiYgITAgIT09IHZhbGlkYXRlT25seSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRQb3NWYWxpZCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1ttYXNrUG9zXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjdXJyZW50UG9zVmFsaWQgfHwgbnVsbCAhPT0gY3VycmVudFBvc1ZhbGlkLm1hdGNoLmZuIHx8IGN1cnJlbnRQb3NWYWxpZC5tYXRjaC5kZWYgIT09IGMgJiYgYyAhPT0gb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKG9wdHMuaW5zZXJ0TW9kZSB8fCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbc2Vla05leHQobWFza1BvcyldID09PSB1bmRlZmluZWQpICYmICFpc01hc2sobWFza1BvcywgITApKSBmb3IgKHZhciBuUG9zID0gbWFza1BvcyArIDEsIHNuUG9zID0gc2Vla05leHQobWFza1Bvcyk7IG5Qb3MgPD0gc25Qb3M7IG5Qb3MrKykgaWYgKCExICE9PSAocmVzdWx0ID0gX2lzVmFsaWQoblBvcywgYywgc3RyaWN0KSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhZnVuY3Rpb24ob3JpZ2luYWxQb3MsIG5ld1Bvcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdnAgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbmV3UG9zXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZwKSBmb3IgKHZhciB0YXJnZXRMb2NhdG9yID0gdnAubG9jYXRvciwgdGxsID0gdGFyZ2V0TG9jYXRvci5sZW5ndGgsIHBzID0gb3JpZ2luYWxQb3M7IHBzIDwgbmV3UG9zOyBwcysrKSBpZiAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3BzXSA9PT0gdW5kZWZpbmVkICYmICFpc01hc2socHMsICEwKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3RzID0gZ2V0VGVzdHMocHMpLnNsaWNlKCksIGJlc3RNYXRjaCA9IGRldGVybWluZVRlc3RUZW1wbGF0ZSh0ZXN0cywgITApLCBlcXVhbGl0eSA9IC0xO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcIiA9PT0gdGVzdHNbdGVzdHMubGVuZ3RoIC0gMV0ubWF0Y2guZGVmICYmIHRlc3RzLnBvcCgpLCAkLmVhY2godGVzdHMsIGZ1bmN0aW9uKG5keCwgdHN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0bGw7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHN0LmxvY2F0b3JbaV0gPT09IHVuZGVmaW5lZCB8fCAhY2hlY2tBbHRlcm5hdGlvbk1hdGNoKHRzdC5sb2NhdG9yW2ldLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpLCB0YXJnZXRMb2NhdG9yW2ldLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpLCB0c3QubmEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0QUkgPSB0YXJnZXRMb2NhdG9yW2ldLCBiZXN0TWF0Y2hBSSA9IGJlc3RNYXRjaC5sb2NhdG9yW2ldLCB0c3RBSSA9IHRzdC5sb2NhdG9yW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QUkgLSBiZXN0TWF0Y2hBSSA+IE1hdGguYWJzKHRhcmdldEFJIC0gdHN0QUkpICYmIChiZXN0TWF0Y2ggPSB0c3QpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXF1YWxpdHkgPCBpICYmIChlcXVhbGl0eSA9IGksIGJlc3RNYXRjaCA9IHRzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIChiZXN0TWF0Y2ggPSAkLmV4dGVuZCh7fSwgYmVzdE1hdGNoLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGdldFBsYWNlaG9sZGVyKHBzLCBiZXN0TWF0Y2gubWF0Y2gsICEwKSB8fCBiZXN0TWF0Y2gubWF0Y2guZGVmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkuZ2VuZXJhdGVkSW5wdXQgPSAhMCwgc2V0VmFsaWRQb3NpdGlvbihwcywgYmVzdE1hdGNoLCAhMCksIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tuZXdQb3NdID0gdW5kZWZpbmVkLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pc1ZhbGlkKG5ld1BvcywgdnAuaW5wdXQsICEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0obWFza1BvcywgcmVzdWx0LnBvcyAhPT0gdW5kZWZpbmVkID8gcmVzdWx0LnBvcyA6IG5Qb3MpLCBtYXNrUG9zID0gblBvcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHJlc3VsdCA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBzZWVrTmV4dChtYXNrUG9zKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAhMSA9PT0gcmVzdWx0ICYmIG9wdHMua2VlcFN0YXRpYyAmJiAhc3RyaWN0ICYmICEwICE9PSBmcm9tQWx0ZXJuYXRlICYmIChyZXN1bHQgPSBmdW5jdGlvbihwb3MsIGMsIHN0cmljdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdEFsdCwgYWx0ZXJuYXRpb24sIGFsdFBvcywgcHJldkFsdFBvcywgaSwgdmFsaWRQb3MsIGFsdE5keHMsIGRlY2lzaW9uUG9zLCB2YWxpZFBzQ2xvbmUgPSAkLmV4dGVuZCghMCwge30sIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucyksIGlzVmFsaWRSc2x0ID0gITEsIGxBbHRQb3MgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHByZXZBbHRQb3MgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbEFsdFBvc107IGxBbHRQb3MgPj0gMDsgbEFsdFBvcy0tKSBpZiAoKGFsdFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tsQWx0UG9zXSkgJiYgYWx0UG9zLmFsdGVybmF0aW9uICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXN0QWx0ID0gbEFsdFBvcywgYWx0ZXJuYXRpb24gPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbGFzdEFsdF0uYWx0ZXJuYXRpb24sIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldkFsdFBvcy5sb2NhdG9yW2FsdFBvcy5hbHRlcm5hdGlvbl0gIT09IGFsdFBvcy5sb2NhdG9yW2FsdFBvcy5hbHRlcm5hdGlvbl0pIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldkFsdFBvcyA9IGFsdFBvcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWx0ZXJuYXRpb24gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjaXNpb25Qb3MgPSBwYXJzZUludChsYXN0QWx0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZWNpc2lvblRha2VyID0gcHJldkFsdFBvcy5sb2NhdG9yW3ByZXZBbHRQb3MuYWx0ZXJuYXRpb24gfHwgYWx0ZXJuYXRpb25dICE9PSB1bmRlZmluZWQgPyBwcmV2QWx0UG9zLmxvY2F0b3JbcHJldkFsdFBvcy5hbHRlcm5hdGlvbiB8fCBhbHRlcm5hdGlvbl0gOiBhbHROZHhzWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjaXNpb25UYWtlci5sZW5ndGggPiAwICYmIChkZWNpc2lvblRha2VyID0gZGVjaXNpb25UYWtlci5zcGxpdChcIixcIilbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBvc3NpYmlsaXR5UG9zID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2RlY2lzaW9uUG9zXSwgcHJldlBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tkZWNpc2lvblBvcyAtIDFdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGdldFRlc3RzKGRlY2lzaW9uUG9zLCBwcmV2UG9zID8gcHJldlBvcy5sb2NhdG9yIDogdW5kZWZpbmVkLCBkZWNpc2lvblBvcyAtIDEpLCBmdW5jdGlvbihuZHgsIHRlc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHROZHhzID0gdGVzdC5sb2NhdG9yW2FsdGVybmF0aW9uXSA/IHRlc3QubG9jYXRvclthbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIixcIikgOiBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBtbmR4ID0gMDsgbW5keCA8IGFsdE5keHMubGVuZ3RoOyBtbmR4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbGlkSW5wdXRzID0gW10sIHN0YXRpY0lucHV0c0JlZm9yZVBvcyA9IDAsIHN0YXRpY0lucHV0c0JlZm9yZVBvc0FsdGVybmF0ZSA9IDAsIHZlcmlmeVZhbGlkSW5wdXQgPSAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlY2lzaW9uVGFrZXIgPCBhbHROZHhzW21uZHhdICYmICh0ZXN0Lm5hID09PSB1bmRlZmluZWQgfHwgLTEgPT09ICQuaW5BcnJheShhbHROZHhzW21uZHhdLCB0ZXN0Lm5hLnNwbGl0KFwiLFwiKSkgfHwgLTEgPT09ICQuaW5BcnJheShkZWNpc2lvblRha2VyLnRvU3RyaW5nKCksIGFsdE5keHMpKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2RlY2lzaW9uUG9zXSA9ICQuZXh0ZW5kKCEwLCB7fSwgdGVzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcG9zc2liaWxpdGllcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tkZWNpc2lvblBvc10ubG9jYXRvcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2RlY2lzaW9uUG9zXS5sb2NhdG9yW2FsdGVybmF0aW9uXSA9IHBhcnNlSW50KGFsdE5keHNbbW5keF0pLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgPT0gdGVzdC5tYXRjaC5mbiA/IChwb3NzaWJpbGl0eVBvcy5pbnB1dCAhPT0gdGVzdC5tYXRjaC5kZWYgJiYgKHZlcmlmeVZhbGlkSW5wdXQgPSAhMCwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhMCAhPT0gcG9zc2liaWxpdHlQb3MuZ2VuZXJhdGVkSW5wdXQgJiYgdmFsaWRJbnB1dHMucHVzaChwb3NzaWJpbGl0eVBvcy5pbnB1dCkpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0lucHV0c0JlZm9yZVBvc0FsdGVybmF0ZSsrLCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbZGVjaXNpb25Qb3NdLmdlbmVyYXRlZElucHV0ID0gIS9bMC05YS1iQS1aXS8udGVzdCh0ZXN0Lm1hdGNoLmRlZiksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2RlY2lzaW9uUG9zXS5pbnB1dCA9IHRlc3QubWF0Y2guZGVmKSA6IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tkZWNpc2lvblBvc10uaW5wdXQgPSBwb3NzaWJpbGl0eVBvcy5pbnB1dCwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpID0gZGVjaXNpb25Qb3MgKyAxOyBpIDwgZ2V0TGFzdFZhbGlkUG9zaXRpb24odW5kZWZpbmVkLCAhMCkgKyAxOyBpKyspICh2YWxpZFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXSkgJiYgITAgIT09IHZhbGlkUG9zLmdlbmVyYXRlZElucHV0ICYmIC9bMC05YS1iQS1aXS8udGVzdCh2YWxpZFBvcy5pbnB1dCkgPyB2YWxpZElucHV0cy5wdXNoKHZhbGlkUG9zLmlucHV0KSA6IGkgPCBwb3MgJiYgc3RhdGljSW5wdXRzQmVmb3JlUG9zKyssIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmVyaWZ5VmFsaWRJbnB1dCAmJiB2YWxpZElucHV0c1swXSA9PT0gdGVzdC5tYXRjaC5kZWYgJiYgdmFsaWRJbnB1dHMuc2hpZnQoKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNldE1hc2tTZXQoITApLCBpc1ZhbGlkUnNsdCA9ICEwOyB2YWxpZElucHV0cy5sZW5ndGggPiAwOyApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB2YWxpZElucHV0cy5zaGlmdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dCAhPT0gb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyICYmICEoaXNWYWxpZFJzbHQgPSBpc1ZhbGlkKGdldExhc3RWYWxpZFBvc2l0aW9uKHVuZGVmaW5lZCwgITApICsgMSwgaW5wdXQsICExLCBmcm9tU2V0VmFsaWQsICEwKSkpIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVmFsaWRSc2x0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2RlY2lzaW9uUG9zXS5sb2NhdG9yID0gcG9zc2liaWxpdGllcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0THZwID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24ocG9zKSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gZGVjaXNpb25Qb3MgKyAxOyBpIDwgZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSArIDE7IGkrKykgKCh2YWxpZFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXSkgPT09IHVuZGVmaW5lZCB8fCBudWxsID09IHZhbGlkUG9zLm1hdGNoLmZuKSAmJiBpIDwgcG9zICsgKHN0YXRpY0lucHV0c0JlZm9yZVBvc0FsdGVybmF0ZSAtIHN0YXRpY0lucHV0c0JlZm9yZVBvcykgJiYgc3RhdGljSW5wdXRzQmVmb3JlUG9zQWx0ZXJuYXRlKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZFJzbHQgPSBpc1ZhbGlkKChwb3MgKz0gc3RhdGljSW5wdXRzQmVmb3JlUG9zQWx0ZXJuYXRlIC0gc3RhdGljSW5wdXRzQmVmb3JlUG9zKSA+IHRhcmdldEx2cCA/IHRhcmdldEx2cCA6IHBvcywgYywgc3RyaWN0LCBmcm9tU2V0VmFsaWQsICEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkUnNsdCkgcmV0dXJuICExO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzZXRNYXNrU2V0KCksIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucyA9ICQuZXh0ZW5kKCEwLCB7fSwgdmFsaWRQc0Nsb25lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkUnNsdDtcclxuICAgICAgICAgICAgICAgICAgICB9KG1hc2tQb3MsIGMsIHN0cmljdCkpLCAhMCA9PT0gcmVzdWx0ICYmIChyZXN1bHQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvczogbWFza1Bvc1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihvcHRzLnBvc3RWYWxpZGF0aW9uKSAmJiAhMSAhPT0gcmVzdWx0ICYmICFzdHJpY3QgJiYgITAgIT09IGZyb21TZXRWYWxpZCAmJiAhMCAhPT0gdmFsaWRhdGVPbmx5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvc3RSZXN1bHQgPSBvcHRzLnBvc3RWYWxpZGF0aW9uKGdldEJ1ZmZlcighMCksIHJlc3VsdCwgb3B0cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBvc3RSZXN1bHQucmVmcmVzaEZyb21CdWZmZXIgJiYgcG9zdFJlc3VsdC5idWZmZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlZnJlc2ggPSBwb3N0UmVzdWx0LnJlZnJlc2hGcm9tQnVmZmVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoRnJvbUJ1ZmZlcighMCA9PT0gcmVmcmVzaCA/IHJlZnJlc2ggOiByZWZyZXNoLnN0YXJ0LCByZWZyZXNoLmVuZCwgcG9zdFJlc3VsdC5idWZmZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSAhMCA9PT0gcG9zdFJlc3VsdCA/IHJlc3VsdCA6IHBvc3RSZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICYmIHJlc3VsdC5wb3MgPT09IHVuZGVmaW5lZCAmJiAocmVzdWx0LnBvcyA9IG1hc2tQb3MpLCAhMSAhPT0gcmVzdWx0ICYmICEwICE9PSB2YWxpZGF0ZU9ubHkgfHwgKHJlc2V0TWFza1NldCghMCksIFxyXG4gICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zID0gJC5leHRlbmQoITAsIHt9LCBwb3NpdGlvbnNDbG9uZSkpLCByZXN1bHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gaXNNYXNrKHBvcywgc3RyaWN0KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGVzdCA9IGdldFRlc3RUZW1wbGF0ZShwb3MpLm1hdGNoO1xyXG4gICAgICAgICAgICAgICAgaWYgKFwiXCIgPT09IHRlc3QuZGVmICYmICh0ZXN0ID0gZ2V0VGVzdChwb3MpLm1hdGNoKSwgbnVsbCAhPSB0ZXN0LmZuKSByZXR1cm4gdGVzdC5mbjtcclxuICAgICAgICAgICAgICAgIGlmICghMCAhPT0gc3RyaWN0ICYmIHBvcyA+IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3RzID0gZ2V0VGVzdHMocG9zKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGVzdHMubGVuZ3RoID4gMSArIChcIlwiID09PSB0ZXN0c1t0ZXN0cy5sZW5ndGggLSAxXS5tYXRjaC5kZWYgPyAxIDogMCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gITE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gc2Vla05leHQocG9zLCBuZXdCbG9jaykge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1hc2tMID0gZ2V0TWFza1NldCgpLm1hc2tMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBpZiAocG9zID49IG1hc2tMKSByZXR1cm4gbWFza0w7XHJcbiAgICAgICAgICAgICAgICB2YXIgcG9zaXRpb24gPSBwb3M7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGdldFRlc3RzKG1hc2tMICsgMSkubGVuZ3RoID4gMSAmJiAoZ2V0TWFza1RlbXBsYXRlKCEwLCBtYXNrTCArIDEsICEwKSwgbWFza0wgPSBnZXRNYXNrU2V0KCkubWFza0xlbmd0aCk7ICsrcG9zaXRpb24gPCBtYXNrTCAmJiAoITAgPT09IG5ld0Jsb2NrICYmICghMCAhPT0gZ2V0VGVzdChwb3NpdGlvbikubWF0Y2gubmV3QmxvY2tNYXJrZXIgfHwgIWlzTWFzayhwb3NpdGlvbikpIHx8ICEwICE9PSBuZXdCbG9jayAmJiAhaXNNYXNrKHBvc2l0aW9uKSk7ICkgO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHNlZWtQcmV2aW91cyhwb3MsIG5ld0Jsb2NrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGVzdHMsIHBvc2l0aW9uID0gcG9zO1xyXG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uIDw9IDApIHJldHVybiAwO1xyXG4gICAgICAgICAgICAgICAgZm9yICg7LS1wb3NpdGlvbiA+IDAgJiYgKCEwID09PSBuZXdCbG9jayAmJiAhMCAhPT0gZ2V0VGVzdChwb3NpdGlvbikubWF0Y2gubmV3QmxvY2tNYXJrZXIgfHwgITAgIT09IG5ld0Jsb2NrICYmICFpc01hc2socG9zaXRpb24pICYmICgodGVzdHMgPSBnZXRUZXN0cyhwb3NpdGlvbikpLmxlbmd0aCA8IDIgfHwgMiA9PT0gdGVzdHMubGVuZ3RoICYmIFwiXCIgPT09IHRlc3RzWzFdLm1hdGNoLmRlZikpOyApIDtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwb3NpdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRCdWZmZXJFbGVtZW50KHBvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc2l0aW9uXSA9PT0gdW5kZWZpbmVkID8gZ2V0UGxhY2Vob2xkZXIocG9zaXRpb24pIDogZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc2l0aW9uXS5pbnB1dDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiB3cml0ZUJ1ZmZlcihpbnB1dCwgYnVmZmVyLCBjYXJldFBvcywgZXZlbnQsIHRyaWdnZXJJbnB1dEV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQgJiYgJC5pc0Z1bmN0aW9uKG9wdHMub25CZWZvcmVXcml0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gb3B0cy5vbkJlZm9yZVdyaXRlLmNhbGwoaW5wdXRtYXNrLCBldmVudCwgYnVmZmVyLCBjYXJldFBvcywgb3B0cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnJlZnJlc2hGcm9tQnVmZmVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVmcmVzaCA9IHJlc3VsdC5yZWZyZXNoRnJvbUJ1ZmZlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hGcm9tQnVmZmVyKCEwID09PSByZWZyZXNoID8gcmVmcmVzaCA6IHJlZnJlc2guc3RhcnQsIHJlZnJlc2guZW5kLCByZXN1bHQuYnVmZmVyIHx8IGJ1ZmZlciksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyID0gZ2V0QnVmZmVyKCEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJldFBvcyAhPT0gdW5kZWZpbmVkICYmIChjYXJldFBvcyA9IHJlc3VsdC5jYXJldCAhPT0gdW5kZWZpbmVkID8gcmVzdWx0LmNhcmV0IDogY2FyZXRQb3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlucHV0ICE9PSB1bmRlZmluZWQgJiYgKGlucHV0LmlucHV0bWFzay5fdmFsdWVTZXQoYnVmZmVyLmpvaW4oXCJcIikpLCBjYXJldFBvcyA9PT0gdW5kZWZpbmVkIHx8IGV2ZW50ICE9PSB1bmRlZmluZWQgJiYgXCJibHVyXCIgPT09IGV2ZW50LnR5cGUgPyByZW5kZXJDb2xvck1hc2soaW5wdXQsIGNhcmV0UG9zLCAwID09PSBidWZmZXIubGVuZ3RoKSA6IGFuZHJvaWQgJiYgZXZlbnQgJiYgXCJpbnB1dFwiID09PSBldmVudC50eXBlID8gc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXJldChpbnB1dCwgY2FyZXRQb3MpO1xyXG4gICAgICAgICAgICAgICAgfSwgMCkgOiBjYXJldChpbnB1dCwgY2FyZXRQb3MpLCAhMCA9PT0gdHJpZ2dlcklucHV0RXZlbnQgJiYgKHNraXBJbnB1dEV2ZW50ID0gITAsIFxyXG4gICAgICAgICAgICAgICAgJChpbnB1dCkudHJpZ2dlcihcImlucHV0XCIpKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0UGxhY2Vob2xkZXIocG9zLCB0ZXN0LCByZXR1cm5QTCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCh0ZXN0ID0gdGVzdCB8fCBnZXRUZXN0KHBvcykubWF0Y2gpLnBsYWNlaG9sZGVyICE9PSB1bmRlZmluZWQgfHwgITAgPT09IHJldHVyblBMKSByZXR1cm4gJC5pc0Z1bmN0aW9uKHRlc3QucGxhY2Vob2xkZXIpID8gdGVzdC5wbGFjZWhvbGRlcihvcHRzKSA6IHRlc3QucGxhY2Vob2xkZXI7XHJcbiAgICAgICAgICAgICAgICBpZiAobnVsbCA9PT0gdGVzdC5mbikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3MgPiAtMSAmJiBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcmV2VGVzdCwgdGVzdHMgPSBnZXRUZXN0cyhwb3MpLCBzdGF0aWNBbHRlcm5hdGlvbnMgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRlc3RzLmxlbmd0aCA+IDEgKyAoXCJcIiA9PT0gdGVzdHNbdGVzdHMubGVuZ3RoIC0gMV0ubWF0Y2guZGVmID8gMSA6IDApKSBmb3IgKHZhciBpID0gMDsgaSA8IHRlc3RzLmxlbmd0aDsgaSsrKSBpZiAoITAgIT09IHRlc3RzW2ldLm1hdGNoLm9wdGlvbmFsaXR5ICYmICEwICE9PSB0ZXN0c1tpXS5tYXRjaC5vcHRpb25hbFF1YW50aWZpZXIgJiYgKG51bGwgPT09IHRlc3RzW2ldLm1hdGNoLmZuIHx8IHByZXZUZXN0ID09PSB1bmRlZmluZWQgfHwgITEgIT09IHRlc3RzW2ldLm1hdGNoLmZuLnRlc3QocHJldlRlc3QubWF0Y2guZGVmLCBnZXRNYXNrU2V0KCksIHBvcywgITAsIG9wdHMpKSAmJiAoc3RhdGljQWx0ZXJuYXRpb25zLnB1c2godGVzdHNbaV0pLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCA9PT0gdGVzdHNbaV0ubWF0Y2guZm4gJiYgKHByZXZUZXN0ID0gdGVzdHNbaV0pLCBzdGF0aWNBbHRlcm5hdGlvbnMubGVuZ3RoID4gMSAmJiAvWzAtOWEtYkEtWl0vLnRlc3Qoc3RhdGljQWx0ZXJuYXRpb25zWzBdLm1hdGNoLmRlZikpKSByZXR1cm4gb3B0cy5wbGFjZWhvbGRlci5jaGFyQXQocG9zICUgb3B0cy5wbGFjZWhvbGRlci5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGVzdC5kZWY7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5wbGFjZWhvbGRlci5jaGFyQXQocG9zICUgb3B0cy5wbGFjZWhvbGRlci5sZW5ndGgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNoZWNrVmFsKGlucHV0LCB3cml0ZU91dCwgc3RyaWN0LCBucHR2bCwgaW5pdGlhdGluZ0V2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBpc1RlbXBsYXRlTWF0Y2gobmR4LCBjaGFyQ29kZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTEgIT09IGdldEJ1ZmZlclRlbXBsYXRlKCkuc2xpY2UobmR4LCBzZWVrTmV4dChuZHgpKS5qb2luKFwiXCIpLmluZGV4T2YoY2hhckNvZGVzKSAmJiAhaXNNYXNrKG5keCkgJiYgZ2V0VGVzdChuZHgpLm1hdGNoLm5hdGl2ZURlZiA9PT0gY2hhckNvZGVzLmNoYXJBdChjaGFyQ29kZXMubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2YXIgaW5wdXRWYWx1ZSA9IG5wdHZsLnNsaWNlKCksIGNoYXJDb2RlcyA9IFwiXCIsIGluaXRpYWxOZHggPSAtMSwgcmVzdWx0ID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc2V0TWFza1NldCgpLCBzdHJpY3QgfHwgITAgPT09IG9wdHMuYXV0b1VubWFzaykgaW5pdGlhbE5keCA9IHNlZWtOZXh0KGluaXRpYWxOZHgpOyBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGljSW5wdXQgPSBnZXRCdWZmZXJUZW1wbGF0ZSgpLnNsaWNlKDAsIHNlZWtOZXh0KC0xKSkuam9pbihcIlwiKSwgbWF0Y2hlcyA9IGlucHV0VmFsdWUuam9pbihcIlwiKS5tYXRjaChuZXcgUmVnRXhwKFwiXlwiICsgSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KHN0YXRpY0lucHV0KSwgXCJnXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICBtYXRjaGVzICYmIG1hdGNoZXMubGVuZ3RoID4gMCAmJiAoaW5wdXRWYWx1ZS5zcGxpY2UoMCwgbWF0Y2hlcy5sZW5ndGggKiBzdGF0aWNJbnB1dC5sZW5ndGgpLCBcclxuICAgICAgICAgICAgICAgICAgICBpbml0aWFsTmR4ID0gc2Vla05leHQoaW5pdGlhbE5keCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKC0xID09PSBpbml0aWFsTmR4ID8gKGdldE1hc2tTZXQoKS5wID0gc2Vla05leHQoaW5pdGlhbE5keCksIGluaXRpYWxOZHggPSAwKSA6IGdldE1hc2tTZXQoKS5wID0gaW5pdGlhbE5keCwgXHJcbiAgICAgICAgICAgICAgICAkLmVhY2goaW5wdXRWYWx1ZSwgZnVuY3Rpb24obmR4LCBjaGFyQ29kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSAhPT0gdW5kZWZpbmVkKSBpZiAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW25keF0gPT09IHVuZGVmaW5lZCAmJiBpbnB1dFZhbHVlW25keF0gPT09IGdldFBsYWNlaG9sZGVyKG5keCkgJiYgaXNNYXNrKG5keCwgITApICYmICExID09PSBpc1ZhbGlkKG5keCwgaW5wdXRWYWx1ZVtuZHhdLCAhMCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsICEwKSkgZ2V0TWFza1NldCgpLnArKzsgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrZXlwcmVzcyA9IG5ldyAkLkV2ZW50KFwiX2NoZWNrdmFsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlwcmVzcy53aGljaCA9IGNoYXJDb2RlLmNoYXJDb2RlQXQoMCksIGNoYXJDb2RlcyArPSBjaGFyQ29kZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGx2cCA9IGdldExhc3RWYWxpZFBvc2l0aW9uKHVuZGVmaW5lZCwgITApLCBsdlRlc3QgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbHZwXSwgbmV4dFRlc3QgPSBnZXRUZXN0VGVtcGxhdGUobHZwICsgMSwgbHZUZXN0ID8gbHZUZXN0LmxvY2F0b3Iuc2xpY2UoKSA6IHVuZGVmaW5lZCwgbHZwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1RlbXBsYXRlTWF0Y2goaW5pdGlhbE5keCwgY2hhckNvZGVzKSB8fCBzdHJpY3QgfHwgb3B0cy5hdXRvVW5tYXNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcG9zID0gc3RyaWN0ID8gbmR4IDogbnVsbCA9PSBuZXh0VGVzdC5tYXRjaC5mbiAmJiBuZXh0VGVzdC5tYXRjaC5vcHRpb25hbGl0eSAmJiBsdnAgKyAxIDwgZ2V0TWFza1NldCgpLnAgPyBsdnAgKyAxIDogZ2V0TWFza1NldCgpLnA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBFdmVudEhhbmRsZXJzLmtleXByZXNzRXZlbnQuY2FsbChpbnB1dCwga2V5cHJlc3MsICEwLCAhMSwgc3RyaWN0LCBwb3MpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxOZHggPSBwb3MgKyAxLCBjaGFyQ29kZXMgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgcmVzdWx0ID0gRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50LmNhbGwoaW5wdXQsIGtleXByZXNzLCAhMCwgITEsICEwLCBsdnAgKyAxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCExICE9PSByZXN1bHQgJiYgIXN0cmljdCAmJiAkLmlzRnVuY3Rpb24ob3B0cy5vbkJlZm9yZVdyaXRlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9yaWdSZXN1bHQgPSByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0ID0gb3B0cy5vbkJlZm9yZVdyaXRlLmNhbGwoaW5wdXRtYXNrLCBrZXlwcmVzcywgZ2V0QnVmZmVyKCksIHJlc3VsdC5mb3J3YXJkUG9zaXRpb24sIG9wdHMpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChyZXN1bHQgPSAkLmV4dGVuZChvcmlnUmVzdWx0LCByZXN1bHQpKSAmJiByZXN1bHQucmVmcmVzaEZyb21CdWZmZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVmcmVzaCA9IHJlc3VsdC5yZWZyZXNoRnJvbUJ1ZmZlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoRnJvbUJ1ZmZlcighMCA9PT0gcmVmcmVzaCA/IHJlZnJlc2ggOiByZWZyZXNoLnN0YXJ0LCByZWZyZXNoLmVuZCwgcmVzdWx0LmJ1ZmZlciksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0TWFza1NldCghMCksIHJlc3VsdC5jYXJldCAmJiAoZ2V0TWFza1NldCgpLnAgPSByZXN1bHQuY2FyZXQsIHJlc3VsdC5mb3J3YXJkUG9zaXRpb24gPSByZXN1bHQuY2FyZXQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSksIHdyaXRlT3V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNhcmV0UG9zID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGlucHV0ICYmIHJlc3VsdCAmJiAoY2FyZXRQb3MgPSBvcHRzLm51bWVyaWNJbnB1dCA/IHNlZWtQcmV2aW91cyhyZXN1bHQuZm9yd2FyZFBvc2l0aW9uKSA6IHJlc3VsdC5mb3J3YXJkUG9zaXRpb24pLCBcclxuICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCksIGNhcmV0UG9zLCBpbml0aWF0aW5nRXZlbnQgfHwgbmV3ICQuRXZlbnQoXCJjaGVja3ZhbFwiKSwgaW5pdGlhdGluZ0V2ZW50ICYmIFwiaW5wdXRcIiA9PT0gaW5pdGlhdGluZ0V2ZW50LnR5cGUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHVubWFza2VkdmFsdWUoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpbnB1dCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5pbnB1dG1hc2sgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGlucHV0LnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlucHV0LmlucHV0bWFzayAmJiBpbnB1dC5pbnB1dG1hc2sucmVmcmVzaFZhbHVlICYmIEV2ZW50SGFuZGxlcnMuc2V0VmFsdWVFdmVudC5jYWxsKGlucHV0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciB1bVZhbHVlID0gW10sIHZwcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucztcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIHBuZHggaW4gdnBzKSB2cHNbcG5keF0ubWF0Y2ggJiYgbnVsbCAhPSB2cHNbcG5keF0ubWF0Y2guZm4gJiYgdW1WYWx1ZS5wdXNoKHZwc1twbmR4XS5pbnB1dCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdW5tYXNrZWRWYWx1ZSA9IDAgPT09IHVtVmFsdWUubGVuZ3RoID8gXCJcIiA6IChpc1JUTCA/IHVtVmFsdWUucmV2ZXJzZSgpIDogdW1WYWx1ZSkuam9pbihcIlwiKTtcclxuICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0cy5vblVuTWFzaykpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyVmFsdWUgPSAoaXNSVEwgPyBnZXRCdWZmZXIoKS5zbGljZSgpLnJldmVyc2UoKSA6IGdldEJ1ZmZlcigpKS5qb2luKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHVubWFza2VkVmFsdWUgPSBvcHRzLm9uVW5NYXNrLmNhbGwoaW5wdXRtYXNrLCBidWZmZXJWYWx1ZSwgdW5tYXNrZWRWYWx1ZSwgb3B0cyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5tYXNrZWRWYWx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBjYXJldChpbnB1dCwgYmVnaW4sIGVuZCwgbm90cmFuc2xhdGUpIHtcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZVBvc2l0aW9uKHBvcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhMCA9PT0gbm90cmFuc2xhdGUgfHwgIWlzUlRMIHx8IFwibnVtYmVyXCIgIT0gdHlwZW9mIHBvcyB8fCBvcHRzLmdyZWVkeSAmJiBcIlwiID09PSBvcHRzLnBsYWNlaG9sZGVyIHx8IChwb3MgPSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpLmxlbmd0aCAtIHBvcyksIFxyXG4gICAgICAgICAgICAgICAgICAgIHBvcztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciByYW5nZTtcclxuICAgICAgICAgICAgICAgIGlmIChiZWdpbiA9PT0gdW5kZWZpbmVkKSByZXR1cm4gaW5wdXQuc2V0U2VsZWN0aW9uUmFuZ2UgPyAoYmVnaW4gPSBpbnB1dC5zZWxlY3Rpb25TdGFydCwgXHJcbiAgICAgICAgICAgICAgICBlbmQgPSBpbnB1dC5zZWxlY3Rpb25FbmQpIDogd2luZG93LmdldFNlbGVjdGlvbiA/IChyYW5nZSA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5nZXRSYW5nZUF0KDApKS5jb21tb25BbmNlc3RvckNvbnRhaW5lci5wYXJlbnROb2RlICE9PSBpbnB1dCAmJiByYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lciAhPT0gaW5wdXQgfHwgKGJlZ2luID0gcmFuZ2Uuc3RhcnRPZmZzZXQsIFxyXG4gICAgICAgICAgICAgICAgZW5kID0gcmFuZ2UuZW5kT2Zmc2V0KSA6IGRvY3VtZW50LnNlbGVjdGlvbiAmJiBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UgJiYgKGVuZCA9IChiZWdpbiA9IDAgLSAocmFuZ2UgPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKSkuZHVwbGljYXRlKCkubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsIC1pbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkubGVuZ3RoKSkgKyByYW5nZS50ZXh0Lmxlbmd0aCksIFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGJlZ2luOiB0cmFuc2xhdGVQb3NpdGlvbihiZWdpbiksXHJcbiAgICAgICAgICAgICAgICAgICAgZW5kOiB0cmFuc2xhdGVQb3NpdGlvbihlbmQpXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgaWYgKGJlZ2luLmJlZ2luICE9PSB1bmRlZmluZWQgJiYgKGVuZCA9IGJlZ2luLmVuZCwgYmVnaW4gPSBiZWdpbi5iZWdpbiksIFwibnVtYmVyXCIgPT0gdHlwZW9mIGJlZ2luKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYmVnaW4gPSB0cmFuc2xhdGVQb3NpdGlvbihiZWdpbiksIGVuZCA9IFwibnVtYmVyXCIgPT0gdHlwZW9mIChlbmQgPSB0cmFuc2xhdGVQb3NpdGlvbihlbmQpKSA/IGVuZCA6IGJlZ2luO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzY3JvbGxDYWxjID0gcGFyc2VJbnQoKChpbnB1dC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IHdpbmRvdykuZ2V0Q29tcHV0ZWRTdHlsZSA/IChpbnB1dC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IHdpbmRvdykuZ2V0Q29tcHV0ZWRTdHlsZShpbnB1dCwgbnVsbCkgOiBpbnB1dC5jdXJyZW50U3R5bGUpLmZvbnRTaXplKSAqIGVuZDtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuc2Nyb2xsTGVmdCA9IHNjcm9sbENhbGMgPiBpbnB1dC5zY3JvbGxXaWR0aCA/IHNjcm9sbENhbGMgOiAwLCBtb2JpbGUgfHwgITEgIT09IG9wdHMuaW5zZXJ0TW9kZSB8fCBiZWdpbiAhPT0gZW5kIHx8IGVuZCsrLCBcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dC5zZXRTZWxlY3Rpb25SYW5nZSkgaW5wdXQuc2VsZWN0aW9uU3RhcnQgPSBiZWdpbiwgaW5wdXQuc2VsZWN0aW9uRW5kID0gZW5kOyBlbHNlIGlmICh3aW5kb3cuZ2V0U2VsZWN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCksIGlucHV0LmZpcnN0Q2hpbGQgPT09IHVuZGVmaW5lZCB8fCBudWxsID09PSBpbnB1dC5maXJzdENoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LmFwcGVuZENoaWxkKHRleHROb2RlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChpbnB1dC5maXJzdENoaWxkLCBiZWdpbiA8IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGggPyBiZWdpbiA6IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGgpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKGlucHV0LmZpcnN0Q2hpbGQsIGVuZCA8IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGggPyBlbmQgOiBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkubGVuZ3RoKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmNvbGxhcHNlKCEwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNlbCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsLnJlbW92ZUFsbFJhbmdlcygpLCBzZWwuYWRkUmFuZ2UocmFuZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpbnB1dC5jcmVhdGVUZXh0UmFuZ2UgJiYgKChyYW5nZSA9IGlucHV0LmNyZWF0ZVRleHRSYW5nZSgpKS5jb2xsYXBzZSghMCksIFxyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLm1vdmVFbmQoXCJjaGFyYWN0ZXJcIiwgZW5kKSwgcmFuZ2UubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsIGJlZ2luKSwgcmFuZ2Uuc2VsZWN0KCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlckNvbG9yTWFzayhpbnB1dCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiZWdpbjogYmVnaW4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogZW5kXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gZGV0ZXJtaW5lTGFzdFJlcXVpcmVkUG9zaXRpb24ocmV0dXJuRGVmaW5pdGlvbikge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBvcywgdGVzdFBvcywgYnVmZmVyID0gZ2V0QnVmZmVyKCksIGJsID0gYnVmZmVyLmxlbmd0aCwgbHZwID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSwgcG9zaXRpb25zID0ge30sIGx2VGVzdCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tsdnBdLCBuZHhJbnRsenIgPSBsdlRlc3QgIT09IHVuZGVmaW5lZCA/IGx2VGVzdC5sb2NhdG9yLnNsaWNlKCkgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHBvcyA9IGx2cCArIDE7IHBvcyA8IGJ1ZmZlci5sZW5ndGg7IHBvcysrKSBuZHhJbnRsenIgPSAodGVzdFBvcyA9IGdldFRlc3RUZW1wbGF0ZShwb3MsIG5keEludGx6ciwgcG9zIC0gMSkpLmxvY2F0b3Iuc2xpY2UoKSwgXHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbnNbcG9zXSA9ICQuZXh0ZW5kKCEwLCB7fSwgdGVzdFBvcyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbHZUZXN0QWx0ID0gbHZUZXN0ICYmIGx2VGVzdC5hbHRlcm5hdGlvbiAhPT0gdW5kZWZpbmVkID8gbHZUZXN0LmxvY2F0b3JbbHZUZXN0LmFsdGVybmF0aW9uXSA6IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgICAgIGZvciAocG9zID0gYmwgLSAxOyBwb3MgPiBsdnAgJiYgKCgodGVzdFBvcyA9IHBvc2l0aW9uc1twb3NdKS5tYXRjaC5vcHRpb25hbGl0eSB8fCB0ZXN0UG9zLm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllciAmJiB0ZXN0UG9zLm1hdGNoLm5ld0Jsb2NrTWFya2VyIHx8IGx2VGVzdEFsdCAmJiAobHZUZXN0QWx0ICE9PSBwb3NpdGlvbnNbcG9zXS5sb2NhdG9yW2x2VGVzdC5hbHRlcm5hdGlvbl0gJiYgbnVsbCAhPSB0ZXN0UG9zLm1hdGNoLmZuIHx8IG51bGwgPT09IHRlc3RQb3MubWF0Y2guZm4gJiYgdGVzdFBvcy5sb2NhdG9yW2x2VGVzdC5hbHRlcm5hdGlvbl0gJiYgY2hlY2tBbHRlcm5hdGlvbk1hdGNoKHRlc3RQb3MubG9jYXRvcltsdlRlc3QuYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpLCBsdlRlc3RBbHQudG9TdHJpbmcoKS5zcGxpdChcIixcIikpICYmIFwiXCIgIT09IGdldFRlc3RzKHBvcylbMF0uZGVmKSkgJiYgYnVmZmVyW3Bvc10gPT09IGdldFBsYWNlaG9sZGVyKHBvcywgdGVzdFBvcy5tYXRjaCkpOyBwb3MtLSkgYmwtLTtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXR1cm5EZWZpbml0aW9uID8ge1xyXG4gICAgICAgICAgICAgICAgICAgIGw6IGJsLFxyXG4gICAgICAgICAgICAgICAgICAgIGRlZjogcG9zaXRpb25zW2JsXSA/IHBvc2l0aW9uc1tibF0ubWF0Y2ggOiB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgIH0gOiBibDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBjbGVhck9wdGlvbmFsVGFpbChidWZmZXIpIHtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIHZhbGlkUG9zLCBybCA9IGRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uKCksIGJsID0gYnVmZmVyLmxlbmd0aCwgbHYgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbZ2V0TGFzdFZhbGlkUG9zaXRpb24oKV07IHJsIDwgYmwgJiYgIWlzTWFzayhybCwgITApICYmICh2YWxpZFBvcyA9IGx2ICE9PSB1bmRlZmluZWQgPyBnZXRUZXN0VGVtcGxhdGUocmwsIGx2LmxvY2F0b3Iuc2xpY2UoXCJcIiksIGx2KSA6IGdldFRlc3QocmwpKSAmJiAhMCAhPT0gdmFsaWRQb3MubWF0Y2gub3B0aW9uYWxpdHkgJiYgKCEwICE9PSB2YWxpZFBvcy5tYXRjaC5vcHRpb25hbFF1YW50aWZpZXIgJiYgITAgIT09IHZhbGlkUG9zLm1hdGNoLm5ld0Jsb2NrTWFya2VyIHx8IHJsICsgMSA9PT0gYmwgJiYgXCJcIiA9PT0gKGx2ICE9PSB1bmRlZmluZWQgPyBnZXRUZXN0VGVtcGxhdGUocmwgKyAxLCBsdi5sb2NhdG9yLnNsaWNlKFwiXCIpLCBsdikgOiBnZXRUZXN0KHJsICsgMSkpLm1hdGNoLmRlZik7ICkgcmwrKztcclxuICAgICAgICAgICAgICAgIGZvciAoOyh2YWxpZFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tybCAtIDFdKSAmJiB2YWxpZFBvcyAmJiB2YWxpZFBvcy5tYXRjaC5vcHRpb25hbGl0eSAmJiB2YWxpZFBvcy5pbnB1dCA9PT0gb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyOyApIHJsLS07XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYnVmZmVyLnNwbGljZShybCksIGJ1ZmZlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBpc0NvbXBsZXRlKGJ1ZmZlcikge1xyXG4gICAgICAgICAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihvcHRzLmlzQ29tcGxldGUpKSByZXR1cm4gb3B0cy5pc0NvbXBsZXRlKGJ1ZmZlciwgb3B0cyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoXCIqXCIgPT09IG9wdHMucmVwZWF0KSByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvbXBsZXRlID0gITEsIGxycCA9IGRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uKCEwKSwgYW1sID0gc2Vla1ByZXZpb3VzKGxycC5sKTtcclxuICAgICAgICAgICAgICAgIGlmIChscnAuZGVmID09PSB1bmRlZmluZWQgfHwgbHJwLmRlZi5uZXdCbG9ja01hcmtlciB8fCBscnAuZGVmLm9wdGlvbmFsaXR5IHx8IGxycC5kZWYub3B0aW9uYWxRdWFudGlmaWVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGUgPSAhMDtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8PSBhbWw7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVzdCA9IGdldFRlc3RUZW1wbGF0ZShpKS5tYXRjaDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgIT09IHRlc3QuZm4gJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldID09PSB1bmRlZmluZWQgJiYgITAgIT09IHRlc3Qub3B0aW9uYWxpdHkgJiYgITAgIT09IHRlc3Qub3B0aW9uYWxRdWFudGlmaWVyIHx8IG51bGwgPT09IHRlc3QuZm4gJiYgYnVmZmVyW2ldICE9PSBnZXRQbGFjZWhvbGRlcihpLCB0ZXN0KSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGUgPSAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbXBsZXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZVJlbW92ZShpbnB1dCwgaywgcG9zLCBzdHJpY3QsIGZyb21Jc1ZhbGlkKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoKG9wdHMubnVtZXJpY0lucHV0IHx8IGlzUlRMKSAmJiAoayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuQkFDS1NQQUNFID8gayA9IElucHV0bWFzay5rZXlDb2RlLkRFTEVURSA6IGsgPT09IElucHV0bWFzay5rZXlDb2RlLkRFTEVURSAmJiAoayA9IElucHV0bWFzay5rZXlDb2RlLkJBQ0tTUEFDRSksIFxyXG4gICAgICAgICAgICAgICAgaXNSVEwpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBlbmQgPSBwb3MuZW5kO1xyXG4gICAgICAgICAgICAgICAgICAgIHBvcy5lbmQgPSBwb3MuYmVnaW4sIHBvcy5iZWdpbiA9IHBlbmQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBrID09PSBJbnB1dG1hc2sua2V5Q29kZS5CQUNLU1BBQ0UgJiYgKHBvcy5lbmQgLSBwb3MuYmVnaW4gPCAxIHx8ICExID09PSBvcHRzLmluc2VydE1vZGUpID8gKHBvcy5iZWdpbiA9IHNlZWtQcmV2aW91cyhwb3MuYmVnaW4pLCBcclxuICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MuYmVnaW5dICE9PSB1bmRlZmluZWQgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvcy5iZWdpbl0uaW5wdXQgPT09IG9wdHMuZ3JvdXBTZXBhcmF0b3IgJiYgcG9zLmJlZ2luLS0pIDogayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuREVMRVRFICYmIHBvcy5iZWdpbiA9PT0gcG9zLmVuZCAmJiAocG9zLmVuZCA9IGlzTWFzayhwb3MuZW5kLCAhMCkgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvcy5lbmRdICYmIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MuZW5kXS5pbnB1dCAhPT0gb3B0cy5yYWRpeFBvaW50ID8gcG9zLmVuZCArIDEgOiBzZWVrTmV4dChwb3MuZW5kKSArIDEsIFxyXG4gICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvcy5iZWdpbl0gIT09IHVuZGVmaW5lZCAmJiBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zLmJlZ2luXS5pbnB1dCA9PT0gb3B0cy5ncm91cFNlcGFyYXRvciAmJiBwb3MuZW5kKyspLCBcclxuICAgICAgICAgICAgICAgIHN0cmlwVmFsaWRQb3NpdGlvbnMocG9zLmJlZ2luLCBwb3MuZW5kLCAhMSwgc3RyaWN0KSwgITAgIT09IHN0cmljdCAmJiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAob3B0cy5rZWVwU3RhdGljKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHZhbGlkSW5wdXRzID0gW10sIGxhc3RBbHQgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbigtMSwgITApLCBwb3NpdGlvbnNDbG9uZSA9ICQuZXh0ZW5kKCEwLCB7fSwgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zKSwgcHJldkFsdFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tsYXN0QWx0XTsgbGFzdEFsdCA+PSAwOyBsYXN0QWx0LS0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhbHRQb3MgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbGFzdEFsdF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWx0UG9zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwICE9PSBhbHRQb3MuZ2VuZXJhdGVkSW5wdXQgJiYgL1swLTlhLWJBLVpdLy50ZXN0KGFsdFBvcy5pbnB1dCkgJiYgdmFsaWRJbnB1dHMucHVzaChhbHRQb3MuaW5wdXQpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2xhc3RBbHRdLCBhbHRQb3MuYWx0ZXJuYXRpb24gIT09IHVuZGVmaW5lZCAmJiBhbHRQb3MubG9jYXRvclthbHRQb3MuYWx0ZXJuYXRpb25dICE9PSBwcmV2QWx0UG9zLmxvY2F0b3JbYWx0UG9zLmFsdGVybmF0aW9uXSkgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldkFsdFBvcyA9IGFsdFBvcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobGFzdEFsdCA+IC0xKSBmb3IgKGdldE1hc2tTZXQoKS5wID0gc2Vla05leHQoZ2V0TGFzdFZhbGlkUG9zaXRpb24oLTEsICEwKSk7IHZhbGlkSW5wdXRzLmxlbmd0aCA+IDA7ICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleXByZXNzID0gbmV3ICQuRXZlbnQoXCJrZXlwcmVzc1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXByZXNzLndoaWNoID0gdmFsaWRJbnB1dHMucG9wKCkuY2hhckNvZGVBdCgwKSwgRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50LmNhbGwoaW5wdXQsIGtleXByZXNzLCAhMCwgITEsICExLCBnZXRNYXNrU2V0KCkucCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMgPSAkLmV4dGVuZCghMCwge30sIHBvc2l0aW9uc0Nsb25lKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbHZwID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24ocG9zLmJlZ2luLCAhMCk7XHJcbiAgICAgICAgICAgICAgICBpZiAobHZwIDwgcG9zLmJlZ2luKSBnZXRNYXNrU2V0KCkucCA9IHNlZWtOZXh0KGx2cCk7IGVsc2UgaWYgKCEwICE9PSBzdHJpY3QgJiYgKGdldE1hc2tTZXQoKS5wID0gcG9zLmJlZ2luLCBcclxuICAgICAgICAgICAgICAgICEwICE9PSBmcm9tSXNWYWxpZCkpIGZvciAoO2dldE1hc2tTZXQoKS5wIDwgbHZwICYmIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tnZXRNYXNrU2V0KCkucF0gPT09IHVuZGVmaW5lZDsgKSBnZXRNYXNrU2V0KCkucCsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGluaXRpYWxpemVDb2xvck1hc2soaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGZpbmRDYXJldFBvcyhjbGllbnR4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNhcmV0UG9zLCBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgc3R5bGUgaW4gY29tcHV0ZWRTdHlsZSkgaXNOYU4oc3R5bGUpICYmIC0xICE9PSBzdHlsZS5pbmRleE9mKFwiZm9udFwiKSAmJiAoZS5zdHlsZVtzdHlsZV0gPSBjb21wdXRlZFN0eWxlW3N0eWxlXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5zdHlsZS50ZXh0VHJhbnNmb3JtID0gY29tcHV0ZWRTdHlsZS50ZXh0VHJhbnNmb3JtLCBlLnN0eWxlLmxldHRlclNwYWNpbmcgPSBjb21wdXRlZFN0eWxlLmxldHRlclNwYWNpbmcsIFxyXG4gICAgICAgICAgICAgICAgICAgIGUuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCIsIGUuc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCIsIGUuc3R5bGUud2lkdGggPSBcImF1dG9cIiwgXHJcbiAgICAgICAgICAgICAgICAgICAgZS5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIiwgZS5zdHlsZS53aGl0ZVNwYWNlID0gXCJub3dyYXBcIiwgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaXRsLCBpbnB1dFRleHQgPSBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCksIHByZXZpb3VzV2lkdGggPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAoY2FyZXRQb3MgPSAwLCBpdGwgPSBpbnB1dFRleHQubGVuZ3RoOyBjYXJldFBvcyA8PSBpdGw7IGNhcmV0UG9zKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUuaW5uZXJIVE1MICs9IGlucHV0VGV4dC5jaGFyQXQoY2FyZXRQb3MpIHx8IFwiX1wiLCBlLm9mZnNldFdpZHRoID49IGNsaWVudHgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvZmZzZXQxID0gY2xpZW50eCAtIHByZXZpb3VzV2lkdGgsIG9mZnNldDIgPSBlLm9mZnNldFdpZHRoIC0gY2xpZW50eDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuaW5uZXJIVE1MID0gaW5wdXRUZXh0LmNoYXJBdChjYXJldFBvcyksIGNhcmV0UG9zID0gKG9mZnNldDEgLT0gZS5vZmZzZXRXaWR0aCAvIDMpIDwgb2Zmc2V0MiA/IGNhcmV0UG9zIC0gMSA6IGNhcmV0UG9zO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNXaWR0aCA9IGUub2Zmc2V0V2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGUpLCBjYXJldFBvcztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBjb21wdXRlZFN0eWxlID0gKGlucHV0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgd2luZG93KS5nZXRDb21wdXRlZFN0eWxlKGlucHV0LCBudWxsKSwgdGVtcGxhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICAgICAgICAgICAgdGVtcGxhdGUuc3R5bGUud2lkdGggPSBjb21wdXRlZFN0eWxlLndpZHRoLCB0ZW1wbGF0ZS5zdHlsZS50ZXh0QWxpZ24gPSBjb21wdXRlZFN0eWxlLnRleHRBbGlnbiwgXHJcbiAgICAgICAgICAgICAgICAoY29sb3JNYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSkuY2xhc3NOYW1lID0gXCJpbS1jb2xvcm1hc2tcIiwgaW5wdXQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoY29sb3JNYXNrLCBpbnB1dCksIFxyXG4gICAgICAgICAgICAgICAgaW5wdXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChpbnB1dCksIGNvbG9yTWFzay5hcHBlbmRDaGlsZCh0ZW1wbGF0ZSksIGNvbG9yTWFzay5hcHBlbmRDaGlsZChpbnB1dCksIFxyXG4gICAgICAgICAgICAgICAgaW5wdXQuc3R5bGUubGVmdCA9IHRlbXBsYXRlLm9mZnNldExlZnQgKyBcInB4XCIsICQoaW5wdXQpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYXJldChpbnB1dCwgZmluZENhcmV0UG9zKGUuY2xpZW50WCkpLCBFdmVudEhhbmRsZXJzLmNsaWNrRXZlbnQuY2FsbChpbnB1dCwgWyBlIF0pO1xyXG4gICAgICAgICAgICAgICAgfSksICQoaW5wdXQpLm9uKFwia2V5ZG93blwiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5zaGlmdEtleSB8fCAhMSA9PT0gb3B0cy5pbnNlcnRNb2RlIHx8IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbmRlckNvbG9yTWFzayhpbnB1dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiByZW5kZXJDb2xvck1hc2soaW5wdXQsIGNhcmV0UG9zLCBjbGVhcikge1xyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gaGFuZGxlU3RhdGljKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlzU3RhdGljIHx8IG51bGwgIT09IHRlc3QuZm4gJiYgdGVzdFBvcy5pbnB1dCAhPT0gdW5kZWZpbmVkID8gaXNTdGF0aWMgJiYgKG51bGwgIT09IHRlc3QuZm4gJiYgdGVzdFBvcy5pbnB1dCAhPT0gdW5kZWZpbmVkIHx8IFwiXCIgPT09IHRlc3QuZGVmKSAmJiAoaXNTdGF0aWMgPSAhMSwgXHJcbiAgICAgICAgICAgICAgICAgICAgbWFza1RlbXBsYXRlICs9IFwiPC9zcGFuPlwiKSA6IChpc1N0YXRpYyA9ICEwLCBtYXNrVGVtcGxhdGUgKz0gXCI8c3BhbiBjbGFzcz0naW0tc3RhdGljJz5cIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBoYW5kbGVDYXJldChmb3JjZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICEwICE9PSBmb3JjZSAmJiBwb3MgIT09IGNhcmV0UG9zLmJlZ2luIHx8IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IGlucHV0IHx8IChtYXNrVGVtcGxhdGUgKz0gXCI8c3BhbiBjbGFzcz0naW0tY2FyZXQnIHN0eWxlPSdib3JkZXItcmlnaHQtd2lkdGg6IDFweDtib3JkZXItcmlnaHQtc3R5bGU6IHNvbGlkOyc+PC9zcGFuPlwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciB0ZXN0LCB0ZXN0UG9zLCBuZHhJbnRsenIsIG1hc2tUZW1wbGF0ZSA9IFwiXCIsIGlzU3RhdGljID0gITEsIHBvcyA9IDA7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29sb3JNYXNrICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyID0gZ2V0QnVmZmVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhcmV0UG9zID09PSB1bmRlZmluZWQgPyBjYXJldFBvcyA9IGNhcmV0KGlucHV0KSA6IGNhcmV0UG9zLmJlZ2luID09PSB1bmRlZmluZWQgJiYgKGNhcmV0UG9zID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiZWdpbjogY2FyZXRQb3MsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogY2FyZXRQb3NcclxuICAgICAgICAgICAgICAgICAgICB9KSwgITAgIT09IGNsZWFyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsdnAgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkbyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVDYXJldCgpLCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSA/ICh0ZXN0UG9zID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10sIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdCA9IHRlc3RQb3MubWF0Y2gsIG5keEludGx6ciA9IHRlc3RQb3MubG9jYXRvci5zbGljZSgpLCBoYW5kbGVTdGF0aWMoKSwgbWFza1RlbXBsYXRlICs9IGJ1ZmZlcltwb3NdKSA6ICh0ZXN0UG9zID0gZ2V0VGVzdFRlbXBsYXRlKHBvcywgbmR4SW50bHpyLCBwb3MgLSAxKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXN0ID0gdGVzdFBvcy5tYXRjaCwgbmR4SW50bHpyID0gdGVzdFBvcy5sb2NhdG9yLnNsaWNlKCksICghMSA9PT0gb3B0cy5qaXRNYXNraW5nIHx8IHBvcyA8IGx2cCB8fCBcIm51bWJlclwiID09IHR5cGVvZiBvcHRzLmppdE1hc2tpbmcgJiYgaXNGaW5pdGUob3B0cy5qaXRNYXNraW5nKSAmJiBvcHRzLmppdE1hc2tpbmcgPiBwb3MpICYmIChoYW5kbGVTdGF0aWMoKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrVGVtcGxhdGUgKz0gZ2V0UGxhY2Vob2xkZXIocG9zLCB0ZXN0KSkpLCBwb3MrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSB3aGlsZSAoKG1heExlbmd0aCA9PT0gdW5kZWZpbmVkIHx8IHBvcyA8IG1heExlbmd0aCkgJiYgKG51bGwgIT09IHRlc3QuZm4gfHwgXCJcIiAhPT0gdGVzdC5kZWYpIHx8IGx2cCA+IHBvcyB8fCBpc1N0YXRpYyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC0xID09PSBtYXNrVGVtcGxhdGUuaW5kZXhPZihcImltLWNhcmV0XCIpICYmIGhhbmRsZUNhcmV0KCEwKSwgaXNTdGF0aWMgJiYgaGFuZGxlU3RhdGljKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0ZW1wbGF0ZSA9IGNvbG9yTWFzay5nZXRFbGVtZW50c0J5VGFnTmFtZShcImRpdlwiKVswXTtcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZS5pbm5lckhUTUwgPSBtYXNrVGVtcGxhdGUsIGlucHV0LmlucHV0bWFzay5wb3NpdGlvbkNvbG9yTWFzayhpbnB1dCwgdGVtcGxhdGUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1hc2tzZXQgPSBtYXNrc2V0IHx8IHRoaXMubWFza3NldCwgb3B0cyA9IG9wdHMgfHwgdGhpcy5vcHRzO1xyXG4gICAgICAgICAgICB2YXIgdW5kb1ZhbHVlLCAkZWwsIG1heExlbmd0aCwgY29sb3JNYXNrLCBpbnB1dG1hc2sgPSB0aGlzLCBlbCA9IHRoaXMuZWwsIGlzUlRMID0gdGhpcy5pc1JUTCwgc2tpcEtleVByZXNzRXZlbnQgPSAhMSwgc2tpcElucHV0RXZlbnQgPSAhMSwgaWdub3JhYmxlID0gITEsIG1vdXNlRW50ZXIgPSAhMSwgRXZlbnRSdWxlciA9IHtcclxuICAgICAgICAgICAgICAgIG9uOiBmdW5jdGlvbihpbnB1dCwgZXZlbnROYW1lLCBldmVudEhhbmRsZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZXYgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlucHV0bWFzayA9PT0gdW5kZWZpbmVkICYmIFwiRk9STVwiICE9PSB0aGlzLm5vZGVOYW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW1PcHRzID0gJC5kYXRhKHRoaXMsIFwiX2lucHV0bWFza19vcHRzXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1PcHRzID8gbmV3IElucHV0bWFzayhpbU9wdHMpLm1hc2sodGhpcykgOiBFdmVudFJ1bGVyLm9mZih0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcInNldHZhbHVlXCIgPT09IGUudHlwZSB8fCBcIkZPUk1cIiA9PT0gdGhpcy5ub2RlTmFtZSB8fCAhKHRoaXMuZGlzYWJsZWQgfHwgdGhpcy5yZWFkT25seSAmJiAhKFwia2V5ZG93blwiID09PSBlLnR5cGUgJiYgZS5jdHJsS2V5ICYmIDY3ID09PSBlLmtleUNvZGUgfHwgITEgPT09IG9wdHMudGFiVGhyb3VnaCAmJiBlLmtleUNvZGUgPT09IElucHV0bWFzay5rZXlDb2RlLlRBQikpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChlLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJpbnB1dFwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoITAgPT09IHNraXBJbnB1dEV2ZW50KSByZXR1cm4gc2tpcElucHV0RXZlbnQgPSAhMSwgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwia2V5ZG93blwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2lwS2V5UHJlc3NFdmVudCA9ICExLCBza2lwSW5wdXRFdmVudCA9ICExO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwia2V5cHJlc3NcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwID09PSBza2lwS2V5UHJlc3NFdmVudCkgcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2tpcEtleVByZXNzRXZlbnQgPSAhMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImNsaWNrXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpZW1vYmlsZSB8fCBpcGhvbmUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50SGFuZGxlci5hcHBseSh0aGF0LCBhcmdzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApLCAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmV0dXJuVmFsID0gZXZlbnRIYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICExID09PSByZXR1cm5WYWwgJiYgKGUucHJldmVudERlZmF1bHQoKSwgZS5zdG9wUHJvcGFnYXRpb24oKSksIHJldHVyblZhbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuaW5wdXRtYXNrLmV2ZW50c1tldmVudE5hbWVdID0gaW5wdXQuaW5wdXRtYXNrLmV2ZW50c1tldmVudE5hbWVdIHx8IFtdLCBpbnB1dC5pbnB1dG1hc2suZXZlbnRzW2V2ZW50TmFtZV0ucHVzaChldiksIFxyXG4gICAgICAgICAgICAgICAgICAgIC0xICE9PSAkLmluQXJyYXkoZXZlbnROYW1lLCBbIFwic3VibWl0XCIsIFwicmVzZXRcIiBdKSA/IG51bGwgIT09IGlucHV0LmZvcm0gJiYgJChpbnB1dC5mb3JtKS5vbihldmVudE5hbWUsIGV2KSA6ICQoaW5wdXQpLm9uKGV2ZW50TmFtZSwgZXYpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG9mZjogZnVuY3Rpb24oaW5wdXQsIGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmlucHV0bWFzayAmJiBpbnB1dC5pbnB1dG1hc2suZXZlbnRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBldmVudHM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50ID8gKGV2ZW50cyA9IFtdKVtldmVudF0gPSBpbnB1dC5pbnB1dG1hc2suZXZlbnRzW2V2ZW50XSA6IGV2ZW50cyA9IGlucHV0LmlucHV0bWFzay5ldmVudHMsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2goZXZlbnRzLCBmdW5jdGlvbihldmVudE5hbWUsIGV2QXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKDtldkFyci5sZW5ndGggPiAwOyApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXYgPSBldkFyci5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtMSAhPT0gJC5pbkFycmF5KGV2ZW50TmFtZSwgWyBcInN1Ym1pdFwiLCBcInJlc2V0XCIgXSkgPyBudWxsICE9PSBpbnB1dC5mb3JtICYmICQoaW5wdXQuZm9ybSkub2ZmKGV2ZW50TmFtZSwgZXYpIDogJChpbnB1dCkub2ZmKGV2ZW50TmFtZSwgZXYpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGlucHV0LmlucHV0bWFzay5ldmVudHNbZXZlbnROYW1lXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCBFdmVudEhhbmRsZXJzID0ge1xyXG4gICAgICAgICAgICAgICAga2V5ZG93bkV2ZW50OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcywgJGlucHV0ID0gJChpbnB1dCksIGsgPSBlLmtleUNvZGUsIHBvcyA9IGNhcmV0KGlucHV0KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuQkFDS1NQQUNFIHx8IGsgPT09IElucHV0bWFzay5rZXlDb2RlLkRFTEVURSB8fCBpcGhvbmUgJiYgayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuQkFDS1NQQUNFX1NBRkFSSSB8fCBlLmN0cmxLZXkgJiYgayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuWCAmJiAhZnVuY3Rpb24oZXZlbnROYW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKSwgZXZOYW1lID0gXCJvblwiICsgZXZlbnROYW1lLCBpc1N1cHBvcnRlZCA9IGV2TmFtZSBpbiBlbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzU3VwcG9ydGVkIHx8IChlbC5zZXRBdHRyaWJ1dGUoZXZOYW1lLCBcInJldHVybjtcIiksIGlzU3VwcG9ydGVkID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBlbFtldk5hbWVdKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsID0gbnVsbCwgaXNTdXBwb3J0ZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfShcImN1dFwiKSkgZS5wcmV2ZW50RGVmYXVsdCgpLCBoYW5kbGVSZW1vdmUoaW5wdXQsIGssIHBvcyksIHdyaXRlQnVmZmVyKGlucHV0LCBnZXRCdWZmZXIoITApLCBnZXRNYXNrU2V0KCkucCwgZSwgaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpID09PSBnZXRCdWZmZXJUZW1wbGF0ZSgpLmpvaW4oXCJcIikgPyAkaW5wdXQudHJpZ2dlcihcImNsZWFyZWRcIikgOiAhMCA9PT0gaXNDb21wbGV0ZShnZXRCdWZmZXIoKSkgJiYgJGlucHV0LnRyaWdnZXIoXCJjb21wbGV0ZVwiKTsgZWxzZSBpZiAoayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuRU5EIHx8IGsgPT09IElucHV0bWFzay5rZXlDb2RlLlBBR0VfRE9XTikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjYXJldFBvcyA9IHNlZWtOZXh0KGdldExhc3RWYWxpZFBvc2l0aW9uKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRzLmluc2VydE1vZGUgfHwgY2FyZXRQb3MgIT09IGdldE1hc2tTZXQoKS5tYXNrTGVuZ3RoIHx8IGUuc2hpZnRLZXkgfHwgY2FyZXRQb3MtLSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCBlLnNoaWZ0S2V5ID8gcG9zLmJlZ2luIDogY2FyZXRQb3MsIGNhcmV0UG9zLCAhMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGsgPT09IElucHV0bWFzay5rZXlDb2RlLkhPTUUgJiYgIWUuc2hpZnRLZXkgfHwgayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuUEFHRV9VUCA/IChlLnByZXZlbnREZWZhdWx0KCksIFxyXG4gICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCAwLCBlLnNoaWZ0S2V5ID8gcG9zLmJlZ2luIDogMCwgITApKSA6IChvcHRzLnVuZG9PbkVzY2FwZSAmJiBrID09PSBJbnB1dG1hc2sua2V5Q29kZS5FU0NBUEUgfHwgOTAgPT09IGsgJiYgZS5jdHJsS2V5KSAmJiAhMCAhPT0gZS5hbHRLZXkgPyAoY2hlY2tWYWwoaW5wdXQsICEwLCAhMSwgdW5kb1ZhbHVlLnNwbGl0KFwiXCIpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgJGlucHV0LnRyaWdnZXIoXCJjbGlja1wiKSkgOiBrICE9PSBJbnB1dG1hc2sua2V5Q29kZS5JTlNFUlQgfHwgZS5zaGlmdEtleSB8fCBlLmN0cmxLZXkgPyAhMCA9PT0gb3B0cy50YWJUaHJvdWdoICYmIGsgPT09IElucHV0bWFzay5rZXlDb2RlLlRBQiA/ICghMCA9PT0gZS5zaGlmdEtleSA/IChudWxsID09PSBnZXRUZXN0KHBvcy5iZWdpbikubWF0Y2guZm4gJiYgKHBvcy5iZWdpbiA9IHNlZWtOZXh0KHBvcy5iZWdpbikpLCBcclxuICAgICAgICAgICAgICAgICAgICBwb3MuZW5kID0gc2Vla1ByZXZpb3VzKHBvcy5iZWdpbiwgITApLCBwb3MuYmVnaW4gPSBzZWVrUHJldmlvdXMocG9zLmVuZCwgITApKSA6IChwb3MuYmVnaW4gPSBzZWVrTmV4dChwb3MuYmVnaW4sICEwKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcG9zLmVuZCA9IHNlZWtOZXh0KHBvcy5iZWdpbiwgITApLCBwb3MuZW5kIDwgZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggJiYgcG9zLmVuZC0tKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcG9zLmJlZ2luIDwgZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggJiYgKGUucHJldmVudERlZmF1bHQoKSwgY2FyZXQoaW5wdXQsIHBvcy5iZWdpbiwgcG9zLmVuZCkpKSA6IGUuc2hpZnRLZXkgfHwgITEgPT09IG9wdHMuaW5zZXJ0TW9kZSAmJiAoayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuUklHSFQgPyBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2FyZXRQb3MgPSBjYXJldChpbnB1dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCBjYXJldFBvcy5iZWdpbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMCkgOiBrID09PSBJbnB1dG1hc2sua2V5Q29kZS5MRUZUICYmIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjYXJldFBvcyA9IGNhcmV0KGlucHV0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZXQoaW5wdXQsIGlzUlRMID8gY2FyZXRQb3MuYmVnaW4gKyAxIDogY2FyZXRQb3MuYmVnaW4gLSAxKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCAwKSkgOiAob3B0cy5pbnNlcnRNb2RlID0gIW9wdHMuaW5zZXJ0TW9kZSwgY2FyZXQoaW5wdXQsIG9wdHMuaW5zZXJ0TW9kZSB8fCBwb3MuYmVnaW4gIT09IGdldE1hc2tTZXQoKS5tYXNrTGVuZ3RoID8gcG9zLmJlZ2luIDogcG9zLmJlZ2luIC0gMSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdHMub25LZXlEb3duLmNhbGwodGhpcywgZSwgZ2V0QnVmZmVyKCksIGNhcmV0KGlucHV0KS5iZWdpbiwgb3B0cyksIGlnbm9yYWJsZSA9IC0xICE9PSAkLmluQXJyYXkoaywgb3B0cy5pZ25vcmFibGVzKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBrZXlwcmVzc0V2ZW50OiBmdW5jdGlvbihlLCBjaGVja3ZhbCwgd3JpdGVPdXQsIHN0cmljdCwgbmR4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcywgJGlucHV0ID0gJChpbnB1dCksIGsgPSBlLndoaWNoIHx8IGUuY2hhckNvZGUgfHwgZS5rZXlDb2RlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghKCEwID09PSBjaGVja3ZhbCB8fCBlLmN0cmxLZXkgJiYgZS5hbHRLZXkpICYmIChlLmN0cmxLZXkgfHwgZS5tZXRhS2V5IHx8IGlnbm9yYWJsZSkpIHJldHVybiBrID09PSBJbnB1dG1hc2sua2V5Q29kZS5FTlRFUiAmJiB1bmRvVmFsdWUgIT09IGdldEJ1ZmZlcigpLmpvaW4oXCJcIikgJiYgKHVuZG9WYWx1ZSA9IGdldEJ1ZmZlcigpLmpvaW4oXCJcIiksIFxyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC50cmlnZ2VyKFwiY2hhbmdlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDApKSwgITA7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgNDYgPT09IGsgJiYgITEgPT09IGUuc2hpZnRLZXkgJiYgXCJcIiAhPT0gb3B0cy5yYWRpeFBvaW50ICYmIChrID0gb3B0cy5yYWRpeFBvaW50LmNoYXJDb2RlQXQoMCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZm9yd2FyZFBvc2l0aW9uLCBwb3MgPSBjaGVja3ZhbCA/IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luOiBuZHgsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQ6IG5keFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IDogY2FyZXQoaW5wdXQpLCBjID0gU3RyaW5nLmZyb21DaGFyQ29kZShrKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLndyaXRlT3V0QnVmZmVyID0gITA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWxSZXN1bHQgPSBpc1ZhbGlkKHBvcywgYywgc3RyaWN0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCExICE9PSB2YWxSZXN1bHQgJiYgKHJlc2V0TWFza1NldCghMCksIGZvcndhcmRQb3NpdGlvbiA9IHZhbFJlc3VsdC5jYXJldCAhPT0gdW5kZWZpbmVkID8gdmFsUmVzdWx0LmNhcmV0IDogY2hlY2t2YWwgPyB2YWxSZXN1bHQucG9zICsgMSA6IHNlZWtOZXh0KHZhbFJlc3VsdC5wb3MpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnAgPSBmb3J3YXJkUG9zaXRpb24pLCAhMSAhPT0gd3JpdGVPdXQgJiYgKHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRzLm9uS2V5VmFsaWRhdGlvbi5jYWxsKGlucHV0LCBrLCB2YWxSZXN1bHQsIG9wdHMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAwKSwgZ2V0TWFza1NldCgpLndyaXRlT3V0QnVmZmVyICYmICExICE9PSB2YWxSZXN1bHQpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyID0gZ2V0QnVmZmVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihpbnB1dCwgYnVmZmVyLCBvcHRzLm51bWVyaWNJbnB1dCAmJiB2YWxSZXN1bHQuY2FyZXQgPT09IHVuZGVmaW5lZCA/IHNlZWtQcmV2aW91cyhmb3J3YXJkUG9zaXRpb24pIDogZm9yd2FyZFBvc2l0aW9uLCBlLCAhMCAhPT0gY2hlY2t2YWwpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICEwICE9PSBjaGVja3ZhbCAmJiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEwID09PSBpc0NvbXBsZXRlKGJ1ZmZlcikgJiYgJGlucHV0LnRyaWdnZXIoXCJjb21wbGV0ZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KCksIGNoZWNrdmFsKSByZXR1cm4gITEgIT09IHZhbFJlc3VsdCAmJiAodmFsUmVzdWx0LmZvcndhcmRQb3NpdGlvbiA9IGZvcndhcmRQb3NpdGlvbiksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxSZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHBhc3RlRXZlbnQ6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcFZhbHVlLCBpbnB1dCA9IHRoaXMsIGV2ID0gZS5vcmlnaW5hbEV2ZW50IHx8IGUsICRpbnB1dCA9ICQoaW5wdXQpLCBpbnB1dFZhbHVlID0gaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCghMCksIGNhcmV0UG9zID0gY2FyZXQoaW5wdXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlzUlRMICYmICh0ZW1wVmFsdWUgPSBjYXJldFBvcy5lbmQsIGNhcmV0UG9zLmVuZCA9IGNhcmV0UG9zLmJlZ2luLCBjYXJldFBvcy5iZWdpbiA9IHRlbXBWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlQmVmb3JlQ2FyZXQgPSBpbnB1dFZhbHVlLnN1YnN0cigwLCBjYXJldFBvcy5iZWdpbiksIHZhbHVlQWZ0ZXJDYXJldCA9IGlucHV0VmFsdWUuc3Vic3RyKGNhcmV0UG9zLmVuZCwgaW5wdXRWYWx1ZS5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZUJlZm9yZUNhcmV0ID09PSAoaXNSVEwgPyBnZXRCdWZmZXJUZW1wbGF0ZSgpLnJldmVyc2UoKSA6IGdldEJ1ZmZlclRlbXBsYXRlKCkpLnNsaWNlKDAsIGNhcmV0UG9zLmJlZ2luKS5qb2luKFwiXCIpICYmICh2YWx1ZUJlZm9yZUNhcmV0ID0gXCJcIiksIFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlQWZ0ZXJDYXJldCA9PT0gKGlzUlRMID8gZ2V0QnVmZmVyVGVtcGxhdGUoKS5yZXZlcnNlKCkgOiBnZXRCdWZmZXJUZW1wbGF0ZSgpKS5zbGljZShjYXJldFBvcy5lbmQpLmpvaW4oXCJcIikgJiYgKHZhbHVlQWZ0ZXJDYXJldCA9IFwiXCIpLCBcclxuICAgICAgICAgICAgICAgICAgICBpc1JUTCAmJiAodGVtcFZhbHVlID0gdmFsdWVCZWZvcmVDYXJldCwgdmFsdWVCZWZvcmVDYXJldCA9IHZhbHVlQWZ0ZXJDYXJldCwgdmFsdWVBZnRlckNhcmV0ID0gdGVtcFZhbHVlKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmNsaXBib2FyZERhdGEgJiYgd2luZG93LmNsaXBib2FyZERhdGEuZ2V0RGF0YSkgaW5wdXRWYWx1ZSA9IHZhbHVlQmVmb3JlQ2FyZXQgKyB3aW5kb3cuY2xpcGJvYXJkRGF0YS5nZXREYXRhKFwiVGV4dFwiKSArIHZhbHVlQWZ0ZXJDYXJldDsgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZXYuY2xpcGJvYXJkRGF0YSB8fCAhZXYuY2xpcGJvYXJkRGF0YS5nZXREYXRhKSByZXR1cm4gITA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0VmFsdWUgPSB2YWx1ZUJlZm9yZUNhcmV0ICsgZXYuY2xpcGJvYXJkRGF0YS5nZXREYXRhKFwidGV4dC9wbGFpblwiKSArIHZhbHVlQWZ0ZXJDYXJldDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhc3RlVmFsdWUgPSBpbnB1dFZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0cy5vbkJlZm9yZVBhc3RlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoITEgPT09IChwYXN0ZVZhbHVlID0gb3B0cy5vbkJlZm9yZVBhc3RlLmNhbGwoaW5wdXRtYXNrLCBpbnB1dFZhbHVlLCBvcHRzKSkpIHJldHVybiBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3RlVmFsdWUgfHwgKHBhc3RlVmFsdWUgPSBpbnB1dFZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoZWNrVmFsKGlucHV0LCAhMSwgITEsIGlzUlRMID8gcGFzdGVWYWx1ZS5zcGxpdChcIlwiKS5yZXZlcnNlKCkgOiBwYXN0ZVZhbHVlLnRvU3RyaW5nKCkuc3BsaXQoXCJcIikpLCBcclxuICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCksIHNlZWtOZXh0KGdldExhc3RWYWxpZFBvc2l0aW9uKCkpLCBlLCB1bmRvVmFsdWUgIT09IGdldEJ1ZmZlcigpLmpvaW4oXCJcIikpLCBcclxuICAgICAgICAgICAgICAgICAgICAhMCA9PT0gaXNDb21wbGV0ZShnZXRCdWZmZXIoKSkgJiYgJGlucHV0LnRyaWdnZXIoXCJjb21wbGV0ZVwiKSwgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGlucHV0RmFsbEJhY2tFdmVudDogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXMsIGlucHV0VmFsdWUgPSBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGdldEJ1ZmZlcigpLmpvaW4oXCJcIikgIT09IGlucHV0VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNhcmV0UG9zID0gY2FyZXQoaW5wdXQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoITEgPT09IGZ1bmN0aW9uKGlucHV0LCBpbnB1dFZhbHVlLCBjYXJldFBvcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFwiLlwiID09PSBpbnB1dFZhbHVlLmNoYXJBdChjYXJldFBvcy5iZWdpbiAtIDEpICYmIFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCAmJiAoKGlucHV0VmFsdWUgPSBpbnB1dFZhbHVlLnNwbGl0KFwiXCIpKVtjYXJldFBvcy5iZWdpbiAtIDFdID0gb3B0cy5yYWRpeFBvaW50LmNoYXJBdCgwKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dFZhbHVlID0gaW5wdXRWYWx1ZS5qb2luKFwiXCIpKSwgaW5wdXRWYWx1ZS5jaGFyQXQoY2FyZXRQb3MuYmVnaW4gLSAxKSA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIGlucHV0VmFsdWUubGVuZ3RoID4gZ2V0QnVmZmVyKCkubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleXByZXNzID0gbmV3ICQuRXZlbnQoXCJrZXlwcmVzc1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ga2V5cHJlc3Mud2hpY2ggPSBvcHRzLnJhZGl4UG9pbnQuY2hhckNvZGVBdCgwKSwgRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50LmNhbGwoaW5wdXQsIGtleXByZXNzLCAhMCwgITAsICExLCBjYXJldFBvcy5iZWdpbiAtIDEpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfShpbnB1dCwgaW5wdXRWYWx1ZSwgY2FyZXRQb3MpKSByZXR1cm4gITE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dFZhbHVlID0gaW5wdXRWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoXCIoXCIgKyBJbnB1dG1hc2suZXNjYXBlUmVnZXgoZ2V0QnVmZmVyVGVtcGxhdGUoKS5qb2luKFwiXCIpKSArIFwiKSpcIiksIFwiXCIpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgITEgPT09IGZ1bmN0aW9uKGlucHV0LCBpbnB1dFZhbHVlLCBjYXJldFBvcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGllbW9iaWxlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0Q2hhciA9IGlucHV0VmFsdWUucmVwbGFjZShnZXRCdWZmZXIoKS5qb2luKFwiXCIpLCBcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoMSA9PT0gaW5wdXRDaGFyLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIga2V5cHJlc3MgPSBuZXcgJC5FdmVudChcImtleXByZXNzXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ga2V5cHJlc3Mud2hpY2ggPSBpbnB1dENoYXIuY2hhckNvZGVBdCgwKSwgRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50LmNhbGwoaW5wdXQsIGtleXByZXNzLCAhMCwgITAsICExLCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbY2FyZXRQb3MuYmVnaW4gLSAxXSA/IGNhcmV0UG9zLmJlZ2luIDogY2FyZXRQb3MuYmVnaW4gLSAxKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICExO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfShpbnB1dCwgaW5wdXRWYWx1ZSwgY2FyZXRQb3MpKSByZXR1cm4gITE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0UG9zLmJlZ2luID4gaW5wdXRWYWx1ZS5sZW5ndGggJiYgKGNhcmV0KGlucHV0LCBpbnB1dFZhbHVlLmxlbmd0aCksIGNhcmV0UG9zID0gY2FyZXQoaW5wdXQpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJ1ZmZlciA9IGdldEJ1ZmZlcigpLmpvaW4oXCJcIiksIGZyb250UGFydCA9IGlucHV0VmFsdWUuc3Vic3RyKDAsIGNhcmV0UG9zLmJlZ2luKSwgYmFja1BhcnQgPSBpbnB1dFZhbHVlLnN1YnN0cihjYXJldFBvcy5iZWdpbiksIGZyb250QnVmZmVyUGFydCA9IGJ1ZmZlci5zdWJzdHIoMCwgY2FyZXRQb3MuYmVnaW4pLCBiYWNrQnVmZmVyUGFydCA9IGJ1ZmZlci5zdWJzdHIoY2FyZXRQb3MuYmVnaW4pLCBzZWxlY3Rpb24gPSBjYXJldFBvcywgZW50cmllcyA9IFwiXCIsIGlzRW50cnkgPSAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZyb250UGFydCAhPT0gZnJvbnRCdWZmZXJQYXJ0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24uYmVnaW4gPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgZnBsID0gKGlzRW50cnkgPSBmcm9udFBhcnQubGVuZ3RoID49IGZyb250QnVmZmVyUGFydC5sZW5ndGgpID8gZnJvbnRQYXJ0Lmxlbmd0aCA6IGZyb250QnVmZmVyUGFydC5sZW5ndGgsIGkgPSAwOyBmcm9udFBhcnQuY2hhckF0KGkpID09PSBmcm9udEJ1ZmZlclBhcnQuY2hhckF0KGkpICYmIGkgPCBmcGw7IGkrKykgc2VsZWN0aW9uLmJlZ2luKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0VudHJ5ICYmIChlbnRyaWVzICs9IGZyb250UGFydC5zbGljZShzZWxlY3Rpb24uYmVnaW4sIHNlbGVjdGlvbi5lbmQpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrUGFydCAhPT0gYmFja0J1ZmZlclBhcnQgJiYgKGJhY2tQYXJ0Lmxlbmd0aCA+IGJhY2tCdWZmZXJQYXJ0Lmxlbmd0aCA/IGlzRW50cnkgJiYgKHNlbGVjdGlvbi5lbmQgPSBzZWxlY3Rpb24uYmVnaW4pIDogYmFja1BhcnQubGVuZ3RoIDwgYmFja0J1ZmZlclBhcnQubGVuZ3RoID8gc2VsZWN0aW9uLmVuZCArPSBiYWNrQnVmZmVyUGFydC5sZW5ndGggLSBiYWNrUGFydC5sZW5ndGggOiBiYWNrUGFydC5jaGFyQXQoMCkgIT09IGJhY2tCdWZmZXJQYXJ0LmNoYXJBdCgwKSAmJiBzZWxlY3Rpb24uZW5kKyspLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIoaW5wdXQsIGdldEJ1ZmZlcigpLCBzZWxlY3Rpb24pLCBlbnRyaWVzLmxlbmd0aCA+IDAgPyAkLmVhY2goZW50cmllcy5zcGxpdChcIlwiKSwgZnVuY3Rpb24obmR4LCBlbnRyeSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleXByZXNzID0gbmV3ICQuRXZlbnQoXCJrZXlwcmVzc1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXByZXNzLndoaWNoID0gZW50cnkuY2hhckNvZGVBdCgwKSwgaWdub3JhYmxlID0gITEsIEV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGlucHV0LCBrZXlwcmVzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pIDogKHNlbGVjdGlvbi5iZWdpbiA9PT0gc2VsZWN0aW9uLmVuZCAtIDEgJiYgY2FyZXQoaW5wdXQsIHNlZWtQcmV2aW91cyhzZWxlY3Rpb24uYmVnaW4gKyAxKSwgc2VsZWN0aW9uLmVuZCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlLmtleUNvZGUgPSBJbnB1dG1hc2sua2V5Q29kZS5ERUxFVEUsIEV2ZW50SGFuZGxlcnMua2V5ZG93bkV2ZW50LmNhbGwoaW5wdXQsIGUpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc2V0VmFsdWVFdmVudDogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRtYXNrLnJlZnJlc2hWYWx1ZSA9ICExO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXMsIHZhbHVlID0gaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCghMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJC5pc0Z1bmN0aW9uKG9wdHMub25CZWZvcmVNYXNrKSAmJiAodmFsdWUgPSBvcHRzLm9uQmVmb3JlTWFzay5jYWxsKGlucHV0bWFzaywgdmFsdWUsIG9wdHMpIHx8IHZhbHVlKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5zcGxpdChcIlwiKSwgY2hlY2tWYWwoaW5wdXQsICEwLCAhMSwgaXNSVEwgPyB2YWx1ZS5yZXZlcnNlKCkgOiB2YWx1ZSksIFxyXG4gICAgICAgICAgICAgICAgICAgIHVuZG9WYWx1ZSA9IGdldEJ1ZmZlcigpLmpvaW4oXCJcIiksIChvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzIHx8IG9wdHMuY2xlYXJJbmNvbXBsZXRlKSAmJiBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkgPT09IGdldEJ1ZmZlclRlbXBsYXRlKCkuam9pbihcIlwiKSAmJiBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlU2V0KFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZvY3VzRXZlbnQ6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB0aGlzLCBucHRWYWx1ZSA9IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKTtcclxuICAgICAgICAgICAgICAgICAgICBvcHRzLnNob3dNYXNrT25Gb2N1cyAmJiAoIW9wdHMuc2hvd01hc2tPbkhvdmVyIHx8IG9wdHMuc2hvd01hc2tPbkhvdmVyICYmIFwiXCIgPT09IG5wdFZhbHVlKSAmJiAoaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpID8gd3JpdGVCdWZmZXIoaW5wdXQsIGdldEJ1ZmZlcigpLCBzZWVrTmV4dChnZXRMYXN0VmFsaWRQb3NpdGlvbigpKSkgOiAhMSA9PT0gbW91c2VFbnRlciAmJiBjYXJldChpbnB1dCwgc2Vla05leHQoZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSkpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgITAgPT09IG9wdHMucG9zaXRpb25DYXJldE9uVGFiICYmICExID09PSBtb3VzZUVudGVyICYmIFwiXCIgIT09IG5wdFZhbHVlICYmICh3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCksIGNhcmV0KGlucHV0KSksIFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50SGFuZGxlcnMuY2xpY2tFdmVudC5hcHBseShpbnB1dCwgWyBlLCAhMCBdKSksIHVuZG9WYWx1ZSA9IGdldEJ1ZmZlcigpLmpvaW4oXCJcIik7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbW91c2VsZWF2ZUV2ZW50OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcztcclxuICAgICAgICAgICAgICAgICAgICBpZiAobW91c2VFbnRlciA9ICExLCBvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBidWZmZXIgPSBnZXRCdWZmZXIoKS5zbGljZSgpLCBucHRWYWx1ZSA9IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbnB0VmFsdWUgIT09IGlucHV0LmdldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIpICYmIFwiXCIgIT09IG5wdFZhbHVlICYmICgtMSA9PT0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSAmJiBucHRWYWx1ZSA9PT0gZ2V0QnVmZmVyVGVtcGxhdGUoKS5qb2luKFwiXCIpID8gYnVmZmVyID0gW10gOiBjbGVhck9wdGlvbmFsVGFpbChidWZmZXIpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIoaW5wdXQsIGJ1ZmZlcikpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjbGlja0V2ZW50OiBmdW5jdGlvbihlLCB0YWJiZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBkb1JhZGl4Rm9jdXMoY2xpY2tQb3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZwcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2cHNbY2xpY2tQb3NdID09PSB1bmRlZmluZWQgfHwgdnBzW2NsaWNrUG9zXS5pbnB1dCA9PT0gZ2V0UGxhY2Vob2xkZXIoY2xpY2tQb3MpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNsaWNrUG9zIDwgc2Vla05leHQoLTEpKSByZXR1cm4gITA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhZGl4UG9zID0gJC5pbkFycmF5KG9wdHMucmFkaXhQb2ludCwgZ2V0QnVmZmVyKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgtMSAhPT0gcmFkaXhQb3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgdnAgaW4gdnBzKSBpZiAocmFkaXhQb3MgPCB2cCAmJiB2cHNbdnBdLmlucHV0ICE9PSBnZXRQbGFjZWhvbGRlcih2cCkpIHJldHVybiAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gITE7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXM7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWRDYXJldCA9IGNhcmV0KGlucHV0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YWJiZWQgJiYgKGlzUlRMID8gc2VsZWN0ZWRDYXJldC5lbmQgPSBzZWxlY3RlZENhcmV0LmJlZ2luIDogc2VsZWN0ZWRDYXJldC5iZWdpbiA9IHNlbGVjdGVkQ2FyZXQuZW5kKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZENhcmV0LmJlZ2luID09PSBzZWxlY3RlZENhcmV0LmVuZCkgc3dpdGNoIChvcHRzLnBvc2l0aW9uQ2FyZXRPbkNsaWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJub25lXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwicmFkaXhGb2N1c1wiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb1JhZGl4Rm9jdXMoc2VsZWN0ZWRDYXJldC5iZWdpbikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhZGl4UG9zID0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKS5pbmRleE9mKG9wdHMucmFkaXhQb2ludCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCBvcHRzLm51bWVyaWNJbnB1dCA/IHNlZWtOZXh0KHJhZGl4UG9zKSA6IHJhZGl4UG9zKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2xpY2tQb3NpdGlvbiA9IHNlbGVjdGVkQ2FyZXQuYmVnaW4sIGx2Y2xpY2tQb3NpdGlvbiA9IGdldExhc3RWYWxpZFBvc2l0aW9uKGNsaWNrUG9zaXRpb24sICEwKSwgbGFzdFBvc2l0aW9uID0gc2Vla05leHQobHZjbGlja1Bvc2l0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xpY2tQb3NpdGlvbiA8IGxhc3RQb3NpdGlvbikgY2FyZXQoaW5wdXQsIGlzTWFzayhjbGlja1Bvc2l0aW9uLCAhMCkgfHwgaXNNYXNrKGNsaWNrUG9zaXRpb24gLSAxLCAhMCkgPyBjbGlja1Bvc2l0aW9uIDogc2Vla05leHQoY2xpY2tQb3NpdGlvbikpOyBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGx2cCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tsdmNsaWNrUG9zaXRpb25dLCB0dCA9IGdldFRlc3RUZW1wbGF0ZShsYXN0UG9zaXRpb24sIGx2cCA/IGx2cC5tYXRjaC5sb2NhdG9yIDogdW5kZWZpbmVkLCBsdnApLCBwbGFjZWhvbGRlciA9IGdldFBsYWNlaG9sZGVyKGxhc3RQb3NpdGlvbiwgdHQubWF0Y2gpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJcIiAhPT0gcGxhY2Vob2xkZXIgJiYgZ2V0QnVmZmVyKClbbGFzdFBvc2l0aW9uXSAhPT0gcGxhY2Vob2xkZXIgJiYgITAgIT09IHR0Lm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllciAmJiAhMCAhPT0gdHQubWF0Y2gubmV3QmxvY2tNYXJrZXIgfHwgIWlzTWFzayhsYXN0UG9zaXRpb24sICEwKSAmJiB0dC5tYXRjaC5kZWYgPT09IHBsYWNlaG9sZGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3UG9zID0gc2Vla05leHQobGFzdFBvc2l0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjbGlja1Bvc2l0aW9uID49IG5ld1BvcyB8fCBjbGlja1Bvc2l0aW9uID09PSBsYXN0UG9zaXRpb24pICYmIChsYXN0UG9zaXRpb24gPSBuZXdQb3MpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCBsYXN0UG9zaXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRibGNsaWNrRXZlbnQ6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB0aGlzO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCAwLCBzZWVrTmV4dChnZXRMYXN0VmFsaWRQb3NpdGlvbigpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY3V0RXZlbnQ6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB0aGlzLCAkaW5wdXQgPSAkKGlucHV0KSwgcG9zID0gY2FyZXQoaW5wdXQpLCBldiA9IGUub3JpZ2luYWxFdmVudCB8fCBlLCBjbGlwYm9hcmREYXRhID0gd2luZG93LmNsaXBib2FyZERhdGEgfHwgZXYuY2xpcGJvYXJkRGF0YSwgY2xpcERhdGEgPSBpc1JUTCA/IGdldEJ1ZmZlcigpLnNsaWNlKHBvcy5lbmQsIHBvcy5iZWdpbikgOiBnZXRCdWZmZXIoKS5zbGljZShwb3MuYmVnaW4sIHBvcy5lbmQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNsaXBib2FyZERhdGEuc2V0RGF0YShcInRleHRcIiwgaXNSVEwgPyBjbGlwRGF0YS5yZXZlcnNlKCkuam9pbihcIlwiKSA6IGNsaXBEYXRhLmpvaW4oXCJcIikpLCBcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZCAmJiBkb2N1bWVudC5leGVjQ29tbWFuZChcImNvcHlcIiksIGhhbmRsZVJlbW92ZShpbnB1dCwgSW5wdXRtYXNrLmtleUNvZGUuREVMRVRFLCBwb3MpLCBcclxuICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCksIGdldE1hc2tTZXQoKS5wLCBlLCB1bmRvVmFsdWUgIT09IGdldEJ1ZmZlcigpLmpvaW4oXCJcIikpLCBcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkgPT09IGdldEJ1ZmZlclRlbXBsYXRlKCkuam9pbihcIlwiKSAmJiAkaW5wdXQudHJpZ2dlcihcImNsZWFyZWRcIik7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYmx1ckV2ZW50OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyICRpbnB1dCA9ICQodGhpcyksIGlucHV0ID0gdGhpcztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuaW5wdXRtYXNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBucHRWYWx1ZSA9IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKSwgYnVmZmVyID0gZ2V0QnVmZmVyKCkuc2xpY2UoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJcIiAhPT0gbnB0VmFsdWUgJiYgKG9wdHMuY2xlYXJNYXNrT25Mb3N0Rm9jdXMgJiYgKC0xID09PSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpICYmIG5wdFZhbHVlID09PSBnZXRCdWZmZXJUZW1wbGF0ZSgpLmpvaW4oXCJcIikgPyBidWZmZXIgPSBbXSA6IGNsZWFyT3B0aW9uYWxUYWlsKGJ1ZmZlcikpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgITEgPT09IGlzQ29tcGxldGUoYnVmZmVyKSAmJiAoc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC50cmlnZ2VyKFwiaW5jb21wbGV0ZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMCksIG9wdHMuY2xlYXJJbmNvbXBsZXRlICYmIChyZXNldE1hc2tTZXQoKSwgYnVmZmVyID0gb3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cyA/IFtdIDogZ2V0QnVmZmVyVGVtcGxhdGUoKS5zbGljZSgpKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihpbnB1dCwgYnVmZmVyLCB1bmRlZmluZWQsIGUpKSwgdW5kb1ZhbHVlICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpICYmICh1bmRvVmFsdWUgPSBidWZmZXIuam9pbihcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC50cmlnZ2VyKFwiY2hhbmdlXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbW91c2VlbnRlckV2ZW50OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcztcclxuICAgICAgICAgICAgICAgICAgICBtb3VzZUVudGVyID0gITAsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IGlucHV0ICYmIG9wdHMuc2hvd01hc2tPbkhvdmVyICYmIGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKSAhPT0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSAmJiB3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCkpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHN1Ym1pdEV2ZW50OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdW5kb1ZhbHVlICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpICYmICRlbC50cmlnZ2VyKFwiY2hhbmdlXCIpLCBvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzICYmIC0xID09PSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpICYmIGVsLmlucHV0bWFzay5fdmFsdWVHZXQgJiYgZWwuaW5wdXRtYXNrLl92YWx1ZUdldCgpID09PSBnZXRCdWZmZXJUZW1wbGF0ZSgpLmpvaW4oXCJcIikgJiYgZWwuaW5wdXRtYXNrLl92YWx1ZVNldChcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5yZW1vdmVNYXNrT25TdWJtaXQgJiYgKGVsLmlucHV0bWFzay5fdmFsdWVTZXQoZWwuaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKSwgITApLCBcclxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihlbCwgZ2V0QnVmZmVyKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDApKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByZXNldEV2ZW50OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWwuaW5wdXRtYXNrLnJlZnJlc2hWYWx1ZSA9ICEwLCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkZWwudHJpZ2dlcihcInNldHZhbHVlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBJbnB1dG1hc2sucHJvdG90eXBlLnBvc2l0aW9uQ29sb3JNYXNrID0gZnVuY3Rpb24oaW5wdXQsIHRlbXBsYXRlKSB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dC5zdHlsZS5sZWZ0ID0gdGVtcGxhdGUub2Zmc2V0TGVmdCArIFwicHhcIjtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdmFyIHZhbHVlQnVmZmVyO1xyXG4gICAgICAgICAgICBpZiAoYWN0aW9uT2JqICE9PSB1bmRlZmluZWQpIHN3aXRjaCAoYWN0aW9uT2JqLmFjdGlvbikge1xyXG4gICAgICAgICAgICAgIGNhc2UgXCJpc0NvbXBsZXRlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZWwgPSBhY3Rpb25PYmouZWwsIGlzQ29tcGxldGUoZ2V0QnVmZmVyKCkpO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlIFwidW5tYXNrZWR2YWx1ZVwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsICE9PSB1bmRlZmluZWQgJiYgYWN0aW9uT2JqLnZhbHVlID09PSB1bmRlZmluZWQgfHwgKHZhbHVlQnVmZmVyID0gYWN0aW9uT2JqLnZhbHVlLCBcclxuICAgICAgICAgICAgICAgIHZhbHVlQnVmZmVyID0gKCQuaXNGdW5jdGlvbihvcHRzLm9uQmVmb3JlTWFzaykgPyBvcHRzLm9uQmVmb3JlTWFzay5jYWxsKGlucHV0bWFzaywgdmFsdWVCdWZmZXIsIG9wdHMpIHx8IHZhbHVlQnVmZmVyIDogdmFsdWVCdWZmZXIpLnNwbGl0KFwiXCIpLCBcclxuICAgICAgICAgICAgICAgIGNoZWNrVmFsKHVuZGVmaW5lZCwgITEsICExLCBpc1JUTCA/IHZhbHVlQnVmZmVyLnJldmVyc2UoKSA6IHZhbHVlQnVmZmVyKSwgJC5pc0Z1bmN0aW9uKG9wdHMub25CZWZvcmVXcml0ZSkgJiYgb3B0cy5vbkJlZm9yZVdyaXRlLmNhbGwoaW5wdXRtYXNrLCB1bmRlZmluZWQsIGdldEJ1ZmZlcigpLCAwLCBvcHRzKSksIFxyXG4gICAgICAgICAgICAgICAgdW5tYXNrZWR2YWx1ZShlbCk7XHJcblxyXG4gICAgICAgICAgICAgIGNhc2UgXCJtYXNrXCI6XHJcbiAgICAgICAgICAgICAgICAhZnVuY3Rpb24oZWxlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub2ZmKGVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpc1N1cHBvcnRlZCA9IGZ1bmN0aW9uKGlucHV0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbGVtZW50VHlwZSA9IGlucHV0LmdldEF0dHJpYnV0ZShcInR5cGVcIiksIGlzU3VwcG9ydGVkID0gXCJJTlBVVFwiID09PSBpbnB1dC50YWdOYW1lICYmIC0xICE9PSAkLmluQXJyYXkoZWxlbWVudFR5cGUsIG9wdHMuc3VwcG9ydHNJbnB1dFR5cGUpIHx8IGlucHV0LmlzQ29udGVudEVkaXRhYmxlIHx8IFwiVEVYVEFSRUFcIiA9PT0gaW5wdXQudGFnTmFtZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1N1cHBvcnRlZCkgaWYgKFwiSU5QVVRcIiA9PT0gaW5wdXQudGFnTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBlbGVtZW50VHlwZSksIGlzU3VwcG9ydGVkID0gXCJ0ZXh0XCIgPT09IGVsLnR5cGUsIGVsID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlzU3VwcG9ydGVkID0gXCJwYXJ0aWFsXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhMSAhPT0gaXNTdXBwb3J0ZWQgPyBmdW5jdGlvbihucHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldHRlcigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pbnB1dG1hc2sgPyB0aGlzLmlucHV0bWFzay5vcHRzLmF1dG9Vbm1hc2sgPyB0aGlzLmlucHV0bWFzay51bm1hc2tlZHZhbHVlKCkgOiAtMSAhPT0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSB8fCAhMCAhPT0gb3B0cy5udWxsYWJsZSA/IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IHRoaXMgJiYgb3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cyA/IChpc1JUTCA/IGNsZWFyT3B0aW9uYWxUYWlsKGdldEJ1ZmZlcigpLnNsaWNlKCkpLnJldmVyc2UoKSA6IGNsZWFyT3B0aW9uYWxUYWlsKGdldEJ1ZmZlcigpLnNsaWNlKCkpKS5qb2luKFwiXCIpIDogdmFsdWVHZXQuY2FsbCh0aGlzKSA6IFwiXCIgOiB2YWx1ZUdldC5jYWxsKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gc2V0dGVyKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVTZXQuY2FsbCh0aGlzLCB2YWx1ZSksIHRoaXMuaW5wdXRtYXNrICYmICQodGhpcykudHJpZ2dlcihcInNldHZhbHVlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlR2V0LCB2YWx1ZVNldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbnB0LmlucHV0bWFzay5fX3ZhbHVlR2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwICE9PSBvcHRzLm5vVmFsdWVQYXRjaGluZykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmdW5jdGlvblwiICE9IHR5cGVvZiBPYmplY3QuZ2V0UHJvdG90eXBlT2YgJiYgKE9iamVjdC5nZXRQcm90b3R5cGVPZiA9IFwib2JqZWN0XCIgPT09IF90eXBlb2YoXCJ0ZXN0XCIuX19wcm90b19fKSA/IGZ1bmN0aW9uKG9iamVjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvYmplY3QuX19wcm90b19fO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSA6IGZ1bmN0aW9uKG9iamVjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvYmplY3QuY29uc3RydWN0b3IucHJvdG90eXBlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWVQcm9wZXJ0eSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0LmdldFByb3RvdHlwZU9mKG5wdCksIFwidmFsdWVcIikgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVByb3BlcnR5ICYmIHZhbHVlUHJvcGVydHkuZ2V0ICYmIHZhbHVlUHJvcGVydHkuc2V0ID8gKHZhbHVlR2V0ID0gdmFsdWVQcm9wZXJ0eS5nZXQsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVTZXQgPSB2YWx1ZVByb3BlcnR5LnNldCwgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5wdCwgXCJ2YWx1ZVwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0OiBnZXR0ZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0OiBzZXR0ZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiAhMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpIDogXCJJTlBVVFwiICE9PSBucHQudGFnTmFtZSAmJiAodmFsdWVHZXQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50ZXh0Q29udGVudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHZhbHVlU2V0ID0gZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBPYmplY3QuZGVmaW5lUHJvcGVydHkobnB0LCBcInZhbHVlXCIsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQ6IGdldHRlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXQ6IHNldHRlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6ICEwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBkb2N1bWVudC5fX2xvb2t1cEdldHRlcl9fICYmIG5wdC5fX2xvb2t1cEdldHRlcl9fKFwidmFsdWVcIikgJiYgKHZhbHVlR2V0ID0gbnB0Ll9fbG9va3VwR2V0dGVyX18oXCJ2YWx1ZVwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlU2V0ID0gbnB0Ll9fbG9va3VwU2V0dGVyX18oXCJ2YWx1ZVwiKSwgbnB0Ll9fZGVmaW5lR2V0dGVyX18oXCJ2YWx1ZVwiLCBnZXR0ZXIpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnB0Ll9fZGVmaW5lU2V0dGVyX18oXCJ2YWx1ZVwiLCBzZXR0ZXIpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnB0LmlucHV0bWFzay5fX3ZhbHVlR2V0ID0gdmFsdWVHZXQsIG5wdC5pbnB1dG1hc2suX192YWx1ZVNldCA9IHZhbHVlU2V0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBucHQuaW5wdXRtYXNrLl92YWx1ZUdldCA9IGZ1bmN0aW9uKG92ZXJydWxlUlRMKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1JUTCAmJiAhMCAhPT0gb3ZlcnJ1bGVSVEwgPyB2YWx1ZUdldC5jYWxsKHRoaXMuZWwpLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpIDogdmFsdWVHZXQuY2FsbCh0aGlzLmVsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBucHQuaW5wdXRtYXNrLl92YWx1ZVNldCA9IGZ1bmN0aW9uKHZhbHVlLCBvdmVycnVsZVJUTCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVNldC5jYWxsKHRoaXMuZWwsIG51bGwgPT09IHZhbHVlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgPyBcIlwiIDogITAgIT09IG92ZXJydWxlUlRMICYmIGlzUlRMID8gdmFsdWUuc3BsaXQoXCJcIikucmV2ZXJzZSgpLmpvaW4oXCJcIikgOiB2YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgdmFsdWVHZXQgPT09IHVuZGVmaW5lZCAmJiAodmFsdWVHZXQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgdmFsdWVTZXQgPSBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24odHlwZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJC52YWxIb29rcyAmJiAoJC52YWxIb29rc1t0eXBlXSA9PT0gdW5kZWZpbmVkIHx8ICEwICE9PSAkLnZhbEhvb2tzW3R5cGVdLmlucHV0bWFza3BhdGNoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbGhvb2tHZXQgPSAkLnZhbEhvb2tzW3R5cGVdICYmICQudmFsSG9va3NbdHlwZV0uZ2V0ID8gJC52YWxIb29rc1t0eXBlXS5nZXQgOiBmdW5jdGlvbihlbGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB2YWxob29rU2V0ID0gJC52YWxIb29rc1t0eXBlXSAmJiAkLnZhbEhvb2tzW3R5cGVdLnNldCA/ICQudmFsSG9va3NbdHlwZV0uc2V0IDogZnVuY3Rpb24oZWxlbSwgdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbS52YWx1ZSA9IHZhbHVlLCBlbGVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQudmFsSG9va3NbdHlwZV0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbihlbGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtLmlucHV0bWFzaykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW0uaW5wdXRtYXNrLm9wdHMuYXV0b1VubWFzaykgcmV0dXJuIGVsZW0uaW5wdXRtYXNrLnVubWFza2VkdmFsdWUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB2YWxob29rR2V0KGVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xICE9PSBnZXRMYXN0VmFsaWRQb3NpdGlvbih1bmRlZmluZWQsIHVuZGVmaW5lZCwgZWxlbS5pbnB1dG1hc2subWFza3NldC52YWxpZFBvc2l0aW9ucykgfHwgITAgIT09IG9wdHMubnVsbGFibGUgPyByZXN1bHQgOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWxob29rR2V0KGVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0OiBmdW5jdGlvbihlbGVtLCB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0LCAkZWxlbSA9ICQoZWxlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgPSB2YWxob29rU2V0KGVsZW0sIHZhbHVlKSwgZWxlbS5pbnB1dG1hc2sgJiYgJGVsZW0udHJpZ2dlcihcInNldHZhbHVlXCIpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXRtYXNrcGF0Y2g6ICEwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfShucHQudHlwZSksIGZ1bmN0aW9uKG5wdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9uKG5wdCwgXCJtb3VzZWVudGVyXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJGlucHV0ID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRtYXNrLl92YWx1ZUdldCgpICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpICYmICRpbnB1dC50cmlnZ2VyKFwic2V0dmFsdWVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0obnB0KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0oaW5wdXQpIDogaW5wdXQuaW5wdXRtYXNrID0gdW5kZWZpbmVkLCBpc1N1cHBvcnRlZDtcclxuICAgICAgICAgICAgICAgICAgICB9KGVsZW0sIG9wdHMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghMSAhPT0gaXNTdXBwb3J0ZWQgJiYgKGVsID0gZWxlbSwgJGVsID0gJChlbCksIC0xID09PSAobWF4TGVuZ3RoID0gZWwgIT09IHVuZGVmaW5lZCA/IGVsLm1heExlbmd0aCA6IHVuZGVmaW5lZCkgJiYgKG1heExlbmd0aCA9IHVuZGVmaW5lZCksIFxyXG4gICAgICAgICAgICAgICAgICAgICEwID09PSBvcHRzLmNvbG9yTWFzayAmJiBpbml0aWFsaXplQ29sb3JNYXNrKGVsKSwgYW5kcm9pZCAmJiAoZWwuaGFzT3duUHJvcGVydHkoXCJpbnB1dG1vZGVcIikgJiYgKGVsLmlucHV0bW9kZSA9IG9wdHMuaW5wdXRtb2RlLCBcclxuICAgICAgICAgICAgICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoXCJpbnB1dG1vZGVcIiwgb3B0cy5pbnB1dG1vZGUpKSwgXCJydGZtXCIgPT09IG9wdHMuYW5kcm9pZEhhY2sgJiYgKCEwICE9PSBvcHRzLmNvbG9yTWFzayAmJiBpbml0aWFsaXplQ29sb3JNYXNrKGVsKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgZWwudHlwZSA9IFwicGFzc3dvcmRcIikpLCAhMCA9PT0gaXNTdXBwb3J0ZWQgJiYgKEV2ZW50UnVsZXIub24oZWwsIFwic3VibWl0XCIsIEV2ZW50SGFuZGxlcnMuc3VibWl0RXZlbnQpLCBcclxuICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9uKGVsLCBcInJlc2V0XCIsIEV2ZW50SGFuZGxlcnMucmVzZXRFdmVudCksIEV2ZW50UnVsZXIub24oZWwsIFwibW91c2VlbnRlclwiLCBFdmVudEhhbmRsZXJzLm1vdXNlZW50ZXJFdmVudCksIFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiYmx1clwiLCBFdmVudEhhbmRsZXJzLmJsdXJFdmVudCksIEV2ZW50UnVsZXIub24oZWwsIFwiZm9jdXNcIiwgRXZlbnRIYW5kbGVycy5mb2N1c0V2ZW50KSwgXHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJtb3VzZWxlYXZlXCIsIEV2ZW50SGFuZGxlcnMubW91c2VsZWF2ZUV2ZW50KSwgITAgIT09IG9wdHMuY29sb3JNYXNrICYmIEV2ZW50UnVsZXIub24oZWwsIFwiY2xpY2tcIiwgRXZlbnRIYW5kbGVycy5jbGlja0V2ZW50KSwgXHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJkYmxjbGlja1wiLCBFdmVudEhhbmRsZXJzLmRibGNsaWNrRXZlbnQpLCBFdmVudFJ1bGVyLm9uKGVsLCBcInBhc3RlXCIsIEV2ZW50SGFuZGxlcnMucGFzdGVFdmVudCksIFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiZHJhZ2Ryb3BcIiwgRXZlbnRIYW5kbGVycy5wYXN0ZUV2ZW50KSwgRXZlbnRSdWxlci5vbihlbCwgXCJkcm9wXCIsIEV2ZW50SGFuZGxlcnMucGFzdGVFdmVudCksIFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiY3V0XCIsIEV2ZW50SGFuZGxlcnMuY3V0RXZlbnQpLCBFdmVudFJ1bGVyLm9uKGVsLCBcImNvbXBsZXRlXCIsIG9wdHMub25jb21wbGV0ZSksIFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiaW5jb21wbGV0ZVwiLCBvcHRzLm9uaW5jb21wbGV0ZSksIEV2ZW50UnVsZXIub24oZWwsIFwiY2xlYXJlZFwiLCBvcHRzLm9uY2xlYXJlZCksIFxyXG4gICAgICAgICAgICAgICAgICAgIGFuZHJvaWQgfHwgITAgPT09IG9wdHMuaW5wdXRFdmVudE9ubHkgPyBlbC5yZW1vdmVBdHRyaWJ1dGUoXCJtYXhMZW5ndGhcIikgOiAoRXZlbnRSdWxlci5vbihlbCwgXCJrZXlkb3duXCIsIEV2ZW50SGFuZGxlcnMua2V5ZG93bkV2ZW50KSwgXHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJrZXlwcmVzc1wiLCBFdmVudEhhbmRsZXJzLmtleXByZXNzRXZlbnQpKSwgRXZlbnRSdWxlci5vbihlbCwgXCJjb21wb3NpdGlvbnN0YXJ0XCIsICQubm9vcCksIFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiY29tcG9zaXRpb251cGRhdGVcIiwgJC5ub29wKSwgRXZlbnRSdWxlci5vbihlbCwgXCJjb21wb3NpdGlvbmVuZFwiLCAkLm5vb3ApLCBcclxuICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9uKGVsLCBcImtleXVwXCIsICQubm9vcCksIEV2ZW50UnVsZXIub24oZWwsIFwiaW5wdXRcIiwgRXZlbnRIYW5kbGVycy5pbnB1dEZhbGxCYWNrRXZlbnQpLCBcclxuICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9uKGVsLCBcImJlZm9yZWlucHV0XCIsICQubm9vcCkpLCBFdmVudFJ1bGVyLm9uKGVsLCBcInNldHZhbHVlXCIsIEV2ZW50SGFuZGxlcnMuc2V0VmFsdWVFdmVudCksIFxyXG4gICAgICAgICAgICAgICAgICAgIHVuZG9WYWx1ZSA9IGdldEJ1ZmZlclRlbXBsYXRlKCkuam9pbihcIlwiKSwgXCJcIiAhPT0gZWwuaW5wdXRtYXNrLl92YWx1ZUdldCghMCkgfHwgITEgPT09IG9wdHMuY2xlYXJNYXNrT25Mb3N0Rm9jdXMgfHwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gZWwpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbml0aWFsVmFsdWUgPSAkLmlzRnVuY3Rpb24ob3B0cy5vbkJlZm9yZU1hc2spID8gb3B0cy5vbkJlZm9yZU1hc2suY2FsbChpbnB1dG1hc2ssIGVsLmlucHV0bWFzay5fdmFsdWVHZXQoITApLCBvcHRzKSB8fCBlbC5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKSA6IGVsLmlucHV0bWFzay5fdmFsdWVHZXQoITApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlwiICE9PSBpbml0aWFsVmFsdWUgJiYgY2hlY2tWYWwoZWwsICEwLCAhMSwgaXNSVEwgPyBpbml0aWFsVmFsdWUuc3BsaXQoXCJcIikucmV2ZXJzZSgpIDogaW5pdGlhbFZhbHVlLnNwbGl0KFwiXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJ1ZmZlciA9IGdldEJ1ZmZlcigpLnNsaWNlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVuZG9WYWx1ZSA9IGJ1ZmZlci5qb2luKFwiXCIpLCAhMSA9PT0gaXNDb21wbGV0ZShidWZmZXIpICYmIG9wdHMuY2xlYXJJbmNvbXBsZXRlICYmIHJlc2V0TWFza1NldCgpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cyAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICE9PSBlbCAmJiAoLTEgPT09IGdldExhc3RWYWxpZFBvc2l0aW9uKCkgPyBidWZmZXIgPSBbXSA6IGNsZWFyT3B0aW9uYWxUYWlsKGJ1ZmZlcikpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIoZWwsIGJ1ZmZlciksIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGVsICYmIGNhcmV0KGVsLCBzZWVrTmV4dChnZXRMYXN0VmFsaWRQb3NpdGlvbigpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfShlbCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgY2FzZSBcImZvcm1hdFwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlQnVmZmVyID0gKCQuaXNGdW5jdGlvbihvcHRzLm9uQmVmb3JlTWFzaykgPyBvcHRzLm9uQmVmb3JlTWFzay5jYWxsKGlucHV0bWFzaywgYWN0aW9uT2JqLnZhbHVlLCBvcHRzKSB8fCBhY3Rpb25PYmoudmFsdWUgOiBhY3Rpb25PYmoudmFsdWUpLnNwbGl0KFwiXCIpLCBcclxuICAgICAgICAgICAgICAgIGNoZWNrVmFsKHVuZGVmaW5lZCwgITAsICExLCBpc1JUTCA/IHZhbHVlQnVmZmVyLnJldmVyc2UoKSA6IHZhbHVlQnVmZmVyKSwgYWN0aW9uT2JqLm1ldGFkYXRhID8ge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpc1JUTCA/IGdldEJ1ZmZlcigpLnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4oXCJcIikgOiBnZXRCdWZmZXIoKS5qb2luKFwiXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhOiBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogXCJnZXRtZXRhZGF0YVwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgbWFza3NldCwgb3B0cylcclxuICAgICAgICAgICAgICAgIH0gOiBpc1JUTCA/IGdldEJ1ZmZlcigpLnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4oXCJcIikgOiBnZXRCdWZmZXIoKS5qb2luKFwiXCIpO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlIFwiaXNWYWxpZFwiOlxyXG4gICAgICAgICAgICAgICAgYWN0aW9uT2JqLnZhbHVlID8gKHZhbHVlQnVmZmVyID0gYWN0aW9uT2JqLnZhbHVlLnNwbGl0KFwiXCIpLCBjaGVja1ZhbCh1bmRlZmluZWQsICEwLCAhMCwgaXNSVEwgPyB2YWx1ZUJ1ZmZlci5yZXZlcnNlKCkgOiB2YWx1ZUJ1ZmZlcikpIDogYWN0aW9uT2JqLnZhbHVlID0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGJ1ZmZlciA9IGdldEJ1ZmZlcigpLCBybCA9IGRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uKCksIGxtaWIgPSBidWZmZXIubGVuZ3RoIC0gMTsgbG1pYiA+IHJsICYmICFpc01hc2sobG1pYik7IGxtaWItLSkgO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJ1ZmZlci5zcGxpY2UocmwsIGxtaWIgKyAxIC0gcmwpLCBpc0NvbXBsZXRlKGJ1ZmZlcikgJiYgYWN0aW9uT2JqLnZhbHVlID09PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlIFwiZ2V0ZW1wdHltYXNrXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0QnVmZmVyVGVtcGxhdGUoKS5qb2luKFwiXCIpO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlIFwicmVtb3ZlXCI6XHJcbiAgICAgICAgICAgICAgICBpZiAoZWwgJiYgZWwuaW5wdXRtYXNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJGVsID0gJChlbCksIGVsLmlucHV0bWFzay5fdmFsdWVTZXQob3B0cy5hdXRvVW5tYXNrID8gdW5tYXNrZWR2YWx1ZShlbCkgOiBlbC5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKSksIFxyXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub2ZmKGVsKTtcclxuICAgICAgICAgICAgICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0LmdldFByb3RvdHlwZU9mKGVsKSwgXCJ2YWx1ZVwiKSAmJiBlbC5pbnB1dG1hc2suX192YWx1ZUdldCAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWwsIFwidmFsdWVcIiwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQ6IGVsLmlucHV0bWFzay5fX3ZhbHVlR2V0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQ6IGVsLmlucHV0bWFzay5fX3ZhbHVlU2V0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6ICEwXHJcbiAgICAgICAgICAgICAgICAgICAgfSkgOiBkb2N1bWVudC5fX2xvb2t1cEdldHRlcl9fICYmIGVsLl9fbG9va3VwR2V0dGVyX18oXCJ2YWx1ZVwiKSAmJiBlbC5pbnB1dG1hc2suX192YWx1ZUdldCAmJiAoZWwuX19kZWZpbmVHZXR0ZXJfXyhcInZhbHVlXCIsIGVsLmlucHV0bWFzay5fX3ZhbHVlR2V0KSwgXHJcbiAgICAgICAgICAgICAgICAgICAgZWwuX19kZWZpbmVTZXR0ZXJfXyhcInZhbHVlXCIsIGVsLmlucHV0bWFzay5fX3ZhbHVlU2V0KSksIGVsLmlucHV0bWFzayA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBlbDtcclxuXHJcbiAgICAgICAgICAgICAgY2FzZSBcImdldG1ldGFkYXRhXCI6XHJcbiAgICAgICAgICAgICAgICBpZiAoJC5pc0FycmF5KG1hc2tzZXQubWV0YWRhdGEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1hc2tUYXJnZXQgPSBnZXRNYXNrVGVtcGxhdGUoITAsIDAsICExKS5qb2luKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkLmVhY2gobWFza3NldC5tZXRhZGF0YSwgZnVuY3Rpb24obmR4LCBtdGR0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtdGR0Lm1hc2sgPT09IG1hc2tUYXJnZXQpIHJldHVybiBtYXNrVGFyZ2V0ID0gbXRkdCwgITE7XHJcbiAgICAgICAgICAgICAgICAgICAgfSksIG1hc2tUYXJnZXQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbWFza3NldC5tZXRhZGF0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50LCBtb2JpbGUgPSAvbW9iaWxlL2kudGVzdCh1YSksIGllbW9iaWxlID0gL2llbW9iaWxlL2kudGVzdCh1YSksIGlwaG9uZSA9IC9pcGhvbmUvaS50ZXN0KHVhKSAmJiAhaWVtb2JpbGUsIGFuZHJvaWQgPSAvYW5kcm9pZC9pLnRlc3QodWEpICYmICFpZW1vYmlsZTtcclxuICAgICAgICByZXR1cm4gSW5wdXRtYXNrLnByb3RvdHlwZSA9IHtcclxuICAgICAgICAgICAgZGF0YUF0dHJpYnV0ZTogXCJkYXRhLWlucHV0bWFza1wiLFxyXG4gICAgICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiX1wiLFxyXG4gICAgICAgICAgICAgICAgb3B0aW9uYWxtYXJrZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydDogXCJbXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZW5kOiBcIl1cIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHF1YW50aWZpZXJtYXJrZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydDogXCJ7XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZW5kOiBcIn1cIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGdyb3VwbWFya2VyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IFwiKFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGVuZDogXCIpXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBhbHRlcm5hdG9ybWFya2VyOiBcInxcIixcclxuICAgICAgICAgICAgICAgIGVzY2FwZUNoYXI6IFwiXFxcXFwiLFxyXG4gICAgICAgICAgICAgICAgbWFzazogbnVsbCxcclxuICAgICAgICAgICAgICAgIHJlZ2V4OiBudWxsLFxyXG4gICAgICAgICAgICAgICAgb25jb21wbGV0ZTogJC5ub29wLFxyXG4gICAgICAgICAgICAgICAgb25pbmNvbXBsZXRlOiAkLm5vb3AsXHJcbiAgICAgICAgICAgICAgICBvbmNsZWFyZWQ6ICQubm9vcCxcclxuICAgICAgICAgICAgICAgIHJlcGVhdDogMCxcclxuICAgICAgICAgICAgICAgIGdyZWVkeTogITAsXHJcbiAgICAgICAgICAgICAgICBhdXRvVW5tYXNrOiAhMSxcclxuICAgICAgICAgICAgICAgIHJlbW92ZU1hc2tPblN1Ym1pdDogITEsXHJcbiAgICAgICAgICAgICAgICBjbGVhck1hc2tPbkxvc3RGb2N1czogITAsXHJcbiAgICAgICAgICAgICAgICBpbnNlcnRNb2RlOiAhMCxcclxuICAgICAgICAgICAgICAgIGNsZWFySW5jb21wbGV0ZTogITEsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogbnVsbCxcclxuICAgICAgICAgICAgICAgIG9uS2V5RG93bjogJC5ub29wLFxyXG4gICAgICAgICAgICAgICAgb25CZWZvcmVNYXNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgb25CZWZvcmVQYXN0ZTogZnVuY3Rpb24ocGFzdGVkVmFsdWUsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJC5pc0Z1bmN0aW9uKG9wdHMub25CZWZvcmVNYXNrKSA/IG9wdHMub25CZWZvcmVNYXNrLmNhbGwodGhpcywgcGFzdGVkVmFsdWUsIG9wdHMpIDogcGFzdGVkVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgb25CZWZvcmVXcml0ZTogbnVsbCxcclxuICAgICAgICAgICAgICAgIG9uVW5NYXNrOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgc2hvd01hc2tPbkZvY3VzOiAhMCxcclxuICAgICAgICAgICAgICAgIHNob3dNYXNrT25Ib3ZlcjogITAsXHJcbiAgICAgICAgICAgICAgICBvbktleVZhbGlkYXRpb246ICQubm9vcCxcclxuICAgICAgICAgICAgICAgIHNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI6IFwiIFwiLFxyXG4gICAgICAgICAgICAgICAgbnVtZXJpY0lucHV0OiAhMSxcclxuICAgICAgICAgICAgICAgIHJpZ2h0QWxpZ246ICExLFxyXG4gICAgICAgICAgICAgICAgdW5kb09uRXNjYXBlOiAhMCxcclxuICAgICAgICAgICAgICAgIHJhZGl4UG9pbnQ6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICByYWRpeFBvaW50RGVmaW5pdGlvblN5bWJvbDogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICAgICAgZ3JvdXBTZXBhcmF0b3I6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBrZWVwU3RhdGljOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgcG9zaXRpb25DYXJldE9uVGFiOiAhMCxcclxuICAgICAgICAgICAgICAgIHRhYlRocm91Z2g6ICExLFxyXG4gICAgICAgICAgICAgICAgc3VwcG9ydHNJbnB1dFR5cGU6IFsgXCJ0ZXh0XCIsIFwidGVsXCIsIFwicGFzc3dvcmRcIiBdLFxyXG4gICAgICAgICAgICAgICAgaWdub3JhYmxlczogWyA4LCA5LCAxMywgMTksIDI3LCAzMywgMzQsIDM1LCAzNiwgMzcsIDM4LCAzOSwgNDAsIDQ1LCA0NiwgOTMsIDExMiwgMTEzLCAxMTQsIDExNSwgMTE2LCAxMTcsIDExOCwgMTE5LCAxMjAsIDEyMSwgMTIyLCAxMjMsIDAsIDIyOSBdLFxyXG4gICAgICAgICAgICAgICAgaXNDb21wbGV0ZTogbnVsbCxcclxuICAgICAgICAgICAgICAgIGNhbkNsZWFyUG9zaXRpb246ICQubm9vcCxcclxuICAgICAgICAgICAgICAgIHByZVZhbGlkYXRpb246IG51bGwsXHJcbiAgICAgICAgICAgICAgICBwb3N0VmFsaWRhdGlvbjogbnVsbCxcclxuICAgICAgICAgICAgICAgIHN0YXRpY0RlZmluaXRpb25TeW1ib2w6IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgICAgIGppdE1hc2tpbmc6ICExLFxyXG4gICAgICAgICAgICAgICAgbnVsbGFibGU6ICEwLFxyXG4gICAgICAgICAgICAgICAgaW5wdXRFdmVudE9ubHk6ICExLFxyXG4gICAgICAgICAgICAgICAgbm9WYWx1ZVBhdGNoaW5nOiAhMSxcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uQ2FyZXRPbkNsaWNrOiBcImx2cFwiLFxyXG4gICAgICAgICAgICAgICAgY2FzaW5nOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgaW5wdXRtb2RlOiBcInZlcmJhdGltXCIsXHJcbiAgICAgICAgICAgICAgICBjb2xvck1hc2s6ICExLFxyXG4gICAgICAgICAgICAgICAgYW5kcm9pZEhhY2s6ICExLFxyXG4gICAgICAgICAgICAgICAgaW1wb3J0RGF0YUF0dHJpYnV0ZXM6ICEwXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICBcIjlcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC0577yRLe+8mV1cIixcclxuICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMSxcclxuICAgICAgICAgICAgICAgICAgICBkZWZpbml0aW9uU3ltYm9sOiBcIipcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGE6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IFwiW0EtWmEtetCQLdGP0IHRkcOALcO/wrVdXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5pdGlvblN5bWJvbDogXCIqXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBcIipcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC0577yRLe+8mUEtWmEtetCQLdGP0IHRkcOALcO/wrVdXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDFcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYWxpYXNlczoge30sXHJcbiAgICAgICAgICAgIG1hc2tzQ2FjaGU6IHt9LFxyXG4gICAgICAgICAgICBtYXNrOiBmdW5jdGlvbihlbGVtcykge1xyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gaW1wb3J0QXR0cmlidXRlT3B0aW9ucyhucHQsIG9wdHMsIHVzZXJPcHRpb25zLCBkYXRhQXR0cmlidXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEwID09PSBvcHRzLmltcG9ydERhdGFBdHRyaWJ1dGVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvcHRpb24sIGRhdGFvcHRpb25zLCBvcHRpb25EYXRhLCBwLCBpbXBvcnRPcHRpb24gPSBmdW5jdGlvbihvcHRpb24sIG9wdGlvbkRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIT09IChvcHRpb25EYXRhID0gb3B0aW9uRGF0YSAhPT0gdW5kZWZpbmVkID8gb3B0aW9uRGF0YSA6IG5wdC5nZXRBdHRyaWJ1dGUoZGF0YUF0dHJpYnV0ZSArIFwiLVwiICsgb3B0aW9uKSkgJiYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIG9wdGlvbkRhdGEgJiYgKDAgPT09IG9wdGlvbi5pbmRleE9mKFwib25cIikgPyBvcHRpb25EYXRhID0gd2luZG93W29wdGlvbkRhdGFdIDogXCJmYWxzZVwiID09PSBvcHRpb25EYXRhID8gb3B0aW9uRGF0YSA9ICExIDogXCJ0cnVlXCIgPT09IG9wdGlvbkRhdGEgJiYgKG9wdGlvbkRhdGEgPSAhMCkpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJPcHRpb25zW29wdGlvbl0gPSBvcHRpb25EYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgYXR0ck9wdGlvbnMgPSBucHQuZ2V0QXR0cmlidXRlKGRhdGFBdHRyaWJ1dGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ck9wdGlvbnMgJiYgXCJcIiAhPT0gYXR0ck9wdGlvbnMgJiYgKGF0dHJPcHRpb25zID0gYXR0ck9wdGlvbnMucmVwbGFjZShuZXcgUmVnRXhwKFwiJ1wiLCBcImdcIiksICdcIicpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YW9wdGlvbnMgPSBKU09OLnBhcnNlKFwie1wiICsgYXR0ck9wdGlvbnMgKyBcIn1cIikpLCBkYXRhb3B0aW9ucykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uRGF0YSA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAocCBpbiBkYXRhb3B0aW9ucykgaWYgKFwiYWxpYXNcIiA9PT0gcC50b0xvd2VyQ2FzZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uRGF0YSA9IGRhdGFvcHRpb25zW3BdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGltcG9ydE9wdGlvbihcImFsaWFzXCIsIG9wdGlvbkRhdGEpLCB1c2VyT3B0aW9ucy5hbGlhcyAmJiByZXNvbHZlQWxpYXModXNlck9wdGlvbnMuYWxpYXMsIHVzZXJPcHRpb25zLCBvcHRzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChvcHRpb24gaW4gb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFvcHRpb25zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uRGF0YSA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHAgaW4gZGF0YW9wdGlvbnMpIGlmIChwLnRvTG93ZXJDYXNlKCkgPT09IG9wdGlvbi50b0xvd2VyQ2FzZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbkRhdGEgPSBkYXRhb3B0aW9uc1twXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1wb3J0T3B0aW9uKG9wdGlvbiwgb3B0aW9uRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQuZXh0ZW5kKCEwLCBvcHRzLCB1c2VyT3B0aW9ucyksIChcInJ0bFwiID09PSBucHQuZGlyIHx8IG9wdHMucmlnaHRBbGlnbikgJiYgKG5wdC5zdHlsZS50ZXh0QWxpZ24gPSBcInJpZ2h0XCIpLCBcclxuICAgICAgICAgICAgICAgICAgICAoXCJydGxcIiA9PT0gbnB0LmRpciB8fCBvcHRzLm51bWVyaWNJbnB1dCkgJiYgKG5wdC5kaXIgPSBcImx0clwiLCBucHQucmVtb3ZlQXR0cmlidXRlKFwiZGlyXCIpLCBcclxuICAgICAgICAgICAgICAgICAgICBvcHRzLmlzUlRMID0gITApLCBvcHRzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3RyaW5nXCIgPT0gdHlwZW9mIGVsZW1zICYmIChlbGVtcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW1zKSB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGVsZW1zKSksIFxyXG4gICAgICAgICAgICAgICAgZWxlbXMgPSBlbGVtcy5ub2RlTmFtZSA/IFsgZWxlbXMgXSA6IGVsZW1zLCAkLmVhY2goZWxlbXMsIGZ1bmN0aW9uKG5keCwgZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2NvcGVkT3B0cyA9ICQuZXh0ZW5kKCEwLCB7fSwgdGhhdC5vcHRzKTtcclxuICAgICAgICAgICAgICAgICAgICBpbXBvcnRBdHRyaWJ1dGVPcHRpb25zKGVsLCBzY29wZWRPcHRzLCAkLmV4dGVuZCghMCwge30sIHRoYXQudXNlck9wdGlvbnMpLCB0aGF0LmRhdGFBdHRyaWJ1dGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXNrc2V0ID0gZ2VuZXJhdGVNYXNrU2V0KHNjb3BlZE9wdHMsIHRoYXQubm9NYXNrc0NhY2hlKTtcclxuICAgICAgICAgICAgICAgICAgICBtYXNrc2V0ICE9PSB1bmRlZmluZWQgJiYgKGVsLmlucHV0bWFzayAhPT0gdW5kZWZpbmVkICYmIChlbC5pbnB1dG1hc2sub3B0cy5hdXRvVW5tYXNrID0gITAsIFxyXG4gICAgICAgICAgICAgICAgICAgIGVsLmlucHV0bWFzay5yZW1vdmUoKSksIGVsLmlucHV0bWFzayA9IG5ldyBJbnB1dG1hc2sodW5kZWZpbmVkLCB1bmRlZmluZWQsICEwKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgZWwuaW5wdXRtYXNrLm9wdHMgPSBzY29wZWRPcHRzLCBlbC5pbnB1dG1hc2subm9NYXNrc0NhY2hlID0gdGhhdC5ub01hc2tzQ2FjaGUsIGVsLmlucHV0bWFzay51c2VyT3B0aW9ucyA9ICQuZXh0ZW5kKCEwLCB7fSwgdGhhdC51c2VyT3B0aW9ucyksIFxyXG4gICAgICAgICAgICAgICAgICAgIGVsLmlucHV0bWFzay5pc1JUTCA9IHNjb3BlZE9wdHMuaXNSVEwgfHwgc2NvcGVkT3B0cy5udW1lcmljSW5wdXQsIGVsLmlucHV0bWFzay5lbCA9IGVsLCBcclxuICAgICAgICAgICAgICAgICAgICBlbC5pbnB1dG1hc2subWFza3NldCA9IG1hc2tzZXQsICQuZGF0YShlbCwgXCJfaW5wdXRtYXNrX29wdHNcIiwgc2NvcGVkT3B0cyksIG1hc2tTY29wZS5jYWxsKGVsLmlucHV0bWFzaywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb246IFwibWFza1wiXHJcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgfSksIGVsZW1zICYmIGVsZW1zWzBdID8gZWxlbXNbMF0uaW5wdXRtYXNrIHx8IHRoaXMgOiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBvcHRpb246IGZ1bmN0aW9uKG9wdGlvbnMsIG5vcmVtYXNrKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJzdHJpbmdcIiA9PSB0eXBlb2Ygb3B0aW9ucyA/IHRoaXMub3B0c1tvcHRpb25zXSA6IFwib2JqZWN0XCIgPT09ICh2b2lkIDAgPT09IG9wdGlvbnMgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihvcHRpb25zKSkgPyAoJC5leHRlbmQodGhpcy51c2VyT3B0aW9ucywgb3B0aW9ucyksIFxyXG4gICAgICAgICAgICAgICAgdGhpcy5lbCAmJiAhMCAhPT0gbm9yZW1hc2sgJiYgdGhpcy5tYXNrKHRoaXMuZWwpLCB0aGlzKSA6IHZvaWQgMDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdW5tYXNrZWR2YWx1ZTogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1hc2tzZXQgPSB0aGlzLm1hc2tzZXQgfHwgZ2VuZXJhdGVNYXNrU2V0KHRoaXMub3B0cywgdGhpcy5ub01hc2tzQ2FjaGUpLCBcclxuICAgICAgICAgICAgICAgIG1hc2tTY29wZS5jYWxsKHRoaXMsIHtcclxuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IFwidW5tYXNrZWR2YWx1ZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHJlbW92ZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbWFza1Njb3BlLmNhbGwodGhpcywge1xyXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogXCJyZW1vdmVcIlxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGdldGVtcHR5bWFzazogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYXNrc2V0ID0gdGhpcy5tYXNrc2V0IHx8IGdlbmVyYXRlTWFza1NldCh0aGlzLm9wdHMsIHRoaXMubm9NYXNrc0NhY2hlKSwgXHJcbiAgICAgICAgICAgICAgICBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBcImdldGVtcHR5bWFza1wiXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaGFzTWFza2VkVmFsdWU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICF0aGlzLm9wdHMuYXV0b1VubWFzaztcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaXNDb21wbGV0ZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYXNrc2V0ID0gdGhpcy5tYXNrc2V0IHx8IGdlbmVyYXRlTWFza1NldCh0aGlzLm9wdHMsIHRoaXMubm9NYXNrc0NhY2hlKSwgXHJcbiAgICAgICAgICAgICAgICBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBcImlzQ29tcGxldGVcIlxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGdldG1ldGFkYXRhOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1hc2tzZXQgPSB0aGlzLm1hc2tzZXQgfHwgZ2VuZXJhdGVNYXNrU2V0KHRoaXMub3B0cywgdGhpcy5ub01hc2tzQ2FjaGUpLCBcclxuICAgICAgICAgICAgICAgIG1hc2tTY29wZS5jYWxsKHRoaXMsIHtcclxuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IFwiZ2V0bWV0YWRhdGFcIlxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGlzVmFsaWQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYXNrc2V0ID0gdGhpcy5tYXNrc2V0IHx8IGdlbmVyYXRlTWFza1NldCh0aGlzLm9wdHMsIHRoaXMubm9NYXNrc0NhY2hlKSwgXHJcbiAgICAgICAgICAgICAgICBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBcImlzVmFsaWRcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBmb3JtYXQ6IGZ1bmN0aW9uKHZhbHVlLCBtZXRhZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFza3NldCA9IHRoaXMubWFza3NldCB8fCBnZW5lcmF0ZU1hc2tTZXQodGhpcy5vcHRzLCB0aGlzLm5vTWFza3NDYWNoZSksIFxyXG4gICAgICAgICAgICAgICAgbWFza1Njb3BlLmNhbGwodGhpcywge1xyXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogXCJmb3JtYXRcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGE6IG1ldGFkYXRhXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYW5hbHlzZU1hc2s6IGZ1bmN0aW9uKG1hc2ssIHJlZ2V4TWFzaywgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gTWFza1Rva2VuKGlzR3JvdXAsIGlzT3B0aW9uYWwsIGlzUXVhbnRpZmllciwgaXNBbHRlcm5hdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXRjaGVzID0gW10sIHRoaXMub3Blbkdyb3VwID0gaXNHcm91cCB8fCAhMSwgdGhpcy5hbHRlcm5hdG9yR3JvdXAgPSAhMSwgdGhpcy5pc0dyb3VwID0gaXNHcm91cCB8fCAhMSwgXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc09wdGlvbmFsID0gaXNPcHRpb25hbCB8fCAhMSwgdGhpcy5pc1F1YW50aWZpZXIgPSBpc1F1YW50aWZpZXIgfHwgITEsIHRoaXMuaXNBbHRlcm5hdG9yID0gaXNBbHRlcm5hdG9yIHx8ICExLCBcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnF1YW50aWZpZXIgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiAxXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGluc2VydFRlc3REZWZpbml0aW9uKG10b2tlbiwgZWxlbWVudCwgcG9zaXRpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uICE9PSB1bmRlZmluZWQgPyBwb3NpdGlvbiA6IG10b2tlbi5tYXRjaGVzLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcHJldk1hdGNoID0gbXRva2VuLm1hdGNoZXNbcG9zaXRpb24gLSAxXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVnZXhNYXNrKSAwID09PSBlbGVtZW50LmluZGV4T2YoXCJbXCIpIHx8IGVzY2FwZWQgJiYgL1xcXFxkfFxcXFxzfFxcXFx3XS9pLnRlc3QoZWxlbWVudCkgfHwgXCIuXCIgPT09IGVsZW1lbnQgPyBtdG9rZW4ubWF0Y2hlcy5zcGxpY2UocG9zaXRpb24rKywgMCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbjogbmV3IFJlZ0V4cChlbGVtZW50LCBvcHRzLmNhc2luZyA/IFwiaVwiIDogXCJcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25hbGl0eTogbXRva2VuLmlzT3B0aW9uYWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0Jsb2NrTWFya2VyOiBwcmV2TWF0Y2ggPT09IHVuZGVmaW5lZCB8fCBwcmV2TWF0Y2guZGVmICE9PSBlbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNpbmc6IG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZjogZWxlbWVudCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlRGVmOiBlbGVtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgfSkgOiAoZXNjYXBlZCAmJiAoZWxlbWVudCA9IGVsZW1lbnRbZWxlbWVudC5sZW5ndGggLSAxXSksICQuZWFjaChlbGVtZW50LnNwbGl0KFwiXCIpLCBmdW5jdGlvbihuZHgsIGxtbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldk1hdGNoID0gbXRva2VuLm1hdGNoZXNbcG9zaXRpb24gLSAxXSwgbXRva2VuLm1hdGNoZXMuc3BsaWNlKHBvc2l0aW9uKyssIDAsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZuOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25hbGl0eTogbXRva2VuLmlzT3B0aW9uYWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdCbG9ja01hcmtlcjogcHJldk1hdGNoID09PSB1bmRlZmluZWQgfHwgcHJldk1hdGNoLmRlZiAhPT0gbG1udCAmJiBudWxsICE9PSBwcmV2TWF0Y2guZm4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNpbmc6IG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWY6IG9wdHMuc3RhdGljRGVmaW5pdGlvblN5bWJvbCB8fCBsbW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IG9wdHMuc3RhdGljRGVmaW5pdGlvblN5bWJvbCAhPT0gdW5kZWZpbmVkID8gbG1udCA6IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZURlZjogbG1udFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9KSksIGVzY2FwZWQgPSAhMTsgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXNrZGVmID0gKG9wdHMuZGVmaW5pdGlvbnMgPyBvcHRzLmRlZmluaXRpb25zW2VsZW1lbnRdIDogdW5kZWZpbmVkKSB8fCBJbnB1dG1hc2sucHJvdG90eXBlLmRlZmluaXRpb25zW2VsZW1lbnRdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWFza2RlZiAmJiAhZXNjYXBlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcHJldmFsaWRhdG9ycyA9IG1hc2tkZWYucHJldmFsaWRhdG9yLCBwcmV2YWxpZGF0b3JzTCA9IHByZXZhbGlkYXRvcnMgPyBwcmV2YWxpZGF0b3JzLmxlbmd0aCA6IDAsIGkgPSAxOyBpIDwgbWFza2RlZi5jYXJkaW5hbGl0eTsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByZXZhbGlkYXRvciA9IHByZXZhbGlkYXRvcnNMID49IGkgPyBwcmV2YWxpZGF0b3JzW2kgLSAxXSA6IFtdLCB2YWxpZGF0b3IgPSBwcmV2YWxpZGF0b3IudmFsaWRhdG9yLCBjYXJkaW5hbGl0eSA9IHByZXZhbGlkYXRvci5jYXJkaW5hbGl0eTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdG9rZW4ubWF0Y2hlcy5zcGxpY2UocG9zaXRpb24rKywgMCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbjogdmFsaWRhdG9yID8gXCJzdHJpbmdcIiA9PSB0eXBlb2YgdmFsaWRhdG9yID8gbmV3IFJlZ0V4cCh2YWxpZGF0b3IsIG9wdHMuY2FzaW5nID8gXCJpXCIgOiBcIlwiKSA6IG5ldyBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGVzdCA9IHZhbGlkYXRvcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSgpIDogbmV3IFJlZ0V4cChcIi5cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiBjYXJkaW5hbGl0eSB8fCAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25hbGl0eTogbXRva2VuLmlzT3B0aW9uYWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0Jsb2NrTWFya2VyOiBwcmV2TWF0Y2ggPT09IHVuZGVmaW5lZCB8fCBwcmV2TWF0Y2guZGVmICE9PSAobWFza2RlZi5kZWZpbml0aW9uU3ltYm9sIHx8IGVsZW1lbnQpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNpbmc6IG1hc2tkZWYuY2FzaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWY6IG1hc2tkZWYuZGVmaW5pdGlvblN5bWJvbCB8fCBlbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogbWFza2RlZi5wbGFjZWhvbGRlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlRGVmOiBlbGVtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIHByZXZNYXRjaCA9IG10b2tlbi5tYXRjaGVzW3Bvc2l0aW9uIC0gMV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdG9rZW4ubWF0Y2hlcy5zcGxpY2UocG9zaXRpb24rKywgMCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZuOiBtYXNrZGVmLnZhbGlkYXRvciA/IFwic3RyaW5nXCIgPT0gdHlwZW9mIG1hc2tkZWYudmFsaWRhdG9yID8gbmV3IFJlZ0V4cChtYXNrZGVmLnZhbGlkYXRvciwgb3B0cy5jYXNpbmcgPyBcImlcIiA6IFwiXCIpIDogbmV3IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRlc3QgPSBtYXNrZGVmLnZhbGlkYXRvcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkgOiBuZXcgUmVnRXhwKFwiLlwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogbWFza2RlZi5jYXJkaW5hbGl0eSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25hbGl0eTogbXRva2VuLmlzT3B0aW9uYWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3QmxvY2tNYXJrZXI6IHByZXZNYXRjaCA9PT0gdW5kZWZpbmVkIHx8IHByZXZNYXRjaC5kZWYgIT09IChtYXNrZGVmLmRlZmluaXRpb25TeW1ib2wgfHwgZWxlbWVudCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzaW5nOiBtYXNrZGVmLmNhc2luZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWY6IG1hc2tkZWYuZGVmaW5pdGlvblN5bWJvbCB8fCBlbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBtYXNrZGVmLnBsYWNlaG9sZGVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZURlZjogZWxlbWVudFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBtdG9rZW4ubWF0Y2hlcy5zcGxpY2UocG9zaXRpb24rKywgMCwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsaXR5OiBtdG9rZW4uaXNPcHRpb25hbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0Jsb2NrTWFya2VyOiBwcmV2TWF0Y2ggPT09IHVuZGVmaW5lZCB8fCBwcmV2TWF0Y2guZGVmICE9PSBlbGVtZW50ICYmIG51bGwgIT09IHByZXZNYXRjaC5mbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2luZzogbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZjogb3B0cy5zdGF0aWNEZWZpbml0aW9uU3ltYm9sIHx8IGVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogb3B0cy5zdGF0aWNEZWZpbml0aW9uU3ltYm9sICE9PSB1bmRlZmluZWQgPyBlbGVtZW50IDogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlRGVmOiBlbGVtZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBlc2NhcGVkID0gITE7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gdmVyaWZ5R3JvdXBNYXJrZXIobWFza1Rva2VuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFza1Rva2VuICYmIG1hc2tUb2tlbi5tYXRjaGVzICYmICQuZWFjaChtYXNrVG9rZW4ubWF0Y2hlcywgZnVuY3Rpb24obmR4LCB0b2tlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dFRva2VuID0gbWFza1Rva2VuLm1hdGNoZXNbbmR4ICsgMV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChuZXh0VG9rZW4gPT09IHVuZGVmaW5lZCB8fCBuZXh0VG9rZW4ubWF0Y2hlcyA9PT0gdW5kZWZpbmVkIHx8ICExID09PSBuZXh0VG9rZW4uaXNRdWFudGlmaWVyKSAmJiB0b2tlbiAmJiB0b2tlbi5pc0dyb3VwICYmICh0b2tlbi5pc0dyb3VwID0gITEsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWdleE1hc2sgfHwgKGluc2VydFRlc3REZWZpbml0aW9uKHRva2VuLCBvcHRzLmdyb3VwbWFya2VyLnN0YXJ0LCAwKSwgITAgIT09IHRva2VuLm9wZW5Hcm91cCAmJiBpbnNlcnRUZXN0RGVmaW5pdGlvbih0b2tlbiwgb3B0cy5ncm91cG1hcmtlci5lbmQpKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2ZXJpZnlHcm91cE1hcmtlcih0b2tlbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBkZWZhdWx0Q2FzZSgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BlbmVuaW5ncy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50T3BlbmluZ1Rva2VuID0gb3BlbmVuaW5nc1tvcGVuZW5pbmdzLmxlbmd0aCAtIDFdLCBpbnNlcnRUZXN0RGVmaW5pdGlvbihjdXJyZW50T3BlbmluZ1Rva2VuLCBtKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRPcGVuaW5nVG9rZW4uaXNBbHRlcm5hdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHRlcm5hdG9yID0gb3BlbmVuaW5ncy5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG1uZHggPSAwOyBtbmR4IDwgYWx0ZXJuYXRvci5tYXRjaGVzLmxlbmd0aDsgbW5keCsrKSBhbHRlcm5hdG9yLm1hdGNoZXNbbW5keF0uaXNHcm91cCA9ICExO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlbmVuaW5ncy5sZW5ndGggPiAwID8gKGN1cnJlbnRPcGVuaW5nVG9rZW4gPSBvcGVuZW5pbmdzW29wZW5lbmluZ3MubGVuZ3RoIC0gMV0pLm1hdGNoZXMucHVzaChhbHRlcm5hdG9yKSA6IGN1cnJlbnRUb2tlbi5tYXRjaGVzLnB1c2goYWx0ZXJuYXRvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaW5zZXJ0VGVzdERlZmluaXRpb24oY3VycmVudFRva2VuLCBtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHJldmVyc2VUb2tlbnMobWFza1Rva2VuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFza1Rva2VuLm1hdGNoZXMgPSBtYXNrVG9rZW4ubWF0Y2hlcy5yZXZlcnNlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbWF0Y2ggaW4gbWFza1Rva2VuLm1hdGNoZXMpIGlmIChtYXNrVG9rZW4ubWF0Y2hlcy5oYXNPd25Qcm9wZXJ0eShtYXRjaCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGludE1hdGNoID0gcGFyc2VJbnQobWF0Y2gpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWFza1Rva2VuLm1hdGNoZXNbbWF0Y2hdLmlzUXVhbnRpZmllciAmJiBtYXNrVG9rZW4ubWF0Y2hlc1tpbnRNYXRjaCArIDFdICYmIG1hc2tUb2tlbi5tYXRjaGVzW2ludE1hdGNoICsgMV0uaXNHcm91cCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHF0ID0gbWFza1Rva2VuLm1hdGNoZXNbbWF0Y2hdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFza1Rva2VuLm1hdGNoZXMuc3BsaWNlKG1hdGNoLCAxKSwgbWFza1Rva2VuLm1hdGNoZXMuc3BsaWNlKGludE1hdGNoICsgMSwgMCwgcXQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hc2tUb2tlbi5tYXRjaGVzW21hdGNoXS5tYXRjaGVzICE9PSB1bmRlZmluZWQgPyBtYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0gPSByZXZlcnNlVG9rZW5zKG1hc2tUb2tlbi5tYXRjaGVzW21hdGNoXSkgOiBtYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0gPSBmdW5jdGlvbihzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0ID09PSBvcHRzLm9wdGlvbmFsbWFya2VyLnN0YXJ0ID8gc3QgPSBvcHRzLm9wdGlvbmFsbWFya2VyLmVuZCA6IHN0ID09PSBvcHRzLm9wdGlvbmFsbWFya2VyLmVuZCA/IHN0ID0gb3B0cy5vcHRpb25hbG1hcmtlci5zdGFydCA6IHN0ID09PSBvcHRzLmdyb3VwbWFya2VyLnN0YXJ0ID8gc3QgPSBvcHRzLmdyb3VwbWFya2VyLmVuZCA6IHN0ID09PSBvcHRzLmdyb3VwbWFya2VyLmVuZCAmJiAoc3QgPSBvcHRzLmdyb3VwbWFya2VyLnN0YXJ0KSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfShtYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFza1Rva2VuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoLCBtLCBvcGVuaW5nVG9rZW4sIGN1cnJlbnRPcGVuaW5nVG9rZW4sIGFsdGVybmF0b3IsIGxhc3RNYXRjaCwgZ3JvdXBUb2tlbiwgdG9rZW5pemVyID0gLyg/Ols/KitdfFxce1swLTlcXCtcXCpdKyg/OixbMC05XFwrXFwqXSopP1xcfSl8W14uPyorXiR7W10oKXxcXFxcXSt8Li9nLCByZWdleFRva2VuaXplciA9IC9cXFtcXF4/XT8oPzpbXlxcXFxcXF1dK3xcXFxcW1xcU1xcc10/KSpdP3xcXFxcKD86MCg/OlswLTNdWzAtN117MCwyfXxbNC03XVswLTddPyk/fFsxLTldWzAtOV0qfHhbMC05QS1GYS1mXXsyfXx1WzAtOUEtRmEtZl17NH18Y1tBLVphLXpdfFtcXFNcXHNdPyl8XFwoKD86XFw/Wzo9IV0/KT98KD86Wz8qK118XFx7WzAtOV0rKD86LFswLTldKik/XFx9KVxcPz98W14uPyorXiR7WygpfFxcXFxdK3wuL2csIGVzY2FwZWQgPSAhMSwgY3VycmVudFRva2VuID0gbmV3IE1hc2tUb2tlbigpLCBvcGVuZW5pbmdzID0gW10sIG1hc2tUb2tlbnMgPSBbXTtcclxuICAgICAgICAgICAgICAgIGZvciAocmVnZXhNYXNrICYmIChvcHRzLm9wdGlvbmFsbWFya2VyLnN0YXJ0ID0gdW5kZWZpbmVkLCBvcHRzLm9wdGlvbmFsbWFya2VyLmVuZCA9IHVuZGVmaW5lZCk7IG1hdGNoID0gcmVnZXhNYXNrID8gcmVnZXhUb2tlbml6ZXIuZXhlYyhtYXNrKSA6IHRva2VuaXplci5leGVjKG1hc2spOyApIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobSA9IG1hdGNoWzBdLCByZWdleE1hc2spIHN3aXRjaCAobS5jaGFyQXQoMCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCI/XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG0gPSBcInswLDF9XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCIrXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiKlwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtID0gXCJ7XCIgKyBtICsgXCJ9XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlc2NhcGVkKSBkZWZhdWx0Q2FzZSgpOyBlbHNlIHN3aXRjaCAobS5jaGFyQXQoMCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2Ugb3B0cy5lc2NhcGVDaGFyOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlc2NhcGVkID0gITAsIHJlZ2V4TWFzayAmJiBkZWZhdWx0Q2FzZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIG9wdHMub3B0aW9uYWxtYXJrZXIuZW5kOlxyXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBvcHRzLmdyb3VwbWFya2VyLmVuZDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wZW5pbmdUb2tlbiA9IG9wZW5lbmluZ3MucG9wKCksIG9wZW5pbmdUb2tlbi5vcGVuR3JvdXAgPSAhMSwgb3BlbmluZ1Rva2VuICE9PSB1bmRlZmluZWQpIGlmIChvcGVuZW5pbmdzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoY3VycmVudE9wZW5pbmdUb2tlbiA9IG9wZW5lbmluZ3Nbb3BlbmVuaW5ncy5sZW5ndGggLSAxXSkubWF0Y2hlcy5wdXNoKG9wZW5pbmdUb2tlbiksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE9wZW5pbmdUb2tlbi5pc0FsdGVybmF0b3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHRlcm5hdG9yID0gb3BlbmVuaW5ncy5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBtbmR4ID0gMDsgbW5keCA8IGFsdGVybmF0b3IubWF0Y2hlcy5sZW5ndGg7IG1uZHgrKykgYWx0ZXJuYXRvci5tYXRjaGVzW21uZHhdLmlzR3JvdXAgPSAhMSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0ZXJuYXRvci5tYXRjaGVzW21uZHhdLmFsdGVybmF0b3JHcm91cCA9ICExO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW5lbmluZ3MubGVuZ3RoID4gMCA/IChjdXJyZW50T3BlbmluZ1Rva2VuID0gb3BlbmVuaW5nc1tvcGVuZW5pbmdzLmxlbmd0aCAtIDFdKS5tYXRjaGVzLnB1c2goYWx0ZXJuYXRvcikgOiBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKGFsdGVybmF0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgY3VycmVudFRva2VuLm1hdGNoZXMucHVzaChvcGVuaW5nVG9rZW4pOyBlbHNlIGRlZmF1bHRDYXNlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2Ugb3B0cy5vcHRpb25hbG1hcmtlci5zdGFydDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3BlbmVuaW5ncy5wdXNoKG5ldyBNYXNrVG9rZW4oITEsICEwKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2Ugb3B0cy5ncm91cG1hcmtlci5zdGFydDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3BlbmVuaW5ncy5wdXNoKG5ldyBNYXNrVG9rZW4oITApKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBvcHRzLnF1YW50aWZpZXJtYXJrZXIuc3RhcnQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBxdWFudGlmaWVyID0gbmV3IE1hc2tUb2tlbighMSwgITEsICEwKSwgbXEgPSAobSA9IG0ucmVwbGFjZSgvW3t9XS9nLCBcIlwiKSkuc3BsaXQoXCIsXCIpLCBtcTAgPSBpc05hTihtcVswXSkgPyBtcVswXSA6IHBhcnNlSW50KG1xWzBdKSwgbXExID0gMSA9PT0gbXEubGVuZ3RoID8gbXEwIDogaXNOYU4obXFbMV0pID8gbXFbMV0gOiBwYXJzZUludChtcVsxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcIipcIiAhPT0gbXExICYmIFwiK1wiICE9PSBtcTEgfHwgKG1xMCA9IFwiKlwiID09PSBtcTEgPyAwIDogMSksIHF1YW50aWZpZXIucXVhbnRpZmllciA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogbXEwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiBtcTFcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgb3BlbmVuaW5ncy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IG9wZW5lbmluZ3Nbb3BlbmVuaW5ncy5sZW5ndGggLSAxXS5tYXRjaGVzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG1hdGNoID0gbWF0Y2hlcy5wb3AoKSkuaXNHcm91cCB8fCAoKGdyb3VwVG9rZW4gPSBuZXcgTWFza1Rva2VuKCEwKSkubWF0Y2hlcy5wdXNoKG1hdGNoKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaCA9IGdyb3VwVG9rZW4pLCBtYXRjaGVzLnB1c2gobWF0Y2gpLCBtYXRjaGVzLnB1c2gocXVhbnRpZmllcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSAobWF0Y2ggPSBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wb3AoKSkuaXNHcm91cCB8fCAocmVnZXhNYXNrICYmIG51bGwgPT09IG1hdGNoLmZuICYmIFwiLlwiID09PSBtYXRjaC5kZWYgJiYgKG1hdGNoLmZuID0gbmV3IFJlZ0V4cChtYXRjaC5kZWYsIG9wdHMuY2FzaW5nID8gXCJpXCIgOiBcIlwiKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoZ3JvdXBUb2tlbiA9IG5ldyBNYXNrVG9rZW4oITApKS5tYXRjaGVzLnB1c2gobWF0Y2gpLCBtYXRjaCA9IGdyb3VwVG9rZW4pLCBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKG1hdGNoKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUb2tlbi5tYXRjaGVzLnB1c2gocXVhbnRpZmllcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2Ugb3B0cy5hbHRlcm5hdG9ybWFya2VyOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob3BlbmVuaW5ncy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3ViVG9rZW4gPSAoY3VycmVudE9wZW5pbmdUb2tlbiA9IG9wZW5lbmluZ3Nbb3BlbmVuaW5ncy5sZW5ndGggLSAxXSkubWF0Y2hlc1tjdXJyZW50T3BlbmluZ1Rva2VuLm1hdGNoZXMubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0TWF0Y2ggPSBjdXJyZW50T3BlbmluZ1Rva2VuLm9wZW5Hcm91cCAmJiAoc3ViVG9rZW4ubWF0Y2hlcyA9PT0gdW5kZWZpbmVkIHx8ICExID09PSBzdWJUb2tlbi5pc0dyb3VwICYmICExID09PSBzdWJUb2tlbi5pc0FsdGVybmF0b3IpID8gb3BlbmVuaW5ncy5wb3AoKSA6IGN1cnJlbnRPcGVuaW5nVG9rZW4ubWF0Y2hlcy5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGxhc3RNYXRjaCA9IGN1cnJlbnRUb2tlbi5tYXRjaGVzLnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobGFzdE1hdGNoLmlzQWx0ZXJuYXRvcikgb3BlbmVuaW5ncy5wdXNoKGxhc3RNYXRjaCk7IGVsc2UgaWYgKGxhc3RNYXRjaC5hbHRlcm5hdG9yR3JvdXAgPyAoYWx0ZXJuYXRvciA9IG9wZW5lbmluZ3MucG9wKCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXN0TWF0Y2guYWx0ZXJuYXRvckdyb3VwID0gITEpIDogYWx0ZXJuYXRvciA9IG5ldyBNYXNrVG9rZW4oITEsICExLCAhMSwgITApLCBhbHRlcm5hdG9yLm1hdGNoZXMucHVzaChsYXN0TWF0Y2gpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3BlbmVuaW5ncy5wdXNoKGFsdGVybmF0b3IpLCBsYXN0TWF0Y2gub3Blbkdyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0TWF0Y2gub3Blbkdyb3VwID0gITE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWx0ZXJuYXRvckdyb3VwID0gbmV3IE1hc2tUb2tlbighMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHRlcm5hdG9yR3JvdXAuYWx0ZXJuYXRvckdyb3VwID0gITAsIG9wZW5lbmluZ3MucHVzaChhbHRlcm5hdG9yR3JvdXApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRDYXNlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZm9yICg7b3BlbmVuaW5ncy5sZW5ndGggPiAwOyApIG9wZW5pbmdUb2tlbiA9IG9wZW5lbmluZ3MucG9wKCksIGN1cnJlbnRUb2tlbi5tYXRjaGVzLnB1c2gob3BlbmluZ1Rva2VuKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50VG9rZW4ubWF0Y2hlcy5sZW5ndGggPiAwICYmICh2ZXJpZnlHcm91cE1hcmtlcihjdXJyZW50VG9rZW4pLCBtYXNrVG9rZW5zLnB1c2goY3VycmVudFRva2VuKSksIFxyXG4gICAgICAgICAgICAgICAgKG9wdHMubnVtZXJpY0lucHV0IHx8IG9wdHMuaXNSVEwpICYmIHJldmVyc2VUb2tlbnMobWFza1Rva2Vuc1swXSksIG1hc2tUb2tlbnM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCBJbnB1dG1hc2suZXh0ZW5kRGVmYXVsdHMgPSBmdW5jdGlvbihvcHRpb25zKSB7XHJcbiAgICAgICAgICAgICQuZXh0ZW5kKCEwLCBJbnB1dG1hc2sucHJvdG90eXBlLmRlZmF1bHRzLCBvcHRpb25zKTtcclxuICAgICAgICB9LCBJbnB1dG1hc2suZXh0ZW5kRGVmaW5pdGlvbnMgPSBmdW5jdGlvbihkZWZpbml0aW9uKSB7XHJcbiAgICAgICAgICAgICQuZXh0ZW5kKCEwLCBJbnB1dG1hc2sucHJvdG90eXBlLmRlZmluaXRpb25zLCBkZWZpbml0aW9uKTtcclxuICAgICAgICB9LCBJbnB1dG1hc2suZXh0ZW5kQWxpYXNlcyA9IGZ1bmN0aW9uKGFsaWFzKSB7XHJcbiAgICAgICAgICAgICQuZXh0ZW5kKCEwLCBJbnB1dG1hc2sucHJvdG90eXBlLmFsaWFzZXMsIGFsaWFzKTtcclxuICAgICAgICB9LCBJbnB1dG1hc2suZm9ybWF0ID0gZnVuY3Rpb24odmFsdWUsIG9wdGlvbnMsIG1ldGFkYXRhKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBJbnB1dG1hc2sob3B0aW9ucykuZm9ybWF0KHZhbHVlLCBtZXRhZGF0YSk7XHJcbiAgICAgICAgfSwgSW5wdXRtYXNrLnVubWFzayA9IGZ1bmN0aW9uKHZhbHVlLCBvcHRpb25zKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBJbnB1dG1hc2sob3B0aW9ucykudW5tYXNrZWR2YWx1ZSh2YWx1ZSk7XHJcbiAgICAgICAgfSwgSW5wdXRtYXNrLmlzVmFsaWQgPSBmdW5jdGlvbih2YWx1ZSwgb3B0aW9ucykge1xyXG4gICAgICAgICAgICByZXR1cm4gSW5wdXRtYXNrKG9wdGlvbnMpLmlzVmFsaWQodmFsdWUpO1xyXG4gICAgICAgIH0sIElucHV0bWFzay5yZW1vdmUgPSBmdW5jdGlvbihlbGVtcykge1xyXG4gICAgICAgICAgICAkLmVhY2goZWxlbXMsIGZ1bmN0aW9uKG5keCwgZWwpIHtcclxuICAgICAgICAgICAgICAgIGVsLmlucHV0bWFzayAmJiBlbC5pbnB1dG1hc2sucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sIElucHV0bWFzay5lc2NhcGVSZWdleCA9IGZ1bmN0aW9uKHN0cikge1xyXG4gICAgICAgICAgICB2YXIgc3BlY2lhbHMgPSBbIFwiL1wiLCBcIi5cIiwgXCIqXCIsIFwiK1wiLCBcIj9cIiwgXCJ8XCIsIFwiKFwiLCBcIilcIiwgXCJbXCIsIFwiXVwiLCBcIntcIiwgXCJ9XCIsIFwiXFxcXFwiLCBcIiRcIiwgXCJeXCIgXTtcclxuICAgICAgICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKG5ldyBSZWdFeHAoXCIoXFxcXFwiICsgc3BlY2lhbHMuam9pbihcInxcXFxcXCIpICsgXCIpXCIsIFwiZ2ltXCIpLCBcIlxcXFwkMVwiKTtcclxuICAgICAgICB9LCBJbnB1dG1hc2sua2V5Q29kZSA9IHtcclxuICAgICAgICAgICAgQUxUOiAxOCxcclxuICAgICAgICAgICAgQkFDS1NQQUNFOiA4LFxyXG4gICAgICAgICAgICBCQUNLU1BBQ0VfU0FGQVJJOiAxMjcsXHJcbiAgICAgICAgICAgIENBUFNfTE9DSzogMjAsXHJcbiAgICAgICAgICAgIENPTU1BOiAxODgsXHJcbiAgICAgICAgICAgIENPTU1BTkQ6IDkxLFxyXG4gICAgICAgICAgICBDT01NQU5EX0xFRlQ6IDkxLFxyXG4gICAgICAgICAgICBDT01NQU5EX1JJR0hUOiA5MyxcclxuICAgICAgICAgICAgQ09OVFJPTDogMTcsXHJcbiAgICAgICAgICAgIERFTEVURTogNDYsXHJcbiAgICAgICAgICAgIERPV046IDQwLFxyXG4gICAgICAgICAgICBFTkQ6IDM1LFxyXG4gICAgICAgICAgICBFTlRFUjogMTMsXHJcbiAgICAgICAgICAgIEVTQ0FQRTogMjcsXHJcbiAgICAgICAgICAgIEhPTUU6IDM2LFxyXG4gICAgICAgICAgICBJTlNFUlQ6IDQ1LFxyXG4gICAgICAgICAgICBMRUZUOiAzNyxcclxuICAgICAgICAgICAgTUVOVTogOTMsXHJcbiAgICAgICAgICAgIE5VTVBBRF9BREQ6IDEwNyxcclxuICAgICAgICAgICAgTlVNUEFEX0RFQ0lNQUw6IDExMCxcclxuICAgICAgICAgICAgTlVNUEFEX0RJVklERTogMTExLFxyXG4gICAgICAgICAgICBOVU1QQURfRU5URVI6IDEwOCxcclxuICAgICAgICAgICAgTlVNUEFEX01VTFRJUExZOiAxMDYsXHJcbiAgICAgICAgICAgIE5VTVBBRF9TVUJUUkFDVDogMTA5LFxyXG4gICAgICAgICAgICBQQUdFX0RPV046IDM0LFxyXG4gICAgICAgICAgICBQQUdFX1VQOiAzMyxcclxuICAgICAgICAgICAgUEVSSU9EOiAxOTAsXHJcbiAgICAgICAgICAgIFJJR0hUOiAzOSxcclxuICAgICAgICAgICAgU0hJRlQ6IDE2LFxyXG4gICAgICAgICAgICBTUEFDRTogMzIsXHJcbiAgICAgICAgICAgIFRBQjogOSxcclxuICAgICAgICAgICAgVVA6IDM4LFxyXG4gICAgICAgICAgICBXSU5ET1dTOiA5MSxcclxuICAgICAgICAgICAgWDogODhcclxuICAgICAgICB9LCBJbnB1dG1hc2s7XHJcbiAgICB9KTtcclxufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGpRdWVyeTtcclxufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuICAgIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XHJcbiAgICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogb2JqXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIF9fd2VicGFja19yZXF1aXJlX18oNCksIF9fd2VicGFja19yZXF1aXJlX18oOSksIF9fd2VicGFja19yZXF1aXJlX18oMTIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKSwgXHJcbiAgICBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0KSwgX193ZWJwYWNrX3JlcXVpcmVfXygxNSk7XHJcbiAgICB2YXIgX2lucHV0bWFzazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oMSkpLCBfaW5wdXRtYXNrNCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygwKSksIF9qcXVlcnkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDIpKTtcclxuICAgIF9pbnB1dG1hc2s0LmRlZmF1bHQgPT09IF9qcXVlcnkyLmRlZmF1bHQgJiYgX193ZWJwYWNrX3JlcXVpcmVfXygxNiksIHdpbmRvdy5JbnB1dG1hc2sgPSBfaW5wdXRtYXNrMi5kZWZhdWx0O1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuICAgIHZhciBjb250ZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KTtcclxuICAgIFwic3RyaW5nXCIgPT0gdHlwZW9mIGNvbnRlbnQgJiYgKGNvbnRlbnQgPSBbIFsgbW9kdWxlLmksIGNvbnRlbnQsIFwiXCIgXSBdKTtcclxuICAgIHZhciBvcHRpb25zID0ge1xyXG4gICAgICAgIGhtcjogITBcclxuICAgIH07XHJcbiAgICBvcHRpb25zLnRyYW5zZm9ybSA9IHZvaWQgMDtcclxuICAgIF9fd2VicGFja19yZXF1aXJlX18oNykoY29udGVudCwgb3B0aW9ucyk7XHJcbiAgICBjb250ZW50LmxvY2FscyAmJiAobW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscyk7XHJcbn0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xyXG4gICAgKG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KSh2b2lkIDApKS5wdXNoKFsgbW9kdWxlLmksIFwic3Bhbi5pbS1jYXJldCB7XFxyXFxuICAgIC13ZWJraXQtYW5pbWF0aW9uOiAxcyBibGluayBzdGVwLWVuZCBpbmZpbml0ZTtcXHJcXG4gICAgYW5pbWF0aW9uOiAxcyBibGluayBzdGVwLWVuZCBpbmZpbml0ZTtcXHJcXG59XFxyXFxuXFxyXFxuQGtleWZyYW1lcyBibGluayB7XFxyXFxuICAgIGZyb20sIHRvIHtcXHJcXG4gICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogYmxhY2s7XFxyXFxuICAgIH1cXHJcXG4gICAgNTAlIHtcXHJcXG4gICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXFxyXFxuQC13ZWJraXQta2V5ZnJhbWVzIGJsaW5rIHtcXHJcXG4gICAgZnJvbSwgdG8ge1xcclxcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBibGFjaztcXHJcXG4gICAgfVxcclxcbiAgICA1MCUge1xcclxcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cXHJcXG5zcGFuLmltLXN0YXRpYyB7XFxyXFxuICAgIGNvbG9yOiBncmV5O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuaW0tY29sb3JtYXNrIHtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICBib3JkZXItc3R5bGU6IGluc2V0O1xcclxcbiAgICBib3JkZXItd2lkdGg6IDJweDtcXHJcXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XFxyXFxuICAgIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xcclxcbiAgICBhcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XFxyXFxufVxcclxcblxcclxcbmRpdi5pbS1jb2xvcm1hc2sgPiBpbnB1dCB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGNhcmV0O1xcclxcbiAgICAtbW96LWFwcGVhcmFuY2U6IGNhcmV0O1xcclxcbiAgICBhcHBlYXJhbmNlOiBjYXJldDtcXHJcXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xcclxcbiAgICBsZWZ0OiAwOyAvKmNhbGN1bGF0ZWQqL1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuaW0tY29sb3JtYXNrID4gaW5wdXQ6Zm9jdXMge1xcclxcbiAgICBvdXRsaW5lOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuaW0tY29sb3JtYXNrID4gaW5wdXQ6Oi1tb3otc2VsZWN0aW9ue1xcclxcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuaW0tY29sb3JtYXNrID4gaW5wdXQ6OnNlbGVjdGlvbntcXHJcXG4gICAgYmFja2dyb3VuZDogbm9uZTtcXHJcXG59XFxyXFxuZGl2LmltLWNvbG9ybWFzayA+IGlucHV0OjotbW96LXNlbGVjdGlvbntcXHJcXG4gICAgYmFja2dyb3VuZDogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LmltLWNvbG9ybWFzayA+IGRpdiB7XFxyXFxuICAgIGNvbG9yOiBibGFjaztcXHJcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICB3aWR0aDogMTAwcHg7IC8qY2FsY3VsYXRlZCovXFxyXFxufVwiLCBcIlwiIF0pO1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcclxuICAgIGZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XHJcbiAgICAgICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8IFwiXCIsIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xyXG4gICAgICAgIGlmICghY3NzTWFwcGluZykgcmV0dXJuIGNvbnRlbnQ7XHJcbiAgICAgICAgaWYgKHVzZVNvdXJjZU1hcCAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGJ0b2EpIHtcclxuICAgICAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyksIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uKHNvdXJjZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIiArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArIFwiICovXCI7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gWyBjb250ZW50IF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbIHNvdXJjZU1hcHBpbmcgXSkuam9pbihcIlxcblwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFsgY29udGVudCBdLmpvaW4oXCJcXG5cIik7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiLyojIFwiICsgKFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpKSArIFwiICovXCI7XHJcbiAgICB9XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xyXG4gICAgICAgIHZhciBsaXN0ID0gW107XHJcbiAgICAgICAgcmV0dXJuIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW1bMl0gPyBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIiA6IGNvbnRlbnQ7XHJcbiAgICAgICAgICAgIH0pLmpvaW4oXCJcIik7XHJcbiAgICAgICAgfSwgbGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG4gICAgICAgICAgICBcInN0cmluZ1wiID09IHR5cGVvZiBtb2R1bGVzICYmIChtb2R1bGVzID0gWyBbIG51bGwsIG1vZHVsZXMsIFwiXCIgXSBdKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9LCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XHJcbiAgICAgICAgICAgICAgICBcIm51bWJlclwiID09IHR5cGVvZiBpZCAmJiAoYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSAhMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tpXTtcclxuICAgICAgICAgICAgICAgIFwibnVtYmVyXCIgPT0gdHlwZW9mIGl0ZW1bMF0gJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSB8fCAobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSA/IGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5IDogbWVkaWFRdWVyeSAmJiAoaXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiKSwgXHJcbiAgICAgICAgICAgICAgICBsaXN0LnB1c2goaXRlbSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgbGlzdDtcclxuICAgIH07XHJcbn0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xyXG4gICAgZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGl0ZW0gPSBzdHlsZXNbaV0sIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XHJcbiAgICAgICAgICAgIGlmIChkb21TdHlsZSkge1xyXG4gICAgICAgICAgICAgICAgZG9tU3R5bGUucmVmcysrO1xyXG4gICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcclxuICAgICAgICAgICAgICAgIGZvciAoO2ogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIHBhcnRzID0gW10sIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykgcGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XHJcbiAgICAgICAgICAgICAgICBzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBpZDogaXRlbS5pZCxcclxuICAgICAgICAgICAgICAgICAgICByZWZzOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIHBhcnRzOiBwYXJ0c1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKSB7XHJcbiAgICAgICAgZm9yICh2YXIgc3R5bGVzID0gW10sIG5ld1N0eWxlcyA9IHt9LCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGl0ZW0gPSBsaXN0W2ldLCBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdLCBwYXJ0ID0ge1xyXG4gICAgICAgICAgICAgICAgY3NzOiBpdGVtWzFdLFxyXG4gICAgICAgICAgICAgICAgbWVkaWE6IGl0ZW1bMl0sXHJcbiAgICAgICAgICAgICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgbmV3U3R5bGVzW2lkXSA/IG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KSA6IHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7XHJcbiAgICAgICAgICAgICAgICBpZDogaWQsXHJcbiAgICAgICAgICAgICAgICBwYXJ0czogWyBwYXJ0IF1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzdHlsZXM7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpIHtcclxuICAgICAgICB2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pO1xyXG4gICAgICAgIGlmICghdGFyZ2V0KSB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcclxuICAgICAgICB2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgaWYgKFwidG9wXCIgPT09IG9wdGlvbnMuaW5zZXJ0QXQpIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID8gbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcgPyB0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykgOiB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpIDogdGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpLCBcclxuICAgICAgICBzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpOyBlbHNlIGlmIChcImJvdHRvbVwiID09PSBvcHRpb25zLmluc2VydEF0KSB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpOyBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKFwib2JqZWN0XCIgIT0gdHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgfHwgIW9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcclxuICAgICAgICAgICAgdmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8gKyBcIiBcIiArIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKTtcclxuICAgICAgICAgICAgdGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xyXG4gICAgICAgIGlmIChudWxsID09PSBzdHlsZS5wYXJlbnROb2RlKSByZXR1cm4gITE7XHJcbiAgICAgICAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XHJcbiAgICAgICAgdmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XHJcbiAgICAgICAgaWR4ID49IDAgJiYgc3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xyXG4gICAgICAgIHJldHVybiBvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCIsIGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKSwgaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKSwgXHJcbiAgICAgICAgc3R5bGU7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcclxuICAgICAgICByZXR1cm4gb3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiLCBvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiLCBhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKSwgXHJcbiAgICAgICAgaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspLCBsaW5rO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gYWRkQXR0cnMoZWwsIGF0dHJzKSB7XHJcbiAgICAgICAgT2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XHJcbiAgICAgICAgICAgIGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xyXG4gICAgICAgIGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XHJcbiAgICAgICAgICAgIGlmICghKHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpKSkgcmV0dXJuIGZ1bmN0aW9uKCkge307XHJcbiAgICAgICAgICAgIG9iai5jc3MgPSByZXN1bHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xyXG4gICAgICAgICAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcclxuICAgICAgICAgICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSksIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgITEpLCBcclxuICAgICAgICAgICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCAhMCk7XHJcbiAgICAgICAgfSBlbHNlIG9iai5zb3VyY2VNYXAgJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBVUkwgJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIEJsb2IgJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBidG9hID8gKHN0eWxlID0gY3JlYXRlTGlua0VsZW1lbnQob3B0aW9ucyksIFxyXG4gICAgICAgIHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyksIHJlbW92ZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpLCBzdHlsZS5ocmVmICYmIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XHJcbiAgICAgICAgfSkgOiAoc3R5bGUgPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucyksIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSksIFxyXG4gICAgICAgIHJlbW92ZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB1cGRhdGUob2JqKSwgZnVuY3Rpb24obmV3T2JqKSB7XHJcbiAgICAgICAgICAgIGlmIChuZXdPYmopIHtcclxuICAgICAgICAgICAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHJldHVybjtcclxuICAgICAgICAgICAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xyXG4gICAgICAgICAgICB9IGVsc2UgcmVtb3ZlKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xyXG4gICAgICAgIHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcclxuICAgICAgICBpZiAoc3R5bGUuc3R5bGVTaGVldCkgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyksIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xyXG4gICAgICAgICAgICBjaGlsZE5vZGVzW2luZGV4XSAmJiBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSksIGNoaWxkTm9kZXMubGVuZ3RoID8gc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKSA6IHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9iaikge1xyXG4gICAgICAgIHZhciBjc3MgPSBvYmouY3NzLCBtZWRpYSA9IG9iai5tZWRpYTtcclxuICAgICAgICBpZiAobWVkaWEgJiYgc3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpLCBzdHlsZS5zdHlsZVNoZWV0KSBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7IGVsc2Uge1xyXG4gICAgICAgICAgICBmb3IgKDtzdHlsZS5maXJzdENoaWxkOyApIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xyXG4gICAgICAgICAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVMaW5rKGxpbmssIG9wdGlvbnMsIG9iaikge1xyXG4gICAgICAgIHZhciBjc3MgPSBvYmouY3NzLCBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwLCBhdXRvRml4VXJscyA9IHZvaWQgMCA9PT0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgJiYgc291cmNlTWFwO1xyXG4gICAgICAgIChvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyB8fCBhdXRvRml4VXJscykgJiYgKGNzcyA9IGZpeFVybHMoY3NzKSksIHNvdXJjZU1hcCAmJiAoY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiKTtcclxuICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFsgY3NzIF0sIHtcclxuICAgICAgICAgICAgdHlwZTogXCJ0ZXh0L2Nzc1wiXHJcbiAgICAgICAgfSksIG9sZFNyYyA9IGxpbmsuaHJlZjtcclxuICAgICAgICBsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpLCBvbGRTcmMgJiYgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xyXG4gICAgfVxyXG4gICAgdmFyIHN0eWxlc0luRG9tID0ge30sIGlzT2xkSUUgPSBmdW5jdGlvbihmbikge1xyXG4gICAgICAgIHZhciBtZW1vO1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHZvaWQgMCA9PT0gbWVtbyAmJiAobWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCBtZW1vO1xyXG4gICAgICAgIH07XHJcbiAgICB9KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcclxuICAgIH0pLCBnZXRFbGVtZW50ID0gZnVuY3Rpb24oZm4pIHtcclxuICAgICAgICB2YXIgbWVtbyA9IHt9O1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihzZWxlY3Rvcikge1xyXG4gICAgICAgICAgICBpZiAodm9pZCAwID09PSBtZW1vW3NlbGVjdG9yXSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZm4uY2FsbCh0aGlzLCBzZWxlY3Rvcik7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtZW1vW3NlbGVjdG9yXSA9IHN0eWxlVGFyZ2V0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBtZW1vW3NlbGVjdG9yXTtcclxuICAgICAgICB9O1xyXG4gICAgfShmdW5jdGlvbih0YXJnZXQpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xyXG4gICAgfSksIHNpbmdsZXRvbiA9IG51bGwsIHNpbmdsZXRvbkNvdW50ZXIgPSAwLCBzdHlsZXNJbnNlcnRlZEF0VG9wID0gW10sIGZpeFVybHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIERFQlVHICYmIERFQlVHICYmIFwib2JqZWN0XCIgIT0gdHlwZW9mIGRvY3VtZW50KSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XHJcbiAgICAgICAgKG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9KS5hdHRycyA9IFwib2JqZWN0XCIgPT0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPyBvcHRpb25zLmF0dHJzIDoge30sIFxyXG4gICAgICAgIG9wdGlvbnMuc2luZ2xldG9uIHx8IChvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKSksIG9wdGlvbnMuaW5zZXJ0SW50byB8fCAob3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCIpLCBcclxuICAgICAgICBvcHRpb25zLmluc2VydEF0IHx8IChvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIik7XHJcbiAgICAgICAgdmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcclxuICAgICAgICByZXR1cm4gYWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKSwgZnVuY3Rpb24obmV3TGlzdCkge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBtYXlSZW1vdmUgPSBbXSwgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gc3R5bGVzW2ldO1xyXG4gICAgICAgICAgICAgICAgKGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF0pLnJlZnMtLSwgbWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG5ld0xpc3QgJiYgYWRkU3R5bGVzVG9Eb20obGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpLCBvcHRpb25zKTtcclxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xyXG4gICAgICAgICAgICAgICAgaWYgKDAgPT09IGRvbVN0eWxlLnJlZnMpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIHZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciB0ZXh0U3RvcmUgPSBbXTtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oaW5kZXgsIHJlcGxhY2VtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQsIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbihcIlxcblwiKTtcclxuICAgICAgICB9O1xyXG4gICAgfSgpO1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcclxuICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY3NzKSB7XHJcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2Ygd2luZG93ICYmIHdpbmRvdy5sb2NhdGlvbjtcclxuICAgICAgICBpZiAoIWxvY2F0aW9uKSB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcclxuICAgICAgICBpZiAoIWNzcyB8fCBcInN0cmluZ1wiICE9IHR5cGVvZiBjc3MpIHJldHVybiBjc3M7XHJcbiAgICAgICAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3QsIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XHJcbiAgICAgICAgcmV0dXJuIGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XHJcbiAgICAgICAgICAgIHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsLnRyaW0oKS5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAkMTtcclxuICAgICAgICAgICAgfSkucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICQxO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkgcmV0dXJuIGZ1bGxNYXRjaDtcclxuICAgICAgICAgICAgdmFyIG5ld1VybDtcclxuICAgICAgICAgICAgcmV0dXJuIG5ld1VybCA9IDAgPT09IHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPyB1bnF1b3RlZE9yaWdVcmwgOiAwID09PSB1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPyBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsIDogY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIiksIFxyXG4gICAgICAgICAgICBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbn0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xyXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XHJcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXztcclxuICAgIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFN5bWJvbC5pdGVyYXRvcjtcclxuICAgICFmdW5jdGlvbihmYWN0b3J5KSB7XHJcbiAgICAgICAgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFsgX193ZWJwYWNrX3JlcXVpcmVfXygwKSwgX193ZWJwYWNrX3JlcXVpcmVfXygxKSBdLCBcclxuICAgICAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgKF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9IGZhY3RvcnkpID8gX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XHJcbiAgICB9KGZ1bmN0aW9uKCQsIElucHV0bWFzaykge1xyXG4gICAgICAgIGZ1bmN0aW9uIGlzTGVhcFllYXIoeWVhcikge1xyXG4gICAgICAgICAgICByZXR1cm4gaXNOYU4oeWVhcikgfHwgMjkgPT09IG5ldyBEYXRlKHllYXIsIDIsIDApLmdldERhdGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIElucHV0bWFzay5leHRlbmRBbGlhc2VzKHtcclxuICAgICAgICAgICAgXCJkZC9tbS95eXl5XCI6IHtcclxuICAgICAgICAgICAgICAgIG1hc2s6IFwiMS8yL3lcIixcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcImRkL21tL3l5eXlcIixcclxuICAgICAgICAgICAgICAgIHJlZ2V4OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMXByZTogbmV3IFJlZ0V4cChcIlswLTNdXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbDE6IG5ldyBSZWdFeHAoXCIwWzEtOV18WzEyXVswLTldfDNbMDFdXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbDJwcmU6IGZ1bmN0aW9uKHNlcGFyYXRvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXNjYXBlZFNlcGFyYXRvciA9IElucHV0bWFzay5lc2NhcGVSZWdleC5jYWxsKHRoaXMsIHNlcGFyYXRvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKFwiKCgwWzEtOV18WzEyXVswLTldfDNbMDFdKVwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiWzAxXSlcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB2YWwyOiBmdW5jdGlvbihzZXBhcmF0b3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVzY2FwZWRTZXBhcmF0b3IgPSBJbnB1dG1hc2suZXNjYXBlUmVnZXguY2FsbCh0aGlzLCBzZXBhcmF0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChcIigoMFsxLTldfFsxMl1bMC05XSlcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIigwWzEtOV18MVswMTJdKSl8KDMwXCIgKyBlc2NhcGVkU2VwYXJhdG9yICsgXCIoMFsxMy05XXwxWzAxMl0pKXwoMzFcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIigwWzEzNTc4XXwxWzAyXSkpXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBsZWFwZGF5OiBcIjI5LzAyL1wiLFxyXG4gICAgICAgICAgICAgICAgc2VwYXJhdG9yOiBcIi9cIixcclxuICAgICAgICAgICAgICAgIHllYXJyYW5nZToge1xyXG4gICAgICAgICAgICAgICAgICAgIG1pbnllYXI6IDE5MDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4eWVhcjogMjA5OVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGlzSW5ZZWFyUmFuZ2U6IGZ1bmN0aW9uKGNocnMsIG1pbnllYXIsIG1heHllYXIpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNOYU4oY2hycykpIHJldHVybiAhMTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZW50ZXJlZHllYXIgPSBwYXJzZUludChjaHJzLmNvbmNhdChtaW55ZWFyLnRvU3RyaW5nKCkuc2xpY2UoY2hycy5sZW5ndGgpKSksIGVudGVyZWR5ZWFyMiA9IHBhcnNlSW50KGNocnMuY29uY2F0KG1heHllYXIudG9TdHJpbmcoKS5zbGljZShjaHJzLmxlbmd0aCkpKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWlzTmFOKGVudGVyZWR5ZWFyKSAmJiAobWlueWVhciA8PSBlbnRlcmVkeWVhciAmJiBlbnRlcmVkeWVhciA8PSBtYXh5ZWFyKSB8fCAhaXNOYU4oZW50ZXJlZHllYXIyKSAmJiAobWlueWVhciA8PSBlbnRlcmVkeWVhcjIgJiYgZW50ZXJlZHllYXIyIDw9IG1heHllYXIpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRldGVybWluZWJhc2V5ZWFyOiBmdW5jdGlvbihtaW55ZWFyLCBtYXh5ZWFyLCBoaW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnR5ZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtaW55ZWFyID4gY3VycmVudHllYXIpIHJldHVybiBtaW55ZWFyO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXh5ZWFyIDwgY3VycmVudHllYXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbWF4WWVhclByZWZpeCA9IG1heHllYXIudG9TdHJpbmcoKS5zbGljZSgwLCAyKSwgbWF4WWVhclBvc3RmaXggPSBtYXh5ZWFyLnRvU3RyaW5nKCkuc2xpY2UoMiwgNCk7IG1heHllYXIgPCBtYXhZZWFyUHJlZml4ICsgaGludDsgKSBtYXhZZWFyUHJlZml4LS07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXh4WWVhciA9IG1heFllYXJQcmVmaXggKyBtYXhZZWFyUG9zdGZpeDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pbnllYXIgPiBtYXh4WWVhciA/IG1pbnllYXIgOiBtYXh4WWVhcjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1pbnllYXIgPD0gY3VycmVudHllYXIgJiYgY3VycmVudHllYXIgPD0gbWF4eWVhcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBjdXJyZW50WWVhclByZWZpeCA9IGN1cnJlbnR5ZWFyLnRvU3RyaW5nKCkuc2xpY2UoMCwgMik7IG1heHllYXIgPCBjdXJyZW50WWVhclByZWZpeCArIGhpbnQ7ICkgY3VycmVudFllYXJQcmVmaXgtLTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRZZWFyQW5kSGludCA9IGN1cnJlbnRZZWFyUHJlZml4ICsgaGludDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRZZWFyQW5kSGludCA8IG1pbnllYXIgPyBtaW55ZWFyIDogY3VycmVudFllYXJBbmRIaW50O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudHllYXI7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgb25LZXlEb3duOiBmdW5jdGlvbihlLCBidWZmZXIsIGNhcmV0UG9zLCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyICRpbnB1dCA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUuY3RybEtleSAmJiBlLmtleUNvZGUgPT09IElucHV0bWFzay5rZXlDb2RlLlJJR0hUKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0b2RheSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwodG9kYXkuZ2V0RGF0ZSgpLnRvU3RyaW5nKCkgKyAodG9kYXkuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkgKyB0b2RheS5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCkpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LnRyaWdnZXIoXCJzZXR2YWx1ZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZ2V0RnJvbnRWYWx1ZTogZnVuY3Rpb24obWFzaywgYnVmZmVyLCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgc3RhcnQgPSAwLCBsZW5ndGggPSAwLCBpID0gMDsgaSA8IG1hc2subGVuZ3RoICYmIFwiMlwiICE9PSBtYXNrLmNoYXJBdChpKTsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZWZpbml0aW9uID0gb3B0cy5kZWZpbml0aW9uc1ttYXNrLmNoYXJBdChpKV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmluaXRpb24gPyAoc3RhcnQgKz0gbGVuZ3RoLCBsZW5ndGggPSBkZWZpbml0aW9uLmNhcmRpbmFsaXR5KSA6IGxlbmd0aCsrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYnVmZmVyLmpvaW4oXCJcIikuc3Vic3RyKHN0YXJ0LCBsZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHBvc3RWYWxpZGF0aW9uOiBmdW5jdGlvbihidWZmZXIsIGN1cnJlbnRSZXN1bHQsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF5TW9udGhWYWx1ZSwgeWVhciwgYnVmZmVyU3RyID0gYnVmZmVyLmpvaW4oXCJcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDAgPT09IG9wdHMubWFzay5pbmRleE9mKFwieVwiKSA/ICh5ZWFyID0gYnVmZmVyU3RyLnN1YnN0cigwLCA0KSwgZGF5TW9udGhWYWx1ZSA9IGJ1ZmZlclN0ci5zdWJzdHJpbmcoNCwgMTApKSA6ICh5ZWFyID0gYnVmZmVyU3RyLnN1YnN0cmluZyg2LCAxMCksIFxyXG4gICAgICAgICAgICAgICAgICAgIGRheU1vbnRoVmFsdWUgPSBidWZmZXJTdHIuc3Vic3RyKDAsIDYpKSwgY3VycmVudFJlc3VsdCAmJiAoZGF5TW9udGhWYWx1ZSAhPT0gb3B0cy5sZWFwZGF5IHx8IGlzTGVhcFllYXIoeWVhcikpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCIxXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSBvcHRzLnJlZ2V4LnZhbDEudGVzdChjaHJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzdHJpY3QgfHwgaXNWYWxpZCB8fCBjaHJzLmNoYXJBdCgxKSAhPT0gb3B0cy5zZXBhcmF0b3IgJiYgLTEgPT09IFwiLS4vXCIuaW5kZXhPZihjaHJzLmNoYXJBdCgxKSkgfHwgIShpc1ZhbGlkID0gb3B0cy5yZWdleC52YWwxLnRlc3QoXCIwXCIgKyBjaHJzLmNoYXJBdCgwKSkpID8gaXNWYWxpZCA6IChtYXNrc2V0LmJ1ZmZlcltwb3MgLSAxXSA9IFwiMFwiLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoRnJvbUJ1ZmZlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydDogcG9zIC0gMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kOiBwb3NcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvczogcG9zLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGM6IGNocnMuY2hhckF0KDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZhbGlkYXRvcjogWyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBjaHJzID0gY2hycztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc05hTihtYXNrc2V0LmJ1ZmZlcltwb3MgKyAxXSkgfHwgKHBjaHJzICs9IG1hc2tzZXQuYnVmZmVyW3BvcyArIDFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXNWYWxpZCA9IDEgPT09IHBjaHJzLmxlbmd0aCA/IG9wdHMucmVnZXgudmFsMXByZS50ZXN0KHBjaHJzKSA6IG9wdHMucmVnZXgudmFsMS50ZXN0KHBjaHJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCAmJiBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc10gJiYgKG9wdHMucmVnZXgudmFsMihvcHRzLnNlcGFyYXRvcikudGVzdChjaHJzICsgbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdLmlucHV0KSB8fCAobWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdLmlucHV0ID0gXCIwXCIgPT09IGNocnMgPyBcIjFcIiA6IFwiMFwiKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICFzdHJpY3QgJiYgIWlzVmFsaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVmFsaWQgPSBvcHRzLnJlZ2V4LnZhbDEudGVzdChjaHJzICsgXCIwXCIpKSByZXR1cm4gbWFza3NldC5idWZmZXJbcG9zXSA9IGNocnMsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrc2V0LmJ1ZmZlclsrK3Bvc10gPSBcIjBcIiwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3MsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjOiBcIjBcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCA9IG9wdHMucmVnZXgudmFsMS50ZXN0KFwiMFwiICsgY2hycykpIHJldHVybiBtYXNrc2V0LmJ1ZmZlcltwb3NdID0gXCIwXCIsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3MrKywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3NcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzVmFsaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDFcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBdXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBcIjJcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZnJvbnRWYWx1ZSA9IG9wdHMuZ2V0RnJvbnRWYWx1ZShtYXNrc2V0Lm1hc2ssIG1hc2tzZXQuYnVmZmVyLCBvcHRzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0xICE9PSBmcm9udFZhbHVlLmluZGV4T2Yob3B0cy5wbGFjZWhvbGRlclswXSkgJiYgKGZyb250VmFsdWUgPSBcIjAxXCIgKyBvcHRzLnNlcGFyYXRvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXNWYWxpZCA9IG9wdHMucmVnZXgudmFsMihvcHRzLnNlcGFyYXRvcikudGVzdChmcm9udFZhbHVlICsgY2hycyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RyaWN0IHx8IGlzVmFsaWQgfHwgY2hycy5jaGFyQXQoMSkgIT09IG9wdHMuc2VwYXJhdG9yICYmIC0xID09PSBcIi0uL1wiLmluZGV4T2YoY2hycy5jaGFyQXQoMSkpIHx8ICEoaXNWYWxpZCA9IG9wdHMucmVnZXgudmFsMihvcHRzLnNlcGFyYXRvcikudGVzdChmcm9udFZhbHVlICsgXCIwXCIgKyBjaHJzLmNoYXJBdCgwKSkpID8gaXNWYWxpZCA6IChtYXNrc2V0LmJ1ZmZlcltwb3MgLSAxXSA9IFwiMFwiLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoRnJvbUJ1ZmZlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydDogcG9zIC0gMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kOiBwb3NcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvczogcG9zLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGM6IGNocnMuY2hhckF0KDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZhbGlkYXRvcjogWyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNOYU4obWFza3NldC5idWZmZXJbcG9zICsgMV0pIHx8IChjaHJzICs9IG1hc2tzZXQuYnVmZmVyW3BvcyArIDFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZnJvbnRWYWx1ZSA9IG9wdHMuZ2V0RnJvbnRWYWx1ZShtYXNrc2V0Lm1hc2ssIG1hc2tzZXQuYnVmZmVyLCBvcHRzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtMSAhPT0gZnJvbnRWYWx1ZS5pbmRleE9mKG9wdHMucGxhY2Vob2xkZXJbMF0pICYmIChmcm9udFZhbHVlID0gXCIwMVwiICsgb3B0cy5zZXBhcmF0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1ZhbGlkID0gMSA9PT0gY2hycy5sZW5ndGggPyBvcHRzLnJlZ2V4LnZhbDJwcmUob3B0cy5zZXBhcmF0b3IpLnRlc3QoZnJvbnRWYWx1ZSArIGNocnMpIDogb3B0cy5yZWdleC52YWwyKG9wdHMuc2VwYXJhdG9yKS50ZXN0KGZyb250VmFsdWUgKyBjaHJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNWYWxpZCAmJiBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc10gJiYgKG9wdHMucmVnZXgudmFsMihvcHRzLnNlcGFyYXRvcikudGVzdChjaHJzICsgbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdLmlucHV0KSB8fCAobWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdLmlucHV0ID0gXCIwXCIgPT09IGNocnMgPyBcIjFcIiA6IFwiMFwiKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmljdCB8fCBpc1ZhbGlkIHx8ICEoaXNWYWxpZCA9IG9wdHMucmVnZXgudmFsMihvcHRzLnNlcGFyYXRvcikudGVzdChmcm9udFZhbHVlICsgXCIwXCIgKyBjaHJzKSkgPyBpc1ZhbGlkIDogKG1hc2tzZXQuYnVmZmVyW3Bvc10gPSBcIjBcIiwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zKyssIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3NcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IF1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuaXNJblllYXJSYW5nZShjaHJzLCBvcHRzLnllYXJyYW5nZS5taW55ZWFyLCBvcHRzLnllYXJyYW5nZS5tYXh5ZWFyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZhbGlkYXRvcjogWyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSBvcHRzLmlzSW5ZZWFyUmFuZ2UoY2hycywgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzdHJpY3QgJiYgIWlzVmFsaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHllYXJQcmVmaXggPSBvcHRzLmRldGVybWluZWJhc2V5ZWFyKG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIsIGNocnMgKyBcIjBcIikudG9TdHJpbmcoKS5zbGljZSgwLCAxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVmFsaWQgPSBvcHRzLmlzSW5ZZWFyUmFuZ2UoeWVhclByZWZpeCArIGNocnMsIG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIpKSByZXR1cm4gbWFza3NldC5idWZmZXJbcG9zKytdID0geWVhclByZWZpeC5jaGFyQXQoMCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoeWVhclByZWZpeCA9IG9wdHMuZGV0ZXJtaW5lYmFzZXllYXIob3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhciwgY2hycyArIFwiMFwiKS50b1N0cmluZygpLnNsaWNlKDAsIDIpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZCA9IG9wdHMuaXNJblllYXJSYW5nZSh5ZWFyUHJlZml4ICsgY2hycywgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcikpIHJldHVybiBtYXNrc2V0LmJ1ZmZlcltwb3MrK10gPSB5ZWFyUHJlZml4LmNoYXJBdCgwKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2tzZXQuYnVmZmVyW3BvcysrXSA9IHllYXJQcmVmaXguY2hhckF0KDEpLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNWYWxpZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSBvcHRzLmlzSW5ZZWFyUmFuZ2UoY2hycywgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzdHJpY3QgJiYgIWlzVmFsaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHllYXJQcmVmaXggPSBvcHRzLmRldGVybWluZWJhc2V5ZWFyKG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIsIGNocnMpLnRvU3RyaW5nKCkuc2xpY2UoMCwgMik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkID0gb3B0cy5pc0luWWVhclJhbmdlKGNocnNbMF0gKyB5ZWFyUHJlZml4WzFdICsgY2hyc1sxXSwgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcikpIHJldHVybiBtYXNrc2V0LmJ1ZmZlcltwb3MrK10gPSB5ZWFyUHJlZml4LmNoYXJBdCgxKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvczogcG9zXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh5ZWFyUHJlZml4ID0gb3B0cy5kZXRlcm1pbmViYXNleWVhcihvcHRzLnllYXJyYW5nZS5taW55ZWFyLCBvcHRzLnllYXJyYW5nZS5tYXh5ZWFyLCBjaHJzKS50b1N0cmluZygpLnNsaWNlKDAsIDIpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZCA9IG9wdHMuaXNJblllYXJSYW5nZSh5ZWFyUHJlZml4ICsgY2hycywgb3B0cy55ZWFycmFuZ2UubWlueWVhciwgb3B0cy55ZWFycmFuZ2UubWF4eWVhcikpIHJldHVybiBtYXNrc2V0LmJ1ZmZlcltwb3MgLSAxXSA9IHllYXJQcmVmaXguY2hhckF0KDApLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFza3NldC5idWZmZXJbcG9zKytdID0geWVhclByZWZpeC5jaGFyQXQoMSksIG1hc2tzZXQuYnVmZmVyW3BvcysrXSA9IGNocnMuY2hhckF0KDApLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaEZyb21CdWZmZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydDogcG9zIC0gMyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQ6IHBvc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvczogcG9zXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24oY2hycywgbWFza3NldCwgcG9zLCBzdHJpY3QsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5pc0luWWVhclJhbmdlKGNocnMsIG9wdHMueWVhcnJhbmdlLm1pbnllYXIsIG9wdHMueWVhcnJhbmdlLm1heHllYXIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gXVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBpbnNlcnRNb2RlOiAhMSxcclxuICAgICAgICAgICAgICAgIGF1dG9Vbm1hc2s6ICExXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwibW0vZGQveXl5eVwiOiB7XHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJtbS9kZC95eXl5XCIsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJkZC9tbS95eXl5XCIsXHJcbiAgICAgICAgICAgICAgICByZWdleDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbDJwcmU6IGZ1bmN0aW9uKHNlcGFyYXRvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXNjYXBlZFNlcGFyYXRvciA9IElucHV0bWFzay5lc2NhcGVSZWdleC5jYWxsKHRoaXMsIHNlcGFyYXRvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKFwiKCgwWzEzLTldfDFbMDEyXSlcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIlswLTNdKXwoMDJcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIlswLTJdKVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbDI6IGZ1bmN0aW9uKHNlcGFyYXRvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXNjYXBlZFNlcGFyYXRvciA9IElucHV0bWFzay5lc2NhcGVSZWdleC5jYWxsKHRoaXMsIHNlcGFyYXRvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKFwiKCgwWzEtOV18MVswMTJdKVwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiKDBbMS05XXxbMTJdWzAtOV0pKXwoKDBbMTMtOV18MVswMTJdKVwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiMzApfCgoMFsxMzU3OF18MVswMl0pXCIgKyBlc2NhcGVkU2VwYXJhdG9yICsgXCIzMSlcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB2YWwxcHJlOiBuZXcgUmVnRXhwKFwiWzAxXVwiKSxcclxuICAgICAgICAgICAgICAgICAgICB2YWwxOiBuZXcgUmVnRXhwKFwiMFsxLTldfDFbMDEyXVwiKVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGxlYXBkYXk6IFwiMDIvMjkvXCIsXHJcbiAgICAgICAgICAgICAgICBvbktleURvd246IGZ1bmN0aW9uKGUsIGJ1ZmZlciwgY2FyZXRQb3MsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgJGlucHV0ID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZS5jdHJsS2V5ICYmIGUua2V5Q29kZSA9PT0gSW5wdXRtYXNrLmtleUNvZGUuUklHSFQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LnZhbCgodG9kYXkuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkgKyB0b2RheS5nZXREYXRlKCkudG9TdHJpbmcoKSArIHRvZGF5LmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudHJpZ2dlcihcInNldHZhbHVlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJ5eXl5L21tL2RkXCI6IHtcclxuICAgICAgICAgICAgICAgIG1hc2s6IFwieS8xLzJcIixcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcInl5eXkvbW0vZGRcIixcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcIm1tL2RkL3l5eXlcIixcclxuICAgICAgICAgICAgICAgIGxlYXBkYXk6IFwiLzAyLzI5XCIsXHJcbiAgICAgICAgICAgICAgICBvbktleURvd246IGZ1bmN0aW9uKGUsIGJ1ZmZlciwgY2FyZXRQb3MsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgJGlucHV0ID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZS5jdHJsS2V5ICYmIGUua2V5Q29kZSA9PT0gSW5wdXRtYXNrLmtleUNvZGUuUklHSFQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGlucHV0LnZhbCh0b2RheS5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCkgKyAodG9kYXkuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkgKyB0b2RheS5nZXREYXRlKCkudG9TdHJpbmcoKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudHJpZ2dlcihcInNldHZhbHVlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJkZC5tbS55eXl5XCI6IHtcclxuICAgICAgICAgICAgICAgIG1hc2s6IFwiMS4yLnlcIixcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcImRkLm1tLnl5eXlcIixcclxuICAgICAgICAgICAgICAgIGxlYXBkYXk6IFwiMjkuMDIuXCIsXHJcbiAgICAgICAgICAgICAgICBzZXBhcmF0b3I6IFwiLlwiLFxyXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwiZGQvbW0veXl5eVwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwiZGQtbW0teXl5eVwiOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcIjEtMi15XCIsXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJkZC1tbS15eXl5XCIsXHJcbiAgICAgICAgICAgICAgICBsZWFwZGF5OiBcIjI5LTAyLVwiLFxyXG4gICAgICAgICAgICAgICAgc2VwYXJhdG9yOiBcIi1cIixcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcImRkL21tL3l5eXlcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcIm1tLmRkLnl5eXlcIjoge1xyXG4gICAgICAgICAgICAgICAgbWFzazogXCIxLjIueVwiLFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwibW0uZGQueXl5eVwiLFxyXG4gICAgICAgICAgICAgICAgbGVhcGRheTogXCIwMi4yOS5cIixcclxuICAgICAgICAgICAgICAgIHNlcGFyYXRvcjogXCIuXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJtbS9kZC95eXl5XCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJtbS1kZC15eXl5XCI6IHtcclxuICAgICAgICAgICAgICAgIG1hc2s6IFwiMS0yLXlcIixcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIm1tLWRkLXl5eXlcIixcclxuICAgICAgICAgICAgICAgIGxlYXBkYXk6IFwiMDItMjktXCIsXHJcbiAgICAgICAgICAgICAgICBzZXBhcmF0b3I6IFwiLVwiLFxyXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwibW0vZGQveXl5eVwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwieXl5eS5tbS5kZFwiOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcInkuMS4yXCIsXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJ5eXl5Lm1tLmRkXCIsXHJcbiAgICAgICAgICAgICAgICBsZWFwZGF5OiBcIi4wMi4yOVwiLFxyXG4gICAgICAgICAgICAgICAgc2VwYXJhdG9yOiBcIi5cIixcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcInl5eXkvbW0vZGRcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcInl5eXktbW0tZGRcIjoge1xyXG4gICAgICAgICAgICAgICAgbWFzazogXCJ5LTEtMlwiLFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwieXl5eS1tbS1kZFwiLFxyXG4gICAgICAgICAgICAgICAgbGVhcGRheTogXCItMDItMjlcIixcclxuICAgICAgICAgICAgICAgIHNlcGFyYXRvcjogXCItXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJ5eXl5L21tL2RkXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGF0ZXRpbWU6IHtcclxuICAgICAgICAgICAgICAgIG1hc2s6IFwiMS8yL3kgaDpzXCIsXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJkZC9tbS95eXl5IGhoOm1tXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJkZC9tbS95eXl5XCIsXHJcbiAgICAgICAgICAgICAgICByZWdleDoge1xyXG4gICAgICAgICAgICAgICAgICAgIGhyc3ByZTogbmV3IFJlZ0V4cChcIlswMTJdXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIGhyczI0OiBuZXcgUmVnRXhwKFwiMlswLTRdfDFbMy05XVwiKSxcclxuICAgICAgICAgICAgICAgICAgICBocnM6IG5ldyBSZWdFeHAoXCJbMDFdWzAtOV18MlswLTRdXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIGFtcG06IG5ldyBSZWdFeHAoXCJeW2F8cHxBfFBdW218TV1cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgbXNwcmU6IG5ldyBSZWdFeHAoXCJbMC01XVwiKSxcclxuICAgICAgICAgICAgICAgICAgICBtczogbmV3IFJlZ0V4cChcIlswLTVdWzAtOV1cIilcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB0aW1lc2VwYXJhdG9yOiBcIjpcIixcclxuICAgICAgICAgICAgICAgIGhvdXJGb3JtYXQ6IFwiMjRcIixcclxuICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCIyNFwiID09PSBvcHRzLmhvdXJGb3JtYXQgJiYgMjQgPT09IHBhcnNlSW50KGNocnMsIDEwKSkgcmV0dXJuIG1hc2tzZXQuYnVmZmVyW3BvcyAtIDFdID0gXCIwXCIsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFza3NldC5idWZmZXJbcG9zXSA9IFwiMFwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaEZyb21CdWZmZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHBvcyAtIDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogcG9zXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjOiBcIjBcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc1ZhbGlkID0gb3B0cy5yZWdleC5ocnMudGVzdChjaHJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc3RyaWN0ICYmICFpc1ZhbGlkICYmIChjaHJzLmNoYXJBdCgxKSA9PT0gb3B0cy50aW1lc2VwYXJhdG9yIHx8IC0xICE9PSBcIi0uOlwiLmluZGV4T2YoY2hycy5jaGFyQXQoMSkpKSAmJiAoaXNWYWxpZCA9IG9wdHMucmVnZXguaHJzLnRlc3QoXCIwXCIgKyBjaHJzLmNoYXJBdCgwKSkpKSByZXR1cm4gbWFza3NldC5idWZmZXJbcG9zIC0gMV0gPSBcIjBcIiwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrc2V0LmJ1ZmZlcltwb3NdID0gY2hycy5jaGFyQXQoMCksIHBvcysrLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaEZyb21CdWZmZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IHBvcyAtIDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogcG9zXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjOiBvcHRzLnRpbWVzZXBhcmF0b3JcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCAmJiBcIjI0XCIgIT09IG9wdHMuaG91ckZvcm1hdCAmJiBvcHRzLnJlZ2V4LmhyczI0LnRlc3QoY2hycykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wID0gcGFyc2VJbnQoY2hycywgMTApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAyNCA9PT0gdG1wID8gKG1hc2tzZXQuYnVmZmVyW3BvcyArIDVdID0gXCJhXCIsIG1hc2tzZXQuYnVmZmVyW3BvcyArIDZdID0gXCJtXCIpIDogKG1hc2tzZXQuYnVmZmVyW3BvcyArIDVdID0gXCJwXCIsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2tzZXQuYnVmZmVyW3BvcyArIDZdID0gXCJtXCIpLCAodG1wIC09IDEyKSA8IDEwID8gKG1hc2tzZXQuYnVmZmVyW3Bvc10gPSB0bXAudG9TdHJpbmcoKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFza3NldC5idWZmZXJbcG9zIC0gMV0gPSBcIjBcIikgOiAobWFza3NldC5idWZmZXJbcG9zXSA9IHRtcC50b1N0cmluZygpLmNoYXJBdCgxKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFza3NldC5idWZmZXJbcG9zIC0gMV0gPSB0bXAudG9TdHJpbmcoKS5jaGFyQXQoMCkpLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hGcm9tQnVmZmVyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydDogcG9zIC0gMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogcG9zICsgNlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjOiBtYXNrc2V0LmJ1ZmZlcltwb3NdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmFsaWRhdG9yOiBbIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24oY2hycywgbWFza3NldCwgcG9zLCBzdHJpY3QsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXNWYWxpZCA9IG9wdHMucmVnZXguaHJzcHJlLnRlc3QoY2hycyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0cmljdCB8fCBpc1ZhbGlkIHx8ICEoaXNWYWxpZCA9IG9wdHMucmVnZXguaHJzLnRlc3QoXCIwXCIgKyBjaHJzKSkgPyBpc1ZhbGlkIDogKG1hc2tzZXQuYnVmZmVyW3Bvc10gPSBcIjBcIiwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zKyssIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3NcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IF1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBcIlswLTVdWzAtOV1cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZhbGlkYXRvcjogWyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSBvcHRzLnJlZ2V4Lm1zcHJlLnRlc3QoY2hycyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0cmljdCB8fCBpc1ZhbGlkIHx8ICEoaXNWYWxpZCA9IG9wdHMucmVnZXgubXMudGVzdChcIjBcIiArIGNocnMpKSA/IGlzVmFsaWQgOiAobWFza3NldC5idWZmZXJbcG9zXSA9IFwiMFwiLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3MrKywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gXVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5yZWdleC5hbXBtLnRlc3QoY2hycyArIFwibVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzaW5nOiBcImxvd2VyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGluc2VydE1vZGU6ICExLFxyXG4gICAgICAgICAgICAgICAgYXV0b1VubWFzazogITFcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGF0ZXRpbWUxMjoge1xyXG4gICAgICAgICAgICAgICAgbWFzazogXCIxLzIveSBoOnMgdFxcXFxtXCIsXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJkZC9tbS95eXl5IGhoOm1tIHhtXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJkYXRldGltZVwiLFxyXG4gICAgICAgICAgICAgICAgaG91ckZvcm1hdDogXCIxMlwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwibW0vZGQveXl5eSBoaDptbSB4bVwiOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcIjEvMi95IGg6cyB0XFxcXG1cIixcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIm1tL2RkL3l5eXkgaGg6bW0geG1cIixcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcImRhdGV0aW1lMTJcIixcclxuICAgICAgICAgICAgICAgIHJlZ2V4OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMnByZTogZnVuY3Rpb24oc2VwYXJhdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlc2NhcGVkU2VwYXJhdG9yID0gSW5wdXRtYXNrLmVzY2FwZVJlZ2V4LmNhbGwodGhpcywgc2VwYXJhdG9yKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAoXCIoKDBbMTMtOV18MVswMTJdKVwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiWzAtM10pfCgwMlwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiWzAtMl0pXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMjogZnVuY3Rpb24oc2VwYXJhdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlc2NhcGVkU2VwYXJhdG9yID0gSW5wdXRtYXNrLmVzY2FwZVJlZ2V4LmNhbGwodGhpcywgc2VwYXJhdG9yKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAoXCIoKDBbMS05XXwxWzAxMl0pXCIgKyBlc2NhcGVkU2VwYXJhdG9yICsgXCIoMFsxLTldfFsxMl1bMC05XSkpfCgoMFsxMy05XXwxWzAxMl0pXCIgKyBlc2NhcGVkU2VwYXJhdG9yICsgXCIzMCl8KCgwWzEzNTc4XXwxWzAyXSlcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIjMxKVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbDFwcmU6IG5ldyBSZWdFeHAoXCJbMDFdXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhbDE6IG5ldyBSZWdFeHAoXCIwWzEtOV18MVswMTJdXCIpXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbGVhcGRheTogXCIwMi8yOS9cIixcclxuICAgICAgICAgICAgICAgIG9uS2V5RG93bjogZnVuY3Rpb24oZSwgYnVmZmVyLCBjYXJldFBvcywgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciAkaW5wdXQgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlLmN0cmxLZXkgJiYgZS5rZXlDb2RlID09PSBJbnB1dG1hc2sua2V5Q29kZS5SSUdIVCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudmFsKCh0b2RheS5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKSArIHRvZGF5LmdldERhdGUoKS50b1N0cmluZygpICsgdG9kYXkuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC50cmlnZ2VyKFwic2V0dmFsdWVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcImhoOm1tIHRcIjoge1xyXG4gICAgICAgICAgICAgICAgbWFzazogXCJoOnMgdFxcXFxtXCIsXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJoaDptbSB4bVwiLFxyXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwiZGF0ZXRpbWVcIixcclxuICAgICAgICAgICAgICAgIGhvdXJGb3JtYXQ6IFwiMTJcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcImg6cyB0XCI6IHtcclxuICAgICAgICAgICAgICAgIG1hc2s6IFwiaDpzIHRcXFxcbVwiLFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiaGg6bW0geG1cIixcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcImRhdGV0aW1lXCIsXHJcbiAgICAgICAgICAgICAgICBob3VyRm9ybWF0OiBcIjEyXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJoaDptbTpzc1wiOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcImg6czpzXCIsXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJoaDptbTpzc1wiLFxyXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwiZGF0ZXRpbWVcIixcclxuICAgICAgICAgICAgICAgIGF1dG9Vbm1hc2s6ICExXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwiaGg6bW1cIjoge1xyXG4gICAgICAgICAgICAgICAgbWFzazogXCJoOnNcIixcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcImhoOm1tXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJkYXRldGltZVwiLFxyXG4gICAgICAgICAgICAgICAgYXV0b1VubWFzazogITFcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGF0ZToge1xyXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwiZGQvbW0veXl5eVwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwibW0veXl5eVwiOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcIjEveVwiLFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwibW0veXl5eVwiLFxyXG4gICAgICAgICAgICAgICAgbGVhcGRheTogXCJkb25vdHVzZVwiLFxyXG4gICAgICAgICAgICAgICAgc2VwYXJhdG9yOiBcIi9cIixcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcIm1tL2RkL3l5eXlcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzaGFtc2k6IHtcclxuICAgICAgICAgICAgICAgIHJlZ2V4OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMnByZTogZnVuY3Rpb24oc2VwYXJhdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlc2NhcGVkU2VwYXJhdG9yID0gSW5wdXRtYXNrLmVzY2FwZVJlZ2V4LmNhbGwodGhpcywgc2VwYXJhdG9yKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAoXCIoKDBbMS05XXwxWzAxMl0pXCIgKyBlc2NhcGVkU2VwYXJhdG9yICsgXCJbMC0zXSlcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB2YWwyOiBmdW5jdGlvbihzZXBhcmF0b3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVzY2FwZWRTZXBhcmF0b3IgPSBJbnB1dG1hc2suZXNjYXBlUmVnZXguY2FsbCh0aGlzLCBzZXBhcmF0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChcIigoMFsxLTldfDFbMDEyXSlcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIigwWzEtOV18WzEyXVswLTldKSl8KCgwWzEtOV18MVswMTJdKVwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiMzApfCgoMFsxLTZdKVwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiMzEpXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMXByZTogbmV3IFJlZ0V4cChcIlswMV1cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMTogbmV3IFJlZ0V4cChcIjBbMS05XXwxWzAxMl1cIilcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB5ZWFycmFuZ2U6IHtcclxuICAgICAgICAgICAgICAgICAgICBtaW55ZWFyOiAxMzAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heHllYXI6IDE0OTlcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcInkvMS8yXCIsXHJcbiAgICAgICAgICAgICAgICBsZWFwZGF5OiBcIi8xMi8zMFwiLFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwieXl5eS9tbS9kZFwiLFxyXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwibW0vZGQveXl5eVwiLFxyXG4gICAgICAgICAgICAgICAgY2xlYXJJbmNvbXBsZXRlOiAhMFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcInl5eXktbW0tZGQgaGg6bW06c3NcIjoge1xyXG4gICAgICAgICAgICAgICAgbWFzazogXCJ5LTEtMiBoOnM6c1wiLFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwieXl5eS1tbS1kZCBoaDptbTpzc1wiLFxyXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwiZGF0ZXRpbWVcIixcclxuICAgICAgICAgICAgICAgIHNlcGFyYXRvcjogXCItXCIsXHJcbiAgICAgICAgICAgICAgICBsZWFwZGF5OiBcIi0wMi0yOVwiLFxyXG4gICAgICAgICAgICAgICAgcmVnZXg6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWwycHJlOiBmdW5jdGlvbihzZXBhcmF0b3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVzY2FwZWRTZXBhcmF0b3IgPSBJbnB1dG1hc2suZXNjYXBlUmVnZXguY2FsbCh0aGlzLCBzZXBhcmF0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChcIigoMFsxMy05XXwxWzAxMl0pXCIgKyBlc2NhcGVkU2VwYXJhdG9yICsgXCJbMC0zXSl8KDAyXCIgKyBlc2NhcGVkU2VwYXJhdG9yICsgXCJbMC0yXSlcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB2YWwyOiBmdW5jdGlvbihzZXBhcmF0b3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVzY2FwZWRTZXBhcmF0b3IgPSBJbnB1dG1hc2suZXNjYXBlUmVnZXguY2FsbCh0aGlzLCBzZXBhcmF0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChcIigoMFsxLTldfDFbMDEyXSlcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIigwWzEtOV18WzEyXVswLTldKSl8KCgwWzEzLTldfDFbMDEyXSlcIiArIGVzY2FwZWRTZXBhcmF0b3IgKyBcIjMwKXwoKDBbMTM1NzhdfDFbMDJdKVwiICsgZXNjYXBlZFNlcGFyYXRvciArIFwiMzEpXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMXByZTogbmV3IFJlZ0V4cChcIlswMV1cIiksXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsMTogbmV3IFJlZ0V4cChcIjBbMS05XXwxWzAxMl1cIilcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBvbktleURvd246IGZ1bmN0aW9uKGUsIGJ1ZmZlciwgY2FyZXRQb3MsIG9wdHMpIHt9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSwgSW5wdXRtYXNrO1xyXG4gICAgfSk7XHJcbn0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xyXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XHJcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XHJcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XHJcbiAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB3aW5kb3c7XHJcbiAgICB9LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXywgZXhwb3J0cywgbW9kdWxlKSkgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fO1xyXG4gICAgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLml0ZXJhdG9yO1xyXG4gICAgdm9pZCAwICE9PSAoX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQ7XHJcbiAgICB9LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXywgZXhwb3J0cywgbW9kdWxlKSkgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XHJcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XHJcbiAgICAhZnVuY3Rpb24oZmFjdG9yeSkge1xyXG4gICAgICAgIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbIF9fd2VicGFja19yZXF1aXJlX18oMCksIF9fd2VicGFja19yZXF1aXJlX18oMSkgXSwgXHJcbiAgICAgICAgdm9pZCAwICE9PSAoX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIChfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18gPSBmYWN0b3J5KSA/IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXy5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSA6IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXykgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xyXG4gICAgfShmdW5jdGlvbigkLCBJbnB1dG1hc2spIHtcclxuICAgICAgICByZXR1cm4gSW5wdXRtYXNrLmV4dGVuZERlZmluaXRpb25zKHtcclxuICAgICAgICAgICAgQToge1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBcIltBLVphLXrQkC3Rj9CB0ZHDgC3Dv8K1XVwiLFxyXG4gICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEsXHJcbiAgICAgICAgICAgICAgICBjYXNpbmc6IFwidXBwZXJcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcIiZcIjoge1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBcIlswLTlBLVphLXrQkC3Rj9CB0ZHDgC3Dv8K1XVwiLFxyXG4gICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEsXHJcbiAgICAgICAgICAgICAgICBjYXNpbmc6IFwidXBwZXJcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcIiNcIjoge1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBcIlswLTlBLUZhLWZdXCIsXHJcbiAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMSxcclxuICAgICAgICAgICAgICAgIGNhc2luZzogXCJ1cHBlclwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSwgSW5wdXRtYXNrLmV4dGVuZEFsaWFzZXMoe1xyXG4gICAgICAgICAgICB1cmw6IHtcclxuICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IFwiLlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcIihcXFxcaHR0cDovLyl8KFxcXFxodHRwXFxcXHM6Ly8pfChmdHA6Ly8pfChmdHBcXFxcczovLylpeyt9XCIsXHJcbiAgICAgICAgICAgICAgICBpbnNlcnRNb2RlOiAhMSxcclxuICAgICAgICAgICAgICAgIGF1dG9Vbm1hc2s6ICExLFxyXG4gICAgICAgICAgICAgICAgaW5wdXRtb2RlOiBcInVybFwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGlwOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcImlbaVtpXV0uaVtpW2ldXS5pW2lbaV1dLmlbaVtpXV1cIixcclxuICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcG9zIC0gMSA+IC0xICYmIFwiLlwiICE9PSBtYXNrc2V0LmJ1ZmZlcltwb3MgLSAxXSA/IChjaHJzID0gbWFza3NldC5idWZmZXJbcG9zIC0gMV0gKyBjaHJzLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocnMgPSBwb3MgLSAyID4gLTEgJiYgXCIuXCIgIT09IG1hc2tzZXQuYnVmZmVyW3BvcyAtIDJdID8gbWFza3NldC5idWZmZXJbcG9zIC0gMl0gKyBjaHJzIDogXCIwXCIgKyBjaHJzKSA6IGNocnMgPSBcIjAwXCIgKyBjaHJzLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoXCIyNVswLTVdfDJbMC00XVswLTldfFswMV1bMC05XVswLTldXCIpLnRlc3QoY2hycyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG9uVW5NYXNrOiBmdW5jdGlvbihtYXNrZWRWYWx1ZSwgdW5tYXNrZWRWYWx1ZSwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXNrZWRWYWx1ZTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBpbnB1dG1vZGU6IFwibnVtZXJpY1wiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVtYWlsOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcIip7MSw2NH1bLip7MSw2NH1dWy4qezEsNjR9XVsuKnsxLDYzfV1ALXsxLDYzfS4tezEsNjN9Wy4tezEsNjN9XVsuLXsxLDYzfV1cIixcclxuICAgICAgICAgICAgICAgIGdyZWVkeTogITEsXHJcbiAgICAgICAgICAgICAgICBvbkJlZm9yZVBhc3RlOiBmdW5jdGlvbihwYXN0ZWRWYWx1ZSwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAocGFzdGVkVmFsdWUgPSBwYXN0ZWRWYWx1ZS50b0xvd2VyQ2FzZSgpKS5yZXBsYWNlKFwibWFpbHRvOlwiLCBcIlwiKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBkZWZpbml0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiKlwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC05QS1aYS16ISMkJSYnKisvPT9eX2B7fH1+LV1cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2luZzogXCJsb3dlclwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBcIi1cIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IFwiWzAtOUEtWmEtei1dXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNpbmc6IFwibG93ZXJcIlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBvblVuTWFzazogZnVuY3Rpb24obWFza2VkVmFsdWUsIHVubWFza2VkVmFsdWUsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFza2VkVmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgaW5wdXRtb2RlOiBcImVtYWlsXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbWFjOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcIiMjOiMjOiMjOiMjOiMjOiMjXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdmluOiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcIlZ7MTN9OXs0fVwiLFxyXG4gICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICBWOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbQS1ISi1OUFItWmEtaGotbnByLXpcXFxcZF1cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2luZzogXCJ1cHBlclwiXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNsZWFySW5jb21wbGV0ZTogITAsXHJcbiAgICAgICAgICAgICAgICBhdXRvVW5tYXNrOiAhMFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSksIElucHV0bWFzaztcclxuICAgIH0pO1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XHJcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XHJcbiAgICAhZnVuY3Rpb24oZmFjdG9yeSkge1xyXG4gICAgICAgIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbIF9fd2VicGFja19yZXF1aXJlX18oMCksIF9fd2VicGFja19yZXF1aXJlX18oMSkgXSwgXHJcbiAgICAgICAgdm9pZCAwICE9PSAoX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIChfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18gPSBmYWN0b3J5KSA/IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXy5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSA6IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXykgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xyXG4gICAgfShmdW5jdGlvbigkLCBJbnB1dG1hc2ssIHVuZGVmaW5lZCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGF1dG9Fc2NhcGUodHh0LCBvcHRzKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGVzY2FwZWRUeHQgPSBcIlwiLCBpID0gMDsgaSA8IHR4dC5sZW5ndGg7IGkrKykgSW5wdXRtYXNrLnByb3RvdHlwZS5kZWZpbml0aW9uc1t0eHQuY2hhckF0KGkpXSB8fCBvcHRzLmRlZmluaXRpb25zW3R4dC5jaGFyQXQoaSldIHx8IG9wdHMub3B0aW9uYWxtYXJrZXIuc3RhcnQgPT09IHR4dC5jaGFyQXQoaSkgfHwgb3B0cy5vcHRpb25hbG1hcmtlci5lbmQgPT09IHR4dC5jaGFyQXQoaSkgfHwgb3B0cy5xdWFudGlmaWVybWFya2VyLnN0YXJ0ID09PSB0eHQuY2hhckF0KGkpIHx8IG9wdHMucXVhbnRpZmllcm1hcmtlci5lbmQgPT09IHR4dC5jaGFyQXQoaSkgfHwgb3B0cy5ncm91cG1hcmtlci5zdGFydCA9PT0gdHh0LmNoYXJBdChpKSB8fCBvcHRzLmdyb3VwbWFya2VyLmVuZCA9PT0gdHh0LmNoYXJBdChpKSB8fCBvcHRzLmFsdGVybmF0b3JtYXJrZXIgPT09IHR4dC5jaGFyQXQoaSkgPyBlc2NhcGVkVHh0ICs9IFwiXFxcXFwiICsgdHh0LmNoYXJBdChpKSA6IGVzY2FwZWRUeHQgKz0gdHh0LmNoYXJBdChpKTtcclxuICAgICAgICAgICAgcmV0dXJuIGVzY2FwZWRUeHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBJbnB1dG1hc2suZXh0ZW5kQWxpYXNlcyh7XHJcbiAgICAgICAgICAgIG51bWVyaWM6IHtcclxuICAgICAgICAgICAgICAgIG1hc2s6IGZ1bmN0aW9uKG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoMCAhPT0gb3B0cy5yZXBlYXQgJiYgaXNOYU4ob3B0cy5pbnRlZ2VyRGlnaXRzKSAmJiAob3B0cy5pbnRlZ2VyRGlnaXRzID0gb3B0cy5yZXBlYXQpLCBcclxuICAgICAgICAgICAgICAgICAgICBvcHRzLnJlcGVhdCA9IDAsIG9wdHMuZ3JvdXBTZXBhcmF0b3IgPT09IG9wdHMucmFkaXhQb2ludCAmJiAoXCIuXCIgPT09IG9wdHMucmFkaXhQb2ludCA/IG9wdHMuZ3JvdXBTZXBhcmF0b3IgPSBcIixcIiA6IFwiLFwiID09PSBvcHRzLnJhZGl4UG9pbnQgPyBvcHRzLmdyb3VwU2VwYXJhdG9yID0gXCIuXCIgOiBvcHRzLmdyb3VwU2VwYXJhdG9yID0gXCJcIiksIFxyXG4gICAgICAgICAgICAgICAgICAgIFwiIFwiID09PSBvcHRzLmdyb3VwU2VwYXJhdG9yICYmIChvcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXIgPSB1bmRlZmluZWQpLCBvcHRzLmF1dG9Hcm91cCA9IG9wdHMuYXV0b0dyb3VwICYmIFwiXCIgIT09IG9wdHMuZ3JvdXBTZXBhcmF0b3IsIFxyXG4gICAgICAgICAgICAgICAgICAgIG9wdHMuYXV0b0dyb3VwICYmIChcInN0cmluZ1wiID09IHR5cGVvZiBvcHRzLmdyb3VwU2l6ZSAmJiBpc0Zpbml0ZShvcHRzLmdyb3VwU2l6ZSkgJiYgKG9wdHMuZ3JvdXBTaXplID0gcGFyc2VJbnQob3B0cy5ncm91cFNpemUpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgaXNGaW5pdGUob3B0cy5pbnRlZ2VyRGlnaXRzKSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNlcHMgPSBNYXRoLmZsb29yKG9wdHMuaW50ZWdlckRpZ2l0cyAvIG9wdHMuZ3JvdXBTaXplKSwgbW9kID0gb3B0cy5pbnRlZ2VyRGlnaXRzICUgb3B0cy5ncm91cFNpemU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMuaW50ZWdlckRpZ2l0cyA9IHBhcnNlSW50KG9wdHMuaW50ZWdlckRpZ2l0cykgKyAoMCA9PT0gbW9kID8gc2VwcyAtIDEgOiBzZXBzKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMuaW50ZWdlckRpZ2l0cyA8IDEgJiYgKG9wdHMuaW50ZWdlckRpZ2l0cyA9IFwiKlwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5wbGFjZWhvbGRlci5sZW5ndGggPiAxICYmIChvcHRzLnBsYWNlaG9sZGVyID0gb3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCkpLCBcclxuICAgICAgICAgICAgICAgICAgICBcInJhZGl4Rm9jdXNcIiA9PT0gb3B0cy5wb3NpdGlvbkNhcmV0T25DbGljayAmJiBcIlwiID09PSBvcHRzLnBsYWNlaG9sZGVyICYmICExID09PSBvcHRzLmludGVnZXJPcHRpb25hbCAmJiAob3B0cy5wb3NpdGlvbkNhcmV0T25DbGljayA9IFwibHZwXCIpLCBcclxuICAgICAgICAgICAgICAgICAgICBvcHRzLmRlZmluaXRpb25zW1wiO1wiXSA9IG9wdHMuZGVmaW5pdGlvbnNbXCJ+XCJdLCBvcHRzLmRlZmluaXRpb25zW1wiO1wiXS5kZWZpbml0aW9uU3ltYm9sID0gXCJ+XCIsIFxyXG4gICAgICAgICAgICAgICAgICAgICEwID09PSBvcHRzLm51bWVyaWNJbnB1dCAmJiAob3B0cy5wb3NpdGlvbkNhcmV0T25DbGljayA9IFwicmFkaXhGb2N1c1wiID09PSBvcHRzLnBvc2l0aW9uQ2FyZXRPbkNsaWNrID8gXCJsdnBcIiA6IG9wdHMucG9zaXRpb25DYXJldE9uQ2xpY2ssIFxyXG4gICAgICAgICAgICAgICAgICAgIG9wdHMuZGlnaXRzT3B0aW9uYWwgPSAhMSwgaXNOYU4ob3B0cy5kaWdpdHMpICYmIChvcHRzLmRpZ2l0cyA9IDIpLCBvcHRzLmRlY2ltYWxQcm90ZWN0ID0gITEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXNrID0gXCJbK11cIjtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobWFzayArPSBhdXRvRXNjYXBlKG9wdHMucHJlZml4LCBvcHRzKSwgITAgPT09IG9wdHMuaW50ZWdlck9wdGlvbmFsID8gbWFzayArPSBcIn57MSxcIiArIG9wdHMuaW50ZWdlckRpZ2l0cyArIFwifVwiIDogbWFzayArPSBcIn57XCIgKyBvcHRzLmludGVnZXJEaWdpdHMgKyBcIn1cIiwgXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5kaWdpdHMgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRzLnJhZGl4UG9pbnREZWZpbml0aW9uU3ltYm9sID0gb3B0cy5kZWNpbWFsUHJvdGVjdCA/IFwiOlwiIDogb3B0cy5yYWRpeFBvaW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZHEgPSBvcHRzLmRpZ2l0cy50b1N0cmluZygpLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNGaW5pdGUoZHFbMF0gJiYgZHFbMV0gJiYgaXNGaW5pdGUoZHFbMV0pKSA/IG1hc2sgKz0gb3B0cy5yYWRpeFBvaW50RGVmaW5pdGlvblN5bWJvbCArIFwiO3tcIiArIG9wdHMuZGlnaXRzICsgXCJ9XCIgOiAoaXNOYU4ob3B0cy5kaWdpdHMpIHx8IHBhcnNlSW50KG9wdHMuZGlnaXRzKSA+IDApICYmIChvcHRzLmRpZ2l0c09wdGlvbmFsID8gbWFzayArPSBcIltcIiArIG9wdHMucmFkaXhQb2ludERlZmluaXRpb25TeW1ib2wgKyBcIjt7MSxcIiArIG9wdHMuZGlnaXRzICsgXCJ9XVwiIDogbWFzayArPSBvcHRzLnJhZGl4UG9pbnREZWZpbml0aW9uU3ltYm9sICsgXCI7e1wiICsgb3B0cy5kaWdpdHMgKyBcIn1cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXNrICs9IGF1dG9Fc2NhcGUob3B0cy5zdWZmaXgsIG9wdHMpLCBtYXNrICs9IFwiWy1dXCIsIG9wdHMuZ3JlZWR5ID0gITEsIG1hc2s7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBncmVlZHk6ICExLFxyXG4gICAgICAgICAgICAgICAgZGlnaXRzOiBcIipcIixcclxuICAgICAgICAgICAgICAgIGRpZ2l0c09wdGlvbmFsOiAhMCxcclxuICAgICAgICAgICAgICAgIGVuZm9yY2VEaWdpdHNPbkJsdXI6ICExLFxyXG4gICAgICAgICAgICAgICAgcmFkaXhQb2ludDogXCIuXCIsXHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbkNhcmV0T25DbGljazogXCJyYWRpeEZvY3VzXCIsXHJcbiAgICAgICAgICAgICAgICBncm91cFNpemU6IDMsXHJcbiAgICAgICAgICAgICAgICBncm91cFNlcGFyYXRvcjogXCJcIixcclxuICAgICAgICAgICAgICAgIGF1dG9Hcm91cDogITEsXHJcbiAgICAgICAgICAgICAgICBhbGxvd01pbnVzOiAhMCxcclxuICAgICAgICAgICAgICAgIG5lZ2F0aW9uU3ltYm9sOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZnJvbnQ6IFwiLVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGJhY2s6IFwiXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBpbnRlZ2VyRGlnaXRzOiBcIitcIixcclxuICAgICAgICAgICAgICAgIGludGVnZXJPcHRpb25hbDogITAsXHJcbiAgICAgICAgICAgICAgICBwcmVmaXg6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBzdWZmaXg6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICByaWdodEFsaWduOiAhMCxcclxuICAgICAgICAgICAgICAgIGRlY2ltYWxQcm90ZWN0OiAhMCxcclxuICAgICAgICAgICAgICAgIG1pbjogbnVsbCxcclxuICAgICAgICAgICAgICAgIG1heDogbnVsbCxcclxuICAgICAgICAgICAgICAgIHN0ZXA6IDEsXHJcbiAgICAgICAgICAgICAgICBpbnNlcnRNb2RlOiAhMCxcclxuICAgICAgICAgICAgICAgIGF1dG9Vbm1hc2s6ICExLFxyXG4gICAgICAgICAgICAgICAgdW5tYXNrQXNOdW1iZXI6ICExLFxyXG4gICAgICAgICAgICAgICAgaW5wdXRtb2RlOiBcIm51bWVyaWNcIixcclxuICAgICAgICAgICAgICAgIHByZVZhbGlkYXRpb246IGZ1bmN0aW9uKGJ1ZmZlciwgcG9zLCBjLCBpc1NlbGVjdGlvbiwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChcIi1cIiA9PT0gYyB8fCBjID09PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSByZXR1cm4gITAgPT09IG9wdHMuYWxsb3dNaW51cyAmJiAob3B0cy5pc05lZ2F0aXZlID0gb3B0cy5pc05lZ2F0aXZlID09PSB1bmRlZmluZWQgfHwgIW9wdHMuaXNOZWdhdGl2ZSwgXHJcbiAgICAgICAgICAgICAgICAgICAgXCJcIiA9PT0gYnVmZmVyLmpvaW4oXCJcIikgfHwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogcG9zLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb3Bvc3Q6ICEwXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCExID09PSBpc1NlbGVjdGlvbiAmJiBjID09PSBvcHRzLnJhZGl4UG9pbnQgJiYgb3B0cy5kaWdpdHMgIT09IHVuZGVmaW5lZCAmJiAoaXNOYU4ob3B0cy5kaWdpdHMpIHx8IHBhcnNlSW50KG9wdHMuZGlnaXRzKSA+IDApKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYWRpeFBvcyA9ICQuaW5BcnJheShvcHRzLnJhZGl4UG9pbnQsIGJ1ZmZlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgtMSAhPT0gcmFkaXhQb3MpIHJldHVybiAhMCA9PT0gb3B0cy5udW1lcmljSW5wdXQgPyBwb3MgPT09IHJhZGl4UG9zIDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FyZXQ6IHJhZGl4UG9zICsgMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gITA7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcG9zdFZhbGlkYXRpb246IGZ1bmN0aW9uKGJ1ZmZlciwgY3VycmVudFJlc3VsdCwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzdWZmaXggPSBvcHRzLnN1ZmZpeC5zcGxpdChcIlwiKSwgcHJlZml4ID0gb3B0cy5wcmVmaXguc3BsaXQoXCJcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRSZXN1bHQucG9zID09PSB1bmRlZmluZWQgJiYgY3VycmVudFJlc3VsdC5jYXJldCAhPT0gdW5kZWZpbmVkICYmICEwICE9PSBjdXJyZW50UmVzdWx0LmRvcG9zdCkgcmV0dXJuIGN1cnJlbnRSZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNhcmV0UG9zID0gY3VycmVudFJlc3VsdC5jYXJldCAhPT0gdW5kZWZpbmVkID8gY3VycmVudFJlc3VsdC5jYXJldCA6IGN1cnJlbnRSZXN1bHQucG9zLCBtYXNrZWRWYWx1ZSA9IGJ1ZmZlci5zbGljZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdHMubnVtZXJpY0lucHV0ICYmIChjYXJldFBvcyA9IG1hc2tlZFZhbHVlLmxlbmd0aCAtIGNhcmV0UG9zIC0gMSwgbWFza2VkVmFsdWUgPSBtYXNrZWRWYWx1ZS5yZXZlcnNlKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjaGFyQXRQb3MgPSBtYXNrZWRWYWx1ZVtjYXJldFBvc107XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXJBdFBvcyA9PT0gb3B0cy5ncm91cFNlcGFyYXRvciAmJiAoY2hhckF0UG9zID0gbWFza2VkVmFsdWVbY2FyZXRQb3MgKz0gMV0pLCBcclxuICAgICAgICAgICAgICAgICAgICBjYXJldFBvcyA9PT0gbWFza2VkVmFsdWUubGVuZ3RoIC0gb3B0cy5zdWZmaXgubGVuZ3RoIC0gMSAmJiBjaGFyQXRQb3MgPT09IG9wdHMucmFkaXhQb2ludCkgcmV0dXJuIGN1cnJlbnRSZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hhckF0UG9zICE9PSB1bmRlZmluZWQgJiYgY2hhckF0UG9zICE9PSBvcHRzLnJhZGl4UG9pbnQgJiYgY2hhckF0UG9zICE9PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250ICYmIGNoYXJBdFBvcyAhPT0gb3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrICYmIChtYXNrZWRWYWx1ZVtjYXJldFBvc10gPSBcIj9cIiwgXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5wcmVmaXgubGVuZ3RoID4gMCAmJiBjYXJldFBvcyA+PSAoITEgPT09IG9wdHMuaXNOZWdhdGl2ZSA/IDEgOiAwKSAmJiBjYXJldFBvcyA8IG9wdHMucHJlZml4Lmxlbmd0aCAtIDEgKyAoITEgPT09IG9wdHMuaXNOZWdhdGl2ZSA/IDEgOiAwKSA/IHByZWZpeFtjYXJldFBvcyAtICghMSA9PT0gb3B0cy5pc05lZ2F0aXZlID8gMSA6IDApXSA9IFwiP1wiIDogb3B0cy5zdWZmaXgubGVuZ3RoID4gMCAmJiBjYXJldFBvcyA+PSBtYXNrZWRWYWx1ZS5sZW5ndGggLSBvcHRzLnN1ZmZpeC5sZW5ndGggLSAoITEgPT09IG9wdHMuaXNOZWdhdGl2ZSA/IDEgOiAwKSAmJiAoc3VmZml4W2NhcmV0UG9zIC0gKG1hc2tlZFZhbHVlLmxlbmd0aCAtIG9wdHMuc3VmZml4Lmxlbmd0aCAtICghMSA9PT0gb3B0cy5pc05lZ2F0aXZlID8gMSA6IDApKV0gPSBcIj9cIikpLCBcclxuICAgICAgICAgICAgICAgICAgICBwcmVmaXggPSBwcmVmaXguam9pbihcIlwiKSwgc3VmZml4ID0gc3VmZml4LmpvaW4oXCJcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByb2Nlc3NWYWx1ZSA9IG1hc2tlZFZhbHVlLmpvaW4oXCJcIikucmVwbGFjZShwcmVmaXgsIFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShzdWZmaXgsIFwiXCIpLCBwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLmdyb3VwU2VwYXJhdG9yKSwgXCJnXCIpLCBcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChcIlstXCIgKyBJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCkgKyBcIl1cIiwgXCJnXCIpLCBcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKSArIFwiJFwiKSwgXCJcIiksIFxyXG4gICAgICAgICAgICAgICAgICAgIGlzTmFOKG9wdHMucGxhY2Vob2xkZXIpICYmIChwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLnBsYWNlaG9sZGVyKSwgXCJnXCIpLCBcIlwiKSksIFxyXG4gICAgICAgICAgICAgICAgICAgIHByb2Nlc3NWYWx1ZS5sZW5ndGggPiAxICYmIDEgIT09IHByb2Nlc3NWYWx1ZS5pbmRleE9mKG9wdHMucmFkaXhQb2ludCkgJiYgKFwiMFwiID09PSBjaGFyQXRQb3MgJiYgKHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKC9eXFw/L2csIFwiXCIpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UoL14wL2csIFwiXCIpKSwgcHJvY2Vzc1ZhbHVlLmNoYXJBdCgwKSA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCAmJiAhMCAhPT0gb3B0cy5udW1lcmljSW5wdXQgJiYgKHByb2Nlc3NWYWx1ZSA9IFwiMFwiICsgcHJvY2Vzc1ZhbHVlKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgXCJcIiAhPT0gcHJvY2Vzc1ZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUuc3BsaXQoXCJcIiksICghb3B0cy5kaWdpdHNPcHRpb25hbCB8fCBvcHRzLmVuZm9yY2VEaWdpdHNPbkJsdXIgJiYgXCJibHVyXCIgPT09IGN1cnJlbnRSZXN1bHQuZXZlbnQpICYmIGlzRmluaXRlKG9wdHMuZGlnaXRzKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhZGl4UG9zaXRpb24gPSAkLmluQXJyYXkob3B0cy5yYWRpeFBvaW50LCBwcm9jZXNzVmFsdWUpLCBycGIgPSAkLmluQXJyYXkob3B0cy5yYWRpeFBvaW50LCBtYXNrZWRWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtMSA9PT0gcmFkaXhQb3NpdGlvbiAmJiAocHJvY2Vzc1ZhbHVlLnB1c2gob3B0cy5yYWRpeFBvaW50KSwgcmFkaXhQb3NpdGlvbiA9IHByb2Nlc3NWYWx1ZS5sZW5ndGggLSAxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IG9wdHMuZGlnaXRzOyBpKyspIG9wdHMuZGlnaXRzT3B0aW9uYWwgJiYgKCFvcHRzLmVuZm9yY2VEaWdpdHNPbkJsdXIgfHwgXCJibHVyXCIgIT09IGN1cnJlbnRSZXN1bHQuZXZlbnQpIHx8IHByb2Nlc3NWYWx1ZVtyYWRpeFBvc2l0aW9uICsgaV0gIT09IHVuZGVmaW5lZCAmJiBwcm9jZXNzVmFsdWVbcmFkaXhQb3NpdGlvbiArIGldICE9PSBvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSA/IC0xICE9PSBycGIgJiYgbWFza2VkVmFsdWVbcnBiICsgaV0gIT09IHVuZGVmaW5lZCAmJiAocHJvY2Vzc1ZhbHVlW3JhZGl4UG9zaXRpb24gKyBpXSA9IHByb2Nlc3NWYWx1ZVtyYWRpeFBvc2l0aW9uICsgaV0gfHwgbWFza2VkVmFsdWVbcnBiICsgaV0pIDogcHJvY2Vzc1ZhbHVlW3JhZGl4UG9zaXRpb24gKyBpXSA9IGN1cnJlbnRSZXN1bHQucGxhY2Vob2xkZXIgfHwgb3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwICE9PSBvcHRzLmF1dG9Hcm91cCB8fCBcIlwiID09PSBvcHRzLmdyb3VwU2VwYXJhdG9yIHx8IGNoYXJBdFBvcyA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIGN1cnJlbnRSZXN1bHQucG9zID09PSB1bmRlZmluZWQgJiYgIWN1cnJlbnRSZXN1bHQuZG9wb3N0KSBwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUuam9pbihcIlwiKTsgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWRkUmFkaXggPSBwcm9jZXNzVmFsdWVbcHJvY2Vzc1ZhbHVlLmxlbmd0aCAtIDFdID09PSBvcHRzLnJhZGl4UG9pbnQgJiYgY3VycmVudFJlc3VsdC5jID09PSBvcHRzLnJhZGl4UG9pbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzVmFsdWUgPSBJbnB1dG1hc2soZnVuY3Rpb24oYnVmZmVyLCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBvc3RNYXNrID0gXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocG9zdE1hc2sgKz0gXCIoXCIgKyBvcHRzLmdyb3VwU2VwYXJhdG9yICsgXCIqe1wiICsgb3B0cy5ncm91cFNpemUgKyBcIn0peyp9XCIsIFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmFkaXhTcGxpdCA9IGJ1ZmZlci5qb2luKFwiXCIpLnNwbGl0KG9wdHMucmFkaXhQb2ludCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhZGl4U3BsaXRbMV0gJiYgKHBvc3RNYXNrICs9IG9wdHMucmFkaXhQb2ludCArIFwiKntcIiArIHJhZGl4U3BsaXRbMV0ubWF0Y2goL15cXGQqXFw/P1xcZCovKVswXS5sZW5ndGggKyBcIn1cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TWFzaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0ocHJvY2Vzc1ZhbHVlLCBvcHRzKSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bWVyaWNJbnB1dDogITAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaml0TWFza2luZzogITAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIqXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC05P11cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5mb3JtYXQocHJvY2Vzc1ZhbHVlLmpvaW4oXCJcIikpLCBhZGRSYWRpeCAmJiAocHJvY2Vzc1ZhbHVlICs9IG9wdHMucmFkaXhQb2ludCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlLmNoYXJBdCgwKSA9PT0gb3B0cy5ncm91cFNlcGFyYXRvciAmJiBwcm9jZXNzVmFsdWUuc3Vic3RyKDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHRzLmlzTmVnYXRpdmUgJiYgXCJibHVyXCIgPT09IGN1cnJlbnRSZXN1bHQuZXZlbnQgJiYgKG9wdHMuaXNOZWdhdGl2ZSA9IFwiMFwiICE9PSBwcm9jZXNzVmFsdWUpLCBcclxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzVmFsdWUgPSBwcmVmaXggKyBwcm9jZXNzVmFsdWUsIHByb2Nlc3NWYWx1ZSArPSBzdWZmaXgsIG9wdHMuaXNOZWdhdGl2ZSAmJiAocHJvY2Vzc1ZhbHVlID0gb3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCArIHByb2Nlc3NWYWx1ZSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlICs9IG9wdHMubmVnYXRpb25TeW1ib2wuYmFjayksIHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5zcGxpdChcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhckF0UG9zICE9PSB1bmRlZmluZWQpIGlmIChjaGFyQXRQb3MgIT09IG9wdHMucmFkaXhQb2ludCAmJiBjaGFyQXRQb3MgIT09IG9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQgJiYgY2hhckF0UG9zICE9PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2spIChjYXJldFBvcyA9ICQuaW5BcnJheShcIj9cIiwgcHJvY2Vzc1ZhbHVlKSkgPiAtMSA/IHByb2Nlc3NWYWx1ZVtjYXJldFBvc10gPSBjaGFyQXRQb3MgOiBjYXJldFBvcyA9IGN1cnJlbnRSZXN1bHQuY2FyZXQgfHwgMDsgZWxzZSBpZiAoY2hhckF0UG9zID09PSBvcHRzLnJhZGl4UG9pbnQgfHwgY2hhckF0UG9zID09PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250IHx8IGNoYXJBdFBvcyA9PT0gb3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdDYXJldFBvcyA9ICQuaW5BcnJheShjaGFyQXRQb3MsIHByb2Nlc3NWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC0xICE9PSBuZXdDYXJldFBvcyAmJiAoY2FyZXRQb3MgPSBuZXdDYXJldFBvcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIG9wdHMubnVtZXJpY0lucHV0ICYmIChjYXJldFBvcyA9IHByb2Nlc3NWYWx1ZS5sZW5ndGggLSBjYXJldFBvcyAtIDEsIHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXZlcnNlKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByc2x0ID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogY2hhckF0UG9zID09PSB1bmRlZmluZWQgfHwgY3VycmVudFJlc3VsdC5wb3MgIT09IHVuZGVmaW5lZCA/IGNhcmV0UG9zICsgKG9wdHMubnVtZXJpY0lucHV0ID8gLTEgOiAxKSA6IGNhcmV0UG9zLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXI6IHByb2Nlc3NWYWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaEZyb21CdWZmZXI6IGN1cnJlbnRSZXN1bHQuZG9wb3N0IHx8IGJ1ZmZlci5qb2luKFwiXCIpICE9PSBwcm9jZXNzVmFsdWUuam9pbihcIlwiKVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJzbHQucmVmcmVzaEZyb21CdWZmZXIgPyByc2x0IDogY3VycmVudFJlc3VsdDtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBvbkJlZm9yZVdyaXRlOiBmdW5jdGlvbihlLCBidWZmZXIsIGNhcmV0UG9zLCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUpIHN3aXRjaCAoZS50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwia2V5ZG93blwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5wb3N0VmFsaWRhdGlvbihidWZmZXIsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBjYXJldFBvcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvcG9zdDogITBcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgb3B0cyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImJsdXJcIjpcclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJjaGVja3ZhbFwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdW5tYXNrZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmdW5jdGlvbihvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRzLnBhcnNlTWluTWF4T3B0aW9ucyA9PT0gdW5kZWZpbmVkICYmIChudWxsICE9PSBvcHRzLm1pbiAmJiAob3B0cy5taW4gPSBvcHRzLm1pbi50b1N0cmluZygpLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5ncm91cFNlcGFyYXRvciksIFwiZ1wiKSwgXCJcIiksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIsXCIgPT09IG9wdHMucmFkaXhQb2ludCAmJiAob3B0cy5taW4gPSBvcHRzLm1pbi5yZXBsYWNlKG9wdHMucmFkaXhQb2ludCwgXCIuXCIpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRzLm1pbiA9IGlzRmluaXRlKG9wdHMubWluKSA/IHBhcnNlRmxvYXQob3B0cy5taW4pIDogTmFOLCBpc05hTihvcHRzLm1pbikgJiYgKG9wdHMubWluID0gTnVtYmVyLk1JTl9WQUxVRSkpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIT09IG9wdHMubWF4ICYmIChvcHRzLm1heCA9IG9wdHMubWF4LnRvU3RyaW5nKCkucmVwbGFjZShuZXcgUmVnRXhwKElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLmdyb3VwU2VwYXJhdG9yKSwgXCJnXCIpLCBcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIixcIiA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIChvcHRzLm1heCA9IG9wdHMubWF4LnJlcGxhY2Uob3B0cy5yYWRpeFBvaW50LCBcIi5cIikpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMubWF4ID0gaXNGaW5pdGUob3B0cy5tYXgpID8gcGFyc2VGbG9hdChvcHRzLm1heCkgOiBOYU4sIGlzTmFOKG9wdHMubWF4KSAmJiAob3B0cy5tYXggPSBOdW1iZXIuTUFYX1ZBTFVFKSksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5wYXJzZU1pbk1heE9wdGlvbnMgPSBcImRvbmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0ob3B0cyksIG51bGwgIT09IG9wdHMubWluIHx8IG51bGwgIT09IG9wdHMubWF4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodW5tYXNrZWQgPSBvcHRzLm9uVW5NYXNrKGJ1ZmZlci5qb2luKFwiXCIpLCB1bmRlZmluZWQsICQuZXh0ZW5kKHt9LCBvcHRzLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5tYXNrQXNOdW1iZXI6ICEwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSksIG51bGwgIT09IG9wdHMubWluICYmIHVubWFza2VkIDwgb3B0cy5taW4pIHJldHVybiBvcHRzLmlzTmVnYXRpdmUgPSBvcHRzLm1pbiA8IDAsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5wb3N0VmFsaWRhdGlvbihvcHRzLm1pbi50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsIG9wdHMucmFkaXhQb2ludCkuc3BsaXQoXCJcIiksIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogY2FyZXRQb3MsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9wb3N0OiAhMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCIwXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIG9wdHMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgIT09IG9wdHMubWF4ICYmIHVubWFza2VkID4gb3B0cy5tYXgpIHJldHVybiBvcHRzLmlzTmVnYXRpdmUgPSBvcHRzLm1heCA8IDAsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5wb3N0VmFsaWRhdGlvbihvcHRzLm1heC50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsIG9wdHMucmFkaXhQb2ludCkuc3BsaXQoXCJcIiksIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogY2FyZXRQb3MsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9wb3N0OiAhMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCIwXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIG9wdHMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvcHRzLnBvc3RWYWxpZGF0aW9uKGJ1ZmZlciwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FyZXQ6IGNhcmV0UG9zLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiMFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IFwiYmx1clwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIG9wdHMpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJfY2hlY2t2YWxcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBjYXJldFBvc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByZWdleDoge1xyXG4gICAgICAgICAgICAgICAgICAgIGludGVnZXJQYXJ0OiBmdW5jdGlvbihvcHRzLCBlbXB0eUNoZWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbXB0eUNoZWNrID8gbmV3IFJlZ0V4cChcIltcIiArIElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSArIFwiK10/XCIpIDogbmV3IFJlZ0V4cChcIltcIiArIElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSArIFwiK10/XFxcXGQrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgaW50ZWdlck5QYXJ0OiBmdW5jdGlvbihvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKFwiW1xcXFxkXCIgKyBJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5ncm91cFNlcGFyYXRvcikgKyBJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCkpICsgXCJdK1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICBcIn5cIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzLCBpc1NlbGVjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSBzdHJpY3QgPyBuZXcgUmVnRXhwKFwiWzAtOVwiICsgSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMuZ3JvdXBTZXBhcmF0b3IpICsgXCJdXCIpLnRlc3QoY2hycykgOiBuZXcgUmVnRXhwKFwiWzAtOV1cIikudGVzdChjaHJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghMCA9PT0gaXNWYWxpZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghMCAhPT0gb3B0cy5udW1lcmljSW5wdXQgJiYgbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdICE9PSB1bmRlZmluZWQgJiYgXCJ+XCIgPT09IG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXS5tYXRjaC5kZWYgJiYgIWlzU2VsZWN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcm9jZXNzVmFsdWUgPSBtYXNrc2V0LmJ1ZmZlci5qb2luKFwiXCIpLCBwdlJhZGl4U3BsaXQgPSAocHJvY2Vzc1ZhbHVlID0gKHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJbLVwiICsgSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQpICsgXCJdXCIsIFwiZ1wiKSwgXCJcIikpLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKSArIFwiJFwiKSwgXCJcIikpLnNwbGl0KG9wdHMucmFkaXhQb2ludCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB2UmFkaXhTcGxpdC5sZW5ndGggPiAxICYmIChwdlJhZGl4U3BsaXRbMV0gPSBwdlJhZGl4U3BsaXRbMV0ucmVwbGFjZSgvMC9nLCBvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSkpLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIwXCIgPT09IHB2UmFkaXhTcGxpdFswXSAmJiAocHZSYWRpeFNwbGl0WzBdID0gcHZSYWRpeFNwbGl0WzBdLnJlcGxhY2UoLzAvZywgb3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCkpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NWYWx1ZSA9IHB2UmFkaXhTcGxpdFswXSArIG9wdHMucmFkaXhQb2ludCArIHB2UmFkaXhTcGxpdFsxXSB8fCBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyVGVtcGxhdGUgPSBtYXNrc2V0Ll9idWZmZXIuam9pbihcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChwcm9jZXNzVmFsdWUgPT09IG9wdHMucmFkaXhQb2ludCAmJiAocHJvY2Vzc1ZhbHVlID0gYnVmZmVyVGVtcGxhdGUpOyBudWxsID09PSBwcm9jZXNzVmFsdWUubWF0Y2goSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KGJ1ZmZlclRlbXBsYXRlKSArIFwiJFwiKTsgKSBidWZmZXJUZW1wbGF0ZSA9IGJ1ZmZlclRlbXBsYXRlLnNsaWNlKDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkID0gKHByb2Nlc3NWYWx1ZSA9IChwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShidWZmZXJUZW1wbGF0ZSwgXCJcIikpLnNwbGl0KFwiXCIpKVtwb3NdID09PSB1bmRlZmluZWQgPyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZTogcG9zXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBzdHJpY3QgfHwgY2hycyAhPT0gb3B0cy5yYWRpeFBvaW50IHx8IG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zIC0gMV0gIT09IHVuZGVmaW5lZCB8fCAobWFza3NldC5idWZmZXJbcG9zXSA9IFwiMFwiLCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVmFsaWQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3MgKyAxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXCIrXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuYWxsb3dNaW51cyAmJiAoXCItXCIgPT09IGNocnMgfHwgY2hycyA9PT0gb3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXCItXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuYWxsb3dNaW51cyAmJiBjaHJzID09PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgXCI6XCI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhZGl4ID0gXCJbXCIgKyBJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5yYWRpeFBvaW50KSArIFwiXVwiLCBpc1ZhbGlkID0gbmV3IFJlZ0V4cChyYWRpeCkudGVzdChjaHJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkICYmIG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXSAmJiBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc10ubWF0Y2gucGxhY2Vob2xkZXIgPT09IG9wdHMucmFkaXhQb2ludCAmJiAoaXNWYWxpZCA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogcG9zICsgMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGlzVmFsaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogZnVuY3Rpb24ob3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMucmFkaXhQb2ludDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBvblVuTWFzazogZnVuY3Rpb24obWFza2VkVmFsdWUsIHVubWFza2VkVmFsdWUsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoXCJcIiA9PT0gdW5tYXNrZWRWYWx1ZSAmJiAhMCA9PT0gb3B0cy5udWxsYWJsZSkgcmV0dXJuIHVubWFza2VkVmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByb2Nlc3NWYWx1ZSA9IG1hc2tlZFZhbHVlLnJlcGxhY2Uob3B0cy5wcmVmaXgsIFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShvcHRzLnN1ZmZpeCwgXCJcIiksIHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMuZ3JvdXBTZXBhcmF0b3IpLCBcImdcIiksIFwiXCIpLCBcclxuICAgICAgICAgICAgICAgICAgICBcIlwiICE9PSBvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSAmJiAocHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSwgXCJnXCIpLCBcIjBcIikpLCBcclxuICAgICAgICAgICAgICAgICAgICBvcHRzLnVubWFza0FzTnVtYmVyID8gKFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCAmJiAtMSAhPT0gcHJvY2Vzc1ZhbHVlLmluZGV4T2Yob3B0cy5yYWRpeFBvaW50KSAmJiAocHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UoSW5wdXRtYXNrLmVzY2FwZVJlZ2V4LmNhbGwodGhpcywgb3B0cy5yYWRpeFBvaW50KSwgXCIuXCIpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChcIl5cIiArIElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSksIFwiLVwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKSArIFwiJFwiKSwgXCJcIiksIFxyXG4gICAgICAgICAgICAgICAgICAgIE51bWJlcihwcm9jZXNzVmFsdWUpKSA6IHByb2Nlc3NWYWx1ZTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBpc0NvbXBsZXRlOiBmdW5jdGlvbihidWZmZXIsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbWFza2VkVmFsdWUgPSBidWZmZXIuam9pbihcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLnNsaWNlKCkuam9pbihcIlwiKSAhPT0gbWFza2VkVmFsdWUpIHJldHVybiAhMTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcHJvY2Vzc1ZhbHVlID0gbWFza2VkVmFsdWUucmVwbGFjZShvcHRzLnByZWZpeCwgXCJcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKG9wdHMuc3VmZml4LCBcIlwiKSwgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5ncm91cFNlcGFyYXRvciksIFwiZ1wiKSwgXCJcIiksIFxyXG4gICAgICAgICAgICAgICAgICAgIFwiLFwiID09PSBvcHRzLnJhZGl4UG9pbnQgJiYgKHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLnJhZGl4UG9pbnQpLCBcIi5cIikpLCBcclxuICAgICAgICAgICAgICAgICAgICBpc0Zpbml0ZShwcm9jZXNzVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG9uQmVmb3JlTWFzazogZnVuY3Rpb24oaW5pdGlhbFZhbHVlLCBvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMuaXNOZWdhdGl2ZSA9IHVuZGVmaW5lZCwgaW5pdGlhbFZhbHVlID0gaW5pdGlhbFZhbHVlLnRvU3RyaW5nKCkuY2hhckF0KGluaXRpYWxWYWx1ZS5sZW5ndGggLSAxKSA9PT0gb3B0cy5yYWRpeFBvaW50ID8gaW5pdGlhbFZhbHVlLnRvU3RyaW5nKCkuc3Vic3RyKDAsIGluaXRpYWxWYWx1ZS5sZW5ndGggLSAxKSA6IGluaXRpYWxWYWx1ZS50b1N0cmluZygpLCBcclxuICAgICAgICAgICAgICAgICAgICBcIlwiICE9PSBvcHRzLnJhZGl4UG9pbnQgJiYgaXNGaW5pdGUoaW5pdGlhbFZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdnMgPSBpbml0aWFsVmFsdWUuc3BsaXQoXCIuXCIpLCBncm91cFNpemUgPSBcIlwiICE9PSBvcHRzLmdyb3VwU2VwYXJhdG9yID8gcGFyc2VJbnQob3B0cy5ncm91cFNpemUpIDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgMiA9PT0gdnMubGVuZ3RoICYmICh2c1swXS5sZW5ndGggPiBncm91cFNpemUgfHwgdnNbMV0ubGVuZ3RoID4gZ3JvdXBTaXplIHx8IHZzWzBdLmxlbmd0aCA8PSBncm91cFNpemUgJiYgdnNbMV0ubGVuZ3RoIDwgZ3JvdXBTaXplKSAmJiAoaW5pdGlhbFZhbHVlID0gaW5pdGlhbFZhbHVlLnJlcGxhY2UoXCIuXCIsIG9wdHMucmFkaXhQb2ludCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIga29tbWFNYXRjaGVzID0gaW5pdGlhbFZhbHVlLm1hdGNoKC8sL2cpLCBkb3RNYXRjaGVzID0gaW5pdGlhbFZhbHVlLm1hdGNoKC9cXC4vZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluaXRpYWxWYWx1ZSA9IGRvdE1hdGNoZXMgJiYga29tbWFNYXRjaGVzID8gZG90TWF0Y2hlcy5sZW5ndGggPiBrb21tYU1hdGNoZXMubGVuZ3RoID8gKGluaXRpYWxWYWx1ZSA9IGluaXRpYWxWYWx1ZS5yZXBsYWNlKC9cXC4vZywgXCJcIikpLnJlcGxhY2UoXCIsXCIsIG9wdHMucmFkaXhQb2ludCkgOiBrb21tYU1hdGNoZXMubGVuZ3RoID4gZG90TWF0Y2hlcy5sZW5ndGggPyAoaW5pdGlhbFZhbHVlID0gaW5pdGlhbFZhbHVlLnJlcGxhY2UoLywvZywgXCJcIikpLnJlcGxhY2UoXCIuXCIsIG9wdHMucmFkaXhQb2ludCkgOiBpbml0aWFsVmFsdWUuaW5kZXhPZihcIi5cIikgPCBpbml0aWFsVmFsdWUuaW5kZXhPZihcIixcIikgPyBpbml0aWFsVmFsdWUucmVwbGFjZSgvXFwuL2csIFwiXCIpIDogaW5pdGlhbFZhbHVlLnJlcGxhY2UoLywvZywgXCJcIikgOiBpbml0aWFsVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLmdyb3VwU2VwYXJhdG9yKSwgXCJnXCIpLCBcIlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgMCA9PT0gb3B0cy5kaWdpdHMgJiYgKC0xICE9PSBpbml0aWFsVmFsdWUuaW5kZXhPZihcIi5cIikgPyBpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUuc3Vic3RyaW5nKDAsIGluaXRpYWxWYWx1ZS5pbmRleE9mKFwiLlwiKSkgOiAtMSAhPT0gaW5pdGlhbFZhbHVlLmluZGV4T2YoXCIsXCIpICYmIChpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUuc3Vic3RyaW5nKDAsIGluaXRpYWxWYWx1ZS5pbmRleE9mKFwiLFwiKSkpKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgXCJcIiAhPT0gb3B0cy5yYWRpeFBvaW50ICYmIGlzRmluaXRlKG9wdHMuZGlnaXRzKSAmJiAtMSAhPT0gaW5pdGlhbFZhbHVlLmluZGV4T2Yob3B0cy5yYWRpeFBvaW50KSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGVjUGFydCA9IGluaXRpYWxWYWx1ZS5zcGxpdChvcHRzLnJhZGl4UG9pbnQpWzFdLm1hdGNoKG5ldyBSZWdFeHAoXCJcXFxcZCpcIikpWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VJbnQob3B0cy5kaWdpdHMpIDwgZGVjUGFydC50b1N0cmluZygpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpZ2l0c0ZhY3RvciA9IE1hdGgucG93KDEwLCBwYXJzZUludChvcHRzLmRpZ2l0cykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdGlhbFZhbHVlID0gaW5pdGlhbFZhbHVlLnJlcGxhY2UoSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMucmFkaXhQb2ludCksIFwiLlwiKSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0aWFsVmFsdWUgPSAoaW5pdGlhbFZhbHVlID0gTWF0aC5yb3VuZChwYXJzZUZsb2F0KGluaXRpYWxWYWx1ZSkgKiBkaWdpdHNGYWN0b3IpIC8gZGlnaXRzRmFjdG9yKS50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsIG9wdHMucmFkaXhQb2ludCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGluaXRpYWxWYWx1ZTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjYW5DbGVhclBvc2l0aW9uOiBmdW5jdGlvbihtYXNrc2V0LCBwb3NpdGlvbiwgbHZwLCBzdHJpY3QsIG9wdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdnAgPSBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc2l0aW9uXSwgY2FuQ2xlYXIgPSB2cC5pbnB1dCAhPT0gb3B0cy5yYWRpeFBvaW50IHx8IG51bGwgIT09IG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zaXRpb25dLm1hdGNoLmZuICYmICExID09PSBvcHRzLmRlY2ltYWxQcm90ZWN0IHx8IHZwLmlucHV0ID09PSBvcHRzLnJhZGl4UG9pbnQgJiYgbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NpdGlvbiArIDFdICYmIG51bGwgPT09IG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zaXRpb24gKyAxXS5tYXRjaC5mbiB8fCBpc0Zpbml0ZSh2cC5pbnB1dCkgfHwgcG9zaXRpb24gPT09IGx2cCB8fCB2cC5pbnB1dCA9PT0gb3B0cy5ncm91cFNlcGFyYXRvciB8fCB2cC5pbnB1dCA9PT0gb3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCB8fCB2cC5pbnB1dCA9PT0gb3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhY2FuQ2xlYXIgfHwgXCIrXCIgIT09IHZwLm1hdGNoLm5hdGl2ZURlZiAmJiBcIi1cIiAhPT0gdnAubWF0Y2gubmF0aXZlRGVmIHx8IChvcHRzLmlzTmVnYXRpdmUgPSAhMSksIFxyXG4gICAgICAgICAgICAgICAgICAgIGNhbkNsZWFyO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG9uS2V5RG93bjogZnVuY3Rpb24oZSwgYnVmZmVyLCBjYXJldFBvcywgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciAkaW5wdXQgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlLmN0cmxLZXkpIHN3aXRjaCAoZS5rZXlDb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIElucHV0bWFzay5rZXlDb2RlLlVQOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudmFsKHBhcnNlRmxvYXQodGhpcy5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpKSArIHBhcnNlSW50KG9wdHMuc3RlcCkpLCAkaW5wdXQudHJpZ2dlcihcInNldHZhbHVlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIElucHV0bWFzay5rZXlDb2RlLkRPV046XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwocGFyc2VGbG9hdCh0aGlzLmlucHV0bWFzay51bm1hc2tlZHZhbHVlKCkpIC0gcGFyc2VJbnQob3B0cy5zdGVwKSksICRpbnB1dC50cmlnZ2VyKFwic2V0dmFsdWVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjdXJyZW5jeToge1xyXG4gICAgICAgICAgICAgICAgcHJlZml4OiBcIiQgXCIsXHJcbiAgICAgICAgICAgICAgICBncm91cFNlcGFyYXRvcjogXCIsXCIsXHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJudW1lcmljXCIsXHJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCIwXCIsXHJcbiAgICAgICAgICAgICAgICBhdXRvR3JvdXA6ICEwLFxyXG4gICAgICAgICAgICAgICAgZGlnaXRzOiAyLFxyXG4gICAgICAgICAgICAgICAgZGlnaXRzT3B0aW9uYWw6ICExLFxyXG4gICAgICAgICAgICAgICAgY2xlYXJNYXNrT25Mb3N0Rm9jdXM6ICExXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGRlY2ltYWw6IHtcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcIm51bWVyaWNcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBpbnRlZ2VyOiB7XHJcbiAgICAgICAgICAgICAgICBhbGlhczogXCJudW1lcmljXCIsXHJcbiAgICAgICAgICAgICAgICBkaWdpdHM6IDAsXHJcbiAgICAgICAgICAgICAgICByYWRpeFBvaW50OiBcIlwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHBlcmNlbnRhZ2U6IHtcclxuICAgICAgICAgICAgICAgIGFsaWFzOiBcIm51bWVyaWNcIixcclxuICAgICAgICAgICAgICAgIGRpZ2l0czogMixcclxuICAgICAgICAgICAgICAgIGRpZ2l0c09wdGlvbmFsOiAhMCxcclxuICAgICAgICAgICAgICAgIHJhZGl4UG9pbnQ6IFwiLlwiLFxyXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiMFwiLFxyXG4gICAgICAgICAgICAgICAgYXV0b0dyb3VwOiAhMSxcclxuICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgIG1heDogMTAwLFxyXG4gICAgICAgICAgICAgICAgc3VmZml4OiBcIiAlXCIsXHJcbiAgICAgICAgICAgICAgICBhbGxvd01pbnVzOiAhMVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSksIElucHV0bWFzaztcclxuICAgIH0pO1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XHJcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XHJcbiAgICAhZnVuY3Rpb24oZmFjdG9yeSkge1xyXG4gICAgICAgIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbIF9fd2VicGFja19yZXF1aXJlX18oMCksIF9fd2VicGFja19yZXF1aXJlX18oMSkgXSwgXHJcbiAgICAgICAgdm9pZCAwICE9PSAoX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIChfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18gPSBmYWN0b3J5KSA/IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXy5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSA6IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXykgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xyXG4gICAgfShmdW5jdGlvbigkLCBJbnB1dG1hc2spIHtcclxuICAgICAgICBmdW5jdGlvbiBtYXNrU29ydChhLCBiKSB7XHJcbiAgICAgICAgICAgIHZhciBtYXNrYSA9IChhLm1hc2sgfHwgYSkucmVwbGFjZSgvIy9nLCBcIjlcIikucmVwbGFjZSgvXFwpLywgXCI5XCIpLnJlcGxhY2UoL1srKCkjLV0vZywgXCJcIiksIG1hc2tiID0gKGIubWFzayB8fCBiKS5yZXBsYWNlKC8jL2csIFwiOVwiKS5yZXBsYWNlKC9cXCkvLCBcIjlcIikucmVwbGFjZSgvWysoKSMtXS9nLCBcIlwiKSwgbWFza2FzID0gKGEubWFzayB8fCBhKS5zcGxpdChcIiNcIilbMF0sIG1hc2ticyA9IChiLm1hc2sgfHwgYikuc3BsaXQoXCIjXCIpWzBdO1xyXG4gICAgICAgICAgICByZXR1cm4gMCA9PT0gbWFza2JzLmluZGV4T2YobWFza2FzKSA/IC0xIDogMCA9PT0gbWFza2FzLmluZGV4T2YobWFza2JzKSA/IDEgOiBtYXNrYS5sb2NhbGVDb21wYXJlKG1hc2tiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGFuYWx5c2VNYXNrQmFzZSA9IElucHV0bWFzay5wcm90b3R5cGUuYW5hbHlzZU1hc2s7XHJcbiAgICAgICAgcmV0dXJuIElucHV0bWFzay5wcm90b3R5cGUuYW5hbHlzZU1hc2sgPSBmdW5jdGlvbihtYXNrLCByZWdleE1hc2ssIG9wdHMpIHtcclxuICAgICAgICAgICAgZnVuY3Rpb24gcmVkdWNlVmFyaWF0aW9ucyhtYXNrcywgcHJldmlvdXNWYXJpYXRpb24sIHByZXZpb3VzbWFza0dyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICBwcmV2aW91c1ZhcmlhdGlvbiA9IHByZXZpb3VzVmFyaWF0aW9uIHx8IFwiXCIsIHByZXZpb3VzbWFza0dyb3VwID0gcHJldmlvdXNtYXNrR3JvdXAgfHwgbWFza0dyb3VwcywgXHJcbiAgICAgICAgICAgICAgICBcIlwiICE9PSBwcmV2aW91c1ZhcmlhdGlvbiAmJiAocHJldmlvdXNtYXNrR3JvdXBbcHJldmlvdXNWYXJpYXRpb25dID0ge30pO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgdmFyaWF0aW9uID0gXCJcIiwgbWFza0dyb3VwID0gcHJldmlvdXNtYXNrR3JvdXBbcHJldmlvdXNWYXJpYXRpb25dIHx8IHByZXZpb3VzbWFza0dyb3VwLCBpID0gbWFza3MubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIG1hc2tHcm91cFt2YXJpYXRpb24gPSAobWFzayA9IG1hc2tzW2ldLm1hc2sgfHwgbWFza3NbaV0pLnN1YnN0cigwLCAxKV0gPSBtYXNrR3JvdXBbdmFyaWF0aW9uXSB8fCBbXSwgXHJcbiAgICAgICAgICAgICAgICBtYXNrR3JvdXBbdmFyaWF0aW9uXS51bnNoaWZ0KG1hc2suc3Vic3RyKDEpKSwgbWFza3Muc3BsaWNlKGksIDEpO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgbmR4IGluIG1hc2tHcm91cCkgbWFza0dyb3VwW25keF0ubGVuZ3RoID4gNTAwICYmIHJlZHVjZVZhcmlhdGlvbnMobWFza0dyb3VwW25keF0uc2xpY2UoKSwgbmR4LCBtYXNrR3JvdXApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlYnVpbGQobWFza0dyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWFzayA9IFwiXCIsIHN1Ym1hc2tzID0gW107XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBuZHggaW4gbWFza0dyb3VwKSAkLmlzQXJyYXkobWFza0dyb3VwW25keF0pID8gMSA9PT0gbWFza0dyb3VwW25keF0ubGVuZ3RoID8gc3VibWFza3MucHVzaChuZHggKyBtYXNrR3JvdXBbbmR4XSkgOiBzdWJtYXNrcy5wdXNoKG5keCArIG9wdHMuZ3JvdXBtYXJrZXIuc3RhcnQgKyBtYXNrR3JvdXBbbmR4XS5qb2luKG9wdHMuZ3JvdXBtYXJrZXIuZW5kICsgb3B0cy5hbHRlcm5hdG9ybWFya2VyICsgb3B0cy5ncm91cG1hcmtlci5zdGFydCkgKyBvcHRzLmdyb3VwbWFya2VyLmVuZCkgOiBzdWJtYXNrcy5wdXNoKG5keCArIHJlYnVpbGQobWFza0dyb3VwW25keF0pKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiAxID09PSBzdWJtYXNrcy5sZW5ndGggPyBtYXNrICs9IHN1Ym1hc2tzWzBdIDogbWFzayArPSBvcHRzLmdyb3VwbWFya2VyLnN0YXJ0ICsgc3VibWFza3Muam9pbihvcHRzLmdyb3VwbWFya2VyLmVuZCArIG9wdHMuYWx0ZXJuYXRvcm1hcmtlciArIG9wdHMuZ3JvdXBtYXJrZXIuc3RhcnQpICsgb3B0cy5ncm91cG1hcmtlci5lbmQsIFxyXG4gICAgICAgICAgICAgICAgbWFzaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgbWFza0dyb3VwcyA9IHt9O1xyXG4gICAgICAgICAgICByZXR1cm4gb3B0cy5waG9uZUNvZGVzICYmIChvcHRzLnBob25lQ29kZXMgJiYgb3B0cy5waG9uZUNvZGVzLmxlbmd0aCA+IDFlMyAmJiAocmVkdWNlVmFyaWF0aW9ucygobWFzayA9IG1hc2suc3Vic3RyKDEsIG1hc2subGVuZ3RoIC0gMikpLnNwbGl0KG9wdHMuZ3JvdXBtYXJrZXIuZW5kICsgb3B0cy5hbHRlcm5hdG9ybWFya2VyICsgb3B0cy5ncm91cG1hcmtlci5zdGFydCkpLCBcclxuICAgICAgICAgICAgbWFzayA9IHJlYnVpbGQobWFza0dyb3VwcykpLCBtYXNrID0gbWFzay5yZXBsYWNlKC85L2csIFwiXFxcXDlcIikpLCBhbmFseXNlTWFza0Jhc2UuY2FsbCh0aGlzLCBtYXNrLCByZWdleE1hc2ssIG9wdHMpO1xyXG4gICAgICAgIH0sIElucHV0bWFzay5leHRlbmRBbGlhc2VzKHtcclxuICAgICAgICAgICAgYWJzdHJhY3RwaG9uZToge1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBtYXJrZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydDogXCI8XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZW5kOiBcIj5cIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNvdW50cnljb2RlOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgcGhvbmVDb2RlczogW10sXHJcbiAgICAgICAgICAgICAgICBtYXNrOiBmdW5jdGlvbihvcHRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuZGVmaW5pdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiI1wiOiBJbnB1dG1hc2sucHJvdG90eXBlLmRlZmluaXRpb25zWzldXHJcbiAgICAgICAgICAgICAgICAgICAgfSwgb3B0cy5waG9uZUNvZGVzLnNvcnQobWFza1NvcnQpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGtlZXBTdGF0aWM6ICEwLFxyXG4gICAgICAgICAgICAgICAgb25CZWZvcmVNYXNrOiBmdW5jdGlvbih2YWx1ZSwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9jZXNzZWRWYWx1ZSA9IHZhbHVlLnJlcGxhY2UoL14wezEsMn0vLCBcIlwiKS5yZXBsYWNlKC9bXFxzXS9nLCBcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKHByb2Nlc3NlZFZhbHVlLmluZGV4T2Yob3B0cy5jb3VudHJ5Y29kZSkgPiAxIHx8IC0xID09PSBwcm9jZXNzZWRWYWx1ZS5pbmRleE9mKG9wdHMuY291bnRyeWNvZGUpKSAmJiAocHJvY2Vzc2VkVmFsdWUgPSBcIitcIiArIG9wdHMuY291bnRyeWNvZGUgKyBwcm9jZXNzZWRWYWx1ZSksIFxyXG4gICAgICAgICAgICAgICAgICAgIHByb2Nlc3NlZFZhbHVlO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG9uVW5NYXNrOiBmdW5jdGlvbihtYXNrZWRWYWx1ZSwgdW5tYXNrZWRWYWx1ZSwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXNrZWRWYWx1ZS5yZXBsYWNlKC9bKCkjLV0vZywgXCJcIik7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgaW5wdXRtb2RlOiBcInRlbFwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSwgSW5wdXRtYXNrO1xyXG4gICAgfSk7XHJcbn0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xyXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XHJcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXztcclxuICAgIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFN5bWJvbC5pdGVyYXRvcjtcclxuICAgICFmdW5jdGlvbihmYWN0b3J5KSB7XHJcbiAgICAgICAgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFsgX193ZWJwYWNrX3JlcXVpcmVfXygwKSwgX193ZWJwYWNrX3JlcXVpcmVfXygxKSBdLCBcclxuICAgICAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgKF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9IGZhY3RvcnkpID8gX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XHJcbiAgICB9KGZ1bmN0aW9uKCQsIElucHV0bWFzaykge1xyXG4gICAgICAgIHJldHVybiBJbnB1dG1hc2suZXh0ZW5kQWxpYXNlcyh7XHJcbiAgICAgICAgICAgIFJlZ2V4OiB7XHJcbiAgICAgICAgICAgICAgICBtYXNrOiBcInJcIixcclxuICAgICAgICAgICAgICAgIGdyZWVkeTogITEsXHJcbiAgICAgICAgICAgICAgICByZXBlYXQ6IFwiKlwiLFxyXG4gICAgICAgICAgICAgICAgcmVnZXg6IG51bGwsXHJcbiAgICAgICAgICAgICAgICByZWdleFRva2VuczogbnVsbCxcclxuICAgICAgICAgICAgICAgIHRva2VuaXplcjogL1xcW1xcXj9dPyg/OlteXFxcXFxcXV0rfFxcXFxbXFxTXFxzXT8pKl0/fFxcXFwoPzowKD86WzAtM11bMC03XXswLDJ9fFs0LTddWzAtN10/KT98WzEtOV1bMC05XSp8eFswLTlBLUZhLWZdezJ9fHVbMC05QS1GYS1mXXs0fXxjW0EtWmEtel18W1xcU1xcc10/KXxcXCgoPzpcXD9bOj0hXT8pP3woPzpbPyorXXxcXHtbMC05XSsoPzosWzAtOV0qKT9cXH0pXFw/P3xbXi4/KiteJHtbKCl8XFxcXF0rfC4vZyxcclxuICAgICAgICAgICAgICAgIHF1YW50aWZpZXJGaWx0ZXI6IC9bMC05XStbXixdLyxcclxuICAgICAgICAgICAgICAgIGlzQ29tcGxldGU6IGZ1bmN0aW9uKGJ1ZmZlciwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKG9wdHMucmVnZXgsIG9wdHMuY2FzaW5nID8gXCJpXCIgOiBcIlwiKS50ZXN0KGJ1ZmZlci5qb2luKFwiXCIpKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBkZWZpbml0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gUmVnZXhUb2tlbihpc0dyb3VwLCBpc1F1YW50aWZpZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hdGNoZXMgPSBbXSwgdGhpcy5pc0dyb3VwID0gaXNHcm91cCB8fCAhMSwgdGhpcy5pc1F1YW50aWZpZXIgPSBpc1F1YW50aWZpZXIgfHwgITEsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVhbnRpZmllciA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6IDFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB0aGlzLnJlcGVhdGVyUGFydCA9IHZvaWQgMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHZhbGlkYXRlUmVnZXhUb2tlbih0b2tlbiwgZnJvbUdyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzdmFsaWQgPSAhMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tR3JvdXAgJiYgKHJlZ2V4UGFydCArPSBcIihcIiwgb3Blbkdyb3VwQ291bnQrKyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbW5keCA9IDA7IG1uZHggPCB0b2tlbi5tYXRjaGVzLmxlbmd0aDsgbW5keCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaFRva2VuID0gdG9rZW4ubWF0Y2hlc1ttbmR4XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwID09PSBtYXRjaFRva2VuLmlzR3JvdXApIGlzdmFsaWQgPSB2YWxpZGF0ZVJlZ2V4VG9rZW4obWF0Y2hUb2tlbiwgITApOyBlbHNlIGlmICghMCA9PT0gbWF0Y2hUb2tlbi5pc1F1YW50aWZpZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjcnJudG5keCA9ICQuaW5BcnJheShtYXRjaFRva2VuLCB0b2tlbi5tYXRjaGVzKSwgbWF0Y2hHcm91cCA9IHRva2VuLm1hdGNoZXNbY3JybnRuZHggLSAxXSwgcmVnZXhQYXJ0QmFrID0gcmVnZXhQYXJ0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmFOKG1hdGNoVG9rZW4ucXVhbnRpZmllci5tYXgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICg7bWF0Y2hUb2tlbi5yZXBlYXRlclBhcnQgJiYgbWF0Y2hUb2tlbi5yZXBlYXRlclBhcnQgIT09IHJlZ2V4UGFydCAmJiBtYXRjaFRva2VuLnJlcGVhdGVyUGFydC5sZW5ndGggPiByZWdleFBhcnQubGVuZ3RoICYmICEoaXN2YWxpZCA9IHZhbGlkYXRlUmVnZXhUb2tlbihtYXRjaEdyb3VwLCAhMCkpOyApIDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaXN2YWxpZCA9IGlzdmFsaWQgfHwgdmFsaWRhdGVSZWdleFRva2VuKG1hdGNoR3JvdXAsICEwKSkgJiYgKG1hdGNoVG9rZW4ucmVwZWF0ZXJQYXJ0ID0gcmVnZXhQYXJ0KSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXhQYXJ0ID0gcmVnZXhQYXJ0QmFrICsgbWF0Y2hUb2tlbi5xdWFudGlmaWVyLm1heDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIHFtID0gbWF0Y2hUb2tlbi5xdWFudGlmaWVyLm1heCAtIDE7IGkgPCBxbSAmJiAhKGlzdmFsaWQgPSB2YWxpZGF0ZVJlZ2V4VG9rZW4obWF0Y2hHcm91cCwgITApKTsgaSsrKSA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXhQYXJ0ID0gcmVnZXhQYXJ0QmFrICsgXCJ7XCIgKyBtYXRjaFRva2VuLnF1YW50aWZpZXIubWluICsgXCIsXCIgKyBtYXRjaFRva2VuLnF1YW50aWZpZXIubWF4ICsgXCJ9XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodm9pZCAwICE9PSBtYXRjaFRva2VuLm1hdGNoZXMpIGZvciAodmFyIGsgPSAwOyBrIDwgbWF0Y2hUb2tlbi5sZW5ndGggJiYgIShpc3ZhbGlkID0gdmFsaWRhdGVSZWdleFRva2VuKG1hdGNoVG9rZW5ba10sIGZyb21Hcm91cCkpOyBrKyspIDsgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVzdEV4cDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcIltcIiA9PSBtYXRjaFRva2VuLmNoYXJBdCgwKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlc3RFeHAgPSByZWdleFBhcnQsIHRlc3RFeHAgKz0gbWF0Y2hUb2tlbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgb3Blbkdyb3VwQ291bnQ7IGorKykgdGVzdEV4cCArPSBcIilcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc3ZhbGlkID0gKGV4cCA9IG5ldyBSZWdFeHAoXCJeKFwiICsgdGVzdEV4cCArIFwiKSRcIiwgb3B0cy5jYXNpbmcgPyBcImlcIiA6IFwiXCIpKS50ZXN0KGJ1ZmZlclN0cik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgZm9yICh2YXIgbCA9IDAsIHRsID0gbWF0Y2hUb2tlbi5sZW5ndGg7IGwgPCB0bDsgbCsrKSBpZiAoXCJcXFxcXCIgIT09IG1hdGNoVG9rZW4uY2hhckF0KGwpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdEV4cCA9IHJlZ2V4UGFydCwgdGVzdEV4cCA9ICh0ZXN0RXhwICs9IG1hdGNoVG9rZW4uc3Vic3RyKDAsIGwgKyAxKSkucmVwbGFjZSgvXFx8JC8sIFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgb3Blbkdyb3VwQ291bnQ7IGorKykgdGVzdEV4cCArPSBcIilcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXhwID0gbmV3IFJlZ0V4cChcIl4oXCIgKyB0ZXN0RXhwICsgXCIpJFwiLCBvcHRzLmNhc2luZyA/IFwiaVwiIDogXCJcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzdmFsaWQgPSBleHAudGVzdChidWZmZXJTdHIpKSBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4UGFydCArPSBtYXRjaFRva2VuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3ZhbGlkKSBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZyb21Hcm91cCAmJiAocmVnZXhQYXJ0ICs9IFwiKVwiLCBvcGVuR3JvdXBDb3VudC0tKSwgaXN2YWxpZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBidWZmZXJTdHIsIGdyb3VwVG9rZW4sIGNidWZmZXIgPSBtYXNrc2V0LmJ1ZmZlci5zbGljZSgpLCByZWdleFBhcnQgPSBcIlwiLCBpc1ZhbGlkID0gITEsIG9wZW5Hcm91cENvdW50ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgPT09IG9wdHMucmVnZXhUb2tlbnMgJiYgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hdGNoLCBtLCBjdXJyZW50VG9rZW4gPSBuZXcgUmVnZXhUb2tlbigpLCBvcGVuZ3JvdXBzID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChvcHRzLnJlZ2V4VG9rZW5zID0gW107IG1hdGNoID0gb3B0cy50b2tlbml6ZXIuZXhlYyhvcHRzLnJlZ2V4KTsgKSBzd2l0Y2ggKChtID0gbWF0Y2hbMF0pLmNoYXJBdCgwKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIihcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3Blbmdyb3Vwcy5wdXNoKG5ldyBSZWdleFRva2VuKCEwKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCIpXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyb3VwVG9rZW4gPSBvcGVuZ3JvdXBzLnBvcCgpLCBvcGVuZ3JvdXBzLmxlbmd0aCA+IDAgPyBvcGVuZ3JvdXBzW29wZW5ncm91cHMubGVuZ3RoIC0gMV0ubWF0Y2hlcy5wdXNoKGdyb3VwVG9rZW4pIDogY3VycmVudFRva2VuLm1hdGNoZXMucHVzaChncm91cFRva2VuKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIntcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCIrXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiKlwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcXVhbnRpZmllclRva2VuID0gbmV3IFJlZ2V4VG9rZW4oITEsICEwKSwgbXEgPSAobSA9IG0ucmVwbGFjZSgvW3t9XS9nLCBcIlwiKSkuc3BsaXQoXCIsXCIpLCBtcTAgPSBpc05hTihtcVswXSkgPyBtcVswXSA6IHBhcnNlSW50KG1xWzBdKSwgbXExID0gMSA9PT0gbXEubGVuZ3RoID8gbXEwIDogaXNOYU4obXFbMV0pID8gbXFbMV0gOiBwYXJzZUludChtcVsxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxdWFudGlmaWVyVG9rZW4ucXVhbnRpZmllciA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogbXEwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiBtcTFcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgb3Blbmdyb3Vwcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IG9wZW5ncm91cHNbb3Blbmdyb3Vwcy5sZW5ndGggLSAxXS5tYXRjaGVzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG1hdGNoID0gbWF0Y2hlcy5wb3AoKSkuaXNHcm91cCB8fCAoKGdyb3VwVG9rZW4gPSBuZXcgUmVnZXhUb2tlbighMCkpLm1hdGNoZXMucHVzaChtYXRjaCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2ggPSBncm91cFRva2VuKSwgbWF0Y2hlcy5wdXNoKG1hdGNoKSwgbWF0Y2hlcy5wdXNoKHF1YW50aWZpZXJUb2tlbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSAobWF0Y2ggPSBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wb3AoKSkuaXNHcm91cCB8fCAoKGdyb3VwVG9rZW4gPSBuZXcgUmVnZXhUb2tlbighMCkpLm1hdGNoZXMucHVzaChtYXRjaCksIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaCA9IGdyb3VwVG9rZW4pLCBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKG1hdGNoKSwgY3VycmVudFRva2VuLm1hdGNoZXMucHVzaChxdWFudGlmaWVyVG9rZW4pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuZ3JvdXBzLmxlbmd0aCA+IDAgPyBvcGVuZ3JvdXBzW29wZW5ncm91cHMubGVuZ3RoIC0gMV0ubWF0Y2hlcy5wdXNoKG0pIDogY3VycmVudFRva2VuLm1hdGNoZXMucHVzaChtKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFRva2VuLm1hdGNoZXMubGVuZ3RoID4gMCAmJiBvcHRzLnJlZ2V4VG9rZW5zLnB1c2goY3VycmVudFRva2VuKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0oKSwgY2J1ZmZlci5zcGxpY2UocG9zLCAwLCBjaHJzKSwgYnVmZmVyU3RyID0gY2J1ZmZlci5qb2luKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcHRzLnJlZ2V4VG9rZW5zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlZ2V4VG9rZW4gPSBvcHRzLnJlZ2V4VG9rZW5zW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkID0gdmFsaWRhdGVSZWdleFRva2VuKHJlZ2V4VG9rZW4sIHJlZ2V4VG9rZW4uaXNHcm91cCkpIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzVmFsaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSksIElucHV0bWFzaztcclxuICAgIH0pO1xyXG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18sIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbihvYmopIHtcclxuICAgICAgICByZXR1cm4gdHlwZW9mIG9iajtcclxuICAgIH0gOiBmdW5jdGlvbihvYmopIHtcclxuICAgICAgICByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xyXG4gICAgfTtcclxuICAgICFmdW5jdGlvbihmYWN0b3J5KSB7XHJcbiAgICAgICAgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFsgX193ZWJwYWNrX3JlcXVpcmVfXygyKSwgX193ZWJwYWNrX3JlcXVpcmVfXygxKSBdLCBcclxuICAgICAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgKF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9IGZhY3RvcnkpID8gX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XHJcbiAgICB9KGZ1bmN0aW9uKCQsIElucHV0bWFzaykge1xyXG4gICAgICAgIHJldHVybiB2b2lkIDAgPT09ICQuZm4uaW5wdXRtYXNrICYmICgkLmZuLmlucHV0bWFzayA9IGZ1bmN0aW9uKGZuLCBvcHRpb25zKSB7XHJcbiAgICAgICAgICAgIHZhciBucHRtYXNrLCBpbnB1dCA9IHRoaXNbMF07XHJcbiAgICAgICAgICAgIGlmICh2b2lkIDAgPT09IG9wdGlvbnMgJiYgKG9wdGlvbnMgPSB7fSksIFwic3RyaW5nXCIgPT0gdHlwZW9mIGZuKSBzd2l0Y2ggKGZuKSB7XHJcbiAgICAgICAgICAgICAgY2FzZSBcInVubWFza2VkdmFsdWVcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dCAmJiBpbnB1dC5pbnB1dG1hc2sgPyBpbnB1dC5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpIDogJChpbnB1dCkudmFsKCk7XHJcblxyXG4gICAgICAgICAgICAgIGNhc2UgXCJyZW1vdmVcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnB1dG1hc2sgJiYgdGhpcy5pbnB1dG1hc2sucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgY2FzZSBcImdldGVtcHR5bWFza1wiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0ICYmIGlucHV0LmlucHV0bWFzayA/IGlucHV0LmlucHV0bWFzay5nZXRlbXB0eW1hc2soKSA6IFwiXCI7XHJcblxyXG4gICAgICAgICAgICAgIGNhc2UgXCJoYXNNYXNrZWRWYWx1ZVwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICEoIWlucHV0IHx8ICFpbnB1dC5pbnB1dG1hc2spICYmIGlucHV0LmlucHV0bWFzay5oYXNNYXNrZWRWYWx1ZSgpO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlIFwiaXNDb21wbGV0ZVwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICFpbnB1dCB8fCAhaW5wdXQuaW5wdXRtYXNrIHx8IGlucHV0LmlucHV0bWFzay5pc0NvbXBsZXRlKCk7XHJcblxyXG4gICAgICAgICAgICAgIGNhc2UgXCJnZXRtZXRhZGF0YVwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0ICYmIGlucHV0LmlucHV0bWFzayA/IGlucHV0LmlucHV0bWFzay5nZXRtZXRhZGF0YSgpIDogdm9pZCAwO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlIFwic2V0dmFsdWVcIjpcclxuICAgICAgICAgICAgICAgICQoaW5wdXQpLnZhbChvcHRpb25zKSwgaW5wdXQgJiYgdm9pZCAwID09PSBpbnB1dC5pbnB1dG1hc2sgJiYgJChpbnB1dCkudHJpZ2dlckhhbmRsZXIoXCJzZXR2YWx1ZVwiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlIFwib3B0aW9uXCI6XHJcbiAgICAgICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiAhPSB0eXBlb2Ygb3B0aW9ucykgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodm9pZCAwICE9PSB0aGlzLmlucHV0bWFzaykgcmV0dXJuIHRoaXMuaW5wdXRtYXNrLm9wdGlvbihvcHRpb25zKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKGlucHV0ICYmIHZvaWQgMCAhPT0gaW5wdXQuaW5wdXRtYXNrKSByZXR1cm4gaW5wdXQuaW5wdXRtYXNrLm9wdGlvbihvcHRpb25zKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMuYWxpYXMgPSBmbiwgbnB0bWFzayA9IG5ldyBJbnB1dG1hc2sob3B0aW9ucyksIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICBucHRtYXNrLm1hc2sodGhpcyk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChcIm9iamVjdFwiID09ICh2b2lkIDAgPT09IGZuID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2YoZm4pKSkgcmV0dXJuIG5wdG1hc2sgPSBuZXcgSW5wdXRtYXNrKGZuKSwgXHJcbiAgICAgICAgICAgICAgICB2b2lkIDAgPT09IGZuLm1hc2sgJiYgdm9pZCAwID09PSBmbi5hbGlhcyA/IHRoaXMuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodm9pZCAwICE9PSB0aGlzLmlucHV0bWFzaykgcmV0dXJuIHRoaXMuaW5wdXRtYXNrLm9wdGlvbihmbik7XHJcbiAgICAgICAgICAgICAgICAgICAgbnB0bWFzay5tYXNrKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgfSkgOiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbnB0bWFzay5tYXNrKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodm9pZCAwID09PSBmbikgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAobnB0bWFzayA9IG5ldyBJbnB1dG1hc2sob3B0aW9ucykpLm1hc2sodGhpcyk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pLCAkLmZuLmlucHV0bWFzaztcclxuICAgIH0pO1xyXG59IF0pOyIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBmYW5jeUJveCB2My4yLjVcbi8vXG4vLyBMaWNlbnNlZCBHUEx2MyBmb3Igb3BlbiBzb3VyY2UgdXNlXG4vLyBvciBmYW5jeUJveCBDb21tZXJjaWFsIExpY2Vuc2UgZm9yIGNvbW1lcmNpYWwgdXNlXG4vL1xuLy8gaHR0cDovL2ZhbmN5YXBwcy5jb20vZmFuY3lib3gvXG4vLyBDb3B5cmlnaHQgMjAxNyBmYW5jeUFwcHNcbi8vXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIWZ1bmN0aW9uKHQsZSxuLG8pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEodCl7dmFyIGU9bih0LmN1cnJlbnRUYXJnZXQpLG89dC5kYXRhP3QuZGF0YS5vcHRpb25zOnt9LGE9ZS5hdHRyKFwiZGF0YS1mYW5jeWJveFwiKXx8XCJcIixpPTAscz1bXTt0LmlzRGVmYXVsdFByZXZlbnRlZCgpfHwodC5wcmV2ZW50RGVmYXVsdCgpLGE/KHM9by5zZWxlY3Rvcj9uKG8uc2VsZWN0b3IpOnQuZGF0YT90LmRhdGEuaXRlbXM6W10scz1zLmxlbmd0aD9zLmZpbHRlcignW2RhdGEtZmFuY3lib3g9XCInK2ErJ1wiXScpOm4oJ1tkYXRhLWZhbmN5Ym94PVwiJythKydcIl0nKSxpPXMuaW5kZXgoZSksaTwwJiYoaT0wKSk6cz1bZV0sbi5mYW5jeWJveC5vcGVuKHMsbyxpKSl9aWYobil7aWYobi5mbi5mYW5jeWJveClyZXR1cm4gdm9pZChcImNvbnNvbGVcImluIHQmJmNvbnNvbGUubG9nKFwiZmFuY3lCb3ggYWxyZWFkeSBpbml0aWFsaXplZFwiKSk7dmFyIGk9e2xvb3A6ITEsbWFyZ2luOls0NCwwXSxndXR0ZXI6NTAsa2V5Ym9hcmQ6ITAsYXJyb3dzOiEwLGluZm9iYXI6ITAsdG9vbGJhcjohMCxidXR0b25zOltcInNsaWRlU2hvd1wiLFwiZnVsbFNjcmVlblwiLFwidGh1bWJzXCIsXCJzaGFyZVwiLFwiY2xvc2VcIl0saWRsZVRpbWU6MyxzbWFsbEJ0bjpcImF1dG9cIixwcm90ZWN0OiExLG1vZGFsOiExLGltYWdlOntwcmVsb2FkOlwiYXV0b1wifSxhamF4OntzZXR0aW5nczp7ZGF0YTp7ZmFuY3lib3g6ITB9fX0saWZyYW1lOnt0cGw6JzxpZnJhbWUgaWQ9XCJmYW5jeWJveC1mcmFtZXtybmR9XCIgbmFtZT1cImZhbmN5Ym94LWZyYW1le3JuZH1cIiBjbGFzcz1cImZhbmN5Ym94LWlmcmFtZVwiIGZyYW1lYm9yZGVyPVwiMFwiIHZzcGFjZT1cIjBcIiBoc3BhY2U9XCIwXCIgd2Via2l0QWxsb3dGdWxsU2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiBhbGxvd0Z1bGxTY3JlZW4gYWxsb3d0cmFuc3BhcmVuY3k9XCJ0cnVlXCIgc3JjPVwiXCI+PC9pZnJhbWU+JyxwcmVsb2FkOiEwLGNzczp7fSxhdHRyOntzY3JvbGxpbmc6XCJhdXRvXCJ9fSxkZWZhdWx0VHlwZTpcImltYWdlXCIsYW5pbWF0aW9uRWZmZWN0Olwiem9vbVwiLGFuaW1hdGlvbkR1cmF0aW9uOjUwMCx6b29tT3BhY2l0eTpcImF1dG9cIix0cmFuc2l0aW9uRWZmZWN0OlwiZmFkZVwiLHRyYW5zaXRpb25EdXJhdGlvbjozNjYsc2xpZGVDbGFzczpcIlwiLGJhc2VDbGFzczpcIlwiLGJhc2VUcGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1jb250YWluZXJcIiByb2xlPVwiZGlhbG9nXCIgdGFiaW5kZXg9XCItMVwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1iZ1wiPjwvZGl2PjxkaXYgY2xhc3M9XCJmYW5jeWJveC1pbm5lclwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1pbmZvYmFyXCI+PHNwYW4gZGF0YS1mYW5jeWJveC1pbmRleD48L3NwYW4+Jm5ic3A7LyZuYnNwOzxzcGFuIGRhdGEtZmFuY3lib3gtY291bnQ+PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJmYW5jeWJveC10b29sYmFyXCI+e3tidXR0b25zfX08L2Rpdj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtbmF2aWdhdGlvblwiPnt7YXJyb3dzfX08L2Rpdj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtc3RhZ2VcIj48L2Rpdj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtY2FwdGlvbi13cmFwXCI+PGRpdiBjbGFzcz1cImZhbmN5Ym94LWNhcHRpb25cIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4nLHNwaW5uZXJUcGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1sb2FkaW5nXCI+PC9kaXY+JyxlcnJvclRwbDonPGRpdiBjbGFzcz1cImZhbmN5Ym94LWVycm9yXCI+PHA+e3tFUlJPUn19PHA+PC9kaXY+JyxidG5UcGw6e2Rvd25sb2FkOic8YSBkb3dubG9hZCBkYXRhLWZhbmN5Ym94LWRvd25sb2FkIGNsYXNzPVwiZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tZG93bmxvYWRcIiB0aXRsZT1cInt7RE9XTkxPQUR9fVwiPjxzdmcgdmlld0JveD1cIjAgMCA0MCA0MFwiPjxwYXRoIGQ9XCJNMjAsMjMgTDIwLDggTDIwLDIzIEwxMywxNiBMMjAsMjMgTDI3LDE2IEwyMCwyMyBNMjYsMjggTDEzLDI4IEwyNywyOCBMMTQsMjhcIiAvPjwvc3ZnPjwvYT4nLHpvb206JzxidXR0b24gZGF0YS1mYW5jeWJveC16b29tIGNsYXNzPVwiZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tem9vbVwiIHRpdGxlPVwie3taT09NfX1cIj48c3ZnIHZpZXdCb3g9XCIwIDAgNDAgNDBcIj48cGF0aCBkPVwiTSAxOCwxNyBtLTgsMCBhIDgsOCAwIDEsMCAxNiwwIGEgOCw4IDAgMSwwIC0xNiwwIE0yNSwyMyBMMzEsMjkgTDI1LDIzXCIgLz48L3N2Zz48L2J1dHRvbj4nLGNsb3NlOic8YnV0dG9uIGRhdGEtZmFuY3lib3gtY2xvc2UgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1jbG9zZVwiIHRpdGxlPVwie3tDTE9TRX19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDQwIDQwXCI+PHBhdGggZD1cIk0xMCwxMCBMMzAsMzAgTTMwLDEwIEwxMCwzMFwiIC8+PC9zdmc+PC9idXR0b24+JyxzbWFsbEJ0bjonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LWNsb3NlIGNsYXNzPVwiZmFuY3lib3gtY2xvc2Utc21hbGxcIiB0aXRsZT1cInt7Q0xPU0V9fVwiPjwvYnV0dG9uPicsYXJyb3dMZWZ0Oic8YnV0dG9uIGRhdGEtZmFuY3lib3gtcHJldiBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLWFycm93X2xlZnRcIiB0aXRsZT1cInt7UFJFVn19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDQwIDQwXCI+PHBhdGggZD1cIk0xMCwyMCBMMzAsMjAgTDEwLDIwIEwxOCwyOCBMMTAsMjAgTDE4LDEyIEwxMCwyMFwiPjwvcGF0aD48L3N2Zz48L2J1dHRvbj4nLGFycm93UmlnaHQ6JzxidXR0b24gZGF0YS1mYW5jeWJveC1uZXh0IGNsYXNzPVwiZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tYXJyb3dfcmlnaHRcIiB0aXRsZT1cInt7TkVYVH19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDQwIDQwXCI+PHBhdGggZD1cIk0zMCwyMCBMMTAsMjAgTDMwLDIwIEwyMiwyOCBMMzAsMjAgTDIyLDEyIEwzMCwyMFwiPjwvcGF0aD48L3N2Zz48L2J1dHRvbj4nfSxwYXJlbnRFbDpcImJvZHlcIixhdXRvRm9jdXM6ITEsYmFja0ZvY3VzOiEwLHRyYXBGb2N1czohMCxmdWxsU2NyZWVuOnthdXRvU3RhcnQ6ITF9LHRvdWNoOnt2ZXJ0aWNhbDohMCxtb21lbnR1bTohMH0saGFzaDpudWxsLG1lZGlhOnt9LHNsaWRlU2hvdzp7YXV0b1N0YXJ0OiExLHNwZWVkOjRlM30sdGh1bWJzOnthdXRvU3RhcnQ6ITEsaGlkZU9uQ2xvc2U6ITAscGFyZW50RWw6XCIuZmFuY3lib3gtY29udGFpbmVyXCIsYXhpczpcInlcIn0sb25Jbml0Om4ubm9vcCxiZWZvcmVMb2FkOm4ubm9vcCxhZnRlckxvYWQ6bi5ub29wLGJlZm9yZVNob3c6bi5ub29wLGFmdGVyU2hvdzpuLm5vb3AsYmVmb3JlQ2xvc2U6bi5ub29wLGFmdGVyQ2xvc2U6bi5ub29wLG9uQWN0aXZhdGU6bi5ub29wLG9uRGVhY3RpdmF0ZTpuLm5vb3AsY2xpY2tDb250ZW50OmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJpbWFnZVwiPT09dC50eXBlJiZcInpvb21cIn0sY2xpY2tTbGlkZTpcImNsb3NlXCIsY2xpY2tPdXRzaWRlOlwiY2xvc2VcIixkYmxjbGlja0NvbnRlbnQ6ITEsZGJsY2xpY2tTbGlkZTohMSxkYmxjbGlja091dHNpZGU6ITEsbW9iaWxlOnttYXJnaW46MCxjbGlja0NvbnRlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImltYWdlXCI9PT10LnR5cGUmJlwidG9nZ2xlQ29udHJvbHNcIn0sY2xpY2tTbGlkZTpmdW5jdGlvbih0LGUpe3JldHVyblwiaW1hZ2VcIj09PXQudHlwZT9cInRvZ2dsZUNvbnRyb2xzXCI6XCJjbG9zZVwifSxkYmxjbGlja0NvbnRlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImltYWdlXCI9PT10LnR5cGUmJlwiem9vbVwifSxkYmxjbGlja1NsaWRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJpbWFnZVwiPT09dC50eXBlJiZcInpvb21cIn19LGxhbmc6XCJlblwiLGkxOG46e2VuOntDTE9TRTpcIkNsb3NlXCIsTkVYVDpcIk5leHRcIixQUkVWOlwiUHJldmlvdXNcIixFUlJPUjpcIlRoZSByZXF1ZXN0ZWQgY29udGVudCBjYW5ub3QgYmUgbG9hZGVkLiA8YnIvPiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLlwiLFBMQVlfU1RBUlQ6XCJTdGFydCBzbGlkZXNob3dcIixQTEFZX1NUT1A6XCJQYXVzZSBzbGlkZXNob3dcIixGVUxMX1NDUkVFTjpcIkZ1bGwgc2NyZWVuXCIsVEhVTUJTOlwiVGh1bWJuYWlsc1wiLERPV05MT0FEOlwiRG93bmxvYWRcIixTSEFSRTpcIlNoYXJlXCIsWk9PTTpcIlpvb21cIn0sZGU6e0NMT1NFOlwiU2NobGllc3NlblwiLE5FWFQ6XCJXZWl0ZXJcIixQUkVWOlwiWnVyw7xja1wiLEVSUk9SOlwiRGllIGFuZ2Vmb3JkZXJ0ZW4gRGF0ZW4ga29ubnRlbiBuaWNodCBnZWxhZGVuIHdlcmRlbi4gPGJyLz4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcMOkdGVyIG5vY2htYWwuXCIsUExBWV9TVEFSVDpcIkRpYXNjaGF1IHN0YXJ0ZW5cIixQTEFZX1NUT1A6XCJEaWFzY2hhdSBiZWVuZGVuXCIsRlVMTF9TQ1JFRU46XCJWb2xsYmlsZFwiLFRIVU1CUzpcIlZvcnNjaGF1YmlsZGVyXCIsRE9XTkxPQUQ6XCJIZXJ1bnRlcmxhZGVuXCIsU0hBUkU6XCJUZWlsZW5cIixaT09NOlwiTWHDn3N0YWJcIn19fSxzPW4odCkscj1uKGUpLGM9MCxsPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Lmhhc093blByb3BlcnR5JiZ0IGluc3RhbmNlb2Ygbn0sdT1mdW5jdGlvbigpe3JldHVybiB0LnJlcXVlc3RBbmltYXRpb25GcmFtZXx8dC53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHQubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx0Lm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGUpe3JldHVybiB0LnNldFRpbWVvdXQoZSwxZTMvNjApfX0oKSxkPWZ1bmN0aW9uKCl7dmFyIHQsbj1lLmNyZWF0ZUVsZW1lbnQoXCJmYWtlZWxlbWVudFwiKSxhPXt0cmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwiLE9UcmFuc2l0aW9uOlwib1RyYW5zaXRpb25FbmRcIixNb3pUcmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwiLFdlYmtpdFRyYW5zaXRpb246XCJ3ZWJraXRUcmFuc2l0aW9uRW5kXCJ9O2Zvcih0IGluIGEpaWYobi5zdHlsZVt0XSE9PW8pcmV0dXJuIGFbdF07cmV0dXJuXCJ0cmFuc2l0aW9uZW5kXCJ9KCksZj1mdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5sZW5ndGgmJnRbMF0ub2Zmc2V0SGVpZ2h0fSxwPWZ1bmN0aW9uKHQsbyxhKXt2YXIgaT10aGlzO2kub3B0cz1uLmV4dGVuZCghMCx7aW5kZXg6YX0sbi5mYW5jeWJveC5kZWZhdWx0cyxvfHx7fSksbi5mYW5jeWJveC5pc01vYmlsZSYmKGkub3B0cz1uLmV4dGVuZCghMCx7fSxpLm9wdHMsaS5vcHRzLm1vYmlsZSkpLG8mJm4uaXNBcnJheShvLmJ1dHRvbnMpJiYoaS5vcHRzLmJ1dHRvbnM9by5idXR0b25zKSxpLmlkPWkub3B0cy5pZHx8KytjLGkuZ3JvdXA9W10saS5jdXJySW5kZXg9cGFyc2VJbnQoaS5vcHRzLmluZGV4LDEwKXx8MCxpLnByZXZJbmRleD1udWxsLGkucHJldlBvcz1udWxsLGkuY3VyclBvcz0wLGkuZmlyc3RSdW49bnVsbCxpLmNyZWF0ZUdyb3VwKHQpLGkuZ3JvdXAubGVuZ3RoJiYoaS4kbGFzdEZvY3VzPW4oZS5hY3RpdmVFbGVtZW50KS5ibHVyKCksaS5zbGlkZXM9e30saS5pbml0KCkpfTtuLmV4dGVuZChwLnByb3RvdHlwZSx7aW5pdDpmdW5jdGlvbigpe3ZhciBhLGkscyxjPXRoaXMsbD1jLmdyb3VwW2MuY3VyckluZGV4XSx1PWwub3B0cyxkPW4uZmFuY3lib3guc2Nyb2xsYmFyV2lkdGg7Yy5zY3JvbGxUb3A9ci5zY3JvbGxUb3AoKSxjLnNjcm9sbExlZnQ9ci5zY3JvbGxMZWZ0KCksbi5mYW5jeWJveC5nZXRJbnN0YW5jZSgpfHwobihcImJvZHlcIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1hY3RpdmVcIiksL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkmJiF0Lk1TU3RyZWFtP1wiaW1hZ2VcIiE9PWwudHlwZSYmbihcImJvZHlcIikuY3NzKFwidG9wXCIsbihcImJvZHlcIikuc2Nyb2xsVG9wKCkqLTEpLmFkZENsYXNzKFwiZmFuY3lib3gtaW9zZml4XCIpOiFuLmZhbmN5Ym94LmlzTW9iaWxlJiZlLmJvZHkuc2Nyb2xsSGVpZ2h0PnQuaW5uZXJIZWlnaHQmJihkPT09byYmKGE9bignPGRpdiBzdHlsZT1cIndpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7b3ZlcmZsb3c6c2Nyb2xsO1wiIC8+JykuYXBwZW5kVG8oXCJib2R5XCIpLGQ9bi5mYW5jeWJveC5zY3JvbGxiYXJXaWR0aD1hWzBdLm9mZnNldFdpZHRoLWFbMF0uY2xpZW50V2lkdGgsYS5yZW1vdmUoKSksbihcImhlYWRcIikuYXBwZW5kKCc8c3R5bGUgaWQ9XCJmYW5jeWJveC1zdHlsZS1ub3Njcm9sbFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiPi5jb21wZW5zYXRlLWZvci1zY3JvbGxiYXIgeyBtYXJnaW4tcmlnaHQ6ICcrZCtcInB4OyB9PC9zdHlsZT5cIiksbihcImJvZHlcIikuYWRkQ2xhc3MoXCJjb21wZW5zYXRlLWZvci1zY3JvbGxiYXJcIikpKSxzPVwiXCIsbi5lYWNoKHUuYnV0dG9ucyxmdW5jdGlvbih0LGUpe3MrPXUuYnRuVHBsW2VdfHxcIlwifSksaT1uKGMudHJhbnNsYXRlKGMsdS5iYXNlVHBsLnJlcGxhY2UoXCJ7e2J1dHRvbnN9fVwiLHMpLnJlcGxhY2UoXCJ7e2Fycm93c319XCIsdS5idG5UcGwuYXJyb3dMZWZ0K3UuYnRuVHBsLmFycm93UmlnaHQpKSkuYXR0cihcImlkXCIsXCJmYW5jeWJveC1jb250YWluZXItXCIrYy5pZCkuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1oaWRkZW5cIikuYWRkQ2xhc3ModS5iYXNlQ2xhc3MpLmRhdGEoXCJGYW5jeUJveFwiLGMpLmFwcGVuZFRvKHUucGFyZW50RWwpLGMuJHJlZnM9e2NvbnRhaW5lcjppfSxbXCJiZ1wiLFwiaW5uZXJcIixcImluZm9iYXJcIixcInRvb2xiYXJcIixcInN0YWdlXCIsXCJjYXB0aW9uXCIsXCJuYXZpZ2F0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24odCl7Yy4kcmVmc1t0XT1pLmZpbmQoXCIuZmFuY3lib3gtXCIrdCl9KSxjLnRyaWdnZXIoXCJvbkluaXRcIiksYy5hY3RpdmF0ZSgpLGMuanVtcFRvKGMuY3VyckluZGV4KX0sdHJhbnNsYXRlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5vcHRzLmkxOG5bdC5vcHRzLmxhbmddO3JldHVybiBlLnJlcGxhY2UoL1xce1xceyhcXHcrKVxcfVxcfS9nLGZ1bmN0aW9uKHQsZSl7dmFyIGE9bltlXTtyZXR1cm4gYT09PW8/dDphfSl9LGNyZWF0ZUdyb3VwOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsYT1uLm1ha2VBcnJheSh0KTtuLmVhY2goYSxmdW5jdGlvbih0LGEpe3ZhciBpLHMscixjLGw9e30sdT17fTtuLmlzUGxhaW5PYmplY3QoYSk/KGw9YSx1PWEub3B0c3x8YSk6XCJvYmplY3RcIj09PW4udHlwZShhKSYmbihhKS5sZW5ndGg/KGk9bihhKSx1PWkuZGF0YSgpLHU9bi5leHRlbmQoe30sdSx1Lm9wdGlvbnN8fHt9KSx1LiRvcmlnPWksbC5zcmM9dS5zcmN8fGkuYXR0cihcImhyZWZcIiksbC50eXBlfHxsLnNyY3x8KGwudHlwZT1cImlubGluZVwiLGwuc3JjPWEpKTpsPXt0eXBlOlwiaHRtbFwiLHNyYzphK1wiXCJ9LGwub3B0cz1uLmV4dGVuZCghMCx7fSxlLm9wdHMsdSksbi5pc0FycmF5KHUuYnV0dG9ucykmJihsLm9wdHMuYnV0dG9ucz11LmJ1dHRvbnMpLHM9bC50eXBlfHxsLm9wdHMudHlwZSxyPWwuc3JjfHxcIlwiLCFzJiZyJiYoci5tYXRjaCgvKF5kYXRhOmltYWdlXFwvW2EtejAtOStcXC89XSosKXwoXFwuKGpwKGV8Z3xlZyl8Z2lmfHBuZ3xibXB8d2VicHxzdmd8aWNvKSgoXFw/fCMpLiopPyQpL2kpP3M9XCJpbWFnZVwiOnIubWF0Y2goL1xcLihwZGYpKChcXD98IykuKik/JC9pKT9zPVwicGRmXCI6XCIjXCI9PT1yLmNoYXJBdCgwKSYmKHM9XCJpbmxpbmVcIikpLHM/bC50eXBlPXM6ZS50cmlnZ2VyKFwib2JqZWN0TmVlZHNUeXBlXCIsbCksbC5pbmRleD1lLmdyb3VwLmxlbmd0aCxsLm9wdHMuJG9yaWcmJiFsLm9wdHMuJG9yaWcubGVuZ3RoJiZkZWxldGUgbC5vcHRzLiRvcmlnLCFsLm9wdHMuJHRodW1iJiZsLm9wdHMuJG9yaWcmJihsLm9wdHMuJHRodW1iPWwub3B0cy4kb3JpZy5maW5kKFwiaW1nOmZpcnN0XCIpKSxsLm9wdHMuJHRodW1iJiYhbC5vcHRzLiR0aHVtYi5sZW5ndGgmJmRlbGV0ZSBsLm9wdHMuJHRodW1iLFwiZnVuY3Rpb25cIj09PW4udHlwZShsLm9wdHMuY2FwdGlvbikmJihsLm9wdHMuY2FwdGlvbj1sLm9wdHMuY2FwdGlvbi5hcHBseShhLFtlLGxdKSksXCJmdW5jdGlvblwiPT09bi50eXBlKGUub3B0cy5jYXB0aW9uKSYmKGwub3B0cy5jYXB0aW9uPWUub3B0cy5jYXB0aW9uLmFwcGx5KGEsW2UsbF0pKSxsLm9wdHMuY2FwdGlvbiBpbnN0YW5jZW9mIG58fChsLm9wdHMuY2FwdGlvbj1sLm9wdHMuY2FwdGlvbj09PW8/XCJcIjpsLm9wdHMuY2FwdGlvbitcIlwiKSxcImFqYXhcIj09PXMmJihjPXIuc3BsaXQoL1xccysvLDIpLGMubGVuZ3RoPjEmJihsLnNyYz1jLnNoaWZ0KCksbC5vcHRzLmZpbHRlcj1jLnNoaWZ0KCkpKSxcImF1dG9cIj09bC5vcHRzLnNtYWxsQnRuJiYobi5pbkFycmF5KHMsW1wiaHRtbFwiLFwiaW5saW5lXCIsXCJhamF4XCJdKT4tMT8obC5vcHRzLnRvb2xiYXI9ITEsbC5vcHRzLnNtYWxsQnRuPSEwKTpsLm9wdHMuc21hbGxCdG49ITEpLFwicGRmXCI9PT1zJiYobC50eXBlPVwiaWZyYW1lXCIsbC5vcHRzLmlmcmFtZS5wcmVsb2FkPSExKSxsLm9wdHMubW9kYWwmJihsLm9wdHM9bi5leHRlbmQoITAsbC5vcHRzLHtpbmZvYmFyOjAsdG9vbGJhcjowLHNtYWxsQnRuOjAsa2V5Ym9hcmQ6MCxzbGlkZVNob3c6MCxmdWxsU2NyZWVuOjAsdGh1bWJzOjAsdG91Y2g6MCxjbGlja0NvbnRlbnQ6ITEsY2xpY2tTbGlkZTohMSxjbGlja091dHNpZGU6ITEsZGJsY2xpY2tDb250ZW50OiExLGRibGNsaWNrU2xpZGU6ITEsZGJsY2xpY2tPdXRzaWRlOiExfSkpLGUuZ3JvdXAucHVzaChsKX0pfSxhZGRFdmVudHM6ZnVuY3Rpb24oKXt2YXIgbz10aGlzO28ucmVtb3ZlRXZlbnRzKCksby4kcmVmcy5jb250YWluZXIub24oXCJjbGljay5mYi1jbG9zZVwiLFwiW2RhdGEtZmFuY3lib3gtY2xvc2VdXCIsZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksby5jbG9zZSh0KX0pLm9uKFwiY2xpY2suZmItcHJldiB0b3VjaGVuZC5mYi1wcmV2XCIsXCJbZGF0YS1mYW5jeWJveC1wcmV2XVwiLGZ1bmN0aW9uKHQpe3Quc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLG8ucHJldmlvdXMoKX0pLm9uKFwiY2xpY2suZmItbmV4dCB0b3VjaGVuZC5mYi1uZXh0XCIsXCJbZGF0YS1mYW5jeWJveC1uZXh0XVwiLGZ1bmN0aW9uKHQpe3Quc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLG8ubmV4dCgpfSkub24oXCJjbGljay5mYlwiLFwiW2RhdGEtZmFuY3lib3gtem9vbV1cIixmdW5jdGlvbih0KXtvW28uaXNTY2FsZWREb3duKCk/XCJzY2FsZVRvQWN0dWFsXCI6XCJzY2FsZVRvRml0XCJdKCl9KSxzLm9uKFwib3JpZW50YXRpb25jaGFuZ2UuZmIgcmVzaXplLmZiXCIsZnVuY3Rpb24odCl7dCYmdC5vcmlnaW5hbEV2ZW50JiZcInJlc2l6ZVwiPT09dC5vcmlnaW5hbEV2ZW50LnR5cGU/dShmdW5jdGlvbigpe28udXBkYXRlKCl9KTooby4kcmVmcy5zdGFnZS5oaWRlKCksc2V0VGltZW91dChmdW5jdGlvbigpe28uJHJlZnMuc3RhZ2Uuc2hvdygpLG8udXBkYXRlKCl9LDYwMCkpfSksci5vbihcImZvY3VzaW4uZmJcIixmdW5jdGlvbih0KXt2YXIgYT1uLmZhbmN5Ym94P24uZmFuY3lib3guZ2V0SW5zdGFuY2UoKTpudWxsO2EuaXNDbG9zaW5nfHwhYS5jdXJyZW50fHwhYS5jdXJyZW50Lm9wdHMudHJhcEZvY3VzfHxuKHQudGFyZ2V0KS5oYXNDbGFzcyhcImZhbmN5Ym94LWNvbnRhaW5lclwiKXx8bih0LnRhcmdldCkuaXMoZSl8fGEmJlwiZml4ZWRcIiE9PW4odC50YXJnZXQpLmNzcyhcInBvc2l0aW9uXCIpJiYhYS4kcmVmcy5jb250YWluZXIuaGFzKHQudGFyZ2V0KS5sZW5ndGgmJih0LnN0b3BQcm9wYWdhdGlvbigpLGEuZm9jdXMoKSxzLnNjcm9sbFRvcChvLnNjcm9sbFRvcCkuc2Nyb2xsTGVmdChvLnNjcm9sbExlZnQpKX0pLHIub24oXCJrZXlkb3duLmZiXCIsZnVuY3Rpb24odCl7dmFyIGU9by5jdXJyZW50LGE9dC5rZXlDb2RlfHx0LndoaWNoO2lmKGUmJmUub3B0cy5rZXlib2FyZCYmIW4odC50YXJnZXQpLmlzKFwiaW5wdXRcIikmJiFuKHQudGFyZ2V0KS5pcyhcInRleHRhcmVhXCIpKXJldHVybiA4PT09YXx8Mjc9PT1hPyh0LnByZXZlbnREZWZhdWx0KCksdm9pZCBvLmNsb3NlKHQpKTozNz09PWF8fDM4PT09YT8odC5wcmV2ZW50RGVmYXVsdCgpLHZvaWQgby5wcmV2aW91cygpKTozOT09PWF8fDQwPT09YT8odC5wcmV2ZW50RGVmYXVsdCgpLHZvaWQgby5uZXh0KCkpOnZvaWQgby50cmlnZ2VyKFwiYWZ0ZXJLZXlkb3duXCIsdCxhKX0pLG8uZ3JvdXBbby5jdXJySW5kZXhdLm9wdHMuaWRsZVRpbWUmJihvLmlkbGVTZWNvbmRzQ291bnRlcj0wLHIub24oXCJtb3VzZW1vdmUuZmItaWRsZSBtb3VzZWxlYXZlLmZiLWlkbGUgbW91c2Vkb3duLmZiLWlkbGUgdG91Y2hzdGFydC5mYi1pZGxlIHRvdWNobW92ZS5mYi1pZGxlIHNjcm9sbC5mYi1pZGxlIGtleWRvd24uZmItaWRsZVwiLGZ1bmN0aW9uKHQpe28uaWRsZVNlY29uZHNDb3VudGVyPTAsby5pc0lkbGUmJm8uc2hvd0NvbnRyb2xzKCksby5pc0lkbGU9ITF9KSxvLmlkbGVJbnRlcnZhbD10LnNldEludGVydmFsKGZ1bmN0aW9uKCl7by5pZGxlU2Vjb25kc0NvdW50ZXIrKyxvLmlkbGVTZWNvbmRzQ291bnRlcj49by5ncm91cFtvLmN1cnJJbmRleF0ub3B0cy5pZGxlVGltZSYmKG8uaXNJZGxlPSEwLG8uaWRsZVNlY29uZHNDb3VudGVyPTAsby5oaWRlQ29udHJvbHMoKSl9LDFlMykpfSxyZW1vdmVFdmVudHM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3Mub2ZmKFwib3JpZW50YXRpb25jaGFuZ2UuZmIgcmVzaXplLmZiXCIpLHIub2ZmKFwiZm9jdXNpbi5mYiBrZXlkb3duLmZiIC5mYi1pZGxlXCIpLHRoaXMuJHJlZnMuY29udGFpbmVyLm9mZihcIi5mYi1jbG9zZSAuZmItcHJldiAuZmItbmV4dFwiKSxlLmlkbGVJbnRlcnZhbCYmKHQuY2xlYXJJbnRlcnZhbChlLmlkbGVJbnRlcnZhbCksZS5pZGxlSW50ZXJ2YWw9bnVsbCl9LHByZXZpb3VzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmp1bXBUbyh0aGlzLmN1cnJQb3MtMSx0KX0sbmV4dDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5qdW1wVG8odGhpcy5jdXJyUG9zKzEsdCl9LGp1bXBUbzpmdW5jdGlvbih0LGUsYSl7dmFyIGkscyxyLGMsbCx1LGQscD10aGlzLGg9cC5ncm91cC5sZW5ndGg7aWYoIShwLmlzU2xpZGluZ3x8cC5pc0Nsb3Npbmd8fHAuaXNBbmltYXRpbmcmJnAuZmlyc3RSdW4pKXtpZih0PXBhcnNlSW50KHQsMTApLHM9cC5jdXJyZW50P3AuY3VycmVudC5vcHRzLmxvb3A6cC5vcHRzLmxvb3AsIXMmJih0PDB8fHQ+PWgpKXJldHVybiExO2lmKGk9cC5maXJzdFJ1bj1udWxsPT09cC5maXJzdFJ1biwhKGg8MiYmIWkmJnAuaXNTbGlkaW5nKSl7aWYoYz1wLmN1cnJlbnQscC5wcmV2SW5kZXg9cC5jdXJySW5kZXgscC5wcmV2UG9zPXAuY3VyclBvcyxyPXAuY3JlYXRlU2xpZGUodCksaD4xJiYoKHN8fHIuaW5kZXg+MCkmJnAuY3JlYXRlU2xpZGUodC0xKSwoc3x8ci5pbmRleDxoLTEpJiZwLmNyZWF0ZVNsaWRlKHQrMSkpLHAuY3VycmVudD1yLHAuY3VyckluZGV4PXIuaW5kZXgscC5jdXJyUG9zPXIucG9zLHAudHJpZ2dlcihcImJlZm9yZVNob3dcIixpKSxwLnVwZGF0ZUNvbnRyb2xzKCksdT1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShyLiRzbGlkZSksci5pc01vdmVkPSgwIT09dS5sZWZ0fHwwIT09dS50b3ApJiYhci4kc2xpZGUuaGFzQ2xhc3MoXCJmYW5jeWJveC1hbmltYXRlZFwiKSxyLmZvcmNlZER1cmF0aW9uPW8sbi5pc051bWVyaWMoZSk/ci5mb3JjZWREdXJhdGlvbj1lOmU9ci5vcHRzW2k/XCJhbmltYXRpb25EdXJhdGlvblwiOlwidHJhbnNpdGlvbkR1cmF0aW9uXCJdLGU9cGFyc2VJbnQoZSwxMCksaSlyZXR1cm4gci5vcHRzLmFuaW1hdGlvbkVmZmVjdCYmZSYmcC4kcmVmcy5jb250YWluZXIuY3NzKFwidHJhbnNpdGlvbi1kdXJhdGlvblwiLGUrXCJtc1wiKSxwLiRyZWZzLmNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLWhpZGRlblwiKSxmKHAuJHJlZnMuY29udGFpbmVyKSxwLiRyZWZzLmNvbnRhaW5lci5hZGRDbGFzcyhcImZhbmN5Ym94LWlzLW9wZW5cIiksci4kc2xpZGUuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tY3VycmVudFwiKSxwLmxvYWRTbGlkZShyKSx2b2lkIHAucHJlbG9hZCgpO24uZWFjaChwLnNsaWRlcyxmdW5jdGlvbih0LGUpe24uZmFuY3lib3guc3RvcChlLiRzbGlkZSl9KSxyLiRzbGlkZS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1uZXh0IGZhbmN5Ym94LXNsaWRlLS1wcmV2aW91c1wiKS5hZGRDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1jdXJyZW50XCIpLHIuaXNNb3ZlZD8obD1NYXRoLnJvdW5kKHIuJHNsaWRlLndpZHRoKCkpLG4uZWFjaChwLnNsaWRlcyxmdW5jdGlvbih0LG8pe3ZhciBhPW8ucG9zLXIucG9zO24uZmFuY3lib3guYW5pbWF0ZShvLiRzbGlkZSx7dG9wOjAsbGVmdDphKmwrYSpvLm9wdHMuZ3V0dGVyfSxlLGZ1bmN0aW9uKCl7by4kc2xpZGUucmVtb3ZlQXR0cihcInN0eWxlXCIpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLW5leHQgZmFuY3lib3gtc2xpZGUtLXByZXZpb3VzXCIpLG8ucG9zPT09cC5jdXJyUG9zJiYoci5pc01vdmVkPSExLHAuY29tcGxldGUoKSl9KX0pKTpwLiRyZWZzLnN0YWdlLmNoaWxkcmVuKCkucmVtb3ZlQXR0cihcInN0eWxlXCIpLHIuaXNMb2FkZWQ/cC5yZXZlYWxDb250ZW50KHIpOnAubG9hZFNsaWRlKHIpLHAucHJlbG9hZCgpLGMucG9zIT09ci5wb3MmJihkPVwiZmFuY3lib3gtc2xpZGUtLVwiKyhjLnBvcz5yLnBvcz9cIm5leHRcIjpcInByZXZpb3VzXCIpLGMuJHNsaWRlLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWNvbXBsZXRlIGZhbmN5Ym94LXNsaWRlLS1jdXJyZW50IGZhbmN5Ym94LXNsaWRlLS1uZXh0IGZhbmN5Ym94LXNsaWRlLS1wcmV2aW91c1wiKSxjLmlzQ29tcGxldGU9ITEsZSYmKHIuaXNNb3ZlZHx8ci5vcHRzLnRyYW5zaXRpb25FZmZlY3QpJiYoci5pc01vdmVkP2MuJHNsaWRlLmFkZENsYXNzKGQpOihkPVwiZmFuY3lib3gtYW5pbWF0ZWQgXCIrZCtcIiBmYW5jeWJveC1meC1cIityLm9wdHMudHJhbnNpdGlvbkVmZmVjdCxuLmZhbmN5Ym94LmFuaW1hdGUoYy4kc2xpZGUsZCxlLGZ1bmN0aW9uKCl7Yy4kc2xpZGUucmVtb3ZlQ2xhc3MoZCkucmVtb3ZlQXR0cihcInN0eWxlXCIpfSkpKSl9fX0sY3JlYXRlU2xpZGU6ZnVuY3Rpb24odCl7dmFyIGUsbyxhPXRoaXM7cmV0dXJuIG89dCVhLmdyb3VwLmxlbmd0aCxvPW88MD9hLmdyb3VwLmxlbmd0aCtvOm8sIWEuc2xpZGVzW3RdJiZhLmdyb3VwW29dJiYoZT1uKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtc2xpZGVcIj48L2Rpdj4nKS5hcHBlbmRUbyhhLiRyZWZzLnN0YWdlKSxhLnNsaWRlc1t0XT1uLmV4dGVuZCghMCx7fSxhLmdyb3VwW29dLHtwb3M6dCwkc2xpZGU6ZSxpc0xvYWRlZDohMX0pLGEudXBkYXRlU2xpZGUoYS5zbGlkZXNbdF0pKSxhLnNsaWRlc1t0XX0sc2NhbGVUb0FjdHVhbDpmdW5jdGlvbih0LGUsYSl7dmFyIGkscyxyLGMsbCx1PXRoaXMsZD11LmN1cnJlbnQsZj1kLiRjb250ZW50LHA9cGFyc2VJbnQoZC4kc2xpZGUud2lkdGgoKSwxMCksaD1wYXJzZUludChkLiRzbGlkZS5oZWlnaHQoKSwxMCksZz1kLndpZHRoLGI9ZC5oZWlnaHQ7XCJpbWFnZVwiIT1kLnR5cGV8fGQuaGFzRXJyb3J8fCFmfHx1LmlzQW5pbWF0aW5nfHwobi5mYW5jeWJveC5zdG9wKGYpLHUuaXNBbmltYXRpbmc9ITAsdD10PT09bz8uNSpwOnQsZT1lPT09bz8uNSpoOmUsaT1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShmKSxjPWcvaS53aWR0aCxsPWIvaS5oZWlnaHQscz0uNSpwLS41Kmcscj0uNSpoLS41KmIsZz5wJiYocz1pLmxlZnQqYy0odCpjLXQpLHM+MCYmKHM9MCksczxwLWcmJihzPXAtZykpLGI+aCYmKHI9aS50b3AqbC0oZSpsLWUpLHI+MCYmKHI9MCkscjxoLWImJihyPWgtYikpLHUudXBkYXRlQ3Vyc29yKGcsYiksbi5mYW5jeWJveC5hbmltYXRlKGYse3RvcDpyLGxlZnQ6cyxzY2FsZVg6YyxzY2FsZVk6bH0sYXx8MzMwLGZ1bmN0aW9uKCl7dS5pc0FuaW1hdGluZz0hMX0pLHUuU2xpZGVTaG93JiZ1LlNsaWRlU2hvdy5pc0FjdGl2ZSYmdS5TbGlkZVNob3cuc3RvcCgpKX0sc2NhbGVUb0ZpdDpmdW5jdGlvbih0KXt2YXIgZSxvPXRoaXMsYT1vLmN1cnJlbnQsaT1hLiRjb250ZW50O1wiaW1hZ2VcIiE9YS50eXBlfHxhLmhhc0Vycm9yfHwhaXx8by5pc0FuaW1hdGluZ3x8KG4uZmFuY3lib3guc3RvcChpKSxvLmlzQW5pbWF0aW5nPSEwLGU9by5nZXRGaXRQb3MoYSksby51cGRhdGVDdXJzb3IoZS53aWR0aCxlLmhlaWdodCksbi5mYW5jeWJveC5hbmltYXRlKGkse3RvcDplLnRvcCxsZWZ0OmUubGVmdCxzY2FsZVg6ZS53aWR0aC9pLndpZHRoKCksc2NhbGVZOmUuaGVpZ2h0L2kuaGVpZ2h0KCl9LHR8fDMzMCxmdW5jdGlvbigpe28uaXNBbmltYXRpbmc9ITF9KSl9LGdldEZpdFBvczpmdW5jdGlvbih0KXt2YXIgZSxvLGEsaSxzLHI9dGhpcyxjPXQuJGNvbnRlbnQsbD10LndpZHRoLHU9dC5oZWlnaHQsZD10Lm9wdHMubWFyZ2luO3JldHVybiEoIWN8fCFjLmxlbmd0aHx8IWwmJiF1KSYmKFwibnVtYmVyXCI9PT1uLnR5cGUoZCkmJihkPVtkLGRdKSwyPT1kLmxlbmd0aCYmKGQ9W2RbMF0sZFsxXSxkWzBdLGRbMV1dKSxlPXBhcnNlSW50KHIuJHJlZnMuc3RhZ2Uud2lkdGgoKSwxMCktKGRbMV0rZFszXSksbz1wYXJzZUludChyLiRyZWZzLnN0YWdlLmhlaWdodCgpLDEwKS0oZFswXStkWzJdKSxhPU1hdGgubWluKDEsZS9sLG8vdSksaT1NYXRoLmZsb29yKGEqbCkscz1NYXRoLmZsb29yKGEqdSkse3RvcDpNYXRoLmZsb29yKC41KihvLXMpKStkWzBdLGxlZnQ6TWF0aC5mbG9vciguNSooZS1pKSkrZFszXSx3aWR0aDppLGhlaWdodDpzfSl9LHVwZGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7bi5lYWNoKHQuc2xpZGVzLGZ1bmN0aW9uKGUsbil7dC51cGRhdGVTbGlkZShuKX0pfSx1cGRhdGVTbGlkZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG89dC4kY29udGVudDtvJiYodC53aWR0aHx8dC5oZWlnaHQpJiYoZS5pc0FuaW1hdGluZz0hMSxuLmZhbmN5Ym94LnN0b3Aobyksbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUobyxlLmdldEZpdFBvcyh0KSksdC5wb3M9PT1lLmN1cnJQb3MmJmUudXBkYXRlQ3Vyc29yKCkpLHQuJHNsaWRlLnRyaWdnZXIoXCJyZWZyZXNoXCIpLGUudHJpZ2dlcihcIm9uVXBkYXRlXCIsdCl9LHVwZGF0ZUN1cnNvcjpmdW5jdGlvbih0LGUpe3ZhciBuLGE9dGhpcyxpPWEuJHJlZnMuY29udGFpbmVyLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtem9vbWFibGUgZmFuY3lib3gtY2FuLXpvb21JbiBmYW5jeWJveC1jYW4tZHJhZyBmYW5jeWJveC1jYW4tem9vbU91dFwiKTthLmN1cnJlbnQmJiFhLmlzQ2xvc2luZyYmKGEuaXNab29tYWJsZSgpPyhpLmFkZENsYXNzKFwiZmFuY3lib3gtaXMtem9vbWFibGVcIiksbj10IT09byYmZSE9PW8/dDxhLmN1cnJlbnQud2lkdGgmJmU8YS5jdXJyZW50LmhlaWdodDphLmlzU2NhbGVkRG93bigpLG4/aS5hZGRDbGFzcyhcImZhbmN5Ym94LWNhbi16b29tSW5cIik6YS5jdXJyZW50Lm9wdHMudG91Y2g/aS5hZGRDbGFzcyhcImZhbmN5Ym94LWNhbi1kcmFnXCIpOmkuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tem9vbU91dFwiKSk6YS5jdXJyZW50Lm9wdHMudG91Y2gmJmkuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tZHJhZ1wiKSl9LGlzWm9vbWFibGU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbz1lLmN1cnJlbnQ7aWYobyYmIWUuaXNDbG9zaW5nKXJldHVybiEhKFwiaW1hZ2VcIj09PW8udHlwZSYmby5pc0xvYWRlZCYmIW8uaGFzRXJyb3ImJihcInpvb21cIj09PW8ub3B0cy5jbGlja0NvbnRlbnR8fG4uaXNGdW5jdGlvbihvLm9wdHMuY2xpY2tDb250ZW50KSYmXCJ6b29tXCI9PT1vLm9wdHMuY2xpY2tDb250ZW50KG8pKSYmKHQ9ZS5nZXRGaXRQb3Mobyksby53aWR0aD50LndpZHRofHxvLmhlaWdodD50LmhlaWdodCkpfSxpc1NjYWxlZERvd246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5jdXJyZW50LG89ZS4kY29udGVudCxhPSExO3JldHVybiBvJiYoYT1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShvKSxhPWEud2lkdGg8ZS53aWR0aHx8YS5oZWlnaHQ8ZS5oZWlnaHQpLGF9LGNhblBhbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmN1cnJlbnQsbj1lLiRjb250ZW50LG89ITE7cmV0dXJuIG4mJihvPXQuZ2V0Rml0UG9zKGUpLG89TWF0aC5hYnMobi53aWR0aCgpLW8ud2lkdGgpPjF8fE1hdGguYWJzKG4uaGVpZ2h0KCktby5oZWlnaHQpPjEpLG99LGxvYWRTbGlkZTpmdW5jdGlvbih0KXt2YXIgZSxvLGEsaT10aGlzO2lmKCF0LmlzTG9hZGluZyYmIXQuaXNMb2FkZWQpe3N3aXRjaCh0LmlzTG9hZGluZz0hMCxpLnRyaWdnZXIoXCJiZWZvcmVMb2FkXCIsdCksZT10LnR5cGUsbz10LiRzbGlkZSxvLm9mZihcInJlZnJlc2hcIikudHJpZ2dlcihcIm9uUmVzZXRcIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tXCIrKGV8fFwidW5rbm93blwiKSkuYWRkQ2xhc3ModC5vcHRzLnNsaWRlQ2xhc3MpLGUpe2Nhc2VcImltYWdlXCI6aS5zZXRJbWFnZSh0KTticmVhaztjYXNlXCJpZnJhbWVcIjppLnNldElmcmFtZSh0KTticmVhaztjYXNlXCJodG1sXCI6aS5zZXRDb250ZW50KHQsdC5zcmN8fHQuY29udGVudCk7YnJlYWs7Y2FzZVwiaW5saW5lXCI6bih0LnNyYykubGVuZ3RoP2kuc2V0Q29udGVudCh0LG4odC5zcmMpKTppLnNldEVycm9yKHQpO2JyZWFrO2Nhc2VcImFqYXhcIjppLnNob3dMb2FkaW5nKHQpLGE9bi5hamF4KG4uZXh0ZW5kKHt9LHQub3B0cy5hamF4LnNldHRpbmdzLHt1cmw6dC5zcmMsc3VjY2VzczpmdW5jdGlvbihlLG4pe1wic3VjY2Vzc1wiPT09biYmaS5zZXRDb250ZW50KHQsZSl9LGVycm9yOmZ1bmN0aW9uKGUsbil7ZSYmXCJhYm9ydFwiIT09biYmaS5zZXRFcnJvcih0KX19KSksby5vbmUoXCJvblJlc2V0XCIsZnVuY3Rpb24oKXthLmFib3J0KCl9KTticmVhaztkZWZhdWx0Omkuc2V0RXJyb3IodCl9cmV0dXJuITB9fSxzZXRJbWFnZTpmdW5jdGlvbihlKXt2YXIgbyxhLGkscyxyPXRoaXMsYz1lLm9wdHMuc3Jjc2V0fHxlLm9wdHMuaW1hZ2Uuc3Jjc2V0O2lmKGMpe2k9dC5kZXZpY2VQaXhlbFJhdGlvfHwxLHM9dC5pbm5lcldpZHRoKmksYT1jLnNwbGl0KFwiLFwiKS5tYXAoZnVuY3Rpb24odCl7dmFyIGU9e307cmV0dXJuIHQudHJpbSgpLnNwbGl0KC9cXHMrLykuZm9yRWFjaChmdW5jdGlvbih0LG4pe3ZhciBvPXBhcnNlSW50KHQuc3Vic3RyaW5nKDAsdC5sZW5ndGgtMSksMTApO3JldHVybiAwPT09bj9lLnVybD10OnZvaWQobyYmKGUudmFsdWU9byxlLnBvc3RmaXg9dFt0Lmxlbmd0aC0xXSkpfSksZX0pLGEuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiB0LnZhbHVlLWUudmFsdWV9KTtmb3IodmFyIGw9MDtsPGEubGVuZ3RoO2wrKyl7dmFyIHU9YVtsXTtpZihcIndcIj09PXUucG9zdGZpeCYmdS52YWx1ZT49c3x8XCJ4XCI9PT11LnBvc3RmaXgmJnUudmFsdWU+PWkpe289dTticmVha319IW8mJmEubGVuZ3RoJiYobz1hW2EubGVuZ3RoLTFdKSxvJiYoZS5zcmM9by51cmwsZS53aWR0aCYmZS5oZWlnaHQmJlwid1wiPT1vLnBvc3RmaXgmJihlLmhlaWdodD1lLndpZHRoL2UuaGVpZ2h0Km8udmFsdWUsZS53aWR0aD1vLnZhbHVlKSl9ZS4kY29udGVudD1uKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtaW1hZ2Utd3JhcFwiPjwvZGl2PicpLmFkZENsYXNzKFwiZmFuY3lib3gtaXMtaGlkZGVuXCIpLmFwcGVuZFRvKGUuJHNsaWRlKSxlLm9wdHMucHJlbG9hZCE9PSExJiZlLm9wdHMud2lkdGgmJmUub3B0cy5oZWlnaHQmJihlLm9wdHMudGh1bWJ8fGUub3B0cy4kdGh1bWIpPyhlLndpZHRoPWUub3B0cy53aWR0aCxlLmhlaWdodD1lLm9wdHMuaGVpZ2h0LGUuJGdob3N0PW4oXCI8aW1nIC8+XCIpLm9uZShcImVycm9yXCIsZnVuY3Rpb24oKXtuKHRoaXMpLnJlbW92ZSgpLGUuJGdob3N0PW51bGwsci5zZXRCaWdJbWFnZShlKX0pLm9uZShcImxvYWRcIixmdW5jdGlvbigpe3IuYWZ0ZXJMb2FkKGUpLHIuc2V0QmlnSW1hZ2UoZSl9KS5hZGRDbGFzcyhcImZhbmN5Ym94LWltYWdlXCIpLmFwcGVuZFRvKGUuJGNvbnRlbnQpLmF0dHIoXCJzcmNcIixlLm9wdHMudGh1bWJ8fGUub3B0cy4kdGh1bWIuYXR0cihcInNyY1wiKSkpOnIuc2V0QmlnSW1hZ2UoZSl9LHNldEJpZ0ltYWdlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbz1uKFwiPGltZyAvPlwiKTt0LiRpbWFnZT1vLm9uZShcImVycm9yXCIsZnVuY3Rpb24oKXtlLnNldEVycm9yKHQpfSkub25lKFwibG9hZFwiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHQudGltb3V0cyksdC50aW1vdXRzPW51bGwsZS5pc0Nsb3Npbmd8fCh0LndpZHRoPXRoaXMubmF0dXJhbFdpZHRoLHQuaGVpZ2h0PXRoaXMubmF0dXJhbEhlaWdodCx0Lm9wdHMuaW1hZ2Uuc3Jjc2V0JiZvLmF0dHIoXCJzaXplc1wiLFwiMTAwdndcIikuYXR0cihcInNyY3NldFwiLHQub3B0cy5pbWFnZS5zcmNzZXQpLGUuaGlkZUxvYWRpbmcodCksdC4kZ2hvc3Q/dC50aW1vdXRzPXNldFRpbWVvdXQoZnVuY3Rpb24oKXt0LnRpbW91dHM9bnVsbCx0LiRnaG9zdC5oaWRlKCl9LE1hdGgubWluKDMwMCxNYXRoLm1heCgxZTMsdC5oZWlnaHQvMTYwMCkpKTplLmFmdGVyTG9hZCh0KSl9KS5hZGRDbGFzcyhcImZhbmN5Ym94LWltYWdlXCIpLmF0dHIoXCJzcmNcIix0LnNyYykuYXBwZW5kVG8odC4kY29udGVudCksKG9bMF0uY29tcGxldGV8fFwiY29tcGxldGVcIj09b1swXS5yZWFkeVN0YXRlKSYmb1swXS5uYXR1cmFsV2lkdGgmJm9bMF0ubmF0dXJhbEhlaWdodD9vLnRyaWdnZXIoXCJsb2FkXCIpOm9bMF0uZXJyb3I/by50cmlnZ2VyKFwiZXJyb3JcIik6dC50aW1vdXRzPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtvWzBdLmNvbXBsZXRlfHx0Lmhhc0Vycm9yfHxlLnNob3dMb2FkaW5nKHQpfSwxMDApfSxzZXRJZnJhbWU6ZnVuY3Rpb24odCl7dmFyIGUsYT10aGlzLGk9dC5vcHRzLmlmcmFtZSxzPXQuJHNsaWRlO3QuJGNvbnRlbnQ9bignPGRpdiBjbGFzcz1cImZhbmN5Ym94LWNvbnRlbnQnKyhpLnByZWxvYWQ/XCIgZmFuY3lib3gtaXMtaGlkZGVuXCI6XCJcIikrJ1wiPjwvZGl2PicpLmNzcyhpLmNzcykuYXBwZW5kVG8ocyksZT1uKGkudHBsLnJlcGxhY2UoL1xce3JuZFxcfS9nLChuZXcgRGF0ZSkuZ2V0VGltZSgpKSkuYXR0cihpLmF0dHIpLmFwcGVuZFRvKHQuJGNvbnRlbnQpLGkucHJlbG9hZD8oYS5zaG93TG9hZGluZyh0KSxlLm9uKFwibG9hZC5mYiBlcnJvci5mYlwiLGZ1bmN0aW9uKGUpe3RoaXMuaXNSZWFkeT0xLHQuJHNsaWRlLnRyaWdnZXIoXCJyZWZyZXNoXCIpLGEuYWZ0ZXJMb2FkKHQpfSkscy5vbihcInJlZnJlc2guZmJcIixmdW5jdGlvbigpe3ZhciBuLGEscyxyPXQuJGNvbnRlbnQsYz1pLmNzcy53aWR0aCxsPWkuY3NzLmhlaWdodDtpZigxPT09ZVswXS5pc1JlYWR5KXt0cnl7YT1lLmNvbnRlbnRzKCkscz1hLmZpbmQoXCJib2R5XCIpfWNhdGNoKHQpe31zJiZzLmxlbmd0aCYmKGM9PT1vJiYobj1lWzBdLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFdpZHRoLGM9TWF0aC5jZWlsKHMub3V0ZXJXaWR0aCghMCkrKHIud2lkdGgoKS1uKSksYys9ci5vdXRlcldpZHRoKCktci5pbm5lcldpZHRoKCkpLGw9PT1vJiYobD1NYXRoLmNlaWwocy5vdXRlckhlaWdodCghMCkpLGwrPXIub3V0ZXJIZWlnaHQoKS1yLmlubmVySGVpZ2h0KCkpLGMmJnIud2lkdGgoYyksbCYmci5oZWlnaHQobCkpLHIucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy1oaWRkZW5cIil9fSkpOnRoaXMuYWZ0ZXJMb2FkKHQpLGUuYXR0cihcInNyY1wiLHQuc3JjKSx0Lm9wdHMuc21hbGxCdG49PT0hMCYmdC4kY29udGVudC5wcmVwZW5kKGEudHJhbnNsYXRlKHQsdC5vcHRzLmJ0blRwbC5zbWFsbEJ0bikpLHMub25lKFwib25SZXNldFwiLGZ1bmN0aW9uKCl7dHJ5e24odGhpcykuZmluZChcImlmcmFtZVwiKS5oaWRlKCkuYXR0cihcInNyY1wiLFwiLy9hYm91dDpibGFua1wiKX1jYXRjaCh0KXt9bih0aGlzKS5lbXB0eSgpLHQuaXNMb2FkZWQ9ITF9KX0sc2V0Q29udGVudDpmdW5jdGlvbih0LGUpe3ZhciBvPXRoaXM7by5pc0Nsb3Npbmd8fChvLmhpZGVMb2FkaW5nKHQpLHQuJHNsaWRlLmVtcHR5KCksbChlKSYmZS5wYXJlbnQoKS5sZW5ndGg/KGUucGFyZW50KFwiLmZhbmN5Ym94LXNsaWRlLS1pbmxpbmVcIikudHJpZ2dlcihcIm9uUmVzZXRcIiksdC4kcGxhY2Vob2xkZXI9bihcIjxkaXY+PC9kaXY+XCIpLmhpZGUoKS5pbnNlcnRBZnRlcihlKSxlLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKSk6dC5oYXNFcnJvcnx8KFwic3RyaW5nXCI9PT1uLnR5cGUoZSkmJihlPW4oXCI8ZGl2PlwiKS5hcHBlbmQobi50cmltKGUpKS5jb250ZW50cygpLDM9PT1lWzBdLm5vZGVUeXBlJiYoZT1uKFwiPGRpdj5cIikuaHRtbChlKSkpLHQub3B0cy5maWx0ZXImJihlPW4oXCI8ZGl2PlwiKS5odG1sKGUpLmZpbmQodC5vcHRzLmZpbHRlcikpKSx0LiRzbGlkZS5vbmUoXCJvblJlc2V0XCIsZnVuY3Rpb24oKXt0LiRwbGFjZWhvbGRlciYmKHQuJHBsYWNlaG9sZGVyLmFmdGVyKGUuaGlkZSgpKS5yZW1vdmUoKSx0LiRwbGFjZWhvbGRlcj1udWxsKSx0LiRzbWFsbEJ0biYmKHQuJHNtYWxsQnRuLnJlbW92ZSgpLHQuJHNtYWxsQnRuPW51bGwpLHQuaGFzRXJyb3J8fChuKHRoaXMpLmVtcHR5KCksdC5pc0xvYWRlZD0hMSl9KSx0LiRjb250ZW50PW4oZSkuYXBwZW5kVG8odC4kc2xpZGUpLHRoaXMuYWZ0ZXJMb2FkKHQpKX0sc2V0RXJyb3I6ZnVuY3Rpb24odCl7dC5oYXNFcnJvcj0hMCx0LiRzbGlkZS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1cIit0LnR5cGUpLHRoaXMuc2V0Q29udGVudCh0LHRoaXMudHJhbnNsYXRlKHQsdC5vcHRzLmVycm9yVHBsKSl9LHNob3dMb2FkaW5nOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dD10fHxlLmN1cnJlbnQsdCYmIXQuJHNwaW5uZXImJih0LiRzcGlubmVyPW4oZS5vcHRzLnNwaW5uZXJUcGwpLmFwcGVuZFRvKHQuJHNsaWRlKSl9LGhpZGVMb2FkaW5nOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dD10fHxlLmN1cnJlbnQsdCYmdC4kc3Bpbm5lciYmKHQuJHNwaW5uZXIucmVtb3ZlKCksZGVsZXRlIHQuJHNwaW5uZXIpfSxhZnRlckxvYWQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLmlzQ2xvc2luZ3x8KHQuaXNMb2FkaW5nPSExLHQuaXNMb2FkZWQ9ITAsZS50cmlnZ2VyKFwiYWZ0ZXJMb2FkXCIsdCksZS5oaWRlTG9hZGluZyh0KSx0Lm9wdHMuc21hbGxCdG4mJiF0LiRzbWFsbEJ0biYmKHQuJHNtYWxsQnRuPW4oZS50cmFuc2xhdGUodCx0Lm9wdHMuYnRuVHBsLnNtYWxsQnRuKSkuYXBwZW5kVG8odC4kY29udGVudC5maWx0ZXIoXCJkaXYsZm9ybVwiKS5maXJzdCgpKSksdC5vcHRzLnByb3RlY3QmJnQuJGNvbnRlbnQmJiF0Lmhhc0Vycm9yJiYodC4kY29udGVudC5vbihcImNvbnRleHRtZW51LmZiXCIsZnVuY3Rpb24odCl7cmV0dXJuIDI9PXQuYnV0dG9uJiZ0LnByZXZlbnREZWZhdWx0KCksITB9KSxcImltYWdlXCI9PT10LnR5cGUmJm4oJzxkaXYgY2xhc3M9XCJmYW5jeWJveC1zcGFjZWJhbGxcIj48L2Rpdj4nKS5hcHBlbmRUbyh0LiRjb250ZW50KSksZS5yZXZlYWxDb250ZW50KHQpKX0scmV2ZWFsQ29udGVudDpmdW5jdGlvbih0KXt2YXIgZSxhLGkscyxyLGM9dGhpcyxsPXQuJHNsaWRlLHU9ITE7cmV0dXJuIGU9dC5vcHRzW2MuZmlyc3RSdW4/XCJhbmltYXRpb25FZmZlY3RcIjpcInRyYW5zaXRpb25FZmZlY3RcIl0saT10Lm9wdHNbYy5maXJzdFJ1bj9cImFuaW1hdGlvbkR1cmF0aW9uXCI6XCJ0cmFuc2l0aW9uRHVyYXRpb25cIl0saT1wYXJzZUludCh0LmZvcmNlZER1cmF0aW9uPT09bz9pOnQuZm9yY2VkRHVyYXRpb24sMTApLCF0LmlzTW92ZWQmJnQucG9zPT09Yy5jdXJyUG9zJiZpfHwoZT0hMSksXCJ6b29tXCIhPT1lfHx0LnBvcz09PWMuY3VyclBvcyYmaSYmXCJpbWFnZVwiPT09dC50eXBlJiYhdC5oYXNFcnJvciYmKHU9Yy5nZXRUaHVtYlBvcyh0KSl8fChlPVwiZmFkZVwiKSxcInpvb21cIj09PWU/KHI9Yy5nZXRGaXRQb3ModCksci5zY2FsZVg9ci53aWR0aC91LndpZHRoLHIuc2NhbGVZPXIuaGVpZ2h0L3UuaGVpZ2h0LGRlbGV0ZSByLndpZHRoLGRlbGV0ZSByLmhlaWdodCxzPXQub3B0cy56b29tT3BhY2l0eSxcImF1dG9cIj09cyYmKHM9TWF0aC5hYnModC53aWR0aC90LmhlaWdodC11LndpZHRoL3UuaGVpZ2h0KT4uMSkscyYmKHUub3BhY2l0eT0uMSxyLm9wYWNpdHk9MSksbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUodC4kY29udGVudC5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLWhpZGRlblwiKSx1KSxmKHQuJGNvbnRlbnQpLHZvaWQgbi5mYW5jeWJveC5hbmltYXRlKHQuJGNvbnRlbnQscixpLGZ1bmN0aW9uKCl7Yy5jb21wbGV0ZSgpfSkpOihjLnVwZGF0ZVNsaWRlKHQpLGU/KG4uZmFuY3lib3guc3RvcChsKSxhPVwiZmFuY3lib3gtYW5pbWF0ZWQgZmFuY3lib3gtc2xpZGUtLVwiKyh0LnBvcz49Yy5wcmV2UG9zP1wibmV4dFwiOlwicHJldmlvdXNcIikrXCIgZmFuY3lib3gtZngtXCIrZSxsLnJlbW92ZUF0dHIoXCJzdHlsZVwiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1jdXJyZW50IGZhbmN5Ym94LXNsaWRlLS1uZXh0IGZhbmN5Ym94LXNsaWRlLS1wcmV2aW91c1wiKS5hZGRDbGFzcyhhKSx0LiRjb250ZW50LnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtaGlkZGVuXCIpLGYobCksdm9pZCBuLmZhbmN5Ym94LmFuaW1hdGUobCxcImZhbmN5Ym94LXNsaWRlLS1jdXJyZW50XCIsaSxmdW5jdGlvbihlKXtsLnJlbW92ZUNsYXNzKGEpLnJlbW92ZUF0dHIoXCJzdHlsZVwiKSx0LnBvcz09PWMuY3VyclBvcyYmYy5jb21wbGV0ZSgpfSwhMCkpOihmKGwpLHQuJGNvbnRlbnQucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy1oaWRkZW5cIiksdm9pZCh0LnBvcz09PWMuY3VyclBvcyYmYy5jb21wbGV0ZSgpKSkpfSxnZXRUaHVtYlBvczpmdW5jdGlvbihvKXt2YXIgYSxpPXRoaXMscz0hMSxyPWZ1bmN0aW9uKGUpe2Zvcih2YXIgbyxhPWVbMF0saT1hLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHM9W107bnVsbCE9PWEucGFyZW50RWxlbWVudDspXCJoaWRkZW5cIiE9PW4oYS5wYXJlbnRFbGVtZW50KS5jc3MoXCJvdmVyZmxvd1wiKSYmXCJhdXRvXCIhPT1uKGEucGFyZW50RWxlbWVudCkuY3NzKFwib3ZlcmZsb3dcIil8fHMucHVzaChhLnBhcmVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpLGE9YS5wYXJlbnRFbGVtZW50O3JldHVybiBvPXMuZXZlcnkoZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5taW4oaS5yaWdodCx0LnJpZ2h0KS1NYXRoLm1heChpLmxlZnQsdC5sZWZ0KSxuPU1hdGgubWluKGkuYm90dG9tLHQuYm90dG9tKS1NYXRoLm1heChpLnRvcCx0LnRvcCk7cmV0dXJuIGU+MCYmbj4wfSksbyYmaS5ib3R0b20+MCYmaS5yaWdodD4wJiZpLmxlZnQ8bih0KS53aWR0aCgpJiZpLnRvcDxuKHQpLmhlaWdodCgpfSxjPW8ub3B0cy4kdGh1bWIsbD1jP2Mub2Zmc2V0KCk6MDtyZXR1cm4gbCYmY1swXS5vd25lckRvY3VtZW50PT09ZSYmcihjKSYmKGE9aS4kcmVmcy5zdGFnZS5vZmZzZXQoKSxzPXt0b3A6bC50b3AtYS50b3ArcGFyc2VGbG9hdChjLmNzcyhcImJvcmRlci10b3Atd2lkdGhcIil8fDApLGxlZnQ6bC5sZWZ0LWEubGVmdCtwYXJzZUZsb2F0KGMuY3NzKFwiYm9yZGVyLWxlZnQtd2lkdGhcIil8fDApLHdpZHRoOmMud2lkdGgoKSxoZWlnaHQ6Yy5oZWlnaHQoKSxzY2FsZVg6MSxzY2FsZVk6MX0pLHN9LGNvbXBsZXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxvPXQuY3VycmVudCxhPXt9O28uaXNNb3ZlZHx8IW8uaXNMb2FkZWR8fG8uaXNDb21wbGV0ZXx8KG8uaXNDb21wbGV0ZT0hMCxvLiRzbGlkZS5zaWJsaW5ncygpLnRyaWdnZXIoXCJvblJlc2V0XCIpLGYoby4kc2xpZGUpLG8uJHNsaWRlLmFkZENsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWNvbXBsZXRlXCIpLG4uZWFjaCh0LnNsaWRlcyxmdW5jdGlvbihlLG8pe28ucG9zPj10LmN1cnJQb3MtMSYmby5wb3M8PXQuY3VyclBvcysxP2Fbby5wb3NdPW86byYmKG4uZmFuY3lib3guc3RvcChvLiRzbGlkZSksby4kc2xpZGUub2ZmKCkucmVtb3ZlKCkpfSksdC5zbGlkZXM9YSx0LnVwZGF0ZUN1cnNvcigpLHQudHJpZ2dlcihcImFmdGVyU2hvd1wiKSwobihlLmFjdGl2ZUVsZW1lbnQpLmlzKFwiW2Rpc2FibGVkXVwiKXx8by5vcHRzLmF1dG9Gb2N1cyYmXCJpbWFnZVwiIT1vLnR5cGUmJlwiaWZyYW1lXCIhPT1vLnR5cGUpJiZ0LmZvY3VzKCkpfSxwcmVsb2FkOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXM7bi5ncm91cC5sZW5ndGg8Mnx8KHQ9bi5zbGlkZXNbbi5jdXJyUG9zKzFdLGU9bi5zbGlkZXNbbi5jdXJyUG9zLTFdLHQmJlwiaW1hZ2VcIj09PXQudHlwZSYmbi5sb2FkU2xpZGUodCksZSYmXCJpbWFnZVwiPT09ZS50eXBlJiZuLmxvYWRTbGlkZShlKSl9LGZvY3VzOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLmN1cnJlbnQ7dGhpcy5pc0Nsb3Npbmd8fChlJiZlLmlzQ29tcGxldGUmJih0PWUuJHNsaWRlLmZpbmQoXCJpbnB1dFthdXRvZm9jdXNdOmVuYWJsZWQ6dmlzaWJsZTpmaXJzdFwiKSx0Lmxlbmd0aHx8KHQ9ZS4kc2xpZGUuZmluZChcImJ1dHRvbiw6aW5wdXQsW3RhYmluZGV4XSxhXCIpLmZpbHRlcihcIjplbmFibGVkOnZpc2libGU6Zmlyc3RcIikpKSx0PXQmJnQubGVuZ3RoP3Q6dGhpcy4kcmVmcy5jb250YWluZXIsdC5mb2N1cygpKX0sYWN0aXZhdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO24oXCIuZmFuY3lib3gtY29udGFpbmVyXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1uKHRoaXMpLmRhdGEoXCJGYW5jeUJveFwiKTtlJiZlLmlkIT09dC5pZCYmIWUuaXNDbG9zaW5nJiYoZS50cmlnZ2VyKFwib25EZWFjdGl2YXRlXCIpLGUucmVtb3ZlRXZlbnRzKCksZS5pc1Zpc2libGU9ITEpfSksdC5pc1Zpc2libGU9ITAsKHQuY3VycmVudHx8dC5pc0lkbGUpJiYodC51cGRhdGUoKSx0LnVwZGF0ZUNvbnRyb2xzKCkpLHQudHJpZ2dlcihcIm9uQWN0aXZhdGVcIiksdC5hZGRFdmVudHMoKX0sY2xvc2U6ZnVuY3Rpb24odCxlKXt2YXIgbyxhLGkscyxyLGMsbD10aGlzLHA9bC5jdXJyZW50LGg9ZnVuY3Rpb24oKXtsLmNsZWFuVXAodCl9O3JldHVybiFsLmlzQ2xvc2luZyYmKGwuaXNDbG9zaW5nPSEwLGwudHJpZ2dlcihcImJlZm9yZUNsb3NlXCIsdCk9PT0hMT8obC5pc0Nsb3Npbmc9ITEsdShmdW5jdGlvbigpe2wudXBkYXRlKCl9KSwhMSk6KGwucmVtb3ZlRXZlbnRzKCkscC50aW1vdXRzJiZjbGVhclRpbWVvdXQocC50aW1vdXRzKSxpPXAuJGNvbnRlbnQsbz1wLm9wdHMuYW5pbWF0aW9uRWZmZWN0LGE9bi5pc051bWVyaWMoZSk/ZTpvP3Aub3B0cy5hbmltYXRpb25EdXJhdGlvbjowLHAuJHNsaWRlLm9mZihkKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1jb21wbGV0ZSBmYW5jeWJveC1zbGlkZS0tbmV4dCBmYW5jeWJveC1zbGlkZS0tcHJldmlvdXMgZmFuY3lib3gtYW5pbWF0ZWRcIikscC4kc2xpZGUuc2libGluZ3MoKS50cmlnZ2VyKFwib25SZXNldFwiKS5yZW1vdmUoKSxhJiZsLiRyZWZzLmNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLW9wZW5cIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1jbG9zaW5nXCIpLGwuaGlkZUxvYWRpbmcocCksbC5oaWRlQ29udHJvbHMoKSxsLnVwZGF0ZUN1cnNvcigpLFwiem9vbVwiIT09b3x8dCE9PSEwJiZpJiZhJiZcImltYWdlXCI9PT1wLnR5cGUmJiFwLmhhc0Vycm9yJiYoYz1sLmdldFRodW1iUG9zKHApKXx8KG89XCJmYWRlXCIpLFwiem9vbVwiPT09bz8obi5mYW5jeWJveC5zdG9wKGkpLHI9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoaSksci53aWR0aD1yLndpZHRoKnIuc2NhbGVYLHIuaGVpZ2h0PXIuaGVpZ2h0KnIuc2NhbGVZLHM9cC5vcHRzLnpvb21PcGFjaXR5LFwiYXV0b1wiPT1zJiYocz1NYXRoLmFicyhwLndpZHRoL3AuaGVpZ2h0LWMud2lkdGgvYy5oZWlnaHQpPi4xKSxzJiYoYy5vcGFjaXR5PTApLHIuc2NhbGVYPXIud2lkdGgvYy53aWR0aCxyLnNjYWxlWT1yLmhlaWdodC9jLmhlaWdodCxyLndpZHRoPWMud2lkdGgsci5oZWlnaHQ9Yy5oZWlnaHQsbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUocC4kY29udGVudCxyKSxmKHAuJGNvbnRlbnQpLG4uZmFuY3lib3guYW5pbWF0ZShwLiRjb250ZW50LGMsYSxoKSwhMCk6KG8mJmE/dD09PSEwP3NldFRpbWVvdXQoaCxhKTpuLmZhbmN5Ym94LmFuaW1hdGUocC4kc2xpZGUucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tY3VycmVudFwiKSxcImZhbmN5Ym94LWFuaW1hdGVkIGZhbmN5Ym94LXNsaWRlLS1wcmV2aW91cyBmYW5jeWJveC1meC1cIitvLGEsaCk6aCgpLCEwKSkpfSxjbGVhblVwOmZ1bmN0aW9uKHQpe3ZhciBvLGEsaT10aGlzLHI9bihcImJvZHlcIik7aS5jdXJyZW50LiRzbGlkZS50cmlnZ2VyKFwib25SZXNldFwiKSxpLiRyZWZzLmNvbnRhaW5lci5lbXB0eSgpLnJlbW92ZSgpLGkudHJpZ2dlcihcImFmdGVyQ2xvc2VcIix0KSxpLiRsYXN0Rm9jdXMmJmkuY3VycmVudC5vcHRzLmJhY2tGb2N1cyYmaS4kbGFzdEZvY3VzLmZvY3VzKCksaS5jdXJyZW50PW51bGwsbz1uLmZhbmN5Ym94LmdldEluc3RhbmNlKCksbz9vLmFjdGl2YXRlKCk6KHMuc2Nyb2xsVG9wKGkuc2Nyb2xsVG9wKS5zY3JvbGxMZWZ0KGkuc2Nyb2xsTGVmdCksci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWFjdGl2ZSBjb21wZW5zYXRlLWZvci1zY3JvbGxiYXJcIiksci5oYXNDbGFzcyhcImZhbmN5Ym94LWlvc2ZpeFwiKSYmKGE9cGFyc2VJbnQoZS5ib2R5LnN0eWxlLnRvcCwxMCksci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlvc2ZpeFwiKS5jc3MoXCJ0b3BcIixcIlwiKS5zY3JvbGxUb3AoYSotMSkpLG4oXCIjZmFuY3lib3gtc3R5bGUtbm9zY3JvbGxcIikucmVtb3ZlKCkpfSx0cmlnZ2VyOmZ1bmN0aW9uKHQsZSl7dmFyIG8sYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSksaT10aGlzLHM9ZSYmZS5vcHRzP2U6aS5jdXJyZW50O3JldHVybiBzP2EudW5zaGlmdChzKTpzPWksYS51bnNoaWZ0KGkpLG4uaXNGdW5jdGlvbihzLm9wdHNbdF0pJiYobz1zLm9wdHNbdF0uYXBwbHkocyxhKSksbz09PSExP286dm9pZChcImFmdGVyQ2xvc2VcIiE9PXQmJmkuJHJlZnM/aS4kcmVmcy5jb250YWluZXIudHJpZ2dlcih0K1wiLmZiXCIsYSk6ci50cmlnZ2VyKHQrXCIuZmJcIixhKSl9LHVwZGF0ZUNvbnRyb2xzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmN1cnJlbnQsbz1uLmluZGV4LGE9bi5vcHRzLmNhcHRpb24saT1lLiRyZWZzLmNvbnRhaW5lcixzPWUuJHJlZnMuY2FwdGlvbjtuLiRzbGlkZS50cmlnZ2VyKFwicmVmcmVzaFwiKSxlLiRjYXB0aW9uPWEmJmEubGVuZ3RoP3MuaHRtbChhKTpudWxsLGUuaXNIaWRkZW5Db250cm9sc3x8ZS5pc0lkbGV8fGUuc2hvd0NvbnRyb2xzKCksaS5maW5kKFwiW2RhdGEtZmFuY3lib3gtY291bnRdXCIpLmh0bWwoZS5ncm91cC5sZW5ndGgpLGkuZmluZChcIltkYXRhLWZhbmN5Ym94LWluZGV4XVwiKS5odG1sKG8rMSksaS5maW5kKFwiW2RhdGEtZmFuY3lib3gtcHJldl1cIikucHJvcChcImRpc2FibGVkXCIsIW4ub3B0cy5sb29wJiZvPD0wKSxpLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1uZXh0XVwiKS5wcm9wKFwiZGlzYWJsZWRcIiwhbi5vcHRzLmxvb3AmJm8+PWUuZ3JvdXAubGVuZ3RoLTEpLFwiaW1hZ2VcIj09PW4udHlwZT9pLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1kb3dubG9hZF1cIikuYXR0cihcImhyZWZcIixuLm9wdHMuaW1hZ2Uuc3JjfHxuLnNyYykuc2hvdygpOmkuZmluZChcIltkYXRhLWZhbmN5Ym94LWRvd25sb2FkXSxbZGF0YS1mYW5jeWJveC16b29tXVwiKS5oaWRlKCl9LGhpZGVDb250cm9sczpmdW5jdGlvbigpe3RoaXMuaXNIaWRkZW5Db250cm9scz0hMCx0aGlzLiRyZWZzLmNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNob3ctaW5mb2JhciBmYW5jeWJveC1zaG93LXRvb2xiYXIgZmFuY3lib3gtc2hvdy1jYXB0aW9uIGZhbmN5Ym94LXNob3ctbmF2XCIpfSxzaG93Q29udHJvbHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5jdXJyZW50P3QuY3VycmVudC5vcHRzOnQub3B0cyxuPXQuJHJlZnMuY29udGFpbmVyO3QuaXNIaWRkZW5Db250cm9scz0hMSx0LmlkbGVTZWNvbmRzQ291bnRlcj0wLG4udG9nZ2xlQ2xhc3MoXCJmYW5jeWJveC1zaG93LXRvb2xiYXJcIiwhKCFlLnRvb2xiYXJ8fCFlLmJ1dHRvbnMpKS50b2dnbGVDbGFzcyhcImZhbmN5Ym94LXNob3ctaW5mb2JhclwiLCEhKGUuaW5mb2JhciYmdC5ncm91cC5sZW5ndGg+MSkpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtc2hvdy1uYXZcIiwhIShlLmFycm93cyYmdC5ncm91cC5sZW5ndGg+MSkpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtaXMtbW9kYWxcIiwhIWUubW9kYWwpLHQuJGNhcHRpb24/bi5hZGRDbGFzcyhcImZhbmN5Ym94LXNob3ctY2FwdGlvbiBcIik6bi5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNob3ctY2FwdGlvblwiKX0sdG9nZ2xlQ29udHJvbHM6ZnVuY3Rpb24oKXt0aGlzLmlzSGlkZGVuQ29udHJvbHM/dGhpcy5zaG93Q29udHJvbHMoKTp0aGlzLmhpZGVDb250cm9scygpfX0pLG4uZmFuY3lib3g9e3ZlcnNpb246XCIzLjIuNVwiLGRlZmF1bHRzOmksZ2V0SW5zdGFuY2U6ZnVuY3Rpb24odCl7dmFyIGU9bignLmZhbmN5Ym94LWNvbnRhaW5lcjpub3QoXCIuZmFuY3lib3gtaXMtY2xvc2luZ1wiKTpsYXN0JykuZGF0YShcIkZhbmN5Qm94XCIpLG89QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO3JldHVybiBlIGluc3RhbmNlb2YgcCYmKFwic3RyaW5nXCI9PT1uLnR5cGUodCk/ZVt0XS5hcHBseShlLG8pOlwiZnVuY3Rpb25cIj09PW4udHlwZSh0KSYmdC5hcHBseShlLG8pLGUpfSxvcGVuOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbmV3IHAodCxlLG4pfSxjbG9zZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldEluc3RhbmNlKCk7ZSYmKGUuY2xvc2UoKSx0PT09ITAmJnRoaXMuY2xvc2UoKSl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmNsb3NlKCEwKSxyLm9mZihcImNsaWNrLmZiLXN0YXJ0XCIpfSxpc01vYmlsZTplLmNyZWF0ZVRvdWNoIT09byYmL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHVzZTNkOmZ1bmN0aW9uKCl7dmFyIG49ZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3JldHVybiB0LmdldENvbXB1dGVkU3R5bGUmJnQuZ2V0Q29tcHV0ZWRTdHlsZShuKS5nZXRQcm9wZXJ0eVZhbHVlKFwidHJhbnNmb3JtXCIpJiYhKGUuZG9jdW1lbnRNb2RlJiZlLmRvY3VtZW50TW9kZTwxMSl9KCksZ2V0VHJhbnNsYXRlOmZ1bmN0aW9uKHQpe3ZhciBlO2lmKCF0fHwhdC5sZW5ndGgpcmV0dXJuITE7aWYoZT10LmVxKDApLmNzcyhcInRyYW5zZm9ybVwiKSxlJiZlLmluZGV4T2YoXCJtYXRyaXhcIikhPT0tMT8oZT1lLnNwbGl0KFwiKFwiKVsxXSxlPWUuc3BsaXQoXCIpXCIpWzBdLGU9ZS5zcGxpdChcIixcIikpOmU9W10sZS5sZW5ndGgpZT1lLmxlbmd0aD4xMD9bZVsxM10sZVsxMl0sZVswXSxlWzVdXTpbZVs1XSxlWzRdLGVbMF0sZVszXV0sZT1lLm1hcChwYXJzZUZsb2F0KTtlbHNle2U9WzAsMCwxLDFdO3ZhciBuPS9cXC4qdHJhbnNsYXRlXFwoKC4qKXB4LCguKilweFxcKS9pLG89bi5leGVjKHQuZXEoMCkuYXR0cihcInN0eWxlXCIpKTtvJiYoZVswXT1wYXJzZUZsb2F0KG9bMl0pLGVbMV09cGFyc2VGbG9hdChvWzFdKSl9cmV0dXJue3RvcDplWzBdLGxlZnQ6ZVsxXSxzY2FsZVg6ZVsyXSxzY2FsZVk6ZVszXSxvcGFjaXR5OnBhcnNlRmxvYXQodC5jc3MoXCJvcGFjaXR5XCIpKSx3aWR0aDp0LndpZHRoKCksaGVpZ2h0OnQuaGVpZ2h0KCl9fSxzZXRUcmFuc2xhdGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1cIlwiLGE9e307aWYodCYmZSlyZXR1cm4gZS5sZWZ0PT09byYmZS50b3A9PT1vfHwobj0oZS5sZWZ0PT09bz90LnBvc2l0aW9uKCkubGVmdDplLmxlZnQpK1wicHgsIFwiKyhlLnRvcD09PW8/dC5wb3NpdGlvbigpLnRvcDplLnRvcCkrXCJweFwiLG49dGhpcy51c2UzZD9cInRyYW5zbGF0ZTNkKFwiK24rXCIsIDBweClcIjpcInRyYW5zbGF0ZShcIituK1wiKVwiKSxlLnNjYWxlWCE9PW8mJmUuc2NhbGVZIT09byYmKG49KG4ubGVuZ3RoP24rXCIgXCI6XCJcIikrXCJzY2FsZShcIitlLnNjYWxlWCtcIiwgXCIrZS5zY2FsZVkrXCIpXCIpLG4ubGVuZ3RoJiYoYS50cmFuc2Zvcm09biksZS5vcGFjaXR5IT09byYmKGEub3BhY2l0eT1lLm9wYWNpdHkpLGUud2lkdGghPT1vJiYoYS53aWR0aD1lLndpZHRoKSxlLmhlaWdodCE9PW8mJihhLmhlaWdodD1lLmhlaWdodCksdC5jc3MoYSl9LGFuaW1hdGU6ZnVuY3Rpb24odCxlLGEsaSxzKXtuLmlzRnVuY3Rpb24oYSkmJihpPWEsYT1udWxsKSxuLmlzUGxhaW5PYmplY3QoZSl8fHQucmVtb3ZlQXR0cihcInN0eWxlXCIpLHQub24oZCxmdW5jdGlvbihhKXsoIWF8fCFhLm9yaWdpbmFsRXZlbnR8fHQuaXMoYS5vcmlnaW5hbEV2ZW50LnRhcmdldCkmJlwiei1pbmRleFwiIT1hLm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lKSYmKG4uZmFuY3lib3guc3RvcCh0KSxuLmlzUGxhaW5PYmplY3QoZSk/ZS5zY2FsZVghPT1vJiZlLnNjYWxlWSE9PW8mJih0LmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixcIlwiKSxlLndpZHRoPU1hdGgucm91bmQodC53aWR0aCgpKmUuc2NhbGVYKSxlLmhlaWdodD1NYXRoLnJvdW5kKHQuaGVpZ2h0KCkqZS5zY2FsZVkpLGUuc2NhbGVYPTEsZS5zY2FsZVk9MSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZSh0LGUpKTpzIT09ITAmJnQucmVtb3ZlQ2xhc3MoZSksbi5pc0Z1bmN0aW9uKGkpJiZpKGEpKX0pLG4uaXNOdW1lcmljKGEpJiZ0LmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixhK1wibXNcIiksbi5pc1BsYWluT2JqZWN0KGUpP24uZmFuY3lib3guc2V0VHJhbnNsYXRlKHQsZSk6dC5hZGRDbGFzcyhlKSxlLnNjYWxlWCYmdC5oYXNDbGFzcyhcImZhbmN5Ym94LWltYWdlLXdyYXBcIikmJnQucGFyZW50KCkuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1zY2FsaW5nXCIpLHQuZGF0YShcInRpbWVyXCIsc2V0VGltZW91dChmdW5jdGlvbigpe3QudHJpZ2dlcihcInRyYW5zaXRpb25lbmRcIil9LGErMTYpKX0sc3RvcDpmdW5jdGlvbih0KXtjbGVhclRpbWVvdXQodC5kYXRhKFwidGltZXJcIikpLHQub2ZmKFwidHJhbnNpdGlvbmVuZFwiKS5jc3MoXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCIsXCJcIiksdC5oYXNDbGFzcyhcImZhbmN5Ym94LWltYWdlLXdyYXBcIikmJnQucGFyZW50KCkucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy1zY2FsaW5nXCIpfX0sbi5mbi5mYW5jeWJveD1mdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gdD10fHx7fSxlPXQuc2VsZWN0b3J8fCExLGU/bihcImJvZHlcIikub2ZmKFwiY2xpY2suZmItc3RhcnRcIixlKS5vbihcImNsaWNrLmZiLXN0YXJ0XCIsZSx7b3B0aW9uczp0fSxhKTp0aGlzLm9mZihcImNsaWNrLmZiLXN0YXJ0XCIpLm9uKFwiY2xpY2suZmItc3RhcnRcIix7aXRlbXM6dGhpcyxvcHRpb25zOnR9LGEpLHRoaXN9LHIub24oXCJjbGljay5mYi1zdGFydFwiLFwiW2RhdGEtZmFuY3lib3hdXCIsYSl9fSh3aW5kb3csZG9jdW1lbnQsd2luZG93LmpRdWVyeXx8alF1ZXJ5KSxmdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjt2YXIgZT1mdW5jdGlvbihlLG4sbyl7aWYoZSlyZXR1cm4gbz1vfHxcIlwiLFwib2JqZWN0XCI9PT10LnR5cGUobykmJihvPXQucGFyYW0obywhMCkpLHQuZWFjaChuLGZ1bmN0aW9uKHQsbil7ZT1lLnJlcGxhY2UoXCIkXCIrdCxufHxcIlwiKX0pLG8ubGVuZ3RoJiYoZSs9KGUuaW5kZXhPZihcIj9cIik+MD9cIiZcIjpcIj9cIikrbyksZX0sbj17eW91dHViZTp7bWF0Y2hlcjovKHlvdXR1YmVcXC5jb218eW91dHVcXC5iZXx5b3V0dWJlXFwtbm9jb29raWVcXC5jb20pXFwvKHdhdGNoXFw/KC4qJik/dj18dlxcL3x1XFwvfGVtYmVkXFwvPyk/KHZpZGVvc2VyaWVzXFw/bGlzdD0oLiopfFtcXHctXXsxMX18XFw/bGlzdFR5cGU9KC4qKSZsaXN0PSguKikpKC4qKS9pLHBhcmFtczp7YXV0b3BsYXk6MSxhdXRvaGlkZToxLGZzOjEscmVsOjAsaGQ6MSx3bW9kZTpcInRyYW5zcGFyZW50XCIsZW5hYmxlanNhcGk6MSxodG1sNToxfSxwYXJhbVBsYWNlOjgsdHlwZTpcImlmcmFtZVwiLHVybDpcIi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLyQ0XCIsdGh1bWI6XCIvL2ltZy55b3V0dWJlLmNvbS92aS8kNC9ocWRlZmF1bHQuanBnXCJ9LHZpbWVvOnttYXRjaGVyOi9eLit2aW1lby5jb21cXC8oLipcXC8pPyhbXFxkXSspKC4qKT8vLHBhcmFtczp7YXV0b3BsYXk6MSxoZDoxLHNob3dfdGl0bGU6MSxzaG93X2J5bGluZToxLHNob3dfcG9ydHJhaXQ6MCxmdWxsc2NyZWVuOjEsYXBpOjF9LHBhcmFtUGxhY2U6Myx0eXBlOlwiaWZyYW1lXCIsdXJsOlwiLy9wbGF5ZXIudmltZW8uY29tL3ZpZGVvLyQyXCJ9LG1ldGFjYWZlOnttYXRjaGVyOi9tZXRhY2FmZS5jb21cXC93YXRjaFxcLyhcXGQrKVxcLyguKik/Lyx0eXBlOlwiaWZyYW1lXCIsdXJsOlwiLy93d3cubWV0YWNhZmUuY29tL2VtYmVkLyQxLz9hcD0xXCJ9LGRhaWx5bW90aW9uOnttYXRjaGVyOi9kYWlseW1vdGlvbi5jb21cXC92aWRlb1xcLyguKilcXC8/KC4qKS8scGFyYW1zOnthZGRpdGlvbmFsSW5mb3M6MCxhdXRvU3RhcnQ6MX0sdHlwZTpcImlmcmFtZVwiLHVybDpcIi8vd3d3LmRhaWx5bW90aW9uLmNvbS9lbWJlZC92aWRlby8kMVwifSx2aW5lOnttYXRjaGVyOi92aW5lLmNvXFwvdlxcLyhbYS16QS1aMC05XFw/XFw9XFwtXSspLyx0eXBlOlwiaWZyYW1lXCIsdXJsOlwiLy92aW5lLmNvL3YvJDEvZW1iZWQvc2ltcGxlXCJ9LGluc3RhZ3JhbTp7bWF0Y2hlcjovKGluc3RhZ3JcXC5hbXxpbnN0YWdyYW1cXC5jb20pXFwvcFxcLyhbYS16QS1aMC05X1xcLV0rKVxcLz8vaSx0eXBlOlwiaW1hZ2VcIix1cmw6XCIvLyQxL3AvJDIvbWVkaWEvP3NpemU9bFwiXG59LGdtYXBfcGxhY2U6e21hdGNoZXI6LyhtYXBzXFwuKT9nb29nbGVcXC4oW2Etel17MiwzfShcXC5bYS16XXsyfSk/KVxcLygoKG1hcHNcXC8ocGxhY2VcXC8oLiopXFwvKT9cXEAoLiopLChcXGQrLj9cXGQrPyl6KSl8KFxcP2xsPSkpKC4qKT8vaSx0eXBlOlwiaWZyYW1lXCIsdXJsOmZ1bmN0aW9uKHQpe3JldHVyblwiLy9tYXBzLmdvb2dsZS5cIit0WzJdK1wiLz9sbD1cIisodFs5XT90WzldK1wiJno9XCIrTWF0aC5mbG9vcih0WzEwXSkrKHRbMTJdP3RbMTJdLnJlcGxhY2UoL15cXC8vLFwiJlwiKTpcIlwiKTp0WzEyXSkrXCImb3V0cHV0PVwiKyh0WzEyXSYmdFsxMl0uaW5kZXhPZihcImxheWVyPWNcIik+MD9cInN2ZW1iZWRcIjpcImVtYmVkXCIpfX0sZ21hcF9zZWFyY2g6e21hdGNoZXI6LyhtYXBzXFwuKT9nb29nbGVcXC4oW2Etel17MiwzfShcXC5bYS16XXsyfSk/KVxcLyhtYXBzXFwvc2VhcmNoXFwvKSguKikvaSx0eXBlOlwiaWZyYW1lXCIsdXJsOmZ1bmN0aW9uKHQpe3JldHVyblwiLy9tYXBzLmdvb2dsZS5cIit0WzJdK1wiL21hcHM/cT1cIit0WzVdLnJlcGxhY2UoXCJxdWVyeT1cIixcInE9XCIpLnJlcGxhY2UoXCJhcGk9MVwiLFwiXCIpK1wiJm91dHB1dD1lbWJlZFwifX19O3QoZG9jdW1lbnQpLm9uKFwib2JqZWN0TmVlZHNUeXBlLmZiXCIsZnVuY3Rpb24obyxhLGkpe3ZhciBzLHIsYyxsLHUsZCxmLHA9aS5zcmN8fFwiXCIsaD0hMTtzPXQuZXh0ZW5kKCEwLHt9LG4saS5vcHRzLm1lZGlhKSx0LmVhY2gocyxmdW5jdGlvbihuLG8pe2lmKGM9cC5tYXRjaChvLm1hdGNoZXIpKXtpZihoPW8udHlwZSxkPXt9LG8ucGFyYW1QbGFjZSYmY1tvLnBhcmFtUGxhY2VdKXt1PWNbby5wYXJhbVBsYWNlXSxcIj9cIj09dVswXSYmKHU9dS5zdWJzdHJpbmcoMSkpLHU9dS5zcGxpdChcIiZcIik7Zm9yKHZhciBhPTA7YTx1Lmxlbmd0aDsrK2Epe3ZhciBzPXVbYV0uc3BsaXQoXCI9XCIsMik7Mj09cy5sZW5ndGgmJihkW3NbMF1dPWRlY29kZVVSSUNvbXBvbmVudChzWzFdLnJlcGxhY2UoL1xcKy9nLFwiIFwiKSkpfX1yZXR1cm4gbD10LmV4dGVuZCghMCx7fSxvLnBhcmFtcyxpLm9wdHNbbl0sZCkscD1cImZ1bmN0aW9uXCI9PT10LnR5cGUoby51cmwpP28udXJsLmNhbGwodGhpcyxjLGwsaSk6ZShvLnVybCxjLGwpLHI9XCJmdW5jdGlvblwiPT09dC50eXBlKG8udGh1bWIpP28udGh1bWIuY2FsbCh0aGlzLGMsbCxpKTplKG8udGh1bWIsYyksXCJ2aW1lb1wiPT09biYmKHA9cC5yZXBsYWNlKFwiJiUyM1wiLFwiI1wiKSksITF9fSksaD8oaS5zcmM9cCxpLnR5cGU9aCxpLm9wdHMudGh1bWJ8fGkub3B0cy4kdGh1bWImJmkub3B0cy4kdGh1bWIubGVuZ3RofHwoaS5vcHRzLnRodW1iPXIpLFwiaWZyYW1lXCI9PT1oJiYodC5leHRlbmQoITAsaS5vcHRzLHtpZnJhbWU6e3ByZWxvYWQ6ITEsYXR0cjp7c2Nyb2xsaW5nOlwibm9cIn19fSksaS5jb250ZW50UHJvdmlkZXI9ZixpLm9wdHMuc2xpZGVDbGFzcys9XCIgZmFuY3lib3gtc2xpZGUtLVwiKyhcImdtYXBfcGxhY2VcIj09Znx8XCJnbWFwX3NlYXJjaFwiPT1mP1wibWFwXCI6XCJ2aWRlb1wiKSkpOnAmJihpLnR5cGU9aS5vcHRzLmRlZmF1bHRUeXBlKX0pfSh3aW5kb3cualF1ZXJ5fHxqUXVlcnkpLGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgbz1mdW5jdGlvbigpe3JldHVybiB0LnJlcXVlc3RBbmltYXRpb25GcmFtZXx8dC53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHQubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx0Lm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGUpe3JldHVybiB0LnNldFRpbWVvdXQoZSwxZTMvNjApfX0oKSxhPWZ1bmN0aW9uKCl7cmV0dXJuIHQuY2FuY2VsQW5pbWF0aW9uRnJhbWV8fHQud2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fHQubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fHQub0NhbmNlbEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbihlKXt0LmNsZWFyVGltZW91dChlKX19KCksaT1mdW5jdGlvbihlKXt2YXIgbj1bXTtlPWUub3JpZ2luYWxFdmVudHx8ZXx8dC5lLGU9ZS50b3VjaGVzJiZlLnRvdWNoZXMubGVuZ3RoP2UudG91Y2hlczplLmNoYW5nZWRUb3VjaGVzJiZlLmNoYW5nZWRUb3VjaGVzLmxlbmd0aD9lLmNoYW5nZWRUb3VjaGVzOltlXTtmb3IodmFyIG8gaW4gZSllW29dLnBhZ2VYP24ucHVzaCh7eDplW29dLnBhZ2VYLHk6ZVtvXS5wYWdlWX0pOmVbb10uY2xpZW50WCYmbi5wdXNoKHt4OmVbb10uY2xpZW50WCx5OmVbb10uY2xpZW50WX0pO3JldHVybiBufSxzPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZSYmdD9cInhcIj09PW4/dC54LWUueDpcInlcIj09PW4/dC55LWUueTpNYXRoLnNxcnQoTWF0aC5wb3codC54LWUueCwyKStNYXRoLnBvdyh0LnktZS55LDIpKTowfSxyPWZ1bmN0aW9uKHQpe2lmKHQuaXMoJ2EsYXJlYSxidXR0b24sW3JvbGU9XCJidXR0b25cIl0saW5wdXQsbGFiZWwsc2VsZWN0LHN1bW1hcnksdGV4dGFyZWEnKXx8bi5pc0Z1bmN0aW9uKHQuZ2V0KDApLm9uY2xpY2spfHx0LmRhdGEoXCJzZWxlY3RhYmxlXCIpKXJldHVybiEwO2Zvcih2YXIgZT0wLG89dFswXS5hdHRyaWJ1dGVzLGE9by5sZW5ndGg7ZTxhO2UrKylpZihcImRhdGEtZmFuY3lib3gtXCI9PT1vW2VdLm5vZGVOYW1lLnN1YnN0cigwLDE0KSlyZXR1cm4hMDtyZXR1cm4hMX0sYz1mdW5jdGlvbihlKXt2YXIgbj10LmdldENvbXB1dGVkU3R5bGUoZSlbXCJvdmVyZmxvdy15XCJdLG89dC5nZXRDb21wdXRlZFN0eWxlKGUpW1wib3ZlcmZsb3cteFwiXSxhPShcInNjcm9sbFwiPT09bnx8XCJhdXRvXCI9PT1uKSYmZS5zY3JvbGxIZWlnaHQ+ZS5jbGllbnRIZWlnaHQsaT0oXCJzY3JvbGxcIj09PW98fFwiYXV0b1wiPT09bykmJmUuc2Nyb2xsV2lkdGg+ZS5jbGllbnRXaWR0aDtyZXR1cm4gYXx8aX0sbD1mdW5jdGlvbih0KXtmb3IodmFyIGU9ITE7Oyl7aWYoZT1jKHQuZ2V0KDApKSlicmVhaztpZih0PXQucGFyZW50KCksIXQubGVuZ3RofHx0Lmhhc0NsYXNzKFwiZmFuY3lib3gtc3RhZ2VcIil8fHQuaXMoXCJib2R5XCIpKWJyZWFrfXJldHVybiBlfSx1PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5pbnN0YW5jZT10LGUuJGJnPXQuJHJlZnMuYmcsZS4kc3RhZ2U9dC4kcmVmcy5zdGFnZSxlLiRjb250YWluZXI9dC4kcmVmcy5jb250YWluZXIsZS5kZXN0cm95KCksZS4kY29udGFpbmVyLm9uKFwidG91Y2hzdGFydC5mYi50b3VjaCBtb3VzZWRvd24uZmIudG91Y2hcIixuLnByb3h5KGUsXCJvbnRvdWNoc3RhcnRcIikpfTt1LnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy4kY29udGFpbmVyLm9mZihcIi5mYi50b3VjaFwiKX0sdS5wcm90b3R5cGUub250b3VjaHN0YXJ0PWZ1bmN0aW9uKG8pe3ZhciBhPXRoaXMsYz1uKG8udGFyZ2V0KSx1PWEuaW5zdGFuY2UsZD11LmN1cnJlbnQsZj1kLiRjb250ZW50LHA9XCJ0b3VjaHN0YXJ0XCI9PW8udHlwZTtpZihwJiZhLiRjb250YWluZXIub2ZmKFwibW91c2Vkb3duLmZiLnRvdWNoXCIpLCFkfHxhLmluc3RhbmNlLmlzQW5pbWF0aW5nfHxhLmluc3RhbmNlLmlzQ2xvc2luZylyZXR1cm4gby5zdG9wUHJvcGFnYXRpb24oKSx2b2lkIG8ucHJldmVudERlZmF1bHQoKTtpZigoIW8ub3JpZ2luYWxFdmVudHx8MiE9by5vcmlnaW5hbEV2ZW50LmJ1dHRvbikmJmMubGVuZ3RoJiYhcihjKSYmIXIoYy5wYXJlbnQoKSkmJiEoby5vcmlnaW5hbEV2ZW50LmNsaWVudFg+Y1swXS5jbGllbnRXaWR0aCtjLm9mZnNldCgpLmxlZnQpJiYoYS5zdGFydFBvaW50cz1pKG8pLGEuc3RhcnRQb2ludHMmJiEoYS5zdGFydFBvaW50cy5sZW5ndGg+MSYmdS5pc1NsaWRpbmcpKSl7aWYoYS4kdGFyZ2V0PWMsYS4kY29udGVudD1mLGEuY2FuVGFwPSEwLGEub3B0cz1kLm9wdHMudG91Y2gsbihlKS5vZmYoXCIuZmIudG91Y2hcIiksbihlKS5vbihwP1widG91Y2hlbmQuZmIudG91Y2ggdG91Y2hjYW5jZWwuZmIudG91Y2hcIjpcIm1vdXNldXAuZmIudG91Y2ggbW91c2VsZWF2ZS5mYi50b3VjaFwiLG4ucHJveHkoYSxcIm9udG91Y2hlbmRcIikpLG4oZSkub24ocD9cInRvdWNobW92ZS5mYi50b3VjaFwiOlwibW91c2Vtb3ZlLmZiLnRvdWNoXCIsbi5wcm94eShhLFwib250b3VjaG1vdmVcIikpLCFhLm9wdHMmJiF1LmNhblBhbigpfHwhYy5pcyhhLiRzdGFnZSkmJiFhLiRzdGFnZS5maW5kKGMpLmxlbmd0aClyZXR1cm4gdm9pZChjLmlzKFwiaW1nXCIpJiZvLnByZXZlbnREZWZhdWx0KCkpO28uc3RvcFByb3BhZ2F0aW9uKCksbi5mYW5jeWJveC5pc01vYmlsZSYmKGwoYS4kdGFyZ2V0KXx8bChhLiR0YXJnZXQucGFyZW50KCkpKXx8by5wcmV2ZW50RGVmYXVsdCgpLGEuY2FudmFzV2lkdGg9TWF0aC5yb3VuZChkLiRzbGlkZVswXS5jbGllbnRXaWR0aCksYS5jYW52YXNIZWlnaHQ9TWF0aC5yb3VuZChkLiRzbGlkZVswXS5jbGllbnRIZWlnaHQpLGEuc3RhcnRUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLGEuZGlzdGFuY2VYPWEuZGlzdGFuY2VZPWEuZGlzdGFuY2U9MCxhLmlzUGFubmluZz0hMSxhLmlzU3dpcGluZz0hMSxhLmlzWm9vbWluZz0hMSxhLnNsaWRlclN0YXJ0UG9zPWEuc2xpZGVyTGFzdFBvc3x8e3RvcDowLGxlZnQ6MH0sYS5jb250ZW50U3RhcnRQb3M9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoYS4kY29udGVudCksYS5jb250ZW50TGFzdFBvcz1udWxsLDEhPT1hLnN0YXJ0UG9pbnRzLmxlbmd0aHx8YS5pc1pvb21pbmd8fChhLmNhblRhcD0hdS5pc1NsaWRpbmcsXCJpbWFnZVwiPT09ZC50eXBlJiYoYS5jb250ZW50U3RhcnRQb3Mud2lkdGg+YS5jYW52YXNXaWR0aCsxfHxhLmNvbnRlbnRTdGFydFBvcy5oZWlnaHQ+YS5jYW52YXNIZWlnaHQrMSk/KG4uZmFuY3lib3guc3RvcChhLiRjb250ZW50KSxhLiRjb250ZW50LmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixcIjBtc1wiKSxhLmlzUGFubmluZz0hMCk6YS5pc1N3aXBpbmc9ITAsYS4kY29udGFpbmVyLmFkZENsYXNzKFwiZmFuY3lib3gtY29udHJvbHMtLWlzR3JhYmJpbmdcIikpLDIhPT1hLnN0YXJ0UG9pbnRzLmxlbmd0aHx8dS5pc0FuaW1hdGluZ3x8ZC5oYXNFcnJvcnx8XCJpbWFnZVwiIT09ZC50eXBlfHwhZC5pc0xvYWRlZCYmIWQuJGdob3N0fHwoYS5pc1pvb21pbmc9ITAsYS5pc1N3aXBpbmc9ITEsYS5pc1Bhbm5pbmc9ITEsbi5mYW5jeWJveC5zdG9wKGEuJGNvbnRlbnQpLGEuJGNvbnRlbnQuY3NzKFwidHJhbnNpdGlvbi1kdXJhdGlvblwiLFwiMG1zXCIpLGEuY2VudGVyUG9pbnRTdGFydFg9LjUqKGEuc3RhcnRQb2ludHNbMF0ueCthLnN0YXJ0UG9pbnRzWzFdLngpLW4odCkuc2Nyb2xsTGVmdCgpLGEuY2VudGVyUG9pbnRTdGFydFk9LjUqKGEuc3RhcnRQb2ludHNbMF0ueSthLnN0YXJ0UG9pbnRzWzFdLnkpLW4odCkuc2Nyb2xsVG9wKCksYS5wZXJjZW50YWdlT2ZJbWFnZUF0UGluY2hQb2ludFg9KGEuY2VudGVyUG9pbnRTdGFydFgtYS5jb250ZW50U3RhcnRQb3MubGVmdCkvYS5jb250ZW50U3RhcnRQb3Mud2lkdGgsYS5wZXJjZW50YWdlT2ZJbWFnZUF0UGluY2hQb2ludFk9KGEuY2VudGVyUG9pbnRTdGFydFktYS5jb250ZW50U3RhcnRQb3MudG9wKS9hLmNvbnRlbnRTdGFydFBvcy5oZWlnaHQsYS5zdGFydERpc3RhbmNlQmV0d2VlbkZpbmdlcnM9cyhhLnN0YXJ0UG9pbnRzWzBdLGEuc3RhcnRQb2ludHNbMV0pKX19LHUucHJvdG90eXBlLm9udG91Y2htb3ZlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoZS5uZXdQb2ludHM9aSh0KSxuLmZhbmN5Ym94LmlzTW9iaWxlJiYobChlLiR0YXJnZXQpfHxsKGUuJHRhcmdldC5wYXJlbnQoKSkpKXJldHVybiB0LnN0b3BQcm9wYWdhdGlvbigpLHZvaWQoZS5jYW5UYXA9ITEpO2lmKChlLm9wdHN8fGUuaW5zdGFuY2UuY2FuUGFuKCkpJiZlLm5ld1BvaW50cyYmZS5uZXdQb2ludHMubGVuZ3RoJiYoZS5kaXN0YW5jZVg9cyhlLm5ld1BvaW50c1swXSxlLnN0YXJ0UG9pbnRzWzBdLFwieFwiKSxlLmRpc3RhbmNlWT1zKGUubmV3UG9pbnRzWzBdLGUuc3RhcnRQb2ludHNbMF0sXCJ5XCIpLGUuZGlzdGFuY2U9cyhlLm5ld1BvaW50c1swXSxlLnN0YXJ0UG9pbnRzWzBdKSxlLmRpc3RhbmNlPjApKXtpZighZS4kdGFyZ2V0LmlzKGUuJHN0YWdlKSYmIWUuJHN0YWdlLmZpbmQoZS4kdGFyZ2V0KS5sZW5ndGgpcmV0dXJuO3Quc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLGUuaXNTd2lwaW5nP2Uub25Td2lwZSgpOmUuaXNQYW5uaW5nP2Uub25QYW4oKTplLmlzWm9vbWluZyYmZS5vblpvb20oKX19LHUucHJvdG90eXBlLm9uU3dpcGU9ZnVuY3Rpb24oKXt2YXIgZSxpPXRoaXMscz1pLmlzU3dpcGluZyxyPWkuc2xpZGVyU3RhcnRQb3MubGVmdHx8MDtzPT09ITA/TWF0aC5hYnMoaS5kaXN0YW5jZSk+MTAmJihpLmNhblRhcD0hMSxpLmluc3RhbmNlLmdyb3VwLmxlbmd0aDwyJiZpLm9wdHMudmVydGljYWw/aS5pc1N3aXBpbmc9XCJ5XCI6aS5pbnN0YW5jZS5pc1NsaWRpbmd8fGkub3B0cy52ZXJ0aWNhbD09PSExfHxcImF1dG9cIj09PWkub3B0cy52ZXJ0aWNhbCYmbih0KS53aWR0aCgpPjgwMD9pLmlzU3dpcGluZz1cInhcIjooZT1NYXRoLmFicygxODAqTWF0aC5hdGFuMihpLmRpc3RhbmNlWSxpLmRpc3RhbmNlWCkvTWF0aC5QSSksaS5pc1N3aXBpbmc9ZT40NSYmZTwxMzU/XCJ5XCI6XCJ4XCIpLGkuaW5zdGFuY2UuaXNTbGlkaW5nPWkuaXNTd2lwaW5nLGkuc3RhcnRQb2ludHM9aS5uZXdQb2ludHMsbi5lYWNoKGkuaW5zdGFuY2Uuc2xpZGVzLGZ1bmN0aW9uKHQsZSl7bi5mYW5jeWJveC5zdG9wKGUuJHNsaWRlKSxlLiRzbGlkZS5jc3MoXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCIsXCIwbXNcIiksZS5pblRyYW5zaXRpb249ITEsZS5wb3M9PT1pLmluc3RhbmNlLmN1cnJlbnQucG9zJiYoaS5zbGlkZXJTdGFydFBvcy5sZWZ0PW4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKGUuJHNsaWRlKS5sZWZ0KX0pLGkuaW5zdGFuY2UuU2xpZGVTaG93JiZpLmluc3RhbmNlLlNsaWRlU2hvdy5pc0FjdGl2ZSYmaS5pbnN0YW5jZS5TbGlkZVNob3cuc3RvcCgpKTooXCJ4XCI9PXMmJihpLmRpc3RhbmNlWD4wJiYoaS5pbnN0YW5jZS5ncm91cC5sZW5ndGg8Mnx8MD09PWkuaW5zdGFuY2UuY3VycmVudC5pbmRleCYmIWkuaW5zdGFuY2UuY3VycmVudC5vcHRzLmxvb3ApP3IrPU1hdGgucG93KGkuZGlzdGFuY2VYLC44KTppLmRpc3RhbmNlWDwwJiYoaS5pbnN0YW5jZS5ncm91cC5sZW5ndGg8Mnx8aS5pbnN0YW5jZS5jdXJyZW50LmluZGV4PT09aS5pbnN0YW5jZS5ncm91cC5sZW5ndGgtMSYmIWkuaW5zdGFuY2UuY3VycmVudC5vcHRzLmxvb3ApP3ItPU1hdGgucG93KC1pLmRpc3RhbmNlWCwuOCk6cis9aS5kaXN0YW5jZVgpLGkuc2xpZGVyTGFzdFBvcz17dG9wOlwieFwiPT1zPzA6aS5zbGlkZXJTdGFydFBvcy50b3AraS5kaXN0YW5jZVksbGVmdDpyfSxpLnJlcXVlc3RJZCYmKGEoaS5yZXF1ZXN0SWQpLGkucmVxdWVzdElkPW51bGwpLGkucmVxdWVzdElkPW8oZnVuY3Rpb24oKXtpLnNsaWRlckxhc3RQb3MmJihuLmVhY2goaS5pbnN0YW5jZS5zbGlkZXMsZnVuY3Rpb24odCxlKXt2YXIgbz1lLnBvcy1pLmluc3RhbmNlLmN1cnJQb3M7bi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoZS4kc2xpZGUse3RvcDppLnNsaWRlckxhc3RQb3MudG9wLGxlZnQ6aS5zbGlkZXJMYXN0UG9zLmxlZnQrbyppLmNhbnZhc1dpZHRoK28qZS5vcHRzLmd1dHRlcn0pfSksaS4kY29udGFpbmVyLmFkZENsYXNzKFwiZmFuY3lib3gtaXMtc2xpZGluZ1wiKSl9KSl9LHUucHJvdG90eXBlLm9uUGFuPWZ1bmN0aW9uKCl7dmFyIHQsZSxpLHM9dGhpcztzLmNhblRhcD0hMSx0PXMuY29udGVudFN0YXJ0UG9zLndpZHRoPnMuY2FudmFzV2lkdGg/cy5jb250ZW50U3RhcnRQb3MubGVmdCtzLmRpc3RhbmNlWDpzLmNvbnRlbnRTdGFydFBvcy5sZWZ0LGU9cy5jb250ZW50U3RhcnRQb3MudG9wK3MuZGlzdGFuY2VZLGk9cy5saW1pdE1vdmVtZW50KHQsZSxzLmNvbnRlbnRTdGFydFBvcy53aWR0aCxzLmNvbnRlbnRTdGFydFBvcy5oZWlnaHQpLGkuc2NhbGVYPXMuY29udGVudFN0YXJ0UG9zLnNjYWxlWCxpLnNjYWxlWT1zLmNvbnRlbnRTdGFydFBvcy5zY2FsZVkscy5jb250ZW50TGFzdFBvcz1pLHMucmVxdWVzdElkJiYoYShzLnJlcXVlc3RJZCkscy5yZXF1ZXN0SWQ9bnVsbCkscy5yZXF1ZXN0SWQ9byhmdW5jdGlvbigpe24uZmFuY3lib3guc2V0VHJhbnNsYXRlKHMuJGNvbnRlbnQscy5jb250ZW50TGFzdFBvcyl9KX0sdS5wcm90b3R5cGUubGltaXRNb3ZlbWVudD1mdW5jdGlvbih0LGUsbixvKXt2YXIgYSxpLHMscixjPXRoaXMsbD1jLmNhbnZhc1dpZHRoLHU9Yy5jYW52YXNIZWlnaHQsZD1jLmNvbnRlbnRTdGFydFBvcy5sZWZ0LGY9Yy5jb250ZW50U3RhcnRQb3MudG9wLHA9Yy5kaXN0YW5jZVgsaD1jLmRpc3RhbmNlWTtyZXR1cm4gYT1NYXRoLm1heCgwLC41KmwtLjUqbiksaT1NYXRoLm1heCgwLC41KnUtLjUqbykscz1NYXRoLm1pbihsLW4sLjUqbC0uNSpuKSxyPU1hdGgubWluKHUtbywuNSp1LS41Km8pLG4+bCYmKHA+MCYmdD5hJiYodD1hLTErTWF0aC5wb3coLWErZCtwLC44KXx8MCkscDwwJiZ0PHMmJih0PXMrMS1NYXRoLnBvdyhzLWQtcCwuOCl8fDApKSxvPnUmJihoPjAmJmU+aSYmKGU9aS0xK01hdGgucG93KC1pK2YraCwuOCl8fDApLGg8MCYmZTxyJiYoZT1yKzEtTWF0aC5wb3coci1mLWgsLjgpfHwwKSkse3RvcDplLGxlZnQ6dH19LHUucHJvdG90eXBlLmxpbWl0UG9zaXRpb249ZnVuY3Rpb24odCxlLG4sbyl7dmFyIGE9dGhpcyxpPWEuY2FudmFzV2lkdGgscz1hLmNhbnZhc0hlaWdodDtyZXR1cm4gbj5pPyh0PXQ+MD8wOnQsdD10PGktbj9pLW46dCk6dD1NYXRoLm1heCgwLGkvMi1uLzIpLG8+cz8oZT1lPjA/MDplLGU9ZTxzLW8/cy1vOmUpOmU9TWF0aC5tYXgoMCxzLzItby8yKSx7dG9wOmUsbGVmdDp0fX0sdS5wcm90b3R5cGUub25ab29tPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxpPWUuY29udGVudFN0YXJ0UG9zLndpZHRoLHI9ZS5jb250ZW50U3RhcnRQb3MuaGVpZ2h0LGM9ZS5jb250ZW50U3RhcnRQb3MubGVmdCxsPWUuY29udGVudFN0YXJ0UG9zLnRvcCx1PXMoZS5uZXdQb2ludHNbMF0sZS5uZXdQb2ludHNbMV0pLGQ9dS9lLnN0YXJ0RGlzdGFuY2VCZXR3ZWVuRmluZ2VycyxmPU1hdGguZmxvb3IoaSpkKSxwPU1hdGguZmxvb3IocipkKSxoPShpLWYpKmUucGVyY2VudGFnZU9mSW1hZ2VBdFBpbmNoUG9pbnRYLGc9KHItcCkqZS5wZXJjZW50YWdlT2ZJbWFnZUF0UGluY2hQb2ludFksYj0oZS5uZXdQb2ludHNbMF0ueCtlLm5ld1BvaW50c1sxXS54KS8yLW4odCkuc2Nyb2xsTGVmdCgpLG09KGUubmV3UG9pbnRzWzBdLnkrZS5uZXdQb2ludHNbMV0ueSkvMi1uKHQpLnNjcm9sbFRvcCgpLHk9Yi1lLmNlbnRlclBvaW50U3RhcnRYLHY9bS1lLmNlbnRlclBvaW50U3RhcnRZLHg9YysoaCt5KSx3PWwrKGcrdiksJD17dG9wOncsbGVmdDp4LHNjYWxlWDplLmNvbnRlbnRTdGFydFBvcy5zY2FsZVgqZCxzY2FsZVk6ZS5jb250ZW50U3RhcnRQb3Muc2NhbGVZKmR9O2UuY2FuVGFwPSExLGUubmV3V2lkdGg9ZixlLm5ld0hlaWdodD1wLGUuY29udGVudExhc3RQb3M9JCxlLnJlcXVlc3RJZCYmKGEoZS5yZXF1ZXN0SWQpLGUucmVxdWVzdElkPW51bGwpLGUucmVxdWVzdElkPW8oZnVuY3Rpb24oKXtuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZShlLiRjb250ZW50LGUuY29udGVudExhc3RQb3MpfSl9LHUucHJvdG90eXBlLm9udG91Y2hlbmQ9ZnVuY3Rpb24odCl7dmFyIG89dGhpcyxzPU1hdGgubWF4KChuZXcgRGF0ZSkuZ2V0VGltZSgpLW8uc3RhcnRUaW1lLDEpLHI9by5pc1N3aXBpbmcsYz1vLmlzUGFubmluZyxsPW8uaXNab29taW5nO3JldHVybiBvLmVuZFBvaW50cz1pKHQpLG8uJGNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWNvbnRyb2xzLS1pc0dyYWJiaW5nXCIpLG4oZSkub2ZmKFwiLmZiLnRvdWNoXCIpLG8ucmVxdWVzdElkJiYoYShvLnJlcXVlc3RJZCksby5yZXF1ZXN0SWQ9bnVsbCksby5pc1N3aXBpbmc9ITEsby5pc1Bhbm5pbmc9ITEsby5pc1pvb21pbmc9ITEsby5jYW5UYXA/by5vblRhcCh0KTooby5zcGVlZD0zNjYsby52ZWxvY2l0eVg9by5kaXN0YW5jZVgvcyouNSxvLnZlbG9jaXR5WT1vLmRpc3RhbmNlWS9zKi41LG8uc3BlZWRYPU1hdGgubWF4KC41Km8uc3BlZWQsTWF0aC5taW4oMS41Km8uc3BlZWQsMS9NYXRoLmFicyhvLnZlbG9jaXR5WCkqby5zcGVlZCkpLHZvaWQoYz9vLmVuZFBhbm5pbmcoKTpsP28uZW5kWm9vbWluZygpOm8uZW5kU3dpcGluZyhyKSkpfSx1LnByb3RvdHlwZS5lbmRTd2lwaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbz0hMTtlLmluc3RhbmNlLmlzU2xpZGluZz0hMSxlLnNsaWRlckxhc3RQb3M9bnVsbCxcInlcIj09dCYmTWF0aC5hYnMoZS5kaXN0YW5jZVkpPjUwPyhuLmZhbmN5Ym94LmFuaW1hdGUoZS5pbnN0YW5jZS5jdXJyZW50LiRzbGlkZSx7dG9wOmUuc2xpZGVyU3RhcnRQb3MudG9wK2UuZGlzdGFuY2VZKzE1MCplLnZlbG9jaXR5WSxvcGFjaXR5OjB9LDE1MCksbz1lLmluc3RhbmNlLmNsb3NlKCEwLDMwMCkpOlwieFwiPT10JiZlLmRpc3RhbmNlWD41MCYmZS5pbnN0YW5jZS5ncm91cC5sZW5ndGg+MT9vPWUuaW5zdGFuY2UucHJldmlvdXMoZS5zcGVlZFgpOlwieFwiPT10JiZlLmRpc3RhbmNlWDwtNTAmJmUuaW5zdGFuY2UuZ3JvdXAubGVuZ3RoPjEmJihvPWUuaW5zdGFuY2UubmV4dChlLnNwZWVkWCkpLG8hPT0hMXx8XCJ4XCIhPXQmJlwieVwiIT10fHxlLmluc3RhbmNlLmp1bXBUbyhlLmluc3RhbmNlLmN1cnJlbnQuaW5kZXgsMTUwKSxlLiRjb250YWluZXIucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy1zbGlkaW5nXCIpfSx1LnByb3RvdHlwZS5lbmRQYW5uaW5nPWZ1bmN0aW9uKCl7dmFyIHQsZSxvLGE9dGhpczthLmNvbnRlbnRMYXN0UG9zJiYoYS5vcHRzLm1vbWVudHVtPT09ITE/KHQ9YS5jb250ZW50TGFzdFBvcy5sZWZ0LGU9YS5jb250ZW50TGFzdFBvcy50b3ApOih0PWEuY29udGVudExhc3RQb3MubGVmdCthLnZlbG9jaXR5WCphLnNwZWVkLGU9YS5jb250ZW50TGFzdFBvcy50b3ArYS52ZWxvY2l0eVkqYS5zcGVlZCksbz1hLmxpbWl0UG9zaXRpb24odCxlLGEuY29udGVudFN0YXJ0UG9zLndpZHRoLGEuY29udGVudFN0YXJ0UG9zLmhlaWdodCksby53aWR0aD1hLmNvbnRlbnRTdGFydFBvcy53aWR0aCxvLmhlaWdodD1hLmNvbnRlbnRTdGFydFBvcy5oZWlnaHQsbi5mYW5jeWJveC5hbmltYXRlKGEuJGNvbnRlbnQsbywzMzApKX0sdS5wcm90b3R5cGUuZW5kWm9vbWluZz1mdW5jdGlvbigpe3ZhciB0LGUsbyxhLGk9dGhpcyxzPWkuaW5zdGFuY2UuY3VycmVudCxyPWkubmV3V2lkdGgsYz1pLm5ld0hlaWdodDtpLmNvbnRlbnRMYXN0UG9zJiYodD1pLmNvbnRlbnRMYXN0UG9zLmxlZnQsZT1pLmNvbnRlbnRMYXN0UG9zLnRvcCxhPXt0b3A6ZSxsZWZ0OnQsd2lkdGg6cixoZWlnaHQ6YyxzY2FsZVg6MSxzY2FsZVk6MX0sbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoaS4kY29udGVudCxhKSxyPGkuY2FudmFzV2lkdGgmJmM8aS5jYW52YXNIZWlnaHQ/aS5pbnN0YW5jZS5zY2FsZVRvRml0KDE1MCk6cj5zLndpZHRofHxjPnMuaGVpZ2h0P2kuaW5zdGFuY2Uuc2NhbGVUb0FjdHVhbChpLmNlbnRlclBvaW50U3RhcnRYLGkuY2VudGVyUG9pbnRTdGFydFksMTUwKToobz1pLmxpbWl0UG9zaXRpb24odCxlLHIsYyksbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoaS5jb250ZW50LG4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKGkuJGNvbnRlbnQpKSxuLmZhbmN5Ym94LmFuaW1hdGUoaS4kY29udGVudCxvLDE1MCkpKX0sdS5wcm90b3R5cGUub25UYXA9ZnVuY3Rpb24odCl7dmFyIGUsbz10aGlzLGE9bih0LnRhcmdldCkscz1vLmluc3RhbmNlLHI9cy5jdXJyZW50LGM9dCYmaSh0KXx8by5zdGFydFBvaW50cyxsPWNbMF0/Y1swXS54LW8uJHN0YWdlLm9mZnNldCgpLmxlZnQ6MCx1PWNbMF0/Y1swXS55LW8uJHN0YWdlLm9mZnNldCgpLnRvcDowLGQ9ZnVuY3Rpb24oZSl7dmFyIGE9ci5vcHRzW2VdO2lmKG4uaXNGdW5jdGlvbihhKSYmKGE9YS5hcHBseShzLFtyLHRdKSksYSlzd2l0Y2goYSl7Y2FzZVwiY2xvc2VcIjpzLmNsb3NlKG8uc3RhcnRFdmVudCk7YnJlYWs7Y2FzZVwidG9nZ2xlQ29udHJvbHNcIjpzLnRvZ2dsZUNvbnRyb2xzKCEwKTticmVhaztjYXNlXCJuZXh0XCI6cy5uZXh0KCk7YnJlYWs7Y2FzZVwibmV4dE9yQ2xvc2VcIjpzLmdyb3VwLmxlbmd0aD4xP3MubmV4dCgpOnMuY2xvc2Uoby5zdGFydEV2ZW50KTticmVhaztjYXNlXCJ6b29tXCI6XCJpbWFnZVwiPT1yLnR5cGUmJihyLmlzTG9hZGVkfHxyLiRnaG9zdCkmJihzLmNhblBhbigpP3Muc2NhbGVUb0ZpdCgpOnMuaXNTY2FsZWREb3duKCk/cy5zY2FsZVRvQWN0dWFsKGwsdSk6cy5ncm91cC5sZW5ndGg8MiYmcy5jbG9zZShvLnN0YXJ0RXZlbnQpKX19O2lmKCEodC5vcmlnaW5hbEV2ZW50JiYyPT10Lm9yaWdpbmFsRXZlbnQuYnV0dG9ufHxzLmlzU2xpZGluZ3x8bD5hWzBdLmNsaWVudFdpZHRoK2Eub2Zmc2V0KCkubGVmdCkpe2lmKGEuaXMoXCIuZmFuY3lib3gtYmcsLmZhbmN5Ym94LWlubmVyLC5mYW5jeWJveC1vdXRlciwuZmFuY3lib3gtY29udGFpbmVyXCIpKWU9XCJPdXRzaWRlXCI7ZWxzZSBpZihhLmlzKFwiLmZhbmN5Ym94LXNsaWRlXCIpKWU9XCJTbGlkZVwiO2Vsc2V7aWYoIXMuY3VycmVudC4kY29udGVudHx8IXMuY3VycmVudC4kY29udGVudC5oYXModC50YXJnZXQpLmxlbmd0aClyZXR1cm47ZT1cIkNvbnRlbnRcIn1pZihvLnRhcHBlZCl7aWYoY2xlYXJUaW1lb3V0KG8udGFwcGVkKSxvLnRhcHBlZD1udWxsLE1hdGguYWJzKGwtby50YXBYKT41MHx8TWF0aC5hYnModS1vLnRhcFkpPjUwfHxzLmlzU2xpZGluZylyZXR1cm4gdGhpcztkKFwiZGJsY2xpY2tcIitlKX1lbHNlIG8udGFwWD1sLG8udGFwWT11LHIub3B0c1tcImRibGNsaWNrXCIrZV0mJnIub3B0c1tcImRibGNsaWNrXCIrZV0hPT1yLm9wdHNbXCJjbGlja1wiK2VdP28udGFwcGVkPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtvLnRhcHBlZD1udWxsLGQoXCJjbGlja1wiK2UpfSwzMDApOmQoXCJjbGlja1wiK2UpO3JldHVybiB0aGlzfX0sbihlKS5vbihcIm9uQWN0aXZhdGUuZmJcIixmdW5jdGlvbih0LGUpe2UmJiFlLkd1ZXN0dXJlcyYmKGUuR3Vlc3R1cmVzPW5ldyB1KGUpKX0pLG4oZSkub24oXCJiZWZvcmVDbG9zZS5mYlwiLGZ1bmN0aW9uKHQsZSl7ZSYmZS5HdWVzdHVyZXMmJmUuR3Vlc3R1cmVzLmRlc3Ryb3koKX0pfSh3aW5kb3csZG9jdW1lbnQsd2luZG93LmpRdWVyeXx8alF1ZXJ5KSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2UuZXh0ZW5kKCEwLGUuZmFuY3lib3guZGVmYXVsdHMse2J0blRwbDp7c2xpZGVTaG93Oic8YnV0dG9uIGRhdGEtZmFuY3lib3gtcGxheSBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLXBsYXlcIiB0aXRsZT1cInt7UExBWV9TVEFSVH19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDQwIDQwXCI+PHBhdGggZD1cIk0xMywxMiBMMjcsMjAgTDEzLDI3IFpcIiAvPjxwYXRoIGQ9XCJNMTUsMTAgdjE5IE0yMywxMCB2MTlcIiAvPjwvc3ZnPjwvYnV0dG9uPid9LHNsaWRlU2hvdzp7YXV0b1N0YXJ0OiExLHNwZWVkOjNlM319KTt2YXIgbj1mdW5jdGlvbih0KXt0aGlzLmluc3RhbmNlPXQsdGhpcy5pbml0KCl9O2UuZXh0ZW5kKG4ucHJvdG90eXBlLHt0aW1lcjpudWxsLGlzQWN0aXZlOiExLCRidXR0b246bnVsbCxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LiRidXR0b249dC5pbnN0YW5jZS4kcmVmcy50b29sYmFyLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1wbGF5XVwiKS5vbihcImNsaWNrXCIsZnVuY3Rpb24oKXt0LnRvZ2dsZSgpfSksKHQuaW5zdGFuY2UuZ3JvdXAubGVuZ3RoPDJ8fCF0Lmluc3RhbmNlLmdyb3VwW3QuaW5zdGFuY2UuY3VyckluZGV4XS5vcHRzLnNsaWRlU2hvdykmJnQuJGJ1dHRvbi5oaWRlKCl9LHNldDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuaW5zdGFuY2UmJmUuaW5zdGFuY2UuY3VycmVudCYmKHQ9PT0hMHx8ZS5pbnN0YW5jZS5jdXJyZW50Lm9wdHMubG9vcHx8ZS5pbnN0YW5jZS5jdXJySW5kZXg8ZS5pbnN0YW5jZS5ncm91cC5sZW5ndGgtMSk/ZS50aW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5pc0FjdGl2ZSYmZS5pbnN0YW5jZS5qdW1wVG8oKGUuaW5zdGFuY2UuY3VyckluZGV4KzEpJWUuaW5zdGFuY2UuZ3JvdXAubGVuZ3RoKX0sZS5pbnN0YW5jZS5jdXJyZW50Lm9wdHMuc2xpZGVTaG93LnNwZWVkKTooZS5zdG9wKCksZS5pbnN0YW5jZS5pZGxlU2Vjb25kc0NvdW50ZXI9MCxlLmluc3RhbmNlLnNob3dDb250cm9scygpKX0sY2xlYXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2NsZWFyVGltZW91dCh0LnRpbWVyKSx0LnRpbWVyPW51bGx9LHN0YXJ0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuaW5zdGFuY2UuY3VycmVudDtlJiYodC5pc0FjdGl2ZT0hMCx0LiRidXR0b24uYXR0cihcInRpdGxlXCIsZS5vcHRzLmkxOG5bZS5vcHRzLmxhbmddLlBMQVlfU1RPUCkucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1idXR0b24tLXBsYXlcIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1idXR0b24tLXBhdXNlXCIpLHQuc2V0KCEwKSl9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5pbnN0YW5jZS5jdXJyZW50O3QuY2xlYXIoKSx0LiRidXR0b24uYXR0cihcInRpdGxlXCIsZS5vcHRzLmkxOG5bZS5vcHRzLmxhbmddLlBMQVlfU1RBUlQpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtYnV0dG9uLS1wYXVzZVwiKS5hZGRDbGFzcyhcImZhbmN5Ym94LWJ1dHRvbi0tcGxheVwiKSx0LmlzQWN0aXZlPSExfSx0b2dnbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuaXNBY3RpdmU/dC5zdG9wKCk6dC5zdGFydCgpfX0pLGUodCkub24oe1wib25Jbml0LmZiXCI6ZnVuY3Rpb24odCxlKXtlJiYhZS5TbGlkZVNob3cmJihlLlNsaWRlU2hvdz1uZXcgbihlKSl9LFwiYmVmb3JlU2hvdy5mYlwiOmZ1bmN0aW9uKHQsZSxuLG8pe3ZhciBhPWUmJmUuU2xpZGVTaG93O28/YSYmbi5vcHRzLnNsaWRlU2hvdy5hdXRvU3RhcnQmJmEuc3RhcnQoKTphJiZhLmlzQWN0aXZlJiZhLmNsZWFyKCl9LFwiYWZ0ZXJTaG93LmZiXCI6ZnVuY3Rpb24odCxlLG4pe3ZhciBvPWUmJmUuU2xpZGVTaG93O28mJm8uaXNBY3RpdmUmJm8uc2V0KCl9LFwiYWZ0ZXJLZXlkb3duLmZiXCI6ZnVuY3Rpb24obixvLGEsaSxzKXt2YXIgcj1vJiZvLlNsaWRlU2hvdzshcnx8IWEub3B0cy5zbGlkZVNob3d8fDgwIT09cyYmMzIhPT1zfHxlKHQuYWN0aXZlRWxlbWVudCkuaXMoXCJidXR0b24sYSxpbnB1dFwiKXx8KGkucHJldmVudERlZmF1bHQoKSxyLnRvZ2dsZSgpKX0sXCJiZWZvcmVDbG9zZS5mYiBvbkRlYWN0aXZhdGUuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuPWUmJmUuU2xpZGVTaG93O24mJm4uc3RvcCgpfX0pLGUodCkub24oXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsZnVuY3Rpb24oKXt2YXIgbj1lLmZhbmN5Ym94LmdldEluc3RhbmNlKCksbz1uJiZuLlNsaWRlU2hvdztvJiZvLmlzQWN0aXZlJiYodC5oaWRkZW4/by5jbGVhcigpOm8uc2V0KCkpfSl9KGRvY3VtZW50LHdpbmRvdy5qUXVlcnl8fGpRdWVyeSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1mdW5jdGlvbigpe3ZhciBlLG4sbyxhPVtbXCJyZXF1ZXN0RnVsbHNjcmVlblwiLFwiZXhpdEZ1bGxzY3JlZW5cIixcImZ1bGxzY3JlZW5FbGVtZW50XCIsXCJmdWxsc2NyZWVuRW5hYmxlZFwiLFwiZnVsbHNjcmVlbmNoYW5nZVwiLFwiZnVsbHNjcmVlbmVycm9yXCJdLFtcIndlYmtpdFJlcXVlc3RGdWxsc2NyZWVuXCIsXCJ3ZWJraXRFeGl0RnVsbHNjcmVlblwiLFwid2Via2l0RnVsbHNjcmVlbkVsZW1lbnRcIixcIndlYmtpdEZ1bGxzY3JlZW5FbmFibGVkXCIsXCJ3ZWJraXRmdWxsc2NyZWVuY2hhbmdlXCIsXCJ3ZWJraXRmdWxsc2NyZWVuZXJyb3JcIl0sW1wid2Via2l0UmVxdWVzdEZ1bGxTY3JlZW5cIixcIndlYmtpdENhbmNlbEZ1bGxTY3JlZW5cIixcIndlYmtpdEN1cnJlbnRGdWxsU2NyZWVuRWxlbWVudFwiLFwid2Via2l0Q2FuY2VsRnVsbFNjcmVlblwiLFwid2Via2l0ZnVsbHNjcmVlbmNoYW5nZVwiLFwid2Via2l0ZnVsbHNjcmVlbmVycm9yXCJdLFtcIm1velJlcXVlc3RGdWxsU2NyZWVuXCIsXCJtb3pDYW5jZWxGdWxsU2NyZWVuXCIsXCJtb3pGdWxsU2NyZWVuRWxlbWVudFwiLFwibW96RnVsbFNjcmVlbkVuYWJsZWRcIixcIm1vemZ1bGxzY3JlZW5jaGFuZ2VcIixcIm1vemZ1bGxzY3JlZW5lcnJvclwiXSxbXCJtc1JlcXVlc3RGdWxsc2NyZWVuXCIsXCJtc0V4aXRGdWxsc2NyZWVuXCIsXCJtc0Z1bGxzY3JlZW5FbGVtZW50XCIsXCJtc0Z1bGxzY3JlZW5FbmFibGVkXCIsXCJNU0Z1bGxzY3JlZW5DaGFuZ2VcIixcIk1TRnVsbHNjcmVlbkVycm9yXCJdXSxpPXt9O2ZvcihuPTA7bjxhLmxlbmd0aDtuKyspaWYoZT1hW25dLGUmJmVbMV1pbiB0KXtmb3Iobz0wO288ZS5sZW5ndGg7bysrKWlbYVswXVtvXV09ZVtvXTtyZXR1cm4gaX1yZXR1cm4hMX0oKTtpZighbilyZXR1cm4gdm9pZChlJiZlLmZhbmN5Ym94JiYoZS5mYW5jeWJveC5kZWZhdWx0cy5idG5UcGwuZnVsbFNjcmVlbj0hMSkpO3ZhciBvPXtyZXF1ZXN0OmZ1bmN0aW9uKGUpe2U9ZXx8dC5kb2N1bWVudEVsZW1lbnQsZVtuLnJlcXVlc3RGdWxsc2NyZWVuXShlLkFMTE9XX0tFWUJPQVJEX0lOUFVUKX0sZXhpdDpmdW5jdGlvbigpe3Rbbi5leGl0RnVsbHNjcmVlbl0oKX0sdG9nZ2xlOmZ1bmN0aW9uKGUpe2U9ZXx8dC5kb2N1bWVudEVsZW1lbnQsdGhpcy5pc0Z1bGxzY3JlZW4oKT90aGlzLmV4aXQoKTp0aGlzLnJlcXVlc3QoZSl9LGlzRnVsbHNjcmVlbjpmdW5jdGlvbigpe3JldHVybiBCb29sZWFuKHRbbi5mdWxsc2NyZWVuRWxlbWVudF0pfSxlbmFibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4odFtuLmZ1bGxzY3JlZW5FbmFibGVkXSl9fTtlLmV4dGVuZCghMCxlLmZhbmN5Ym94LmRlZmF1bHRzLHtidG5UcGw6e2Z1bGxTY3JlZW46JzxidXR0b24gZGF0YS1mYW5jeWJveC1mdWxsc2NyZWVuIGNsYXNzPVwiZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tZnVsbHNjcmVlblwiIHRpdGxlPVwie3tGVUxMX1NDUkVFTn19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDQwIDQwXCI+PHBhdGggZD1cIk05LDEyIGgyMiB2MTYgaC0yMiB2LTE2IHYxNiBoMjIgdi0xNiBaXCIgLz48L3N2Zz48L2J1dHRvbj4nfSxmdWxsU2NyZWVuOnthdXRvU3RhcnQ6ITF9fSksZSh0KS5vbih7XCJvbkluaXQuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuO2UmJmUuZ3JvdXBbZS5jdXJySW5kZXhdLm9wdHMuZnVsbFNjcmVlbj8obj1lLiRyZWZzLmNvbnRhaW5lcixuLm9uKFwiY2xpY2suZmItZnVsbHNjcmVlblwiLFwiW2RhdGEtZmFuY3lib3gtZnVsbHNjcmVlbl1cIixmdW5jdGlvbih0KXt0LnN0b3BQcm9wYWdhdGlvbigpLHQucHJldmVudERlZmF1bHQoKSxvLnRvZ2dsZShuWzBdKX0pLGUub3B0cy5mdWxsU2NyZWVuJiZlLm9wdHMuZnVsbFNjcmVlbi5hdXRvU3RhcnQ9PT0hMCYmby5yZXF1ZXN0KG5bMF0pLGUuRnVsbFNjcmVlbj1vKTplJiZlLiRyZWZzLnRvb2xiYXIuZmluZChcIltkYXRhLWZhbmN5Ym94LWZ1bGxzY3JlZW5dXCIpLmhpZGUoKX0sXCJhZnRlcktleWRvd24uZmJcIjpmdW5jdGlvbih0LGUsbixvLGEpe2UmJmUuRnVsbFNjcmVlbiYmNzA9PT1hJiYoby5wcmV2ZW50RGVmYXVsdCgpLGUuRnVsbFNjcmVlbi50b2dnbGUoZS4kcmVmcy5jb250YWluZXJbMF0pKX0sXCJiZWZvcmVDbG9zZS5mYlwiOmZ1bmN0aW9uKHQpe3QmJnQuRnVsbFNjcmVlbiYmby5leGl0KCl9fSksZSh0KS5vbihuLmZ1bGxzY3JlZW5jaGFuZ2UsZnVuY3Rpb24oKXt2YXIgdD1vLmlzRnVsbHNjcmVlbigpLG49ZS5mYW5jeWJveC5nZXRJbnN0YW5jZSgpO24mJihuLmN1cnJlbnQmJlwiaW1hZ2VcIj09PW4uY3VycmVudC50eXBlJiZuLmlzQW5pbWF0aW5nJiYobi5jdXJyZW50LiRjb250ZW50LmNzcyhcInRyYW5zaXRpb25cIixcIm5vbmVcIiksbi5pc0FuaW1hdGluZz0hMSxuLnVwZGF0ZSghMCwhMCwwKSksbi50cmlnZ2VyKFwib25GdWxsc2NyZWVuQ2hhbmdlXCIsdCksbi4kcmVmcy5jb250YWluZXIudG9nZ2xlQ2xhc3MoXCJmYW5jeWJveC1pcy1mdWxsc2NyZWVuXCIsdCkpfSl9KGRvY3VtZW50LHdpbmRvdy5qUXVlcnl8fGpRdWVyeSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtlLmZhbmN5Ym94LmRlZmF1bHRzPWUuZXh0ZW5kKCEwLHtidG5UcGw6e3RodW1iczonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXRodW1icyBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLXRodW1ic1wiIHRpdGxlPVwie3tUSFVNQlN9fVwiPjxzdmcgdmlld0JveD1cIjAgMCAxMjAgMTIwXCI+PHBhdGggZD1cIk0zMCwzMCBoMTQgdjE0IGgtMTQgWiBNNTAsMzAgaDE0IHYxNCBoLTE0IFogTTcwLDMwIGgxNCB2MTQgaC0xNCBaIE0zMCw1MCBoMTQgdjE0IGgtMTQgWiBNNTAsNTAgaDE0IHYxNCBoLTE0IFogTTcwLDUwIGgxNCB2MTQgaC0xNCBaIE0zMCw3MCBoMTQgdjE0IGgtMTQgWiBNNTAsNzAgaDE0IHYxNCBoLTE0IFogTTcwLDcwIGgxNCB2MTQgaC0xNCBaXCIgLz48L3N2Zz48L2J1dHRvbj4nfSx0aHVtYnM6e2F1dG9TdGFydDohMSxoaWRlT25DbG9zZTohMCxwYXJlbnRFbDpcIi5mYW5jeWJveC1jb250YWluZXJcIixheGlzOlwieVwifX0sZS5mYW5jeWJveC5kZWZhdWx0cyk7dmFyIG49ZnVuY3Rpb24odCl7dGhpcy5pbml0KHQpfTtlLmV4dGVuZChuLnByb3RvdHlwZSx7JGJ1dHRvbjpudWxsLCRncmlkOm51bGwsJGxpc3Q6bnVsbCxpc1Zpc2libGU6ITEsaXNBY3RpdmU6ITEsaW5pdDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuaW5zdGFuY2U9dCx0LlRodW1icz1lO3ZhciBuPXQuZ3JvdXBbMF0sbz10Lmdyb3VwWzFdO2Uub3B0cz10Lmdyb3VwW3QuY3VyckluZGV4XS5vcHRzLnRodW1icyxlLiRidXR0b249dC4kcmVmcy50b29sYmFyLmZpbmQoXCJbZGF0YS1mYW5jeWJveC10aHVtYnNdXCIpLGUub3B0cyYmbiYmbyYmKFwiaW1hZ2VcIj09bi50eXBlfHxuLm9wdHMudGh1bWJ8fG4ub3B0cy4kdGh1bWIpJiYoXCJpbWFnZVwiPT1vLnR5cGV8fG8ub3B0cy50aHVtYnx8by5vcHRzLiR0aHVtYik/KGUuJGJ1dHRvbi5zaG93KCkub24oXCJjbGlja1wiLGZ1bmN0aW9uKCl7ZS50b2dnbGUoKX0pLGUuaXNBY3RpdmU9ITApOmUuJGJ1dHRvbi5oaWRlKCl9LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciB0LG4sbz10aGlzLGE9by5pbnN0YW5jZSxpPW8ub3B0cy5wYXJlbnRFbDtvLiRncmlkPWUoJzxkaXYgY2xhc3M9XCJmYW5jeWJveC10aHVtYnMgZmFuY3lib3gtdGh1bWJzLScrby5vcHRzLmF4aXMrJ1wiPjwvZGl2PicpLmFwcGVuZFRvKGEuJHJlZnMuY29udGFpbmVyLmZpbmQoaSkuYWRkQmFjaygpLmZpbHRlcihpKSksdD1cIjx1bD5cIixlLmVhY2goYS5ncm91cCxmdW5jdGlvbihlLG8pe249by5vcHRzLnRodW1ifHwoby5vcHRzLiR0aHVtYj9vLm9wdHMuJHRodW1iLmF0dHIoXCJzcmNcIik6bnVsbCksbnx8XCJpbWFnZVwiIT09by50eXBlfHwobj1vLnNyYyksbiYmbi5sZW5ndGgmJih0Kz0nPGxpIGRhdGEtaW5kZXg9XCInK2UrJ1wiICB0YWJpbmRleD1cIjBcIiBjbGFzcz1cImZhbmN5Ym94LXRodW1icy1sb2FkaW5nXCI+PGltZyBkYXRhLXNyYz1cIicrbisnXCIgLz48L2xpPicpfSksdCs9XCI8L3VsPlwiLG8uJGxpc3Q9ZSh0KS5hcHBlbmRUbyhvLiRncmlkKS5vbihcImNsaWNrXCIsXCJsaVwiLGZ1bmN0aW9uKCl7YS5qdW1wVG8oZSh0aGlzKS5kYXRhKFwiaW5kZXhcIikpfSksby4kbGlzdC5maW5kKFwiaW1nXCIpLmhpZGUoKS5vbmUoXCJsb2FkXCIsZnVuY3Rpb24oKXt2YXIgdCxuLG8sYSxpPWUodGhpcykucGFyZW50KCkucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC10aHVtYnMtbG9hZGluZ1wiKSxzPWkub3V0ZXJXaWR0aCgpLHI9aS5vdXRlckhlaWdodCgpO3Q9dGhpcy5uYXR1cmFsV2lkdGh8fHRoaXMud2lkdGgsbj10aGlzLm5hdHVyYWxIZWlnaHR8fHRoaXMuaGVpZ2h0LG89dC9zLGE9bi9yLG8+PTEmJmE+PTEmJihvPmE/KHQvPWEsbj1yKToodD1zLG4vPW8pKSxlKHRoaXMpLmNzcyh7d2lkdGg6TWF0aC5mbG9vcih0KSxoZWlnaHQ6TWF0aC5mbG9vcihuKSxcIm1hcmdpbi10b3BcIjpuPnI/TWF0aC5mbG9vciguMypyLS4zKm4pOk1hdGguZmxvb3IoLjUqci0uNSpuKSxcIm1hcmdpbi1sZWZ0XCI6TWF0aC5mbG9vciguNSpzLS41KnQpfSkuc2hvdygpfSkuZWFjaChmdW5jdGlvbigpe3RoaXMuc3JjPWUodGhpcykuZGF0YShcInNyY1wiKX0pLFwieFwiPT09by5vcHRzLmF4aXMmJm8uJGxpc3Qud2lkdGgocGFyc2VJbnQoby4kZ3JpZC5jc3MoXCJwYWRkaW5nLXJpZ2h0XCIpKSthLmdyb3VwLmxlbmd0aCpvLiRsaXN0LmNoaWxkcmVuKCkuZXEoMCkub3V0ZXJXaWR0aCghMCkrXCJweFwiKX0sZm9jdXM6ZnVuY3Rpb24odCl7dmFyIGUsbixvPXRoaXMsYT1vLiRsaXN0O28uaW5zdGFuY2UuY3VycmVudCYmKGU9YS5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtdGh1bWJzLWFjdGl2ZVwiKS5maWx0ZXIoJ1tkYXRhLWluZGV4PVwiJytvLmluc3RhbmNlLmN1cnJlbnQuaW5kZXgrJ1wiXScpLmFkZENsYXNzKFwiZmFuY3lib3gtdGh1bWJzLWFjdGl2ZVwiKSxuPWUucG9zaXRpb24oKSxcInlcIj09PW8ub3B0cy5heGlzJiYobi50b3A8MHx8bi50b3A+YS5oZWlnaHQoKS1lLm91dGVySGVpZ2h0KCkpP2Euc3RvcCgpLmFuaW1hdGUoe3Njcm9sbFRvcDphLnNjcm9sbFRvcCgpK24udG9wfSx0KTpcInhcIj09PW8ub3B0cy5heGlzJiYobi5sZWZ0PGEucGFyZW50KCkuc2Nyb2xsTGVmdCgpfHxuLmxlZnQ+YS5wYXJlbnQoKS5zY3JvbGxMZWZ0KCkrKGEucGFyZW50KCkud2lkdGgoKS1lLm91dGVyV2lkdGgoKSkpJiZhLnBhcmVudCgpLnN0b3AoKS5hbmltYXRlKHtzY3JvbGxMZWZ0Om4ubGVmdH0sdCkpfSx1cGRhdGU6ZnVuY3Rpb24oKXt0aGlzLmluc3RhbmNlLiRyZWZzLmNvbnRhaW5lci50b2dnbGVDbGFzcyhcImZhbmN5Ym94LXNob3ctdGh1bWJzXCIsdGhpcy5pc1Zpc2libGUpLHRoaXMuaXNWaXNpYmxlPyh0aGlzLiRncmlkfHx0aGlzLmNyZWF0ZSgpLHRoaXMuaW5zdGFuY2UudHJpZ2dlcihcIm9uVGh1bWJzU2hvd1wiKSx0aGlzLmZvY3VzKDApKTp0aGlzLiRncmlkJiZ0aGlzLmluc3RhbmNlLnRyaWdnZXIoXCJvblRodW1ic0hpZGVcIiksdGhpcy5pbnN0YW5jZS51cGRhdGUoKX0saGlkZTpmdW5jdGlvbigpe3RoaXMuaXNWaXNpYmxlPSExLHRoaXMudXBkYXRlKCl9LHNob3c6ZnVuY3Rpb24oKXt0aGlzLmlzVmlzaWJsZT0hMCx0aGlzLnVwZGF0ZSgpfSx0b2dnbGU6ZnVuY3Rpb24oKXt0aGlzLmlzVmlzaWJsZT0hdGhpcy5pc1Zpc2libGUsdGhpcy51cGRhdGUoKX19KSxlKHQpLm9uKHtcIm9uSW5pdC5mYlwiOmZ1bmN0aW9uKHQsZSl7dmFyIG87ZSYmIWUuVGh1bWJzJiYobz1uZXcgbihlKSxvLmlzQWN0aXZlJiZvLm9wdHMuYXV0b1N0YXJ0PT09ITAmJm8uc2hvdygpKX0sXCJiZWZvcmVTaG93LmZiXCI6ZnVuY3Rpb24odCxlLG4sbyl7dmFyIGE9ZSYmZS5UaHVtYnM7YSYmYS5pc1Zpc2libGUmJmEuZm9jdXMobz8wOjI1MCl9LFwiYWZ0ZXJLZXlkb3duLmZiXCI6ZnVuY3Rpb24odCxlLG4sbyxhKXt2YXIgaT1lJiZlLlRodW1icztpJiZpLmlzQWN0aXZlJiY3MT09PWEmJihvLnByZXZlbnREZWZhdWx0KCksaS50b2dnbGUoKSl9LFwiYmVmb3JlQ2xvc2UuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuPWUmJmUuVGh1bWJzO24mJm4uaXNWaXNpYmxlJiZuLm9wdHMuaGlkZU9uQ2xvc2UhPT0hMSYmbi4kZ3JpZC5oaWRlKCl9fSl9KGRvY3VtZW50LHdpbmRvdy5qUXVlcnkpLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbih0KXt2YXIgZT17XCImXCI6XCImYW1wO1wiLFwiPFwiOlwiJmx0O1wiLFwiPlwiOlwiJmd0O1wiLCdcIic6XCImcXVvdDtcIixcIidcIjpcIiYjMzk7XCIsXCIvXCI6XCImI3gyRjtcIixcImBcIjpcIiYjeDYwO1wiLFwiPVwiOlwiJiN4M0Q7XCJ9O3JldHVybiBTdHJpbmcodCkucmVwbGFjZSgvWyY8PlwiJ2A9XFwvXS9nLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSl9ZS5leHRlbmQoITAsZS5mYW5jeWJveC5kZWZhdWx0cyx7YnRuVHBsOntzaGFyZTonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXNoYXJlIGNsYXNzPVwiZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tc2hhcmVcIiB0aXRsZT1cInt7U0hBUkV9fVwiPjxzdmcgdmlld0JveD1cIjAgMCA0MCA0MFwiPjxwYXRoIGQ9XCJNNiwzMCBDOCwxOCAxOSwxNiAyMywxNiBMMjMsMTYgTDIzLDEwIEwzMywyMCBMMjMsMjkgTDIzLDI0IEMxOSwyNCA4LDI3IDYsMzAgWlwiPjwvc3ZnPjwvYnV0dG9uPid9LHNoYXJlOnt0cGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1zaGFyZVwiPjxoMT57e1NIQVJFfX08L2gxPjxwPjxhIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT17e3NyY319XCIgdGFyZ2V0PVwiX2JsYW5rXCIgY2xhc3M9XCJmYW5jeWJveC1zaGFyZV9idXR0b25cIj48c3ZnIHZlcnNpb249XCIxLjFcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgZmlsbD1cIiMzYjU5OThcIj48cGF0aCBkPVwiTTI3LjYgM2gtMjMuMmMtLjggMC0xLjQuNi0xLjQgMS40djIzLjFjMCAuOS42IDEuNSAxLjQgMS41aDEyLjV2LTEwLjFoLTMuNHYtMy45aDMuNHYtMi45YzAtMy40IDIuMS01LjIgNS01LjIgMS40IDAgMi43LjEgMyAuMnYzLjVoLTIuMWMtMS42IDAtMS45LjgtMS45IDEuOXYyLjVoMy45bC0uNSAzLjloLTMuNHYxMC4xaDYuNmMuOCAwIDEuNC0uNiAxLjQtMS40di0yMy4yYy4xLS44LS41LTEuNC0xLjMtMS40elwiPjwvcGF0aD48L3N2Zz48c3Bhbj5GYWNlYm9vazwvc3Bhbj48L2E+PGEgaHJlZj1cImh0dHBzOi8vd3d3LnBpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD17e3NyY319JmFtcDtkZXNjcmlwdGlvbj17e2Rlc2NyfX1cIiB0YXJnZXQ9XCJfYmxhbmtcIiBjbGFzcz1cImZhbmN5Ym94LXNoYXJlX2J1dHRvblwiPjxzdmcgdmVyc2lvbj1cIjEuMVwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBmaWxsPVwiI2M5MjIyOFwiPjxwYXRoIGQ9XCJNMTYgM2MtNy4yIDAtMTMgNS44LTEzIDEzIDAgNS41IDMuNCAxMC4yIDguMyAxMi4xLS4xLTEtLjItMi42IDAtMy43LjItMSAxLjUtNi41IDEuNS02LjVzLS40LS44LS40LTEuOWMwLTEuOCAxLTMuMiAyLjQtMy4yIDEuMSAwIDEuNi44IDEuNiAxLjggMCAxLjEtLjcgMi44LTEuMSA0LjMtLjMgMS4zLjYgMi4zIDEuOSAyLjMgMi4zIDAgNC4xLTIuNCA0LjEtNiAwLTMuMS0yLjItNS4zLTUuNC01LjMtMy43IDAtNS45IDIuOC01LjkgNS42IDAgMS4xLjQgMi4zIDEgMyAuMS4xLjEuMi4xLjQtLjEuNC0uMyAxLjMtLjQgMS41LS4xLjItLjIuMy0uNC4yLTEuNi0uOC0yLjYtMy4xLTIuNi01IDAtNC4xIDMtNy45IDguNi03LjkgNC41IDAgOCAzLjIgOCA3LjUgMCA0LjUtMi44IDguMS02LjcgOC4xLTEuMyAwLTIuNi0uNy0zLTEuNSAwIDAtLjcgMi41LS44IDMuMS0uMyAxLjEtMS4xIDIuNS0xLjYgMy40IDEuMi40IDIuNS42IDMuOC42IDcuMiAwIDEzLTUuOCAxMy0xMyAwLTcuMS01LjgtMTIuOS0xMy0xMi45elwiPjwvcGF0aD48L3N2Zz48c3Bhbj5QaW50ZXJlc3Q8L3NwYW4+PC9hPjxhIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL2ludGVudC90d2VldD91cmw9e3tzcmN9fSZhbXA7dGV4dD17e2Rlc2NyfX1cIiB0YXJnZXQ9XCJfYmxhbmtcIiBjbGFzcz1cImZhbmN5Ym94LXNoYXJlX2J1dHRvblwiPjxzdmcgdmVyc2lvbj1cIjEuMVwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBmaWxsPVwiIzFkYTFmMlwiPjxwYXRoIGQ9XCJNMzAgNy4zYy0xIC41LTIuMS44LTMuMy45IDEuMi0uNyAyLjEtMS44IDIuNS0zLjItMS4xLjctMi4zIDEuMS0zLjYgMS40LTEtMS4xLTIuNS0xLjgtNC4yLTEuOC0zLjIgMC01LjcgMi42LTUuNyA1LjcgMCAuNS4xLjkuMSAxLjMtNC44LS4yLTktMi41LTExLjgtNi0uNS45LS44IDEuOS0uOCAzIDAgMiAxIDMuOCAyLjYgNC44LS45IDAtMS44LS4zLTIuNi0uN3YuMWMwIDIuOCAyIDUuMSA0LjYgNS42LS41LjEtMSAuMi0xLjUuMi0uNCAwLS43IDAtMS4xLS4xLjcgMi4zIDIuOSAzLjkgNS40IDQtMiAxLjUtNC40IDIuNS03LjEgMi41LS41IDAtLjkgMC0xLjQtLjEgMi41IDEuNiA1LjYgMi42IDguOCAyLjYgMTAuNiAwIDE2LjMtOC44IDE2LjMtMTYuM3YtLjdjMS4xLTEgMi0yIDIuOC0zLjJ6XCI+PC9wYXRoPjwvc3ZnPjxzcGFuPlR3aXR0ZXI8L3NwYW4+PC9hPjwvcD48cD48aW5wdXQgdHlwZT1cInRleHRcIiB2YWx1ZT1cInt7c3JjX3Jhd319XCIgb25mb2N1cz1cInRoaXMuc2VsZWN0KClcIiAvPjwvcD48L2Rpdj4nfX0pLGUodCkub24oXCJjbGlja1wiLFwiW2RhdGEtZmFuY3lib3gtc2hhcmVdXCIsZnVuY3Rpb24oKXt2YXIgdCxvLGE9ZS5mYW5jeWJveC5nZXRJbnN0YW5jZSgpO2EmJih0PWEuY3VycmVudC5vcHRzLmhhc2g9PT0hMT9hLmN1cnJlbnQuc3JjOndpbmRvdy5sb2NhdGlvbixvPWEuY3VycmVudC5vcHRzLnNoYXJlLnRwbC5yZXBsYWNlKC9cXHtcXHtzcmNcXH1cXH0vZyxlbmNvZGVVUklDb21wb25lbnQodCkpLnJlcGxhY2UoL1xce1xce3NyY19yYXdcXH1cXH0vZyxuKHQpKS5yZXBsYWNlKC9cXHtcXHtkZXNjclxcfVxcfS9nLGEuJGNhcHRpb24/ZW5jb2RlVVJJQ29tcG9uZW50KGEuJGNhcHRpb24udGV4dCgpKTpcIlwiKSxlLmZhbmN5Ym94Lm9wZW4oe3NyYzphLnRyYW5zbGF0ZShhLG8pLHR5cGU6XCJodG1sXCIsb3B0czp7YW5pbWF0aW9uRWZmZWN0OlwiZmFkZVwiLGFuaW1hdGlvbkR1cmF0aW9uOjI1MH19KSl9KX0oZG9jdW1lbnQsd2luZG93LmpRdWVyeXx8alF1ZXJ5KSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbygpe3ZhciB0PWUubG9jYXRpb24uaGFzaC5zdWJzdHIoMSksbj10LnNwbGl0KFwiLVwiKSxvPW4ubGVuZ3RoPjEmJi9eXFwrP1xcZCskLy50ZXN0KG5bbi5sZW5ndGgtMV0pP3BhcnNlSW50KG4ucG9wKC0xKSwxMCl8fDE6MSxhPW4uam9pbihcIi1cIik7cmV0dXJuIG88MSYmKG89MSkse2hhc2g6dCxpbmRleDpvLGdhbGxlcnk6YX19ZnVuY3Rpb24gYSh0KXt2YXIgZTtcIlwiIT09dC5nYWxsZXJ5JiYoZT1uKFwiW2RhdGEtZmFuY3lib3g9J1wiK24uZXNjYXBlU2VsZWN0b3IodC5nYWxsZXJ5KStcIiddXCIpLmVxKHQuaW5kZXgtMSksZS5sZW5ndGh8fChlPW4oXCIjXCIrbi5lc2NhcGVTZWxlY3Rvcih0LmdhbGxlcnkpKSksZS5sZW5ndGgmJihzPSExLGUudHJpZ2dlcihcImNsaWNrXCIpKSl9ZnVuY3Rpb24gaSh0KXt2YXIgZTtyZXR1cm4hIXQmJihlPXQuY3VycmVudD90LmN1cnJlbnQub3B0czp0Lm9wdHMsZS5oYXNofHwoZS4kb3JpZz9lLiRvcmlnLmRhdGEoXCJmYW5jeWJveFwiKTpcIlwiKSl9bi5lc2NhcGVTZWxlY3Rvcnx8KG4uZXNjYXBlU2VsZWN0b3I9ZnVuY3Rpb24odCl7dmFyIGU9LyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFx4ODAtXFx1RkZGRlxcdy1dL2csbj1mdW5jdGlvbih0LGUpe3JldHVybiBlP1wiXFwwXCI9PT10P1wi77+9XCI6dC5zbGljZSgwLC0xKStcIlxcXFxcIit0LmNoYXJDb2RlQXQodC5sZW5ndGgtMSkudG9TdHJpbmcoMTYpK1wiIFwiOlwiXFxcXFwiK3R9O3JldHVybih0K1wiXCIpLnJlcGxhY2UoZSxuKX0pO3ZhciBzPSEwLHI9bnVsbCxjPW51bGw7bihmdW5jdGlvbigpe24uZmFuY3lib3guZGVmYXVsdHMuaGFzaCE9PSExJiYobih0KS5vbih7XCJvbkluaXQuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuLGE7ZS5ncm91cFtlLmN1cnJJbmRleF0ub3B0cy5oYXNoIT09ITEmJihuPW8oKSxhPWkoZSksYSYmbi5nYWxsZXJ5JiZhPT1uLmdhbGxlcnkmJihlLmN1cnJJbmRleD1uLmluZGV4LTEpKX0sXCJiZWZvcmVTaG93LmZiXCI6ZnVuY3Rpb24obixvLGEpe3ZhciBsO2EmJmEub3B0cy5oYXNoIT09ITEmJihsPWkobyksbCYmXCJcIiE9PWwmJihlLmxvY2F0aW9uLmhhc2guaW5kZXhPZihsKTwwJiYoby5vcHRzLm9yaWdIYXNoPWUubG9jYXRpb24uaGFzaCkscj1sKyhvLmdyb3VwLmxlbmd0aD4xP1wiLVwiKyhhLmluZGV4KzEpOlwiXCIpLFwicmVwbGFjZVN0YXRlXCJpbiBlLmhpc3Rvcnk/KGMmJmNsZWFyVGltZW91dChjKSxjPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLmhpc3Rvcnlbcz9cInB1c2hTdGF0ZVwiOlwicmVwbGFjZVN0YXRlXCJdKHt9LHQudGl0bGUsZS5sb2NhdGlvbi5wYXRobmFtZStlLmxvY2F0aW9uLnNlYXJjaCtcIiNcIityKSxjPW51bGwscz0hMX0sMzAwKSk6ZS5sb2NhdGlvbi5oYXNoPXIpKX0sXCJiZWZvcmVDbG9zZS5mYlwiOmZ1bmN0aW9uKG8sYSxzKXt2YXIgbCx1O2MmJmNsZWFyVGltZW91dChjKSxzLm9wdHMuaGFzaCE9PSExJiYobD1pKGEpLHU9YSYmYS5vcHRzLm9yaWdIYXNoP2Eub3B0cy5vcmlnSGFzaDpcIlwiLGwmJlwiXCIhPT1sJiYoXCJyZXBsYWNlU3RhdGVcImluIGhpc3Rvcnk/ZS5oaXN0b3J5LnJlcGxhY2VTdGF0ZSh7fSx0LnRpdGxlLGUubG9jYXRpb24ucGF0aG5hbWUrZS5sb2NhdGlvbi5zZWFyY2grdSk6KGUubG9jYXRpb24uaGFzaD11LG4oZSkuc2Nyb2xsVG9wKGEuc2Nyb2xsVG9wKS5zY3JvbGxMZWZ0KGEuc2Nyb2xsTGVmdCkpKSxyPW51bGwpfX0pLG4oZSkub24oXCJoYXNoY2hhbmdlLmZiXCIsZnVuY3Rpb24oKXt2YXIgdD1vKCk7bi5mYW5jeWJveC5nZXRJbnN0YW5jZSgpPyFyfHxyPT09dC5nYWxsZXJ5K1wiLVwiK3QuaW5kZXh8fDE9PT10LmluZGV4JiZyPT10LmdhbGxlcnl8fChyPW51bGwsbi5mYW5jeWJveC5jbG9zZSgpKTpcIlwiIT09dC5nYWxsZXJ5JiZhKHQpfSksc2V0VGltZW91dChmdW5jdGlvbigpe2EobygpKX0sNTApKX0pfShkb2N1bWVudCx3aW5kb3csd2luZG93LmpRdWVyeXx8alF1ZXJ5KTsiLCJpZiAod2luZG93LmlubmVyV2lkdGggPiA5OTIpIHtcclxuXHJcbiAgICByZXF1aXJlKFsnU2Nyb2xsTWFnaWMnXSwgZnVuY3Rpb24gKFNjcm9sbE1hZ2ljKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3Njcm9sbG1hZ2ljJyk7XHJcbiAgICAgICAgZnVuY3Rpb24gcGF0aFByZXBhcmUoJGVsKSB7XHJcbiAgICAgICAgICAgIHZhciBsaW5lTGVuZ3RoID0gJGVsWzBdLmdldFRvdGFsTGVuZ3RoKCk7XHJcbiAgICAgICAgICAgICRlbC5jc3MoXCJzdHJva2UtZGFzaGFycmF5XCIsIGxpbmVMZW5ndGgpO1xyXG4gICAgICAgICAgICAkZWwuY3NzKFwic3Ryb2tlLWRhc2hvZmZzZXRcIiwgbGluZUxlbmd0aCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgY29udHJvbGxlciA9IG5ldyBTY3JvbGxNYWdpYy5Db250cm9sbGVyKCk7XHJcblxyXG4gICAgICAgIHZhciAkbGluZXMgPVxyXG4gICAgICAgICAgICAkKFwiLmxpbmUtMVwiKVxyXG4gICAgICAgICAgICAgICAgLmFkZCgkKCcubGluZS0yJykpXHJcbiAgICAgICAgICAgICAgICAuYWRkKCQoJy5saW5lLTMnKSlcclxuICAgICAgICAgICAgICAgIC5hZGQoJCgnLmxpbmUtNCcpKVxyXG4gICAgICAgICAgICAgICAgLmFkZCgkKCcubGluZS01JykpXHJcbiAgICAgICAgICAgICAgICAuYWRkKCQoJy5saW5lLTYnKSk7XHJcblxyXG4gICAgICAgICQuZWFjaCgkbGluZXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHRoID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgdmFyIHBhdGggPSAkKHRoLmF0dHIoJ2RhdGEtY2hpbGRyZW4nKSk7XHJcbiAgICAgICAgICAgIHBhdGhQcmVwYXJlKHBhdGgpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdmFyIHR3ZWVuID0gbmV3IFRpbWVsaW5lTWF4KClcclxuICAgICAgICAgICAgICAgIC5hZGQoVHdlZW5NYXgudG8ocGF0aCwgMSwge1xyXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZURhc2hvZmZzZXQ6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWNhcDogJ3JvdW5kJyxcclxuICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lam9pbjogJ3JvdW5kJyxcclxuICAgICAgICAgICAgICAgICAgICBlYXNlOiBMaW5lYXIuZWFzZU5vbmVcclxuICAgICAgICAgICAgICAgIH0pKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBzY2VuZSA9IG5ldyBTY3JvbGxNYWdpYy5TY2VuZShcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0d2VlbkNoYW5nZXM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IGNoYW5lRHVyYXRpb24odGgpLFxyXG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXJFbGVtZW50OiBjaGFuZ2VUcmlnZ2VyKHRoKVswXVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAuc2V0VHdlZW4odHdlZW4pXHJcbiAgICAgICAgICAgICAgICAudHJpZ2dlckhvb2soMC43KVxyXG4gICAgICAgICAgICAgICAgLmFkZFRvKGNvbnRyb2xsZXIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB2YXIgJGltZyA9ICQoJy5icmFuLXRpdGxlLCAub2lsLXRpdGxlLCAuc2VlZHMtdGl0bGUnKTtcclxuXHJcbiAgICAgICAgJGltZy5jc3Moe1xyXG4gICAgICAgICAgICAnb3BhY2l0eSc6IDAsXHJcbiAgICAgICAgICAgICd0cmFuc2Zvcm0nOiAndHJhbnNsYXRlWSg1JSkgc2NhbGUoMC45KSdcclxuICAgICAgICB9KTtcclxuICAgICAgICBmdW5jdGlvbiBjaGFuZUR1cmF0aW9uKHRoKSB7XHJcbiAgICAgICAgICAgIC8vIHZhciBoID0gdGgub3V0ZXJIZWlnaHQoKTtcclxuICAgICAgICAgICAgdmFyIGggPSB0aC5kYXRhKCdoZWlnaHQnKTtcclxuICAgICAgICAgICAgaWYgKHRoWzBdLmhhc0F0dHJpYnV0ZSgnZGF0YS1kdXJhdGlvbicpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdmFsID0gK3RoLmF0dHIoJ2RhdGEtZHVyYXRpb24nKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBoIC0gKGggLyAxMDAgKiB2YWwpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gY2hhbmdlVHJpZ2dlcih0aCkge1xyXG4gICAgICAgICAgICBpZiAoISF0aC5kYXRhKCd0cmlnZ2VyZWxlbWVudCcpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdHJpZ2dlckluZG9jYXRvciA9ICQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpO1xyXG4gICAgICAgICAgICAgICAgdHJpZ2dlckluZG9jYXRvci5hdHRyKCdjbGFzcycsIHRoLmF0dHIoJ2NsYXNzJykpO1xyXG4gICAgICAgICAgICAgICAgdHJpZ2dlckluZG9jYXRvci5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgICdwb3NpdGlvbic6ICdhYnNvbHV0ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2xlZnQnOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICd3aWR0aCc6IFwiMTAwJVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICd0cmFuc2Zvcm0nOiAnbm9uZScsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2hlaWdodCc6IFwiMTAwJVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICd0b3AnOiB0aC5kYXRhKCd0cmlnZ2VyZWxlbWVudCcpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoLnByZXBlbmQodHJpZ2dlckluZG9jYXRvcik7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndHJpZ2dlckluZG9jYXRvcicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyaWdnZXJJbmRvY2F0b3I7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQuZWFjaCgkaW1nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB0aCA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIHZhciB0d2VlbiA9IG5ldyBUaW1lbGluZU1heCgpXHJcbiAgICAgICAgICAgICAgICAuYWRkKFxyXG4gICAgICAgICAgICAgICAgVHdlZW5NYXgudG8oXHJcbiAgICAgICAgICAgICAgICAgICAgdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgLjQsXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndHJhbnNmb3JtJzogJ25vbmUnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVhc2U6IExpbmVhci5lYXNlTm9uZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIC8vIGJ1aWxkIHNjZW5lXHJcbiAgICAgICAgICAgIHZhciBzY2VuZSA9IG5ldyBTY3JvbGxNYWdpYy5TY2VuZShcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyRWxlbWVudDogY2hhbmdlVHJpZ2dlcih0aClbMF1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAuc2V0VHdlZW4odHdlZW4pXHJcbiAgICAgICAgICAgICAgICAudHJpZ2dlckhvb2soMC43KVxyXG4gICAgICAgICAgICAgICAgLmFkZFRvKGNvbnRyb2xsZXIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==